webpackJsonp([0],[
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";
	var core_1 = __webpack_require__(2);
	var platform_browser_dynamic_1 = __webpack_require__(98);
	var platform_browser_1 = __webpack_require__(177);
	var router_deprecated_1 = __webpack_require__(281);
	var common_1 = __webpack_require__(182);
	var http_1 = __webpack_require__(313);
	var app_component_1 = __webpack_require__(334);
	var ENV_PROVIDERS = [];
	// depending on the env mode, enable prod mode or add debugging modules
	if (process.env.ENV === 'build') {
	    core_1.enableProdMode();
	}
	else {
	    ENV_PROVIDERS.push(platform_browser_1.ELEMENT_PROBE_PROVIDERS);
	}
	platform_browser_dynamic_1.bootstrap(app_component_1.AppComponent, http_1.HTTP_PROVIDERS.concat(router_deprecated_1.ROUTER_PROVIDERS, ENV_PROVIDERS, [
	    { provide: common_1.LocationStrategy, useClass: common_1.HashLocationStrategy } // use #/ routes, remove this for HTML5 mode
	]))
	    .catch(function (err) { return console.error(err); });
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ }),
/* 1 */,
/* 2 */,
/* 3 */,
/* 4 */,
/* 5 */,
/* 6 */,
/* 7 */,
/* 8 */,
/* 9 */,
/* 10 */,
/* 11 */,
/* 12 */,
/* 13 */,
/* 14 */,
/* 15 */,
/* 16 */,
/* 17 */,
/* 18 */,
/* 19 */,
/* 20 */,
/* 21 */,
/* 22 */,
/* 23 */,
/* 24 */,
/* 25 */,
/* 26 */,
/* 27 */,
/* 28 */,
/* 29 */,
/* 30 */,
/* 31 */,
/* 32 */,
/* 33 */,
/* 34 */,
/* 35 */,
/* 36 */,
/* 37 */,
/* 38 */,
/* 39 */,
/* 40 */,
/* 41 */,
/* 42 */,
/* 43 */,
/* 44 */,
/* 45 */,
/* 46 */,
/* 47 */,
/* 48 */,
/* 49 */,
/* 50 */,
/* 51 */,
/* 52 */,
/* 53 */,
/* 54 */,
/* 55 */,
/* 56 */,
/* 57 */,
/* 58 */,
/* 59 */,
/* 60 */,
/* 61 */,
/* 62 */,
/* 63 */,
/* 64 */,
/* 65 */,
/* 66 */,
/* 67 */,
/* 68 */,
/* 69 */,
/* 70 */,
/* 71 */,
/* 72 */,
/* 73 */,
/* 74 */,
/* 75 */,
/* 76 */,
/* 77 */,
/* 78 */,
/* 79 */,
/* 80 */,
/* 81 */,
/* 82 */,
/* 83 */,
/* 84 */,
/* 85 */,
/* 86 */,
/* 87 */,
/* 88 */,
/* 89 */,
/* 90 */,
/* 91 */,
/* 92 */,
/* 93 */,
/* 94 */,
/* 95 */,
/* 96 */,
/* 97 */,
/* 98 */,
/* 99 */,
/* 100 */,
/* 101 */,
/* 102 */,
/* 103 */,
/* 104 */,
/* 105 */,
/* 106 */,
/* 107 */,
/* 108 */,
/* 109 */,
/* 110 */,
/* 111 */,
/* 112 */,
/* 113 */,
/* 114 */,
/* 115 */,
/* 116 */,
/* 117 */,
/* 118 */,
/* 119 */,
/* 120 */,
/* 121 */,
/* 122 */,
/* 123 */,
/* 124 */,
/* 125 */,
/* 126 */,
/* 127 */,
/* 128 */,
/* 129 */,
/* 130 */,
/* 131 */,
/* 132 */,
/* 133 */,
/* 134 */,
/* 135 */,
/* 136 */,
/* 137 */,
/* 138 */,
/* 139 */,
/* 140 */,
/* 141 */,
/* 142 */,
/* 143 */,
/* 144 */,
/* 145 */,
/* 146 */,
/* 147 */,
/* 148 */,
/* 149 */,
/* 150 */,
/* 151 */,
/* 152 */,
/* 153 */,
/* 154 */,
/* 155 */,
/* 156 */,
/* 157 */,
/* 158 */,
/* 159 */,
/* 160 */,
/* 161 */,
/* 162 */,
/* 163 */,
/* 164 */,
/* 165 */,
/* 166 */,
/* 167 */,
/* 168 */,
/* 169 */,
/* 170 */,
/* 171 */,
/* 172 */,
/* 173 */,
/* 174 */,
/* 175 */,
/* 176 */,
/* 177 */,
/* 178 */,
/* 179 */,
/* 180 */,
/* 181 */,
/* 182 */,
/* 183 */,
/* 184 */,
/* 185 */,
/* 186 */,
/* 187 */,
/* 188 */,
/* 189 */,
/* 190 */,
/* 191 */,
/* 192 */,
/* 193 */,
/* 194 */,
/* 195 */,
/* 196 */,
/* 197 */,
/* 198 */,
/* 199 */,
/* 200 */,
/* 201 */,
/* 202 */,
/* 203 */,
/* 204 */,
/* 205 */,
/* 206 */,
/* 207 */,
/* 208 */,
/* 209 */,
/* 210 */,
/* 211 */,
/* 212 */,
/* 213 */,
/* 214 */,
/* 215 */,
/* 216 */,
/* 217 */,
/* 218 */,
/* 219 */,
/* 220 */,
/* 221 */,
/* 222 */,
/* 223 */,
/* 224 */,
/* 225 */,
/* 226 */,
/* 227 */,
/* 228 */,
/* 229 */,
/* 230 */,
/* 231 */,
/* 232 */,
/* 233 */,
/* 234 */,
/* 235 */,
/* 236 */,
/* 237 */,
/* 238 */,
/* 239 */,
/* 240 */,
/* 241 */,
/* 242 */,
/* 243 */,
/* 244 */,
/* 245 */,
/* 246 */,
/* 247 */,
/* 248 */,
/* 249 */,
/* 250 */,
/* 251 */,
/* 252 */,
/* 253 */,
/* 254 */,
/* 255 */,
/* 256 */,
/* 257 */,
/* 258 */,
/* 259 */,
/* 260 */,
/* 261 */,
/* 262 */,
/* 263 */,
/* 264 */,
/* 265 */,
/* 266 */,
/* 267 */,
/* 268 */,
/* 269 */,
/* 270 */,
/* 271 */,
/* 272 */,
/* 273 */,
/* 274 */,
/* 275 */,
/* 276 */,
/* 277 */,
/* 278 */,
/* 279 */,
/* 280 */,
/* 281 */,
/* 282 */,
/* 283 */,
/* 284 */,
/* 285 */,
/* 286 */,
/* 287 */,
/* 288 */,
/* 289 */,
/* 290 */,
/* 291 */,
/* 292 */,
/* 293 */,
/* 294 */,
/* 295 */,
/* 296 */,
/* 297 */,
/* 298 */,
/* 299 */,
/* 300 */,
/* 301 */,
/* 302 */,
/* 303 */,
/* 304 */,
/* 305 */,
/* 306 */,
/* 307 */,
/* 308 */,
/* 309 */,
/* 310 */,
/* 311 */,
/* 312 */,
/* 313 */,
/* 314 */,
/* 315 */,
/* 316 */,
/* 317 */,
/* 318 */,
/* 319 */,
/* 320 */,
/* 321 */,
/* 322 */,
/* 323 */,
/* 324 */,
/* 325 */,
/* 326 */,
/* 327 */,
/* 328 */,
/* 329 */,
/* 330 */,
/* 331 */,
/* 332 */,
/* 333 */,
/* 334 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var core_1 = __webpack_require__(2);
	var router_deprecated_1 = __webpack_require__(281);
	// Components
	var loads_1 = __webpack_require__(335);
	var load_1 = __webpack_require__(690);
	var signin_1 = __webpack_require__(696);
	var register_1 = __webpack_require__(701);
	var restore_1 = __webpack_require__(704);
	var divisions_1 = __webpack_require__(707);
	var tendering_1 = __webpack_require__(709);
	var _404_1 = __webpack_require__(712);
	var shared_load_1 = __webpack_require__(715);
	var error_1 = __webpack_require__(718);
	var velocity_1 = __webpack_require__(721);
	var index_1 = __webpack_require__(632);
	var load_details_1 = __webpack_require__(724);
	var index_2 = __webpack_require__(632);
	var dashboard_1 = __webpack_require__(727);
	var profile_1 = __webpack_require__(730);
	var reset_1 = __webpack_require__(736);
	// Services
	var index_3 = __webpack_require__(508);
	var index_4 = __webpack_require__(508);
	var index_5 = __webpack_require__(508);
	var index_6 = __webpack_require__(508);
	var index_7 = __webpack_require__(508);
	// Markup only
	/*
	import { MarkupComponent } from './markup';
	import { MarkupSigninComponent } from './markup/signin';
	import { MarkupPasswordComponent } from './markup/password';
	import { MarkupRestoreComponent } from './markup/restore';
	import { MarkupLoadsComponent } from './markup/loads';
	import { MarkupCreateLoadComponent } from './markup/loads/create';
	import { MarkupEditLoadComponent } from './markup/loads/edit';
	import { MarkupDetailsLoadComponent } from './markup/loads/details';
	import { MarkupTenderingLoadComponent } from './markup/loads/tendering';
	import { MarkupDriversComponent } from './markup/drivers';
	import { MarkupProfileComponent } from './markup/profile';
	import { MarkupHomeComponent } from './markup/home';
	import { MarkupLoadingComponent } from './markup/loading';
	import { MarkupErrorComponent } from './markup/error';
	import { MarkupVelocityComponent } from './markup/velocity';*/
	// css and svg
	__webpack_require__(739);
	__webpack_require__(757);
	__webpack_require__(761);
	__webpack_require__(762);
	__webpack_require__(763);
	__webpack_require__(764);
	__webpack_require__(765);
	__webpack_require__(766);
	__webpack_require__(767);
	__webpack_require__(768);
	__webpack_require__(769);
	__webpack_require__(770);
	__webpack_require__(771);
	__webpack_require__(772);
	__webpack_require__(773);
	__webpack_require__(774);
	__webpack_require__(775);
	__webpack_require__(776);
	__webpack_require__(777);
	/*
	 * App Component
	 * Top Level Component
	 */
	var AppComponent = (function () {
	    function AppComponent(viewContainerRef, userService, _applicationRef, _router) {
	        this.viewContainerRef = viewContainerRef;
	        this.userService = userService;
	        this._applicationRef = _applicationRef;
	        this._router = _router;
	        // You need this small hack in order to catch application root view container ref
	        this.viewContainerRef = viewContainerRef;
	        // Angular RC1 router fix for Safari back button
	        _router.subscribe(function (uri) {
	            _applicationRef.zone.run(function () { return _applicationRef.tick(); });
	        });
	    }
	    AppComponent = __decorate([
	        core_1.Component({
	            selector: 'transflo-app',
	            providers: [index_3.UserService, index_4.HttpService, index_5.PopoverService, index_6.LocalStorageService, index_7.ValidationService],
	            directives: [router_deprecated_1.ROUTER_DIRECTIVES, index_2.HeaderComponent, index_2.FooterComponent, index_2.PopoversComponent, index_1.ErrorsComponent],
	            template: __webpack_require__(778)
	        }),
	        router_deprecated_1.RouteConfig([
	            { path: '/', component: divisions_1.DivisionsComponent, name: 'Divisions' },
	            { path: '/divisions/:divId/loads', component: loads_1.LoadsComponent, name: 'Loads' },
	            { path: '/divisions/:divId/dashboard', component: dashboard_1.DashboardComponent, name: 'Home' },
	            { path: '/division/:divId/loads/create', component: load_1.NewLoadComponent, name: 'NewLoad' },
	            { path: '/division/:divId/loads/:loadId/tendering', component: tendering_1.TenderingComponent, name: 'TenderingLoad' },
	            { path: '/division/:divId/loads/:loadId/edit', component: load_1.NewLoadComponent, name: 'EditLoad' },
	            { path: '/division/:divId/loads/:loadId', component: load_details_1.LoadDetailsComponent, name: 'Load Details' },
	            { path: '/division/:divId/profile', component: profile_1.ProfileComponent, name: 'Profile' },
	            { path: '/share/:shareId', component: shared_load_1.SharedLoadComponent, name: 'SharedLoad' },
	            { path: '/register', component: register_1.RegisterComponent, name: 'Register' },
	            { path: '/signin', component: signin_1.SigninComponent, name: 'Signin' },
	            { path: '/restore', component: restore_1.RestoreComponent, name: 'Restore' },
	            { path: '/division/:divId/error', component: error_1.ErrorComponent, name: 'ErrorDivision' },
	            { path: '/error', component: error_1.ErrorComponent, name: 'Error' },
	            { path: '/resetpassword', component: reset_1.ResetComponent, name: 'Reset' },
	            { path: '/404', component: _404_1.Error404Component, name: '404' },
	            { path: '/velocity', component: velocity_1.VelocityComponent, name: 'Velocity' },
	        ]), 
	        __metadata('design:paramtypes', [core_1.ViewContainerRef, index_3.UserService, core_1.ApplicationRef, router_deprecated_1.Router])
	    ], AppComponent);
	    return AppComponent;
	}());
	exports.AppComponent = AppComponent;
	

/***/ }),
/* 335 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	function __export(m) {
	    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
	}
	__export(__webpack_require__(336));
	

/***/ }),
/* 336 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {"use strict";
	var core_1 = __webpack_require__(2);
	var common_1 = __webpack_require__(182);
	var ng2_select_1 = __webpack_require__(338);
	var ng2_bootstrap_1 = __webpack_require__(345);
	var services_1 = __webpack_require__(508);
	var router_deprecated_1 = __webpack_require__(281);
	var index_1 = __webpack_require__(632);
	var index_2 = __webpack_require__(656);
	var index_3 = __webpack_require__(659);
	var index_4 = __webpack_require__(674);
	var index_5 = __webpack_require__(668);
	var index_6 = __webpack_require__(662);
	var rangepicker_directive_1 = __webpack_require__(636);
	var index_7 = __webpack_require__(686);
	var moment = __webpack_require__(529);
	var _ = __webpack_require__(642);
	var LoadsComponent = (function () {
	    function LoadsComponent(loadsService, router, userService, divisionService, localStorageService) {
	        this.loadsService = loadsService;
	        this.router = router;
	        this.userService = userService;
	        this.divisionService = divisionService;
	        this.localStorageService = localStorageService;
	        this.moveDivision = {};
	        this.moveLoad = {};
	        this.filterStatus = index_7.StatusFilterConst;
	        this.filterDivision = [];
	        this.states = index_7.UStates;
	        this.drivers = [];
	        this.carriers = [];
	        this.shownAll = false;
	        this.overLimit = false;
	        this.carriersForMove = [];
	        this.brokersForMove = [];
	        this.openedPopups = 0;
	        this.loadLoading = false;
	        this.currentLoad = {};
	        this.sortingField = 'shipping';
	        this.sortingIsAsc = true;
	        this.filterDateShipping = {
	            startDate: '',
	            endDate: ''
	        };
	        this.filterDateDelivery = {
	            startDate: '',
	            endDate: ''
	        };
	        this.stateFilterShipping = '';
	        this.stateFilterDelivery = '';
	        this.statusFilter = [];
	        this.divisionFilter = [];
	        this.offeredDriversFilter = [];
	        this.assignedDriversFilter = [];
	        this.offeredCarriersFilter = [];
	        this.assignedCarriersFilter = [];
	        this.divisionFilterRaw = [];
	        this.offeredDriversFilterRaw = [];
	        this.assignedDriversFilterRaw = [];
	        this.offeredCarriersFilterRaw = [];
	        this.assignedCarriersFilterRaw = [];
	        this.params = [];
	        this.pageNum = 0;
	        this.perPage = 20;
	        this.page = [];
	        this.pages = [];
	        this.loading = false;
	        this.isCommonCarrier = false;
	        this.showPagination = true;
	        this.filtersOpened = false;
	        this.id = Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);
	    }
	    ;
	    LoadsComponent.prototype.hasFilters = function () {
	        return (this.filterDateShipping && (this.filterDateShipping.endDate || this.filterDateShipping.startDate)) ||
	            (this.filterDateDelivery && (this.filterDateDelivery.endDate || this.filterDateDelivery.startDate)) ||
	            this.stateFilterShipping ||
	            this.stateFilterDelivery ||
	            this.cityFilterShipping ||
	            this.cityFilterDelivery ||
	            (this.offeredDriversFilter && this.offeredDriversFilter.length) ||
	            (this.assignedDriversFilter && this.assignedDriversFilter.length) ||
	            (this.offeredCarriersFilter && this.offeredCarriersFilter.length) ||
	            (this.assignedCarriersFilter && this.assignedCarriersFilter.length);
	    };
	    ;
	    LoadsComponent.prototype.extractLink = function (res, load) {
	        if (res) {
	            var body = res.json();
	            load.trackingLink = window.location.origin + window.location.pathname + '#' + body.link;
	        }
	    };
	    ;
	    LoadsComponent.prototype.getLink = function (load, event) {
	        var _this = this;
	        this.closeAllPopups();
	        this.loadSharePopupId = load.id;
	        if (!load.trackingLink) {
	            this.loadsService.getShareLink(load.id).then(function (res) {
	                _this.extractLink(res, load);
	            });
	        }
	        this.formClicked(event);
	    };
	    ;
	    LoadsComponent.prototype.keyUp = function (load, event) {
	        if (load.newEmail == '' && event.keyCode == 8) {
	            this.removeEmail(load, load.trackedEmails.length - 1);
	        }
	    };
	    ;
	    LoadsComponent.prototype.addEmail = function (load, lastCheck) {
	        var lastSymbol = load.newEmail[load.newEmail.length - 1];
	        var email;
	        if (lastSymbol == ' ' || lastSymbol == ';' || lastSymbol == ',' || lastCheck) {
	            email = load.newEmail.match(/([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\.[a-zA-Z0-9._-]+)/gi);
	            if (email) {
	                load.trackedEmails.push(email[0]);
	                load.newEmail = '';
	            }
	        }
	    };
	    ;
	    LoadsComponent.prototype.removeEmail = function (load, index) {
	        load.trackedEmails.splice(index, 1);
	    };
	    ;
	    LoadsComponent.prototype.sendTackingLink = function (load) {
	        this.addEmail(load, true);
	        var sharingInfo = {
	            link: load.trackingLink,
	            expirationTime: load.time == 'hours' ? load.expired : load.expired * 24,
	            emails: load.trackedEmails,
	            additionalInfo: this.info
	        };
	        this.loadsService.shareLink(load.id, sharingInfo);
	        this.hideSharePopup();
	    };
	    ;
	    LoadsComponent.prototype.formClicked = function (event) {
	        event.stopPropagation();
	        event.preventDefault();
	        return false;
	    };
	    ;
	    LoadsComponent.prototype.showMoveLoadPopup = function (load, event) {
	        if (load.status != 'InTransit') {
	            this.closeAllPopups();
	            this.moveLoad = load;
	            this.loadMovePopupId = load.id;
	            this.moveDivision = null;
	        }
	        event.stopPropagation();
	        event.preventDefault();
	    };
	    ;
	    LoadsComponent.prototype.closeAllPopups = function () {
	        this.hideSharePopup();
	        this.hideMoveLoadPopup();
	        this.hideDocumentScans();
	    };
	    ;
	    LoadsComponent.prototype.showDocumentScans = function (id, event) {
	        this.closeAllPopups();
	        this.docScansPopupId = id;
	        event.stopPropagation();
	        event.preventDefault();
	    };
	    ;
	    LoadsComponent.prototype.hideDocumentScans = function () {
	        this.docScansPopupId = null;
	    };
	    ;
	    LoadsComponent.prototype.hideSharePopup = function () {
	        this.loadSharePopupId = null;
	    };
	    ;
	    LoadsComponent.prototype.hideMoveLoadPopup = function () {
	        this.loadMovePopupId = null;
	    };
	    ;
	    LoadsComponent.prototype.gotoDetails = function (id, event) {
	        if (!this.hasNoOpenedPopups()) {
	            this.router.navigate(['Load Details', { divId: this.divisionId, loadId: id }]);
	        }
	        else {
	            this.openedPopups = 0;
	        }
	    };
	    ;
	    LoadsComponent.prototype.gotoTendering = function (id, event) {
	        this.router.navigate(['TenderingLoad', { divId: this.divisionId, loadId: id }]);
	        event.stopPropagation();
	        event.preventDefault();
	    };
	    ;
	    LoadsComponent.prototype.setOpenedPopups = function (isOpened) {
	        if (isOpened) {
	            this.closeAllPopups();
	        }
	        ;
	        this.openedPopups = $('.dropdown.open').length;
	    };
	    ;
	    LoadsComponent.prototype.hasNoOpenedPopups = function () {
	        return !!this.loadSharePopupId || !!this.loadMovePopupId || !!this.openedPopups || !!this.docScansPopupId;
	    };
	    ;
	    LoadsComponent.prototype.moveToDivision = function () {
	        var _this = this;
	        this.loadsService.moveLoad(this.moveDivision.id, this.moveLoad.id).then(function (res) {
	            _this.loads = _this.loads.filter(function (load) { return load.id != _this.moveLoad.id; });
	            _this.setPage(_this.pageNum);
	            _this.hideMoveLoadPopup();
	        });
	    };
	    ;
	    LoadsComponent.prototype.getLoad = function (load, event) {
	        this.loadLoading = true;
	        this.currentLoad = load;
	        this.loadsService
	            .getLoad(load.id, this.divisionId)
	            .then(this.setLoad.bind(this));
	        event.stopPropagation();
	    };
	    ;
	    LoadsComponent.prototype.setLoad = function (res) {
	        this.loadLoading = false;
	        if (res) {
	            var body = res.json();
	            this.currentLoad = body;
	        }
	    };
	    ;
	    LoadsComponent.prototype.deleteLoad = function (load, event) {
	        if (confirm('This load will be deleted permanently. Are you sure?')) {
	            this.loading = true;
	            this.loadsService
	                .deleteLoad(load.id)
	                .then(this.applyFilters.bind(this));
	        }
	        event.preventDefault();
	        event.stopPropagation();
	    };
	    ;
	    LoadsComponent.prototype.resetFilters = function (event) {
	        this.filterDateShipping = {
	            startDate: '',
	            endDate: ''
	        };
	        this.filterDateDelivery = {
	            startDate: '',
	            endDate: ''
	        };
	        this.stateFilterShipping = '';
	        this.stateFilterDelivery = '';
	        this.statusFilter = [];
	        this.divisionFilter = [];
	        this.cityFilterShipping = '';
	        this.cityFilterDelivery = '';
	        this.paramsFilter = '';
	        this.offeredDriversFilter = [];
	        this.assignedDriversFilter = [];
	        this.offeredCarriersFilter = [];
	        this.assignedCarriersFilter = [];
	        this.sortingField = 'shipping';
	        this.sortingIsAsc = true;
	        this.submit(event);
	    };
	    ;
	    LoadsComponent.prototype.submit = function (event) {
	        this.router.navigate(['Loads', this.serializeFilters()]);
	        event.preventDefault();
	        event.stopPropagation();
	    };
	    ;
	    LoadsComponent.prototype.applyFilters = function () {
	        var _this = this;
	        this.loads = [];
	        this.page = [];
	        this.pages = [];
	        this.loadsService.get(+this.divisionId, {
	            dateShipping: this.filterDateShipping,
	            dateDelivery: this.filterDateDelivery,
	            stateShipping: this.stateFilterShipping,
	            stateDelivery: this.stateFilterDelivery,
	            status: this.statusFilter,
	            division: this.divisionFilter,
	            cityShipping: this.cityFilterShipping,
	            cityDelivery: this.cityFilterDelivery,
	            params: this.paramsFilter,
	            offeredDrivers: this.offeredDriversFilter,
	            assignedDrivers: this.assignedDriversFilter,
	            offeredCarriers: this.offeredCarriersFilter,
	            assignedCarriers: this.assignedCarriersFilter,
	            sortingField: this.sortingField,
	            sortingType: this.sortingIsAsc ? 'asc' : 'desc'
	        })
	            .then(function (res) { return _this.setLoads(res); })
	            .catch(this.error);
	    };
	    ;
	    LoadsComponent.prototype.filterChanged = function (filter, type) {
	        switch (type) {
	            case 'shipping':
	                this.filterDateShipping = filter;
	                break;
	            case 'delivery':
	                this.filterDateDelivery = filter;
	                break;
	        }
	    };
	    ;
	    LoadsComponent.prototype.statusChanged = function (value) {
	        this.statusFilter = value;
	    };
	    ;
	    LoadsComponent.prototype.divisionChanged = function (value) {
	        this.divisionFilter = value;
	    };
	    ;
	    LoadsComponent.prototype.ngOnInit = function () {
	        var _this = this;
	        this.loading = true;
	        this.divisionId = this.router.root.currentInstruction.urlPath.split('/')[1];
	        this.deserealizeFilters(this.router.root.currentInstruction.urlParams);
	        this.userService.getUser(function (user) { return _this.setFilters(user); });
	        $('body').on('click.' + this.id, function (event) {
	            _this.closeAllPopups();
	        });
	    };
	    ;
	    LoadsComponent.prototype.ngOnDestroy = function () {
	        $('body').unbind('click.' + this.id);
	    };
	    ;
	    LoadsComponent.prototype.loadDrivers = function () {
	        var _this = this;
	        this.divisionService.getDrivers(+this.divisionId, null)
	            .then(function (res) { return _this.setDrivers(res); })
	            .catch(this.error);
	    };
	    ;
	    LoadsComponent.prototype.carrierChanged = function (carriers, type) {
	        switch (type) {
	            case 'offered':
	                this.offeredCarriersFilter = carriers;
	                break;
	            case 'assigned':
	                this.assignedCarriersFilter = carriers;
	                break;
	        }
	    };
	    LoadsComponent.prototype.driverChanged = function (drivers, type) {
	        switch (type) {
	            case 'offered':
	                this.offeredDriversFilter = drivers;
	                break;
	            case 'assigned':
	            case 'accepted':
	                this.assignedDriversFilter = drivers;
	                break;
	        }
	    };
	    ;
	    LoadsComponent.prototype.deserealizeFilters = function (arrOfFilters) {
	        var params = {};
	        for (var _i = 0, arrOfFilters_1 = arrOfFilters; _i < arrOfFilters_1.length; _i++) {
	            var filterStr = arrOfFilters_1[_i];
	            var key = filterStr.split('=')[0];
	            var value = filterStr.split('=')[1];
	            var filterKey = '';
	            params[key] = value;
	            switch (key) {
	                case 's':
	                    filterKey = 'sortingField';
	                    this[filterKey] = params[key];
	                    break;
	                case 'asc':
	                    filterKey = 'sortingIsAsc';
	                    this[filterKey] = !!+params[key];
	                    break;
	                case 'dsh':
	                    filterKey = 'filterDateShipping';
	                    this[filterKey] = {
	                        startDate: moment(params[key].split('--')[0]).toDate(),
	                        endDate: moment(params[key].split('--')[1]).toDate()
	                    };
	                    break;
	                case 'ddl':
	                    filterKey = 'filterDateDelivery';
	                    this[filterKey] = {
	                        startDate: moment(params[key].split('--')[0]).toDate(),
	                        endDate: moment(params[key].split('--')[1]).toDate()
	                    };
	                    break;
	                case 'ssh':
	                    filterKey = 'stateFilterShipping';
	                    this[filterKey] = params[key];
	                    break;
	                case 'sdl':
	                    filterKey = 'stateFilterDelivery';
	                    this[filterKey] = params[key];
	                    break;
	                case 'st':
	                    var checkedStatuses = JSON.parse(params[key]);
	                    filterKey = 'statusFilter';
	                    this[filterKey] = [];
	                    var _loop_1 = function(status_1) {
	                        this_1[filterKey].push(this_1.filterStatus.find(function (st) { return st.id == status_1; }));
	                    };
	                    var this_1 = this;
	                    for (var _a = 0, checkedStatuses_1 = checkedStatuses; _a < checkedStatuses_1.length; _a++) {
	                        var status_1 = checkedStatuses_1[_a];
	                        _loop_1(status_1);
	                    }
	                    break;
	                case 'div':
	                    filterKey = 'divisionFilterRaw';
	                    this[filterKey] = JSON.parse(params[key]);
	                    break;
	                case 'csh':
	                    filterKey = 'cityFilterShipping';
	                    this[filterKey] = params[key];
	                    break;
	                case 'cdl':
	                    filterKey = 'cityFilterDelivery';
	                    this[filterKey] = params[key];
	                    break;
	                case 'prm':
	                    filterKey = 'paramsFilter';
	                    this[filterKey] = params[key];
	                    break;
	                case 'odr':
	                    filterKey = 'offeredDriversFilterRaw';
	                    this[filterKey] = JSON.parse(params[key]);
	                    break;
	                case 'adr':
	                    filterKey = 'assignedDriversFilterRaw';
	                    this[filterKey] = JSON.parse(params[key]);
	                    break;
	                case 'ocr':
	                    filterKey = 'offeredCarriersFilterRaw';
	                    this[filterKey] = JSON.parse(params[key]);
	                    break;
	                case 'acr':
	                    filterKey = 'assignedCarriersFilterRaw';
	                    this[filterKey] = JSON.parse(params[key]);
	                    break;
	            }
	        }
	    };
	    ;
	    LoadsComponent.prototype.serializeFilters = function () {
	        var params = {};
	        params['s'] = this.sortingField;
	        params['asc'] = this.sortingIsAsc ? 1 : 0;
	        if (this.filterDateShipping && this.filterDateShipping.startDate && this.filterDateShipping.endDate) {
	            params['dsh'] = moment(this.filterDateShipping.startDate).format('MM/DD/YY') + '--' + moment(this.filterDateShipping.endDate).format('MM/DD/YY');
	        }
	        if (this.filterDateDelivery && this.filterDateDelivery.startDate && this.filterDateDelivery.endDate) {
	            params['ddl'] = moment(this.filterDateDelivery.startDate).format('MM/DD/YY') + '--' + moment(this.filterDateDelivery.endDate).format('MM/DD/YY');
	        }
	        params['ssh'] = this.stateFilterShipping;
	        params['sdl'] = this.stateFilterDelivery;
	        params['st'] = JSON.stringify(this.statusFilter.map(function (s) { return s.id; }));
	        params['div'] = JSON.stringify(this.divisionFilter.map(function (s) { return s.id; }));
	        params['csh'] = this.cityFilterShipping;
	        params['cdl'] = this.cityFilterDelivery;
	        params['prm'] = this.paramsFilter;
	        params['odr'] = JSON.stringify(this.offeredDriversFilter.map(function (s) { return s.id; }));
	        params['adr'] = JSON.stringify(this.assignedDriversFilter.map(function (s) { return s.id; }));
	        params['ocr'] = JSON.stringify(this.offeredCarriersFilter.map(function (s) { return s.id; }));
	        params['acr'] = JSON.stringify(this.assignedCarriersFilter.map(function (s) { return s.id; }));
	        params['divId'] = this.divisionId;
	        for (var key in params) {
	            if ((!params[key] || params[key] == 'null' || params[key] == '[]' || params[key] == '') && (params[key] !== 0)) {
	                delete params[key];
	            }
	        }
	        ;
	        return params;
	    };
	    ;
	    LoadsComponent.prototype.setBrokers = function (res) {
	        var _this = this;
	        if (res && res.text()) {
	            var body = res.json();
	            this.filterDivision = body;
	            this.brokersForMove = this.filterDivision.map(function (div) {
	                return {
	                    type: div.type,
	                    text: _.compact([div.name, div.code]).join(' — '),
	                    id: div.id
	                };
	            })
	                .filter(function (broker) { return broker.id != _this.divisionId; });
	            if (this.divisionFilterRaw && this.divisionFilterRaw.length) {
	                this.divisionFilter = [];
	                var _loop_2 = function(div) {
	                    this_2.divisionFilter.push(this_2.filterDivision.find(function (d) { return d.id == div; }));
	                };
	                var this_2 = this;
	                for (var _i = 0, _a = this.divisionFilterRaw; _i < _a.length; _i++) {
	                    var div = _a[_i];
	                    _loop_2(div);
	                }
	                this.divisionFilterRaw = [];
	            }
	            this.applyFilters();
	        }
	    };
	    ;
	    LoadsComponent.prototype.getBrokers = function () {
	        var _this = this;
	        this.userService.getUser(function (user) { return _this.setBrokerFilters(user); });
	    };
	    ;
	    LoadsComponent.prototype.setBrokerFilters = function (user) {
	        var _this = this;
	        if (user.divisions) {
	            this.brokersForMove = user.divisions.map(function (div) {
	                return {
	                    type: div.type,
	                    text: _.compact([div.name, div.code]).join(' — '),
	                    id: div.id
	                };
	            }).filter(function (div) {
	                return div.type == 'broker' && div.id != _this.divisionId;
	            });
	            ;
	            if (this.divisionFilterRaw && this.divisionFilterRaw.length) {
	                this.divisionFilter = [];
	                var _loop_3 = function(div) {
	                    this_3.divisionFilter.push(this_3.filterDivision.find(function (d) { return d.id == div; }));
	                };
	                var this_3 = this;
	                for (var _i = 0, _a = this.divisionFilterRaw; _i < _a.length; _i++) {
	                    var div = _a[_i];
	                    _loop_3(div);
	                }
	                this.divisionFilterRaw = [];
	            }
	            this.applyFilters();
	        }
	    };
	    LoadsComponent.prototype.setDrivers = function (res) {
	        if (res && res.text()) {
	            var body = res.json();
	            this.drivers = body;
	            if (this.offeredDriversFilterRaw && this.offeredDriversFilterRaw.length) {
	                this.offeredDriversFilter = [];
	                var _loop_4 = function(driver) {
	                    this_4.offeredDriversFilter.push(this_4.drivers.find(function (dr) { return dr.id == driver; }));
	                };
	                var this_4 = this;
	                for (var _i = 0, _a = this.offeredDriversFilterRaw; _i < _a.length; _i++) {
	                    var driver = _a[_i];
	                    _loop_4(driver);
	                }
	                this.offeredDriversFilterRaw = [];
	            }
	            if (this.assignedDriversFilterRaw && this.assignedDriversFilterRaw.length) {
	                this.assignedDriversFilter = [];
	                var _loop_5 = function(driver) {
	                    this_5.assignedDriversFilter.push(this_5.drivers.find(function (dr) { return dr.id == driver; }));
	                };
	                var this_5 = this;
	                for (var _b = 0, _c = this.assignedDriversFilterRaw; _b < _c.length; _b++) {
	                    var driver = _c[_b];
	                    _loop_5(driver);
	                }
	                this.assignedDriversFilterRaw = [];
	            }
	        }
	        this.getBrokers();
	    };
	    ;
	    LoadsComponent.prototype.setLoads = function (results) {
	        this.serializeFilters();
	        var body = results.json();
	        var markedLoad = this.localStorageService.getItem('selectedItem');
	        this.loads = (body && body.loads) || [];
	        _.each(this.loads, function (load) {
	            load.trackedEmails = [];
	            load.newEmail = '';
	            load.trackingLink = '';
	            load.expired = 3;
	            load.time = 'hours';
	        });
	        this.overLimit = body && body.isOverLimit;
	        this.totalPages = Math.ceil(this.loads.length / this.perPage);
	        this.pages = new Array(this.totalPages);
	        if (markedLoad) {
	            var found = this.loads.findIndex(function (load) { return load.id == markedLoad; });
	            if (found != -1) {
	                this.setPage(Math.floor(found / this.perPage));
	            }
	            else {
	                this.localStorageService.clearItem('selectedItem');
	                this.createPage();
	            }
	        }
	        else {
	            this.createPage();
	        }
	        ;
	        this.loading = false;
	    };
	    ;
	    LoadsComponent.prototype.cloneLoad = function (load, event) {
	        this.formClicked(event);
	        this.loadsService
	            .clone(load)
	            .then(this.parseClone.bind(this));
	    };
	    ;
	    LoadsComponent.prototype.parseClone = function (res) {
	        if (res) {
	            var body = res.json();
	            this.router.navigate(['EditLoad', { divId: this.divisionId, loadId: body.id }]);
	        }
	    };
	    LoadsComponent.prototype.setFilters = function (user) {
	        var _this = this;
	        if (user.divisions) {
	            var carrier = user.divisions.find(function (div) {
	                return div.id == +_this.divisionId;
	            });
	            this.isCarrier = carrier.type == 'carrier';
	            this.isCommonCarrier = carrier.isCommonCarrier;
	            this.carriers = user.divisions.map(function (div) {
	                return {
	                    type: div.type,
	                    text: div.name,
	                    id: div.id
	                };
	            }).filter(function (div) {
	                return div.type == 'carrier';
	            });
	            this.carriersForMove = user.divisions.map(function (div) {
	                return {
	                    type: div.type,
	                    text: _.compact([div.name, div.code]).join(' — '),
	                    id: div.id
	                };
	            }).filter(function (div) {
	                return div.type == 'carrier' && div.id != _this.divisionId;
	            });
	            ;
	            if (this.assignedCarriersFilterRaw && this.assignedCarriersFilterRaw.length) {
	                this.assignedCarriersFilter = [];
	                var _loop_6 = function(div) {
	                    this_6.assignedCarriersFilter.push(this_6.carriers.find(function (d) { return d.id == div; }));
	                };
	                var this_6 = this;
	                for (var _i = 0, _a = this.assignedCarriersFilterRaw; _i < _a.length; _i++) {
	                    var div = _a[_i];
	                    _loop_6(div);
	                }
	                this.assignedCarriersFilterRaw = [];
	            }
	            ;
	            if (this.offeredCarriersFilterRaw && this.offeredCarriersFilterRaw.length) {
	                this.offeredCarriersFilter = [];
	                var _loop_7 = function(div) {
	                    this_7.offeredCarriersFilter.push(this_7.carriers.find(function (d) { return d.id == div; }));
	                };
	                var this_7 = this;
	                for (var _b = 0, _c = this.offeredCarriersFilterRaw; _b < _c.length; _b++) {
	                    var div = _c[_b];
	                    _loop_7(div);
	                }
	                this.offeredCarriersFilterRaw = [];
	            }
	            ;
	            if (this.isCarrier) {
	                this.loadDrivers();
	            }
	            else {
	                this.setBrokerFilters(user);
	            }
	            ;
	        }
	    };
	    ;
	    LoadsComponent.prototype.editLoad = function (load, event) {
	        this.formClicked(event);
	        this.router.navigate(['EditLoad', { divId: this.divisionId, loadId: load.id }]);
	    };
	    ;
	    LoadsComponent.prototype.createPage = function () {
	        var markedLoad = this.localStorageService.getItem('selectedItem');
	        this.shownAll = false;
	        this.page = this.loads.slice(this.pageNum * this.perPage, this.pageNum * this.perPage + this.perPage);
	        if (markedLoad) {
	            var found = this.page.findIndex(function (load) { return load.id == markedLoad; });
	            if (found != -1) {
	                this.page[found].marked = true;
	                this.localStorageService.clearItem('selectedItem');
	            }
	        }
	        else {
	            var found = this.page.findIndex(function (load) { return load.marked; });
	            if (found != -1) {
	                this.page[found].marked = false;
	            }
	        }
	        this.showPagination = this.page.length == this.loads.length;
	    };
	    ;
	    LoadsComponent.prototype.setPage = function (pageNum) {
	        this.pageNum = pageNum;
	        this.createPage();
	    };
	    ;
	    LoadsComponent.prototype.showAll = function () {
	        this.shownAll = true;
	        this.page = this.loads.slice();
	    };
	    ;
	    LoadsComponent.prototype.nextPage = function () {
	        if (this.pageNum != this.totalPages - 1) {
	            this.setPage(this.pageNum + 1);
	        }
	    };
	    ;
	    LoadsComponent.prototype.prevPage = function () {
	        if (this.pageNum != 0) {
	            this.setPage(this.pageNum - 1);
	        }
	    };
	    ;
	    LoadsComponent.prototype.error = function (error) {
	        console.log('Error loading data');
	    };
	    ;
	    LoadsComponent = __decorate([
	        core_1.Component({
	            selector: 'loads',
	            directives: [ng2_bootstrap_1.DROPDOWN_DIRECTIVES, index_4.ShareComponent, router_deprecated_1.ROUTER_DIRECTIVES, ng2_select_1.SELECT_DIRECTIVES, common_1.NgClass, common_1.CORE_DIRECTIVES, rangepicker_directive_1.RangePickerDirective, index_1.DropdownComponent, index_2.DriversComponent, index_3.DateComponent, index_6.AttributesComponent, ng2_bootstrap_1.MODAL_DIRECTVES, ng2_bootstrap_1.TYPEAHEAD_DIRECTIVES, index_5.SkeletonComponent],
	            template: __webpack_require__(689),
	            styles: [".dropdown-submenu:hover>.dropdown-menu {position:relative;display:block;} .dropdown-submenu>a:after {\tdisplay: block;\tcontent: \" \";\t\tfloat: right;\t\twidth: 0;\t\theight: 0;\t\tborder-color: transparent;\t\tborder-style: solid;\t\tborder-width: 5px 0 5px 5px;\t\tborder-left-color: #ccc;\t\tmargin-top: 5px;\t\tmargin-right: -10px;\t} .dropdown-submenu>.dropdown-menu {\n\t\ttop: 0;\n\t\tleft: 100%;\n\t\tmargin-top: -6px;\n\t\tmargin-left: -1px;\n\t\t-webkit-border-radius: 0 6px 6px 6px;\n\t\t-moz-border-radius: 0 6px 6px;\n\t\tborder-radius: 0 6px 6px 6px;\n\t}"],
	            providers: [services_1.LoadsService, services_1.DivisionService, services_1.LocalStorageService],
	            viewProviders: [ng2_bootstrap_1.BS_VIEW_PROVIDERS]
	        }), 
	        __metadata('design:paramtypes', [services_1.LoadsService, router_deprecated_1.Router, services_1.UserService, services_1.DivisionService, services_1.LocalStorageService])
	    ], LoadsComponent);
	    return LoadsComponent;
	}());
	exports.LoadsComponent = LoadsComponent;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(337)))

/***/ }),
/* 337 */,
/* 338 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	function __export(m) {
	    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
	}
	var select_1 = __webpack_require__(339);
	__export(__webpack_require__(340));
	__export(__webpack_require__(339));
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = {
	    directives: [
	        select_1.SELECT_DIRECTIVES
	    ]
	};


/***/ }),
/* 339 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var select_1 = __webpack_require__(340);
	exports.SELECT_DIRECTIVES = [select_1.SelectComponent];


/***/ }),
/* 340 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var __metadata = (this && this.__metadata) || function (k, v) {
	    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
	};
	var core_1 = __webpack_require__(2);
	var select_item_1 = __webpack_require__(341);
	var select_pipes_1 = __webpack_require__(342);
	var common_1 = __webpack_require__(343);
	var off_click_1 = __webpack_require__(344);
	var optionsTemplate = "\n    <ul *ngIf=\"optionsOpened && options && options.length > 0 && !firstItemHasChildren\"\n        class=\"ui-select-choices ui-select-choices-content ui-select-dropdown dropdown-menu\">\n      <li class=\"ui-select-choices-group\">\n        <div *ngFor=\"let o of options\"\n             class=\"ui-select-choices-row\"\n             [class.active]=\"isActive(o)\"\n             (mouseenter)=\"selectActive(o)\"\n             (click)=\"selectMatch(o, $event)\">\n          <a href=\"javascript:void(0)\" class=\"ui-select-choices-row-inner\">\n            <div [innerHtml]=\"o.text | highlight:inputValue\"></div>\n          </a>\n        </div>\n      </li>\n    </ul>\n\n    <ul *ngIf=\"optionsOpened && options && options.length > 0 && firstItemHasChildren\"\n        class=\"ui-select-choices ui-select-choices-content ui-select-dropdown dropdown-menu\">\n      <li *ngFor=\"let c of options; let index=index\" class=\"ui-select-choices-group\">\n        <div class=\"divider\" *ngIf=\"index > 0\"></div>\n        <div class=\"ui-select-choices-group-label dropdown-header\">{{c.text}}</div>\n\n        <div *ngFor=\"let o of c.children\"\n             class=\"ui-select-choices-row\"\n             [class.active]=\"isActive(o)\"\n             (mouseenter)=\"selectActive(o)\"\n             (click)=\"selectMatch(o, $event)\"\n             [ngClass]=\"{'active': isActive(o)}\">\n          <a href=\"javascript:void(0)\" class=\"ui-select-choices-row-inner\">\n            <div [innerHtml]=\"o.text | highlight:inputValue\"></div>\n          </a>\n        </div>\n      </li>\n    </ul>\n";
	var SelectComponent = (function () {
	    function SelectComponent(element) {
	        this.allowClear = false;
	        this.placeholder = '';
	        this.initData = [];
	        this.multiple = false;
	        this.data = new core_1.EventEmitter();
	        this.selected = new core_1.EventEmitter();
	        this.removed = new core_1.EventEmitter();
	        this.typed = new core_1.EventEmitter();
	        this.options = [];
	        this.itemObjects = [];
	        this.active = [];
	        this.inputMode = false;
	        this.optionsOpened = false;
	        this.inputValue = '';
	        this._items = [];
	        this._disabled = false;
	        this.element = element;
	        this.clickedOutside = this.clickedOutside.bind(this);
	    }
	    Object.defineProperty(SelectComponent.prototype, "items", {
	        set: function (value) {
	            this._items = value;
	            this.itemObjects = this._items.map(function (item) { return new select_item_1.SelectItem(item); });
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(SelectComponent.prototype, "disabled", {
	        set: function (value) {
	            this._disabled = value;
	            if (this._disabled === true) {
	                this.hideOptions();
	            }
	        },
	        enumerable: true,
	        configurable: true
	    });
	    SelectComponent.prototype.inputEvent = function (e, isUpMode) {
	        if (isUpMode === void 0) { isUpMode = false; }
	        // tab
	        if (e.keyCode === 9) {
	            return;
	        }
	        if (isUpMode && (e.keyCode === 37 || e.keyCode === 39 || e.keyCode === 38 ||
	            e.keyCode === 40 || e.keyCode === 13)) {
	            e.preventDefault();
	            return;
	        }
	        // backspace
	        if (!isUpMode && e.keyCode === 8) {
	            var el = this.element.nativeElement
	                .querySelector('div.ui-select-container > input');
	            if (!el.value || el.value.length <= 0) {
	                if (this.active.length > 0) {
	                    this.remove(this.active[this.active.length - 1]);
	                }
	                e.preventDefault();
	            }
	        }
	        // esc
	        if (!isUpMode && e.keyCode === 27) {
	            this.hideOptions();
	            this.element.nativeElement.children[0].focus();
	            e.preventDefault();
	            return;
	        }
	        // del
	        if (!isUpMode && e.keyCode === 46) {
	            if (this.active.length > 0) {
	                this.remove(this.active[this.active.length - 1]);
	            }
	            e.preventDefault();
	        }
	        // left
	        if (!isUpMode && e.keyCode === 37 && this._items.length > 0) {
	            this.behavior.first();
	            e.preventDefault();
	            return;
	        }
	        // right
	        if (!isUpMode && e.keyCode === 39 && this._items.length > 0) {
	            this.behavior.last();
	            e.preventDefault();
	            return;
	        }
	        // up
	        if (!isUpMode && e.keyCode === 38) {
	            this.behavior.prev();
	            e.preventDefault();
	            return;
	        }
	        // down
	        if (!isUpMode && e.keyCode === 40) {
	            this.behavior.next();
	            e.preventDefault();
	            return;
	        }
	        // enter
	        if (!isUpMode && e.keyCode === 13) {
	            if (this.active.indexOf(this.activeOption) === -1) {
	                this.selectActiveMatch();
	                this.behavior.next();
	            }
	            e.preventDefault();
	            return;
	        }
	        if (e.srcElement) {
	            this.inputValue = e.srcElement.value;
	            this.behavior.filter(new RegExp(common_1.escapeRegexp(this.inputValue), 'ig'));
	            this.doEvent('typed', this.inputValue);
	        }
	    };
	    SelectComponent.prototype.ngOnInit = function () {
	        this.behavior = (this.firstItemHasChildren) ?
	            new ChildrenBehavior(this) : new GenericBehavior(this);
	        if (this.initData) {
	            this.active = this.initData.map(function (data) { return new select_item_1.SelectItem(data); });
	            this.data.emit(this.active);
	        }
	    };
	    SelectComponent.prototype.remove = function (item) {
	        if (this._disabled === true) {
	            return;
	        }
	        if (this.multiple === true && this.active) {
	            var index = this.active.indexOf(item);
	            this.active.splice(index, 1);
	            this.data.next(this.active);
	            this.doEvent('removed', item);
	        }
	        if (this.multiple === false) {
	            this.active = [];
	            this.data.next(this.active);
	            this.doEvent('removed', item);
	        }
	    };
	    SelectComponent.prototype.doEvent = function (type, value) {
	        if (this[type] && value) {
	            this[type].next(value);
	        }
	    };
	    SelectComponent.prototype.clickedOutside = function () {
	        this.inputMode = false;
	        this.optionsOpened = false;
	    };
	    Object.defineProperty(SelectComponent.prototype, "firstItemHasChildren", {
	        get: function () {
	            return this.itemObjects[0] && this.itemObjects[0].hasChildren();
	        },
	        enumerable: true,
	        configurable: true
	    });
	    SelectComponent.prototype.matchClick = function (e) {
	        if (this._disabled === true) {
	            return;
	        }
	        this.inputMode = !this.inputMode;
	        if (this.inputMode === true && ((this.multiple === true && e) || this.multiple === false)) {
	            this.focusToInput();
	            this.open();
	        }
	    };
	    SelectComponent.prototype.mainClick = function (event) {
	        if (this.inputMode === true || this._disabled === true) {
	            return;
	        }
	        if (event.keyCode === 46) {
	            event.preventDefault();
	            this.inputEvent(event);
	            return;
	        }
	        if (event.keyCode === 8) {
	            event.preventDefault();
	            this.inputEvent(event, true);
	            return;
	        }
	        if (event.keyCode === 9 || event.keyCode === 13 ||
	            event.keyCode === 27 || (event.keyCode >= 37 && event.keyCode <= 40)) {
	            event.preventDefault();
	            return;
	        }
	        this.inputMode = true;
	        var value = String
	            .fromCharCode(96 <= event.keyCode && event.keyCode <= 105 ? event.keyCode - 48 : event.keyCode)
	            .toLowerCase();
	        this.focusToInput(value);
	        this.open();
	        event.srcElement.value = value;
	        this.inputEvent(event);
	    };
	    SelectComponent.prototype.selectActive = function (value) {
	        this.activeOption = value;
	    };
	    SelectComponent.prototype.isActive = function (value) {
	        return this.activeOption.text === value.text;
	    };
	    SelectComponent.prototype.focusToInput = function (value) {
	        var _this = this;
	        if (value === void 0) { value = ''; }
	        setTimeout(function () {
	            var el = _this.element.nativeElement.querySelector('div.ui-select-container > input');
	            if (el) {
	                el.focus();
	                el.value = value;
	            }
	        }, 0);
	    };
	    SelectComponent.prototype.open = function () {
	        var _this = this;
	        this.options = this.itemObjects
	            .filter(function (option) { return (_this.multiple === false ||
	            _this.multiple === true &&
	                !_this.active.find(function (o) { return option.text === o.text; })); });
	        if (this.options.length > 0) {
	            this.behavior.first();
	        }
	        this.optionsOpened = true;
	    };
	    SelectComponent.prototype.hideOptions = function () {
	        this.inputMode = false;
	        this.optionsOpened = false;
	    };
	    SelectComponent.prototype.selectActiveMatch = function () {
	        this.selectMatch(this.activeOption);
	    };
	    SelectComponent.prototype.selectMatch = function (value, e) {
	        if (e === void 0) { e = void 0; }
	        if (e) {
	            e.stopPropagation();
	            e.preventDefault();
	        }
	        if (this.options.length <= 0) {
	            return;
	        }
	        if (this.multiple === true) {
	            this.active.push(value);
	            this.data.next(this.active);
	        }
	        if (this.multiple === false) {
	            this.active[0] = value;
	            this.data.next(this.active[0]);
	        }
	        this.doEvent('selected', value);
	        this.hideOptions();
	        if (this.multiple === true) {
	            this.focusToInput('');
	        }
	        else {
	            this.focusToInput(select_pipes_1.stripTags(value.text));
	            this.element.nativeElement.querySelector('.ui-select-container').focus();
	        }
	    };
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Boolean)
	    ], SelectComponent.prototype, "allowClear", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', String)
	    ], SelectComponent.prototype, "placeholder", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Array)
	    ], SelectComponent.prototype, "initData", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Boolean)
	    ], SelectComponent.prototype, "multiple", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Array), 
	        __metadata('design:paramtypes', [Array])
	    ], SelectComponent.prototype, "items", null);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Boolean), 
	        __metadata('design:paramtypes', [Boolean])
	    ], SelectComponent.prototype, "disabled", null);
	    __decorate([
	        core_1.Output(), 
	        __metadata('design:type', core_1.EventEmitter)
	    ], SelectComponent.prototype, "data", void 0);
	    __decorate([
	        core_1.Output(), 
	        __metadata('design:type', core_1.EventEmitter)
	    ], SelectComponent.prototype, "selected", void 0);
	    __decorate([
	        core_1.Output(), 
	        __metadata('design:type', core_1.EventEmitter)
	    ], SelectComponent.prototype, "removed", void 0);
	    __decorate([
	        core_1.Output(), 
	        __metadata('design:type', core_1.EventEmitter)
	    ], SelectComponent.prototype, "typed", void 0);
	    SelectComponent = __decorate([
	        core_1.Component({
	            selector: 'ng-select',
	            directives: [off_click_1.OffClickDirective],
	            pipes: [select_pipes_1.HighlightPipe],
	            template: "\n  <div tabindex=\"0\"\n     *ngIf=\"multiple === false\"\n     (keyup)=\"mainClick($event)\"\n     [offClick]=\"clickedOutside\"\n     class=\"ui-select-container ui-select-bootstrap dropdown open\">\n    <div [ngClass]=\"{'ui-disabled': disabled}\"></div>\n    <div class=\"ui-select-match\"\n         *ngIf=\"!inputMode\">\n      <span tabindex=\"-1\"\n          class=\"btn btn-default btn-secondary form-control ui-select-toggle\"\n          (click)=\"matchClick($event)\"\n          style=\"outline: 0;\">\n        <span *ngIf=\"active.length <= 0\" class=\"ui-select-placeholder text-muted\">{{placeholder}}</span>\n        <span *ngIf=\"active.length > 0\" class=\"ui-select-match-text pull-left\"\n              [ngClass]=\"{'ui-select-allow-clear': allowClear && active.length > 0}\"\n              [innerHTML]=\"active[0].text\"></span>\n        <i class=\"dropdown-toggle pull-right\"></i>\n        <i class=\"caret pull-right\"></i>\n        <a *ngIf=\"allowClear && active.length>0\" style=\"margin-right: 10px; padding: 0;\"\n          (click)=\"remove(activeOption)\" class=\"btn btn-xs btn-link pull-right\">\n          <i class=\"glyphicon glyphicon-remove\"></i>\n        </a>\n      </span>\n    </div>\n    <input type=\"text\" autocomplete=\"false\" tabindex=\"-1\"\n           (keydown)=\"inputEvent($event)\"\n           (keyup)=\"inputEvent($event, true)\"\n           [disabled]=\"disabled\"\n           class=\"form-control ui-select-search\"\n           *ngIf=\"inputMode\"\n           placeholder=\"{{active.length <= 0 ? placeholder : ''}}\">\n      " + optionsTemplate + "\n  </div>\n\n  <div tabindex=\"0\"\n     *ngIf=\"multiple === true\"\n     (keyup)=\"mainClick($event)\"\n     (focus)=\"focusToInput('')\"\n     class=\"ui-select-container ui-select-multiple ui-select-bootstrap dropdown form-control open\">\n    <div [ngClass]=\"{'ui-disabled': disabled}\"></div>\n    <span class=\"ui-select-match\">\n        <span *ngFor=\"let a of active\">\n            <span class=\"ui-select-match-item btn btn-default btn-secondary btn-xs\"\n                  tabindex=\"-1\"\n                  type=\"button\"\n                  [ngClass]=\"{'btn-default': true}\">\n               <a class=\"close ui-select-match-close\"\n                  (click)=\"remove(a)\">&nbsp;&times;</a>\n               <span>{{a.text}}</span>\n           </span>\n        </span>\n    </span>\n    <input type=\"text\"\n           (keydown)=\"inputEvent($event)\"\n           (keyup)=\"inputEvent($event, true)\"\n           (click)=\"matchClick($event)\"\n           [disabled]=\"disabled\"\n           autocomplete=\"false\"\n           autocorrect=\"off\"\n           autocapitalize=\"off\"\n           spellcheck=\"false\"\n           class=\"ui-select-search input-xs\"\n           placeholder=\"{{active.length <= 0 ? placeholder : ''}}\"\n           role=\"combobox\">\n    " + optionsTemplate + "\n  </div>\n  "
	        }), 
	        __metadata('design:paramtypes', [core_1.ElementRef])
	    ], SelectComponent);
	    return SelectComponent;
	}());
	exports.SelectComponent = SelectComponent;
	var Behavior = (function () {
	    function Behavior(actor) {
	        this.optionsMap = new Map();
	        this.actor = actor;
	    }
	    Behavior.prototype.fillOptionsMap = function () {
	        var _this = this;
	        this.optionsMap.clear();
	        var startPos = 0;
	        this.actor.itemObjects
	            .map(function (item) {
	            startPos = item.fillChildrenHash(_this.optionsMap, startPos);
	        });
	    };
	    Behavior.prototype.ensureHighlightVisible = function (optionsMap) {
	        if (optionsMap === void 0) { optionsMap = void 0; }
	        var container = this.actor.element.nativeElement.querySelector('.ui-select-choices-content');
	        if (!container) {
	            return;
	        }
	        var choices = container.querySelectorAll('.ui-select-choices-row');
	        if (choices.length < 1) {
	            return;
	        }
	        var activeIndex = this.getActiveIndex(optionsMap);
	        if (activeIndex < 0) {
	            return;
	        }
	        var highlighted = choices[activeIndex];
	        if (!highlighted) {
	            return;
	        }
	        var posY = highlighted.offsetTop + highlighted.clientHeight - container.scrollTop;
	        var height = container.offsetHeight;
	        if (posY > height) {
	            container.scrollTop += posY - height;
	        }
	        else if (posY < highlighted.clientHeight) {
	            container.scrollTop -= highlighted.clientHeight - posY;
	        }
	    };
	    Behavior.prototype.getActiveIndex = function (optionsMap) {
	        if (optionsMap === void 0) { optionsMap = void 0; }
	        var ai = this.actor.options.indexOf(this.actor.activeOption);
	        if (ai < 0 && optionsMap !== void 0) {
	            ai = optionsMap.get(this.actor.activeOption.id);
	        }
	        return ai;
	    };
	    return Behavior;
	}());
	exports.Behavior = Behavior;
	var GenericBehavior = (function (_super) {
	    __extends(GenericBehavior, _super);
	    function GenericBehavior(actor) {
	        _super.call(this, actor);
	    }
	    GenericBehavior.prototype.first = function () {
	        this.actor.activeOption = this.actor.options[0];
	        _super.prototype.ensureHighlightVisible.call(this);
	    };
	    GenericBehavior.prototype.last = function () {
	        this.actor.activeOption = this.actor.options[this.actor.options.length - 1];
	        _super.prototype.ensureHighlightVisible.call(this);
	    };
	    GenericBehavior.prototype.prev = function () {
	        var index = this.actor.options.indexOf(this.actor.activeOption);
	        this.actor.activeOption = this.actor
	            .options[index - 1 < 0 ? this.actor.options.length - 1 : index - 1];
	        _super.prototype.ensureHighlightVisible.call(this);
	    };
	    GenericBehavior.prototype.next = function () {
	        var index = this.actor.options.indexOf(this.actor.activeOption);
	        this.actor.activeOption = this.actor
	            .options[index + 1 > this.actor.options.length - 1 ? 0 : index + 1];
	        _super.prototype.ensureHighlightVisible.call(this);
	    };
	    GenericBehavior.prototype.filter = function (query) {
	        var _this = this;
	        var options = this.actor.itemObjects
	            .filter(function (option) {
	            return select_pipes_1.stripTags(option.text).match(query) &&
	                (_this.actor.multiple === false ||
	                    (_this.actor.multiple === true && _this.actor.active.indexOf(option) < 0));
	        });
	        this.actor.options = options;
	        if (this.actor.options.length > 0) {
	            this.actor.activeOption = this.actor.options[0];
	            _super.prototype.ensureHighlightVisible.call(this);
	        }
	    };
	    return GenericBehavior;
	}(Behavior));
	exports.GenericBehavior = GenericBehavior;
	var ChildrenBehavior = (function (_super) {
	    __extends(ChildrenBehavior, _super);
	    function ChildrenBehavior(actor) {
	        _super.call(this, actor);
	    }
	    ChildrenBehavior.prototype.first = function () {
	        this.actor.activeOption = this.actor.options[0].children[0];
	        this.fillOptionsMap();
	        this.ensureHighlightVisible(this.optionsMap);
	    };
	    ChildrenBehavior.prototype.last = function () {
	        this.actor.activeOption =
	            this.actor
	                .options[this.actor.options.length - 1]
	                .children[this.actor.options[this.actor.options.length - 1].children.length - 1];
	        this.fillOptionsMap();
	        this.ensureHighlightVisible(this.optionsMap);
	    };
	    ChildrenBehavior.prototype.prev = function () {
	        var _this = this;
	        var indexParent = this.actor.options
	            .findIndex(function (option) { return _this.actor.activeOption.parent && _this.actor.activeOption.parent.id === option.id; });
	        var index = this.actor.options[indexParent].children
	            .findIndex(function (option) { return _this.actor.activeOption && _this.actor.activeOption.id === option.id; });
	        this.actor.activeOption = this.actor.options[indexParent].children[index - 1];
	        if (!this.actor.activeOption) {
	            if (this.actor.options[indexParent - 1]) {
	                this.actor.activeOption = this.actor
	                    .options[indexParent - 1]
	                    .children[this.actor.options[indexParent - 1].children.length - 1];
	            }
	        }
	        if (!this.actor.activeOption) {
	            this.last();
	        }
	        this.fillOptionsMap();
	        this.ensureHighlightVisible(this.optionsMap);
	    };
	    ChildrenBehavior.prototype.next = function () {
	        var _this = this;
	        var indexParent = this.actor.options
	            .findIndex(function (option) { return _this.actor.activeOption.parent && _this.actor.activeOption.parent.id === option.id; });
	        var index = this.actor.options[indexParent].children
	            .findIndex(function (option) { return _this.actor.activeOption && _this.actor.activeOption.id === option.id; });
	        this.actor.activeOption = this.actor.options[indexParent].children[index + 1];
	        if (!this.actor.activeOption) {
	            if (this.actor.options[indexParent + 1]) {
	                this.actor.activeOption = this.actor.options[indexParent + 1].children[0];
	            }
	        }
	        if (!this.actor.activeOption) {
	            this.first();
	        }
	        this.fillOptionsMap();
	        this.ensureHighlightVisible(this.optionsMap);
	    };
	    ChildrenBehavior.prototype.filter = function (query) {
	        var options = [];
	        var optionsMap = new Map();
	        var startPos = 0;
	        for (var _i = 0, _a = this.actor.itemObjects; _i < _a.length; _i++) {
	            var si = _a[_i];
	            var children = si.children.filter(function (option) { return query.test(option.text); });
	            startPos = si.fillChildrenHash(optionsMap, startPos);
	            if (children.length > 0) {
	                var newSi = si.getSimilar();
	                newSi.children = children;
	                options.push(newSi);
	            }
	        }
	        this.actor.options = options;
	        if (this.actor.options.length > 0) {
	            this.actor.activeOption = this.actor.options[0].children[0];
	            _super.prototype.ensureHighlightVisible.call(this, optionsMap);
	        }
	    };
	    return ChildrenBehavior;
	}(Behavior));
	exports.ChildrenBehavior = ChildrenBehavior;


/***/ }),
/* 341 */
/***/ (function(module, exports) {

	"use strict";
	var SelectItem = (function () {
	    function SelectItem(source) {
	        var _this = this;
	        if (typeof source === 'string') {
	            this.id = this.text = source;
	        }
	        if (typeof source === 'object') {
	            this.id = source.id || source.text;
	            this.text = source.text;
	            if (source.children && source.text) {
	                this.children = source.children.map(function (c) {
	                    var r = new SelectItem(c);
	                    r.parent = _this;
	                    return r;
	                });
	                this.text = source.text;
	            }
	        }
	    }
	    SelectItem.prototype.fillChildrenHash = function (optionsMap, startIndex) {
	        var i = startIndex;
	        this.children.map(function (child) {
	            optionsMap.set(child.id, i++);
	        });
	        return i;
	    };
	    SelectItem.prototype.hasChildren = function () {
	        return this.children && this.children.length > 0;
	    };
	    SelectItem.prototype.getSimilar = function () {
	        var r = new SelectItem(false);
	        r.id = this.id;
	        r.text = this.text;
	        r.parent = this.parent;
	        return r;
	    };
	    return SelectItem;
	}());
	exports.SelectItem = SelectItem;


/***/ }),
/* 342 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var __metadata = (this && this.__metadata) || function (k, v) {
	    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
	};
	var core_1 = __webpack_require__(2);
	var common_1 = __webpack_require__(343);
	var HighlightPipe = (function () {
	    function HighlightPipe() {
	    }
	    HighlightPipe.prototype.transform = function (value, args) {
	        if (args.length < 1) {
	            return value;
	        }
	        var query = args[0];
	        if (query) {
	            var tagRE = new RegExp('<[^<>]*>', 'ig');
	            // get ist of tags
	            var tagList = value.match(tagRE);
	            // Replace tags with token
	            var tmpValue = value.replace(tagRE, '$!$');
	            // Replace search words
	            value = tmpValue.replace(new RegExp(common_1.escapeRegexp(query), 'gi'), '<strong>$&</strong>');
	            // Reinsert HTML
	            for (var i = 0; value.indexOf('$!$') > -1; i++) {
	                value = value.replace('$!$', tagList[i]);
	            }
	        }
	        return value;
	    };
	    HighlightPipe = __decorate([
	        core_1.Pipe({ name: 'highlight' }), 
	        __metadata('design:paramtypes', [])
	    ], HighlightPipe);
	    return HighlightPipe;
	}());
	exports.HighlightPipe = HighlightPipe;
	function stripTags(input) {
	    var tags = /<\/?([a-z][a-z0-9]*)\b[^>]*>/gi;
	    var commentsAndPhpTags = /<!--[\s\S]*?-->|<\?(?:php)?[\s\S]*?\?>/gi;
	    return input.replace(commentsAndPhpTags, '').replace(tags, '');
	}
	exports.stripTags = stripTags;


/***/ }),
/* 343 */
/***/ (function(module, exports) {

	"use strict";
	function escapeRegexp(queryToEscape) {
	    return queryToEscape.replace(/([.?*+^$[\]\\(){}|-])/g, '\\$1');
	}
	exports.escapeRegexp = escapeRegexp;


/***/ }),
/* 344 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var __metadata = (this && this.__metadata) || function (k, v) {
	    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
	};
	var core_1 = __webpack_require__(2);
	var OffClickDirective = (function () {
	    function OffClickDirective() {
	    }
	    /* tslint:enable */
	    OffClickDirective.prototype.onClick = function ($event) {
	        $event.stopPropagation();
	    };
	    OffClickDirective.prototype.ngOnInit = function () {
	        var _this = this;
	        setTimeout(function () { document.addEventListener('click', _this.offClickHandler); }, 0);
	    };
	    OffClickDirective.prototype.ngOnDestroy = function () {
	        document.removeEventListener('click', this.offClickHandler);
	    };
	    __decorate([
	        core_1.Input('offClick'), 
	        __metadata('design:type', Object)
	    ], OffClickDirective.prototype, "offClickHandler", void 0);
	    __decorate([
	        core_1.HostListener('click', ['$event']), 
	        __metadata('design:type', Function), 
	        __metadata('design:paramtypes', [MouseEvent]), 
	        __metadata('design:returntype', void 0)
	    ], OffClickDirective.prototype, "onClick", null);
	    OffClickDirective = __decorate([
	        core_1.Directive({
	            selector: '[offClick]'
	        }), 
	        __metadata('design:paramtypes', [])
	    ], OffClickDirective);
	    return OffClickDirective;
	}());
	exports.OffClickDirective = OffClickDirective;


/***/ }),
/* 345 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	function __export(m) {
	    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
	}
	var accordion_1 = __webpack_require__(346);
	var alert_1 = __webpack_require__(351);
	var buttons_1 = __webpack_require__(353);
	var carousel_1 = __webpack_require__(356);
	var collapse_1 = __webpack_require__(349);
	var datepicker_1 = __webpack_require__(360);
	var dropdown_1 = __webpack_require__(471);
	var modal_1 = __webpack_require__(476);
	var pagination_1 = __webpack_require__(482);
	var progressbar_1 = __webpack_require__(485);
	var rating_1 = __webpack_require__(489);
	var tabs_1 = __webpack_require__(491);
	var timepicker_1 = __webpack_require__(496);
	var tooltip_1 = __webpack_require__(498);
	var typeahead_1 = __webpack_require__(502);
	var components_helper_service_1 = __webpack_require__(480);
	__export(__webpack_require__(346));
	__export(__webpack_require__(351));
	__export(__webpack_require__(353));
	__export(__webpack_require__(356));
	__export(__webpack_require__(349));
	__export(__webpack_require__(360));
	__export(__webpack_require__(476));
	__export(__webpack_require__(471));
	__export(__webpack_require__(482));
	__export(__webpack_require__(485));
	__export(__webpack_require__(489));
	__export(__webpack_require__(491));
	__export(__webpack_require__(496));
	__export(__webpack_require__(498));
	__export(__webpack_require__(502));
	__export(__webpack_require__(362));
	__export(__webpack_require__(494));
	__export(__webpack_require__(359));
	exports.BS_VIEW_PROVIDERS = [{ provide: components_helper_service_1.ComponentsHelper, useClass: components_helper_service_1.ComponentsHelper }];
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = {
	    directives: [
	        alert_1.AlertComponent,
	        accordion_1.ACCORDION_DIRECTIVES,
	        buttons_1.BUTTON_DIRECTIVES,
	        carousel_1.CAROUSEL_DIRECTIVES,
	        collapse_1.CollapseDirective,
	        datepicker_1.DATEPICKER_DIRECTIVES,
	        dropdown_1.DROPDOWN_DIRECTIVES,
	        modal_1.MODAL_DIRECTVES,
	        pagination_1.PAGINATION_DIRECTIVES,
	        progressbar_1.PROGRESSBAR_DIRECTIVES,
	        rating_1.RatingComponent,
	        tabs_1.TAB_DIRECTIVES,
	        timepicker_1.TimepickerComponent,
	        tooltip_1.TOOLTIP_DIRECTIVES,
	        typeahead_1.TYPEAHEAD_DIRECTIVES
	    ],
	    providers: [
	        components_helper_service_1.ComponentsHelper
	    ]
	};


/***/ }),
/* 346 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var accordion_component_1 = __webpack_require__(347);
	var accordion_group_component_1 = __webpack_require__(348);
	var accordion_component_2 = __webpack_require__(347);
	exports.AccordionComponent = accordion_component_2.AccordionComponent;
	var accordion_group_component_2 = __webpack_require__(348);
	exports.AccordionPanelComponent = accordion_group_component_2.AccordionPanelComponent;
	exports.ACCORDION_DIRECTIVES = [accordion_component_1.AccordionComponent, accordion_group_component_1.AccordionPanelComponent];


/***/ }),
/* 347 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var __metadata = (this && this.__metadata) || function (k, v) {
	    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
	};
	var core_1 = __webpack_require__(2);
	// todo: support template url
	var AccordionComponent = (function () {
	    function AccordionComponent() {
	        /* tslint:disable:no-unused-variable */
	        this.addClass = true;
	        /* tslint:enable:no-unused-variable */
	        this.groups = [];
	    }
	    AccordionComponent.prototype.closeOtherPanels = function (openGroup) {
	        if (!this.closeOthers) {
	            return;
	        }
	        this.groups.forEach(function (group) {
	            if (group !== openGroup) {
	                group.isOpen = false;
	            }
	        });
	    };
	    AccordionComponent.prototype.addGroup = function (group) {
	        this.groups.push(group);
	    };
	    AccordionComponent.prototype.removeGroup = function (group) {
	        var index = this.groups.indexOf(group);
	        if (index !== -1) {
	            this.groups.splice(index, 1);
	        }
	    };
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Boolean)
	    ], AccordionComponent.prototype, "closeOthers", void 0);
	    __decorate([
	        core_1.HostBinding('class.panel-group'), 
	        __metadata('design:type', Boolean)
	    ], AccordionComponent.prototype, "addClass", void 0);
	    AccordionComponent = __decorate([
	        core_1.Component({
	            selector: 'accordion',
	            template: "<ng-content></ng-content>"
	        }), 
	        __metadata('design:paramtypes', [])
	    ], AccordionComponent);
	    return AccordionComponent;
	}());
	exports.AccordionComponent = AccordionComponent;


/***/ }),
/* 348 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var __metadata = (this && this.__metadata) || function (k, v) {
	    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
	};
	var __param = (this && this.__param) || function (paramIndex, decorator) {
	    return function (target, key) { decorator(target, key, paramIndex); }
	};
	var core_1 = __webpack_require__(2);
	var common_1 = __webpack_require__(182);
	var collapse_1 = __webpack_require__(349);
	var accordion_component_1 = __webpack_require__(347);
	/* tslint:disable:component-selector-name */
	var AccordionPanelComponent = (function () {
	    function AccordionPanelComponent(accordion) {
	        this.accordion = accordion;
	    }
	    Object.defineProperty(AccordionPanelComponent.prototype, "isOpen", {
	        get: function () {
	            return this._isOpen;
	        },
	        set: function (value) {
	            this._isOpen = value;
	            if (value) {
	                this.accordion.closeOtherPanels(this);
	            }
	        },
	        enumerable: true,
	        configurable: true
	    });
	    AccordionPanelComponent.prototype.ngOnInit = function () {
	        this.panelClass = this.panelClass || 'panel-default';
	        this.accordion.addGroup(this);
	    };
	    AccordionPanelComponent.prototype.ngOnDestroy = function () {
	        this.accordion.removeGroup(this);
	    };
	    AccordionPanelComponent.prototype.toggleOpen = function (event) {
	        event.preventDefault();
	        if (!this.isDisabled) {
	            this.isOpen = !this.isOpen;
	        }
	    };
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', String)
	    ], AccordionPanelComponent.prototype, "heading", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', String)
	    ], AccordionPanelComponent.prototype, "panelClass", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Boolean)
	    ], AccordionPanelComponent.prototype, "isDisabled", void 0);
	    __decorate([
	        core_1.HostBinding('class.panel-open'),
	        core_1.Input(), 
	        __metadata('design:type', Boolean)
	    ], AccordionPanelComponent.prototype, "isOpen", null);
	    AccordionPanelComponent = __decorate([
	        core_1.Component({
	            selector: 'accordion-group, accordion-panel',
	            directives: [collapse_1.CollapseDirective, common_1.NgClass],
	            template: "\n    <div class=\"panel\" [ngClass]=\"panelClass\">\n      <div class=\"panel-heading\" (click)=\"toggleOpen($event)\">\n        <h4 class=\"panel-title\">\n          <a href tabindex=\"0\" class=\"accordion-toggle\">\n            <span *ngIf=\"heading\" [ngClass]=\"{'text-muted': isDisabled}\">{{heading}}</span>\n            <ng-content select=\"[accordion-heading]\"></ng-content>\n          </a>\n        </h4>\n      </div>\n      <div class=\"panel-collapse collapse\" [collapse]=\"!isOpen\">\n        <div class=\"panel-body\">\n          <ng-content></ng-content>\n        </div>\n      </div>\n    </div>\n  "
	        }),
	        __param(0, core_1.Inject(accordion_component_1.AccordionComponent)), 
	        __metadata('design:paramtypes', [accordion_component_1.AccordionComponent])
	    ], AccordionPanelComponent);
	    return AccordionPanelComponent;
	}());
	exports.AccordionPanelComponent = AccordionPanelComponent;


/***/ }),
/* 349 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var collapse_directive_1 = __webpack_require__(350);
	exports.CollapseDirective = collapse_directive_1.CollapseDirective;


/***/ }),
/* 350 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var __metadata = (this && this.__metadata) || function (k, v) {
	    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
	};
	// FIX: in order to update to rc.1 had to disable animation, sorry
	var core_1 = __webpack_require__(2);
	// import {AnimationBuilder} from '@angular/platform-browser/src/animate/animation_builder';
	// import {animation, style, animate, state, transition} from '@angular/core';
	/*@Directive({
	  selector: '[collapse]',
	  // templateUrl: 'app/panel.html',
	  // styleUrls: ['app/panel.css'],
	  animations: [
	    animation('active', [
	      state('void', style({ height: 0 })),
	      state('closed', style({ height: 0 })),
	      state('open', style({ height: '*' })),
	      transition('void => closed', [ animate(0) ]),
	      transition('closed => open', [ animate('350ms ease-out') ]),
	      transition('open => closed', [ animate('350ms ease-out') ])
	    ])
	  ]
	})*/
	// fix: replace with // '@angular/animate';
	// when https://github.com/angular/angular/issues/5984 will be fixed
	// TODO: remove ElementRef
	// TODO: add on change
	var CollapseDirective = (function () {
	    function CollapseDirective(/*_ab:AnimationBuilder, */ _el, _renderer) {
	        // shown
	        this.isExpanded = true;
	        // hidden
	        this.isCollapsed = false;
	        // stale state
	        this.isCollapse = true;
	        // animation state
	        this.isCollapsing = false;
	        // this._ab = _ab;
	        this._el = _el;
	        this._renderer = _renderer;
	    }
	    Object.defineProperty(CollapseDirective.prototype, "collapse", {
	        get: function () {
	            return this.isExpanded;
	        },
	        // @Input() private transitionDuration:number = 500; // Duration in ms
	        set: function (value) {
	            this.isExpanded = value;
	            this.toggle();
	        },
	        enumerable: true,
	        configurable: true
	    });
	    CollapseDirective.prototype.ngOnInit = function () {
	        // this.animation = this._ab.css();
	        // this.animation.setDuration(this.transitionDuration);
	    };
	    CollapseDirective.prototype.toggle = function () {
	        // this.open = !this.open;
	        if (this.isExpanded) {
	            this.hide();
	        }
	        else {
	            this.show();
	        }
	    };
	    CollapseDirective.prototype.hide = function () {
	        this.isCollapse = false;
	        this.isCollapsing = true;
	        this.isExpanded = false;
	        this.isCollapsed = true;
	        this.isCollapse = true;
	        this.isCollapsing = false;
	        /*  setTimeout(() => {
	              // this.height = '0';
	              // this.isCollapse = true;
	              // this.isCollapsing = false;
	              this.animation
	                .setFromStyles({
	                  height: this._el.nativeElement.scrollHeight + 'px'
	                })
	                .setToStyles({
	                  height: '0',
	                  overflow: 'hidden'
	                });
	    
	              this.animation.start(this._el.nativeElement)
	                .onComplete(() => {
	                  if (this._el.nativeElement.offsetHeight === 0) {
	                    this.display = 'none';
	                  }
	    
	                  this.isCollapse = true;
	                  this.isCollapsing = false;
	                });
	            }, 4);*/
	    };
	    CollapseDirective.prototype.show = function () {
	        this.isCollapse = false;
	        this.isCollapsing = true;
	        this.isExpanded = true;
	        this.isCollapsed = false;
	        this.display = '';
	        // this.height = 'auto';
	        this.isCollapse = true;
	        this.isCollapsing = false;
	        this._renderer.setElementStyle(this._el.nativeElement, 'overflow', 'visible');
	        this._renderer.setElementStyle(this._el.nativeElement, 'height', 'auto');
	        /*setTimeout(() => {
	            // this.height = 'auto';
	            // this.isCollapse = true;
	            // this.isCollapsing = false;
	            this.animation
	              .setFromStyles({
	                height: this._el.nativeElement.offsetHeight,
	                overflow: 'hidden'
	              })
	              .setToStyles({
	                height: this._el.nativeElement.scrollHeight + 'px'
	              });
	    
	            this.animation.start(this._el.nativeElement)
	              .onComplete(() => {
	                this.isCollapse = true;
	                this.isCollapsing = false;
	                this._renderer.setElementStyle(this._el.nativeElement, 'overflow', 'visible');
	                this._renderer.setElementStyle(this._el.nativeElement, 'height', 'auto');
	              });
	          }, 4);*/
	    };
	    __decorate([
	        core_1.HostBinding('style.display'), 
	        __metadata('design:type', String)
	    ], CollapseDirective.prototype, "display", void 0);
	    __decorate([
	        core_1.HostBinding('class.in'),
	        core_1.HostBinding('attr.aria-expanded'), 
	        __metadata('design:type', Boolean)
	    ], CollapseDirective.prototype, "isExpanded", void 0);
	    __decorate([
	        core_1.HostBinding('attr.aria-hidden'), 
	        __metadata('design:type', Boolean)
	    ], CollapseDirective.prototype, "isCollapsed", void 0);
	    __decorate([
	        core_1.HostBinding('class.collapse'), 
	        __metadata('design:type', Boolean)
	    ], CollapseDirective.prototype, "isCollapse", void 0);
	    __decorate([
	        core_1.HostBinding('class.collapsing'), 
	        __metadata('design:type', Boolean)
	    ], CollapseDirective.prototype, "isCollapsing", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Boolean), 
	        __metadata('design:paramtypes', [Boolean])
	    ], CollapseDirective.prototype, "collapse", null);
	    CollapseDirective = __decorate([
	        core_1.Directive({ selector: '[collapse]' }), 
	        __metadata('design:paramtypes', [core_1.ElementRef, core_1.Renderer])
	    ], CollapseDirective);
	    return CollapseDirective;
	}());
	exports.CollapseDirective = CollapseDirective;


/***/ }),
/* 351 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var alert_component_1 = __webpack_require__(352);
	exports.AlertComponent = alert_component_1.AlertComponent;


/***/ }),
/* 352 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var __metadata = (this && this.__metadata) || function (k, v) {
	    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
	};
	var core_1 = __webpack_require__(2);
	var common_1 = __webpack_require__(182);
	var ALERT_TEMPLATE = "\n  <div class=\"alert\" role=\"alert\" [ngClass]=\"classes\" *ngIf=\"!closed\">\n    <button *ngIf=\"dismissible\" type=\"button\" class=\"close\" (click)=\"onClose()\" (touch)=\"onClose()\">\n      <span aria-hidden=\"true\">&times;</span>\n      <span class=\"sr-only\">Close</span>\n    </button>\n    <ng-content></ng-content>\n  </div>\n  ";
	// TODO: templateUrl
	var AlertComponent = (function () {
	    function AlertComponent() {
	        this.type = 'warning';
	        this.close = new core_1.EventEmitter(false);
	        this.classes = [];
	    }
	    AlertComponent.prototype.ngOnInit = function () {
	        var _this = this;
	        this.classes[0] = "alert-" + this.type;
	        if (this.dismissible) {
	            this.classes[1] = 'alert-dismissible';
	        }
	        else {
	            this.classes.length = 1;
	        }
	        if (this.dismissOnTimeout) {
	            setTimeout(function () { return _this.onClose(); }, this.dismissOnTimeout);
	        }
	    };
	    // todo: mouse event + touch + pointer
	    AlertComponent.prototype.onClose = function () {
	        this.closed = true;
	        this.close.emit(this);
	    };
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', String)
	    ], AlertComponent.prototype, "type", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Boolean)
	    ], AlertComponent.prototype, "dismissible", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Number)
	    ], AlertComponent.prototype, "dismissOnTimeout", void 0);
	    __decorate([
	        core_1.Output(), 
	        __metadata('design:type', core_1.EventEmitter)
	    ], AlertComponent.prototype, "close", void 0);
	    AlertComponent = __decorate([
	        core_1.Component({
	            selector: 'alert',
	            directives: [common_1.NgIf, common_1.NgClass],
	            template: ALERT_TEMPLATE
	        }), 
	        __metadata('design:paramtypes', [])
	    ], AlertComponent);
	    return AlertComponent;
	}());
	exports.AlertComponent = AlertComponent;


/***/ }),
/* 353 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var button_checkbox_directive_1 = __webpack_require__(354);
	var button_radio_directive_1 = __webpack_require__(355);
	var button_checkbox_directive_2 = __webpack_require__(354);
	exports.ButtonCheckboxDirective = button_checkbox_directive_2.ButtonCheckboxDirective;
	var button_radio_directive_2 = __webpack_require__(355);
	exports.ButtonRadioDirective = button_radio_directive_2.ButtonRadioDirective;
	exports.BUTTON_DIRECTIVES = [button_checkbox_directive_1.ButtonCheckboxDirective, button_radio_directive_1.ButtonRadioDirective];


/***/ }),
/* 354 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var __metadata = (this && this.__metadata) || function (k, v) {
	    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
	};
	var __param = (this && this.__param) || function (paramIndex, decorator) {
	    return function (target, key) { decorator(target, key, paramIndex); }
	};
	var core_1 = __webpack_require__(2);
	var common_1 = __webpack_require__(182);
	var ButtonCheckboxDirective = (function () {
	    function ButtonCheckboxDirective(cd) {
	        this.state = false;
	        this.onChange = Function.prototype;
	        this.onTouched = Function.prototype;
	        this.cd = cd;
	        // hack !
	        cd.valueAccessor = this;
	    }
	    // view -> model
	    ButtonCheckboxDirective.prototype.onClick = function () {
	        this.toggle(!this.state);
	        this.cd.viewToModelUpdate(this.value);
	    };
	    ButtonCheckboxDirective.prototype.ngOnInit = function () {
	        this.toggle(this.trueValue === this.value);
	    };
	    Object.defineProperty(ButtonCheckboxDirective.prototype, "trueValue", {
	        get: function () {
	            return typeof this.btnCheckboxTrue !== 'undefined'
	                ? this.btnCheckboxTrue
	                : true;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(ButtonCheckboxDirective.prototype, "falseValue", {
	        get: function () {
	            return typeof this.btnCheckboxFalse !== 'undefined'
	                ? this.btnCheckboxFalse
	                : false;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    ButtonCheckboxDirective.prototype.toggle = function (state) {
	        this.state = state;
	        this.value = this.state ? this.trueValue : this.falseValue;
	    };
	    // ControlValueAccessor
	    // model -> view
	    ButtonCheckboxDirective.prototype.writeValue = function (value) {
	        this.state = this.trueValue === value;
	        this.value = value;
	    };
	    ButtonCheckboxDirective.prototype.registerOnChange = function (fn) {
	        this.onChange = fn;
	    };
	    ButtonCheckboxDirective.prototype.registerOnTouched = function (fn) {
	        this.onTouched = fn;
	    };
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Object)
	    ], ButtonCheckboxDirective.prototype, "btnCheckboxTrue", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Object)
	    ], ButtonCheckboxDirective.prototype, "btnCheckboxFalse", void 0);
	    __decorate([
	        core_1.HostBinding('class.active'), 
	        __metadata('design:type', Boolean)
	    ], ButtonCheckboxDirective.prototype, "state", void 0);
	    __decorate([
	        core_1.HostListener('click'), 
	        __metadata('design:type', Function), 
	        __metadata('design:paramtypes', []), 
	        __metadata('design:returntype', void 0)
	    ], ButtonCheckboxDirective.prototype, "onClick", null);
	    ButtonCheckboxDirective = __decorate([
	        core_1.Directive({ selector: '[btnCheckbox][ngModel]' }),
	        __param(0, core_1.Self()), 
	        __metadata('design:paramtypes', [common_1.NgModel])
	    ], ButtonCheckboxDirective);
	    return ButtonCheckboxDirective;
	}());
	exports.ButtonCheckboxDirective = ButtonCheckboxDirective;


/***/ }),
/* 355 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var __metadata = (this && this.__metadata) || function (k, v) {
	    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
	};
	var __param = (this && this.__param) || function (paramIndex, decorator) {
	    return function (target, key) { decorator(target, key, paramIndex); }
	};
	var core_1 = __webpack_require__(2);
	var common_1 = __webpack_require__(182);
	var ButtonRadioDirective = (function () {
	    function ButtonRadioDirective(cd, el) {
	        this.onChange = Function.prototype;
	        this.onTouched = Function.prototype;
	        // hack!
	        this.cd = cd;
	        this.el = el;
	        cd.valueAccessor = this;
	    }
	    Object.defineProperty(ButtonRadioDirective.prototype, "isActive", {
	        get: function () {
	            return this.btnRadio === this.value;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    ButtonRadioDirective.prototype.onClick = function () {
	        if (this.uncheckable && this.btnRadio === this.value) {
	            return this.cd.viewToModelUpdate(void 0);
	        }
	        this.cd.viewToModelUpdate(this.btnRadio);
	    };
	    ButtonRadioDirective.prototype.ngOnInit = function () {
	        this.uncheckable = typeof this.uncheckable !== 'undefined';
	    };
	    Object.defineProperty(ButtonRadioDirective.prototype, "value", {
	        // hack view model!
	        get: function () {
	            return this.cd.viewModel;
	        },
	        set: function (value) {
	            this.cd.viewModel = value;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    // ControlValueAccessor
	    // model -> view
	    ButtonRadioDirective.prototype.writeValue = function (value) {
	        this.value = value;
	    };
	    ButtonRadioDirective.prototype.registerOnChange = function (fn) {
	        this.onChange = fn;
	    };
	    ButtonRadioDirective.prototype.registerOnTouched = function (fn) {
	        this.onTouched = fn;
	    };
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', String)
	    ], ButtonRadioDirective.prototype, "btnRadio", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Boolean)
	    ], ButtonRadioDirective.prototype, "uncheckable", void 0);
	    __decorate([
	        core_1.HostBinding('class.active'), 
	        __metadata('design:type', Boolean)
	    ], ButtonRadioDirective.prototype, "isActive", null);
	    __decorate([
	        core_1.HostListener('click'), 
	        __metadata('design:type', Function), 
	        __metadata('design:paramtypes', []), 
	        __metadata('design:returntype', void 0)
	    ], ButtonRadioDirective.prototype, "onClick", null);
	    ButtonRadioDirective = __decorate([
	        core_1.Directive({ selector: '[btnRadio][ngModel]' }),
	        __param(0, core_1.Self()), 
	        __metadata('design:paramtypes', [common_1.NgModel, core_1.ElementRef])
	    ], ButtonRadioDirective);
	    return ButtonRadioDirective;
	}());
	exports.ButtonRadioDirective = ButtonRadioDirective;


/***/ }),
/* 356 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var slide_component_1 = __webpack_require__(357);
	var carousel_component_1 = __webpack_require__(358);
	var slide_component_2 = __webpack_require__(357);
	exports.SlideComponent = slide_component_2.SlideComponent;
	var carousel_component_2 = __webpack_require__(358);
	exports.CarouselComponent = carousel_component_2.CarouselComponent;
	exports.CAROUSEL_DIRECTIVES = [carousel_component_1.CarouselComponent, slide_component_1.SlideComponent];


/***/ }),
/* 357 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var __metadata = (this && this.__metadata) || function (k, v) {
	    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
	};
	var core_1 = __webpack_require__(2);
	var carousel_component_1 = __webpack_require__(358);
	var SlideComponent = (function () {
	    function SlideComponent(carousel) {
	        this.addClass = true;
	        this.carousel = carousel;
	    }
	    SlideComponent.prototype.ngOnInit = function () {
	        this.carousel.addSlide(this);
	    };
	    SlideComponent.prototype.ngOnDestroy = function () {
	        this.carousel.removeSlide(this);
	    };
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Number)
	    ], SlideComponent.prototype, "index", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Number)
	    ], SlideComponent.prototype, "direction", void 0);
	    __decorate([
	        core_1.HostBinding('class.active'),
	        core_1.Input(), 
	        __metadata('design:type', Boolean)
	    ], SlideComponent.prototype, "active", void 0);
	    __decorate([
	        core_1.HostBinding('class.item'),
	        core_1.HostBinding('class.carousel-item'), 
	        __metadata('design:type', Boolean)
	    ], SlideComponent.prototype, "addClass", void 0);
	    SlideComponent = __decorate([
	        core_1.Component({
	            selector: 'slide',
	            template: "\n    <div [class.active]=\"active\" class=\"item text-center\">\n      <ng-content></ng-content>\n    </div>\n  "
	        }), 
	        __metadata('design:paramtypes', [carousel_component_1.CarouselComponent])
	    ], SlideComponent);
	    return SlideComponent;
	}());
	exports.SlideComponent = SlideComponent;


/***/ }),
/* 358 */
/***/ (function(module, exports, __webpack_require__) {

	// todo: add animate
	"use strict";
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var __metadata = (this && this.__metadata) || function (k, v) {
	    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
	};
	var core_1 = __webpack_require__(2);
	var common_1 = __webpack_require__(182);
	var ng2_bootstrap_config_1 = __webpack_require__(359);
	(function (Direction) {
	    Direction[Direction["UNKNOWN"] = 0] = "UNKNOWN";
	    Direction[Direction["NEXT"] = 1] = "NEXT";
	    Direction[Direction["PREV"] = 2] = "PREV";
	})(exports.Direction || (exports.Direction = {}));
	var Direction = exports.Direction;
	var NAVIGATION = (_a = {},
	    _a[ng2_bootstrap_config_1.Ng2BootstrapTheme.BS4] = "\n    <a class=\"left carousel-control\" (click)=\"prev()\" *ngIf=\"slides.length\">\n      <span class=\"icon-prev\" aria-hidden=\"true\"></span>\n      <span class=\"sr-only\">Previous</span>\n    </a>\n    <a class=\"right carousel-control\" (click)=\"next()\" *ngIf=\"slides.length\">\n      <span class=\"icon-next\" aria-hidden=\"true\"></span>\n      <span class=\"sr-only\">Next</span>\n    </a>\n  ",
	    _a[ng2_bootstrap_config_1.Ng2BootstrapTheme.BS3] = "\n    <a class=\"left carousel-control\" (click)=\"prev()\" *ngIf=\"slides.length\">\n      <span class=\"glyphicon glyphicon-chevron-left\"></span>\n    </a>\n    <a class=\"right carousel-control\" (click)=\"next()\" *ngIf=\"slides.length\">\n      <span class=\"glyphicon glyphicon-chevron-right\"></span>\n    </a>\n  ",
	    _a
	);
	// todo:
	// (ng-swipe-right)="prev()" (ng-swipe-left)="next()"
	var CarouselComponent = (function () {
	    function CarouselComponent() {
	        this.slides = [];
	        this.destroyed = false;
	    }
	    Object.defineProperty(CarouselComponent.prototype, "interval", {
	        get: function () {
	            return this._interval;
	        },
	        set: function (value) {
	            this._interval = value;
	            this.restartTimer();
	        },
	        enumerable: true,
	        configurable: true
	    });
	    CarouselComponent.prototype.ngOnDestroy = function () {
	        this.destroyed = true;
	    };
	    CarouselComponent.prototype.select = function (nextSlide, direction) {
	        if (direction === void 0) { direction = Direction.UNKNOWN; }
	        var nextIndex = nextSlide.index;
	        if (direction === Direction.UNKNOWN) {
	            direction = nextIndex > this.getCurrentIndex()
	                ? Direction.NEXT
	                : Direction.PREV;
	        }
	        // Prevent this user-triggered transition from occurring if there is
	        // already one in progress
	        if (nextSlide && nextSlide !== this.currentSlide) {
	            this.goNext(nextSlide, direction);
	        }
	    };
	    CarouselComponent.prototype.play = function () {
	        if (!this.isPlaying) {
	            this.isPlaying = true;
	            this.restartTimer();
	        }
	    };
	    CarouselComponent.prototype.pause = function () {
	        if (!this.noPause) {
	            this.isPlaying = false;
	            this.resetTimer();
	        }
	    };
	    CarouselComponent.prototype.next = function () {
	        var newIndex = (this.getCurrentIndex() + 1) % this.slides.length;
	        if (newIndex === 0 && this.noWrap) {
	            this.pause();
	            return;
	        }
	        return this.select(this.getSlideByIndex(newIndex), Direction.NEXT);
	    };
	    CarouselComponent.prototype.prev = function () {
	        var newIndex = this.getCurrentIndex() - 1 < 0
	            ? this.slides.length - 1
	            : this.getCurrentIndex() - 1;
	        if (this.noWrap && newIndex === this.slides.length - 1) {
	            this.pause();
	            return;
	        }
	        return this.select(this.getSlideByIndex(newIndex), Direction.PREV);
	    };
	    CarouselComponent.prototype.addSlide = function (slide) {
	        slide.index = this.slides.length;
	        this.slides.push(slide);
	        if (this.slides.length === 1 || slide.active) {
	            this.select(this.slides[this.slides.length - 1]);
	            if (this.slides.length === 1) {
	                this.play();
	            }
	        }
	        else {
	            slide.active = false;
	        }
	    };
	    CarouselComponent.prototype.removeSlide = function (slide) {
	        this.slides.splice(slide.index, 1);
	        if (this.slides.length === 0) {
	            this.currentSlide = void 0;
	            return;
	        }
	        for (var i = 0; i < this.slides.length; i++) {
	            this.slides[i].index = i;
	        }
	    };
	    CarouselComponent.prototype.goNext = function (slide, direction) {
	        if (this.destroyed) {
	            return;
	        }
	        slide.direction = direction;
	        slide.active = true;
	        if (this.currentSlide) {
	            this.currentSlide.direction = direction;
	            this.currentSlide.active = false;
	        }
	        this.currentSlide = slide;
	        // every time you change slides, reset the timer
	        this.restartTimer();
	    };
	    CarouselComponent.prototype.getSlideByIndex = function (index) {
	        var len = this.slides.length;
	        for (var i = 0; i < len; ++i) {
	            if (this.slides[i].index === index) {
	                return this.slides[i];
	            }
	        }
	        return void 0;
	    };
	    CarouselComponent.prototype.getCurrentIndex = function () {
	        return !this.currentSlide ? 0 : this.currentSlide.index;
	    };
	    CarouselComponent.prototype.restartTimer = function () {
	        var _this = this;
	        this.resetTimer();
	        var interval = +this.interval;
	        if (!isNaN(interval) && interval > 0) {
	            this.currentInterval = setInterval(function () {
	                var nInterval = +_this.interval;
	                if (_this.isPlaying && !isNaN(_this.interval) && nInterval > 0 && _this.slides.length) {
	                    _this.next();
	                }
	                else {
	                    _this.pause();
	                }
	            }, interval);
	        }
	    };
	    CarouselComponent.prototype.resetTimer = function () {
	        if (this.currentInterval) {
	            clearInterval(this.currentInterval);
	            this.currentInterval = void 0;
	        }
	    };
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Boolean)
	    ], CarouselComponent.prototype, "noWrap", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Boolean)
	    ], CarouselComponent.prototype, "noPause", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Boolean)
	    ], CarouselComponent.prototype, "noTransition", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Number)
	    ], CarouselComponent.prototype, "interval", null);
	    CarouselComponent = __decorate([
	        core_1.Component({
	            selector: 'carousel',
	            directives: [common_1.NgFor],
	            template: "\n    <div (mouseenter)=\"pause()\" (mouseleave)=\"play()\" class=\"carousel slide\">\n      <ol class=\"carousel-indicators\" *ngIf=\"slides.length > 1\">\n         <li *ngFor=\"let slidez of slides\" [class.active]=\"slidez.active === true\" (click)=\"select(slidez)\"></li>\n      </ol>\n      <div class=\"carousel-inner\"><ng-content></ng-content></div>\n      " + NAVIGATION[ng2_bootstrap_config_1.Ng2BootstrapConfig.theme] + "\n    </div>\n  "
	        }), 
	        __metadata('design:paramtypes', [])
	    ], CarouselComponent);
	    return CarouselComponent;
	}());
	exports.CarouselComponent = CarouselComponent;
	var _a;


/***/ }),
/* 359 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var lang_1 = __webpack_require__(5);
	(function (Ng2BootstrapTheme) {
	    Ng2BootstrapTheme[Ng2BootstrapTheme["BS3"] = 1] = "BS3";
	    Ng2BootstrapTheme[Ng2BootstrapTheme["BS4"] = 2] = "BS4";
	})(exports.Ng2BootstrapTheme || (exports.Ng2BootstrapTheme = {}));
	var Ng2BootstrapTheme = exports.Ng2BootstrapTheme;
	var Ng2BootstrapConfig = (function () {
	    function Ng2BootstrapConfig() {
	    }
	    Object.defineProperty(Ng2BootstrapConfig, "theme", {
	        get: function () {
	            // hack as for now
	            if (lang_1.global && lang_1.global.__theme === 'bs4') {
	                return Ng2BootstrapTheme.BS4;
	            }
	            return (this._theme || Ng2BootstrapTheme.BS3);
	        },
	        set: function (v) {
	            this._theme = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    return Ng2BootstrapConfig;
	}());
	exports.Ng2BootstrapConfig = Ng2BootstrapConfig;


/***/ }),
/* 360 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	/*
	 todo: general:
	 1. Popup
	 2. Keyboard support
	 3. custom-class attribute support
	 4. date-disabled attribute support
	 5. template-url attribute support
	 */
	var datepicker_popup_component_1 = __webpack_require__(361);
	var datepicker_component_1 = __webpack_require__(363);
	var datepicker_popup_component_2 = __webpack_require__(361);
	exports.DatePickerPopupDirective = datepicker_popup_component_2.DatePickerPopupDirective;
	var datepicker_component_2 = __webpack_require__(363);
	exports.DatePickerComponent = datepicker_component_2.DatePickerComponent;
	exports.DATEPICKER_DIRECTIVES = [datepicker_component_1.DatePickerComponent, datepicker_popup_component_1.DatePickerPopupDirective];


/***/ }),
/* 361 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var __metadata = (this && this.__metadata) || function (k, v) {
	    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
	};
	var __param = (this && this.__param) || function (paramIndex, decorator) {
	    return function (target, key) { decorator(target, key, paramIndex); }
	};
	var core_1 = __webpack_require__(2);
	var common_1 = __webpack_require__(182);
	var position_1 = __webpack_require__(362);
	var datepicker_component_1 = __webpack_require__(363);
	// import {DatePickerInner} from './datepicker-inner';
	// import {DayPicker} from './daypicker';
	// import {MonthPicker} from './monthpicker';
	// import {YearPicker} from './yearpicker';
	var PopupOptions = (function () {
	    function PopupOptions(options) {
	        Object.assign(this, options);
	    }
	    return PopupOptions;
	}());
	var datePickerPopupConfig = {
	    datepickerPopup: 'YYYY-MM-dd',
	    currentText: 'Today',
	    clearText: 'Clear',
	    closeText: 'Done',
	    closeOnDateSelection: true,
	    showButtonBar: true,
	    onOpenFocus: true
	};
	var PopupContainerComponent = (function () {
	    function PopupContainerComponent(element, options) {
	        // false positive
	        /* tslint:disable:no-unused-variable */
	        this.showButtonBar = true;
	        this.update1 = new core_1.EventEmitter(false);
	        this.element = element;
	        Object.assign(this, options);
	        this.classMap = { 'in': false };
	        this.classMap[options.placement] = true;
	    }
	    PopupContainerComponent.prototype.onUpdate = function ($event) {
	        console.log('update', $event);
	        if ($event) {
	            if ($event.toString() !== '[object Date]') {
	                $event = new Date($event);
	            }
	            this.popupComp.activeDate = $event;
	        }
	    };
	    PopupContainerComponent.prototype.position = function (hostEl) {
	        this.display = 'block';
	        this.top = '0px';
	        this.left = '0px';
	        var p = position_1.positionService
	            .positionElements(hostEl.nativeElement, this.element.nativeElement.children[0], this.placement, false);
	        this.top = p.top + 'px';
	    };
	    PopupContainerComponent.prototype.getText = function (key) {
	        return this[key + 'Text'] || datePickerPopupConfig[key + 'Text'];
	    };
	    PopupContainerComponent.prototype.isDisabled = function () {
	        return false;
	    };
	    PopupContainerComponent = __decorate([
	        core_1.Component({
	            selector: 'popup-container',
	            events: ['update1'],
	            template: "\n    <ul class=\"dropdown-menu\"\n        style=\"display: block\"\n        [ngStyle]=\"{top: top, left: left, display: display}\"\n        [ngClass]=\"classMap\">\n        <li>\n             <datepicker (cupdate)=\"onUpdate($event)\" *ngIf=\"popupComp\" [(ngModel)]=\"popupComp.cd.model\" [show-weeks]=\"true\"></datepicker>\n        </li>\n        <li *ngIf=\"showButtonBar\" style=\"padding:10px 9px 2px\">\n            <span class=\"btn-group pull-left\">\n                 <button type=\"button\" class=\"btn btn-sm btn-info\" (click)=\"select('today')\" ng-disabled=\"isDisabled('today')\">{{ getText('current') }}</button>\n                 <button type=\"button\" class=\"btn btn-sm btn-danger\" (click)=\"select(null)\">{{ getText('clear') }}</button>\n            </span>\n            <button type=\"button\" class=\"btn btn-sm btn-success pull-right\" (click)=\"close()\">{{ getText('close') }}</button>\n        </li>\n    </ul>",
	            directives: [common_1.NgClass, common_1.NgStyle, datepicker_component_1.DatePickerComponent, common_1.FORM_DIRECTIVES, common_1.CORE_DIRECTIVES],
	            encapsulation: core_1.ViewEncapsulation.None
	        }), 
	        __metadata('design:paramtypes', [core_1.ElementRef, PopupOptions])
	    ], PopupContainerComponent);
	    return PopupContainerComponent;
	}());
	var DatePickerPopupDirective = (function () {
	    function DatePickerPopupDirective(cd, viewContainerRef, renderer, loader) {
	        this._isOpen = false;
	        this.placement = 'bottom';
	        this.cd = cd;
	        this.viewContainerRef = viewContainerRef;
	        this.renderer = renderer;
	        this.loader = loader;
	        this.activeDate = cd.model;
	    }
	    Object.defineProperty(DatePickerPopupDirective.prototype, "activeDate", {
	        get: function () {
	            return this._activeDate;
	        },
	        set: function (value) {
	            this._activeDate = value;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(DatePickerPopupDirective.prototype, "isOpen", {
	        get: function () {
	            return this._isOpen;
	        },
	        set: function (value) {
	            var _this = this;
	            var fn = function () {
	                _this._isOpen = value;
	            };
	            if (value === true) {
	                this.show(fn);
	            }
	            if (value === false) {
	                this.hide(fn);
	            }
	        },
	        enumerable: true,
	        configurable: true
	    });
	    DatePickerPopupDirective.prototype.hide = function (cb) {
	        if (this.popup) {
	            this.popup.then(function (componentRef) {
	                componentRef.destroy();
	                cb();
	                return componentRef;
	            });
	        }
	        else {
	            cb();
	        }
	    };
	    DatePickerPopupDirective.prototype.show = function (cb) {
	        var _this = this;
	        var options = new PopupOptions({
	            placement: this.placement
	        });
	        var binding = core_1.ReflectiveInjector.resolve([
	            core_1.provide(PopupOptions, { useValue: options })
	        ]);
	        this.popup = this.loader
	            .loadNextToLocation(PopupContainerComponent, this.viewContainerRef, binding)
	            .then(function (componentRef) {
	            componentRef.instance.position(_this.viewContainerRef);
	            componentRef.instance.popupComp = _this;
	            /*componentRef.instance.update1.observer({
	             next: (newVal) => {
	             setProperty(this.renderer, this.elementRef, 'value', newVal);
	             }
	             });*/
	            cb();
	            return componentRef;
	        });
	    };
	    DatePickerPopupDirective = __decorate([
	        core_1.Directive({
	            selector: '[datepickerPopup][ngModel]',
	            // prop -> datepickerPopup - format
	            properties: ['datepickerPopup', 'isOpen'] /*,
	             host: {'(cupdate)': 'onUpdate1($event)'}*/
	        }),
	        __param(0, core_1.Self()), 
	        __metadata('design:paramtypes', [common_1.NgModel, core_1.ViewContainerRef, core_1.Renderer, core_1.DynamicComponentLoader])
	    ], DatePickerPopupDirective);
	    return DatePickerPopupDirective;
	}());
	exports.DatePickerPopupDirective = DatePickerPopupDirective;


/***/ }),
/* 362 */
/***/ (function(module, exports) {

	"use strict";
	var PositionService = (function () {
	    function PositionService() {
	    }
	    /**
	     * Provides read-only equivalent of jQuery's position function:
	     * http://api.jquery.com/position/
	     */
	    PositionService.prototype.position = function (nativeEl) {
	        var elBCR = this.offset(nativeEl);
	        var offsetParentBCR = { top: 0, left: 0 };
	        var offsetParentEl = this.parentOffsetEl(nativeEl);
	        if (offsetParentEl !== this.document) {
	            offsetParentBCR = this.offset(offsetParentEl);
	            offsetParentBCR.top += offsetParentEl.clientTop - offsetParentEl.scrollTop;
	            offsetParentBCR.left += offsetParentEl.clientLeft - offsetParentEl.scrollLeft;
	        }
	        var boundingClientRect = nativeEl.getBoundingClientRect();
	        return {
	            width: boundingClientRect.width || nativeEl.offsetWidth,
	            height: boundingClientRect.height || nativeEl.offsetHeight,
	            top: elBCR.top - offsetParentBCR.top,
	            left: elBCR.left - offsetParentBCR.left
	        };
	    };
	    /**
	     * Provides read-only equivalent of jQuery's offset function:
	     * http://api.jquery.com/offset/
	     */
	    PositionService.prototype.offset = function (nativeEl) {
	        var boundingClientRect = nativeEl.getBoundingClientRect();
	        return {
	            width: boundingClientRect.width || nativeEl.offsetWidth,
	            height: boundingClientRect.height || nativeEl.offsetHeight,
	            top: boundingClientRect.top + (this.window.pageYOffset || this.document.documentElement.scrollTop),
	            left: boundingClientRect.left + (this.window.pageXOffset || this.document.documentElement.scrollLeft)
	        };
	    };
	    /**
	     * Provides coordinates for the targetEl in relation to hostEl
	     */
	    PositionService.prototype.positionElements = function (hostEl, targetEl, positionStr, appendToBody) {
	        var positionStrParts = positionStr.split('-');
	        var pos0 = positionStrParts[0];
	        var pos1 = positionStrParts[1] || 'center';
	        var hostElPos = appendToBody ?
	            this.offset(hostEl) :
	            this.position(hostEl);
	        var targetElWidth = targetEl.offsetWidth;
	        var targetElHeight = targetEl.offsetHeight;
	        var shiftWidth = {
	            center: function () {
	                return hostElPos.left + hostElPos.width / 2 - targetElWidth / 2;
	            },
	            left: function () {
	                return hostElPos.left;
	            },
	            right: function () {
	                return hostElPos.left + hostElPos.width;
	            }
	        };
	        var shiftHeight = {
	            center: function () {
	                return hostElPos.top + hostElPos.height / 2 - targetElHeight / 2;
	            },
	            top: function () {
	                return hostElPos.top;
	            },
	            bottom: function () {
	                return hostElPos.top + hostElPos.height;
	            }
	        };
	        var targetElPos;
	        switch (pos0) {
	            case 'right':
	                targetElPos = {
	                    top: shiftHeight[pos1](),
	                    left: shiftWidth[pos0]()
	                };
	                break;
	            case 'left':
	                targetElPos = {
	                    top: shiftHeight[pos1](),
	                    left: hostElPos.left - targetElWidth
	                };
	                break;
	            case 'bottom':
	                targetElPos = {
	                    top: shiftHeight[pos0](),
	                    left: shiftWidth[pos1]()
	                };
	                break;
	            default:
	                targetElPos = {
	                    top: hostElPos.top - targetElHeight,
	                    left: shiftWidth[pos1]()
	                };
	                break;
	        }
	        return targetElPos;
	    };
	    Object.defineProperty(PositionService.prototype, "window", {
	        get: function () {
	            return window;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(PositionService.prototype, "document", {
	        get: function () {
	            return window.document;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    PositionService.prototype.getStyle = function (nativeEl, cssProp) {
	        // IE
	        if (nativeEl.currentStyle) {
	            return nativeEl.currentStyle[cssProp];
	        }
	        if (this.window.getComputedStyle) {
	            return this.window.getComputedStyle(nativeEl)[cssProp];
	        }
	        // finally try and get inline style
	        return nativeEl.style[cssProp];
	    };
	    /**
	     * Checks if a given element is statically positioned
	     * @param nativeEl - raw DOM element
	     */
	    PositionService.prototype.isStaticPositioned = function (nativeEl) {
	        return (this.getStyle(nativeEl, 'position') || 'static') === 'static';
	    };
	    /**
	     * returns the closest, non-statically positioned parentOffset of a given
	     * element
	     * @param nativeEl
	     */
	    PositionService.prototype.parentOffsetEl = function (nativeEl) {
	        var offsetParent = nativeEl.offsetParent || this.document;
	        while (offsetParent && offsetParent !== this.document &&
	            this.isStaticPositioned(offsetParent)) {
	            offsetParent = offsetParent.offsetParent;
	        }
	        return offsetParent || this.document;
	    };
	    ;
	    return PositionService;
	}());
	exports.PositionService = PositionService;
	exports.positionService = new PositionService();


/***/ }),
/* 363 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var __metadata = (this && this.__metadata) || function (k, v) {
	    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
	};
	var __param = (this && this.__param) || function (paramIndex, decorator) {
	    return function (target, key) { decorator(target, key, paramIndex); }
	};
	var core_1 = __webpack_require__(2);
	var common_1 = __webpack_require__(182);
	var datepicker_inner_component_1 = __webpack_require__(364);
	var daypicker_component_1 = __webpack_require__(468);
	var monthpicker_component_1 = __webpack_require__(469);
	var yearpicker_component_1 = __webpack_require__(470);
	// import {DatePickerPopup} from './datepicker-popup';
	/* tslint:disable:component-selector-name component-selector-type */
	var DatePickerComponent = (function () {
	    function DatePickerComponent(cd) {
	        this.onChange = Function.prototype;
	        this.onTouched = Function.prototype;
	        this._now = new Date();
	        this.cd = cd;
	        // hack
	        cd.valueAccessor = this;
	    }
	    Object.defineProperty(DatePickerComponent.prototype, "activeDate", {
	        get: function () {
	            return this._activeDate || this._now;
	        },
	        set: function (value) {
	            this._activeDate = value;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    DatePickerComponent.prototype.onUpdate = function (event) {
	        this.writeValue(event);
	        this.cd.viewToModelUpdate(event);
	    };
	    // todo: support null value
	    DatePickerComponent.prototype.writeValue = function (value) {
	        // todo: fix something sends here new date all the time
	        // if (value) {
	        //  if (typeof value !== 'Date') {
	        //    value = new Date(value);
	        //  }
	        //
	        //  this.activeDate = value;
	        // }
	        if (value === this._activeDate) {
	            return;
	        }
	        if (value && value instanceof Date) {
	            this.activeDate = value;
	            return;
	        }
	        this.activeDate = value ? new Date(value) : void 0;
	    };
	    DatePickerComponent.prototype.registerOnChange = function (fn) { this.onChange = fn; };
	    DatePickerComponent.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', String)
	    ], DatePickerComponent.prototype, "datepickerMode", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Date)
	    ], DatePickerComponent.prototype, "initDate", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Date)
	    ], DatePickerComponent.prototype, "minDate", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Date)
	    ], DatePickerComponent.prototype, "maxDate", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', String)
	    ], DatePickerComponent.prototype, "minMode", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', String)
	    ], DatePickerComponent.prototype, "maxMode", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Boolean)
	    ], DatePickerComponent.prototype, "showWeeks", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', String)
	    ], DatePickerComponent.prototype, "formatDay", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', String)
	    ], DatePickerComponent.prototype, "formatMonth", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', String)
	    ], DatePickerComponent.prototype, "formatYear", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', String)
	    ], DatePickerComponent.prototype, "formatDayHeader", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', String)
	    ], DatePickerComponent.prototype, "formatDayTitle", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', String)
	    ], DatePickerComponent.prototype, "formatMonthTitle", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Number)
	    ], DatePickerComponent.prototype, "startingDay", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Number)
	    ], DatePickerComponent.prototype, "yearRange", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Boolean)
	    ], DatePickerComponent.prototype, "onlyCurrentMonth", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Boolean)
	    ], DatePickerComponent.prototype, "shortcutPropagation", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Array)
	    ], DatePickerComponent.prototype, "customClass", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Object)
	    ], DatePickerComponent.prototype, "dateDisabled", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Date)
	    ], DatePickerComponent.prototype, "activeDate", null);
	    DatePickerComponent = __decorate([
	        core_1.Component({
	            selector: 'datepicker[ngModel]',
	            template: "\n    <datepicker-inner [activeDate]=\"activeDate\"\n                      (update)=\"onUpdate($event)\"\n                      [datepickerMode]=\"datepickerMode\"\n                      [initDate]=\"initDate\"\n                      [minDate]=\"minDate\"\n                      [maxDate]=\"maxDate\"\n                      [minMode]=\"minMode\"\n                      [maxMode]=\"maxMode\"\n                      [showWeeks]=\"showWeeks\"\n                      [formatDay]=\"formatDay\"\n                      [formatMonth]=\"formatMonth\"\n                      [formatYear]=\"formatYear\"\n                      [formatDayHeader]=\"formatDayHeader\"\n                      [formatDayTitle]=\"formatDayTitle\"\n                      [formatMonthTitle]=\"formatMonthTitle\"\n                      [startingDay]=\"startingDay\"\n                      [yearRange]=\"yearRange\"\n                      [customClass]=\"customClass\"\n                      [dateDisabled]=\"dateDisabled\"\n                      [templateUrl]=\"templateUrl\"\n                      [onlyCurrentMonth]=\"onlyCurrentMonth\"\n                      [shortcutPropagation]=\"shortcutPropagation\">\n      <daypicker tabindex=\"0\"></daypicker>\n      <monthpicker tabindex=\"0\"></monthpicker>\n      <yearpicker tabindex=\"0\"></yearpicker>\n    </datepicker-inner>\n    ",
	            directives: [datepicker_inner_component_1.DatePickerInnerComponent, daypicker_component_1.DayPickerComponent, monthpicker_component_1.MonthPickerComponent, yearpicker_component_1.YearPickerComponent,
	                common_1.FORM_DIRECTIVES, common_1.CORE_DIRECTIVES]
	        }),
	        __param(0, core_1.Self()), 
	        __metadata('design:paramtypes', [common_1.NgModel])
	    ], DatePickerComponent);
	    return DatePickerComponent;
	}());
	exports.DatePickerComponent = DatePickerComponent;


/***/ }),
/* 364 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var __metadata = (this && this.__metadata) || function (k, v) {
	    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
	};
	var core_1 = __webpack_require__(2);
	var common_1 = __webpack_require__(182);
	var date_formatter_1 = __webpack_require__(365);
	var FORMAT_DAY = 'DD';
	var FORMAT_MONTH = 'MMMM';
	var FORMAT_YEAR = 'YYYY';
	var FORMAT_DAY_HEADER = 'dd';
	var FORMAT_DAY_TITLE = 'MMMM YYYY';
	var FORMAT_MONTH_TITLE = 'YYYY';
	var DATEPICKER_MODE = 'day';
	var MIN_MODE = 'day';
	var MAX_MODE = 'year';
	var SHOW_WEEKS = true;
	var ONLY_CURRENT_MONTH = false;
	var STARTING_DAY = 0;
	var YEAR_RANGE = 20;
	// const MIN_DATE:Date = void 0;
	// const MAX_DATE:Date = void 0;
	var SHORTCUT_PROPAGATION = false;
	// const DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
	/*
	 const KEYS = {
	 13: 'enter',
	 32: 'space',
	 33: 'pageup',
	 34: 'pagedown',
	 35: 'end',
	 36: 'home',
	 37: 'left',
	 38: 'up',
	 39: 'right',
	 40: 'down'
	 };
	 */
	var DatePickerInnerComponent = (function () {
	    function DatePickerInnerComponent() {
	        this.stepDay = {};
	        this.stepMonth = {};
	        this.stepYear = {};
	        this.modes = ['day', 'month', 'year'];
	        this.dateFormatter = new date_formatter_1.DateFormatter();
	        this.update = new core_1.EventEmitter(false);
	    }
	    Object.defineProperty(DatePickerInnerComponent.prototype, "activeDate", {
	        get: function () {
	            return this._activeDate;
	        },
	        set: function (value) {
	            this._activeDate = value;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    // todo: add formatter value to Date object
	    DatePickerInnerComponent.prototype.ngOnInit = function () {
	        this.formatDay = this.formatDay || FORMAT_DAY;
	        this.formatMonth = this.formatMonth || FORMAT_MONTH;
	        this.formatYear = this.formatYear || FORMAT_YEAR;
	        this.formatDayHeader = this.formatDayHeader || FORMAT_DAY_HEADER;
	        this.formatDayTitle = this.formatDayTitle || FORMAT_DAY_TITLE;
	        this.formatMonthTitle = this.formatMonthTitle || FORMAT_MONTH_TITLE;
	        this.showWeeks = (this.showWeeks === undefined
	            ? SHOW_WEEKS
	            : this.showWeeks);
	        this.onlyCurrentMonth = (this.onlyCurrentMonth === undefined
	            ? ONLY_CURRENT_MONTH
	            : this.onlyCurrentMonth);
	        this.startingDay = this.startingDay || STARTING_DAY;
	        this.yearRange = this.yearRange || YEAR_RANGE;
	        this.shortcutPropagation = this.shortcutPropagation || SHORTCUT_PROPAGATION;
	        this.datepickerMode = this.datepickerMode || DATEPICKER_MODE;
	        this.minMode = this.minMode || MIN_MODE;
	        this.maxMode = this.maxMode || MAX_MODE;
	        // todo: use date for unique value
	        this.uniqueId = 'datepicker-' + '-' + Math.floor(Math.random() * 10000);
	        if (this.initDate) {
	            this.activeDate = this.initDate;
	            this.selectedDate = new Date(this.activeDate.valueOf());
	            this.update.emit(this.activeDate);
	        }
	        else if (this.activeDate === undefined) {
	            this.activeDate = new Date();
	        }
	    };
	    // this.refreshView should be called here to reflect the changes on the fly
	    DatePickerInnerComponent.prototype.ngOnChanges = function () {
	        this.refreshView();
	    };
	    DatePickerInnerComponent.prototype.setCompareHandler = function (handler, type) {
	        if (type === 'day') {
	            this.compareHandlerDay = handler;
	        }
	        if (type === 'month') {
	            this.compareHandlerMonth = handler;
	        }
	        if (type === 'year') {
	            this.compareHandlerYear = handler;
	        }
	    };
	    DatePickerInnerComponent.prototype.compare = function (date1, date2) {
	        if (date1 === undefined || date2 === undefined) {
	            return undefined;
	        }
	        if (this.datepickerMode === 'day' && this.compareHandlerDay) {
	            return this.compareHandlerDay(date1, date2);
	        }
	        if (this.datepickerMode === 'month' && this.compareHandlerMonth) {
	            return this.compareHandlerMonth(date1, date2);
	        }
	        if (this.datepickerMode === 'year' && this.compareHandlerYear) {
	            return this.compareHandlerYear(date1, date2);
	        }
	        return void 0;
	    };
	    DatePickerInnerComponent.prototype.setRefreshViewHandler = function (handler, type) {
	        if (type === 'day') {
	            this.refreshViewHandlerDay = handler;
	        }
	        if (type === 'month') {
	            this.refreshViewHandlerMonth = handler;
	        }
	        if (type === 'year') {
	            this.refreshViewHandlerYear = handler;
	        }
	    };
	    DatePickerInnerComponent.prototype.refreshView = function () {
	        if (this.datepickerMode === 'day' && this.refreshViewHandlerDay) {
	            this.refreshViewHandlerDay();
	        }
	        if (this.datepickerMode === 'month' && this.refreshViewHandlerMonth) {
	            this.refreshViewHandlerMonth();
	        }
	        if (this.datepickerMode === 'year' && this.refreshViewHandlerYear) {
	            this.refreshViewHandlerYear();
	        }
	    };
	    DatePickerInnerComponent.prototype.dateFilter = function (date, format) {
	        return this.dateFormatter.format(date, format);
	    };
	    DatePickerInnerComponent.prototype.isActive = function (dateObject) {
	        if (this.compare(dateObject.date, this.activeDate) === 0) {
	            this.activeDateId = dateObject.uid;
	            return true;
	        }
	        return false;
	    };
	    DatePickerInnerComponent.prototype.createDateObject = function (date, format) {
	        var dateObject = {};
	        dateObject.date = new Date(date.getFullYear(), date.getMonth(), date.getDate());
	        dateObject.label = this.dateFilter(date, format);
	        dateObject.selected = this.compare(date, this.selectedDate) === 0;
	        dateObject.disabled = this.isDisabled(date);
	        dateObject.current = this.compare(date, new Date()) === 0;
	        dateObject.customClass = this.getCustomClassForDate(dateObject.date);
	        return dateObject;
	    };
	    DatePickerInnerComponent.prototype.split = function (arr, size) {
	        var arrays = [];
	        while (arr.length > 0) {
	            arrays.push(arr.splice(0, size));
	        }
	        return arrays;
	    };
	    // Fix a hard-reproducible bug with timezones
	    // The bug depends on OS, browser, current timezone and current date
	    // i.e.
	    // var date = new Date(2014, 0, 1);
	    // console.log(date.getFullYear(), date.getMonth(), date.getDate(),
	    // date.getHours()); can result in "2013 11 31 23" because of the bug.
	    DatePickerInnerComponent.prototype.fixTimeZone = function (date) {
	        var hours = date.getHours();
	        return new Date(date.getFullYear(), date.getMonth(), date.getDate(), hours === 23 ? hours + 2 : 0);
	    };
	    DatePickerInnerComponent.prototype.select = function (date) {
	        if (this.datepickerMode === this.minMode) {
	            if (!this.activeDate) {
	                this.activeDate = new Date(0, 0, 0, 0, 0, 0, 0);
	            }
	            this.activeDate = new Date(date.getFullYear(), date.getMonth(), date.getDate());
	        }
	        else {
	            this.activeDate = date;
	            this.datepickerMode = this.modes[this.modes.indexOf(this.datepickerMode) - 1];
	        }
	        this.selectedDate = new Date(this.activeDate.valueOf());
	        this.update.emit(this.activeDate);
	        this.refreshView();
	    };
	    DatePickerInnerComponent.prototype.move = function (direction) {
	        var expectedStep;
	        if (this.datepickerMode === 'day') {
	            expectedStep = this.stepDay;
	        }
	        if (this.datepickerMode === 'month') {
	            expectedStep = this.stepMonth;
	        }
	        if (this.datepickerMode === 'year') {
	            expectedStep = this.stepYear;
	        }
	        if (expectedStep) {
	            var year = this.activeDate.getFullYear() + direction * (expectedStep.years || 0);
	            var month = this.activeDate.getMonth() + direction * (expectedStep.months || 0);
	            this.activeDate = new Date(year, month, 1);
	            this.refreshView();
	        }
	    };
	    DatePickerInnerComponent.prototype.toggleMode = function (direction) {
	        direction = direction || 1;
	        if ((this.datepickerMode === this.maxMode && direction === 1) ||
	            (this.datepickerMode === this.minMode && direction === -1)) {
	            return;
	        }
	        this.datepickerMode = this.modes[this.modes.indexOf(this.datepickerMode) + direction];
	        this.refreshView();
	    };
	    DatePickerInnerComponent.prototype.getCustomClassForDate = function (date) {
	        var _this = this;
	        if (!this.customClass) {
	            return '';
	        }
	        // todo: build a hash of custom classes, it will work faster
	        var customClassObject = this.customClass
	            .find(function (customClass) {
	            return customClass.date.valueOf() === date.valueOf() &&
	                customClass.mode === _this.datepickerMode;
	        }, this);
	        return customClassObject === undefined ? '' : customClassObject.clazz;
	    };
	    DatePickerInnerComponent.prototype.isDisabled = function (date) {
	        // todo: implement dateDisabled attribute
	        return ((this.minDate && this.compare(date, this.minDate) < 0) ||
	            (this.maxDate && this.compare(date, this.maxDate) > 0));
	    };
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', String)
	    ], DatePickerInnerComponent.prototype, "datepickerMode", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Number)
	    ], DatePickerInnerComponent.prototype, "startingDay", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Number)
	    ], DatePickerInnerComponent.prototype, "yearRange", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Date)
	    ], DatePickerInnerComponent.prototype, "minDate", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Date)
	    ], DatePickerInnerComponent.prototype, "maxDate", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', String)
	    ], DatePickerInnerComponent.prototype, "minMode", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', String)
	    ], DatePickerInnerComponent.prototype, "maxMode", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Boolean)
	    ], DatePickerInnerComponent.prototype, "showWeeks", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', String)
	    ], DatePickerInnerComponent.prototype, "formatDay", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', String)
	    ], DatePickerInnerComponent.prototype, "formatMonth", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', String)
	    ], DatePickerInnerComponent.prototype, "formatYear", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', String)
	    ], DatePickerInnerComponent.prototype, "formatDayHeader", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', String)
	    ], DatePickerInnerComponent.prototype, "formatDayTitle", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', String)
	    ], DatePickerInnerComponent.prototype, "formatMonthTitle", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Boolean)
	    ], DatePickerInnerComponent.prototype, "onlyCurrentMonth", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Boolean)
	    ], DatePickerInnerComponent.prototype, "shortcutPropagation", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Array)
	    ], DatePickerInnerComponent.prototype, "customClass", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Object)
	    ], DatePickerInnerComponent.prototype, "dateDisabled", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Date)
	    ], DatePickerInnerComponent.prototype, "initDate", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Date)
	    ], DatePickerInnerComponent.prototype, "activeDate", null);
	    DatePickerInnerComponent = __decorate([
	        core_1.Component({
	            selector: 'datepicker-inner',
	            events: ['update'],
	            template: "\n    <div *ngIf=\"datepickerMode\" class=\"well well-sm bg-faded p-a card\" role=\"application\" ><!--&lt;!&ndash;ng-keydown=\"keydown($event)\"&ndash;&gt;-->\n      <ng-content></ng-content>\n    </div>\n  ",
	            directives: [common_1.FORM_DIRECTIVES, common_1.CORE_DIRECTIVES, common_1.NgClass, common_1.NgModel]
	        }), 
	        __metadata('design:paramtypes', [])
	    ], DatePickerInnerComponent);
	    return DatePickerInnerComponent;
	}());
	exports.DatePickerInnerComponent = DatePickerInnerComponent;


/***/ }),
/* 365 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var moment = __webpack_require__(366);
	var DateFormatter = (function () {
	    function DateFormatter() {
	    }
	    DateFormatter.prototype.format = function (date, format) {
	        return moment(date.getTime()).format(format);
	    };
	    return DateFormatter;
	}());
	exports.DateFormatter = DateFormatter;


/***/ }),
/* 366 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {//! moment.js
	//! version : 2.13.0
	//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
	//! license : MIT
	//! momentjs.com

	;(function (global, factory) {
	     true ? module.exports = factory() :
	    typeof define === 'function' && define.amd ? define(factory) :
	    global.moment = factory()
	}(this, function () { 'use strict';

	    var hookCallback;

	    function utils_hooks__hooks () {
	        return hookCallback.apply(null, arguments);
	    }

	    // This is done to register the method called with moment()
	    // without creating circular dependencies.
	    function setHookCallback (callback) {
	        hookCallback = callback;
	    }

	    function isArray(input) {
	        return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';
	    }

	    function isDate(input) {
	        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';
	    }

	    function map(arr, fn) {
	        var res = [], i;
	        for (i = 0; i < arr.length; ++i) {
	            res.push(fn(arr[i], i));
	        }
	        return res;
	    }

	    function hasOwnProp(a, b) {
	        return Object.prototype.hasOwnProperty.call(a, b);
	    }

	    function extend(a, b) {
	        for (var i in b) {
	            if (hasOwnProp(b, i)) {
	                a[i] = b[i];
	            }
	        }

	        if (hasOwnProp(b, 'toString')) {
	            a.toString = b.toString;
	        }

	        if (hasOwnProp(b, 'valueOf')) {
	            a.valueOf = b.valueOf;
	        }

	        return a;
	    }

	    function create_utc__createUTC (input, format, locale, strict) {
	        return createLocalOrUTC(input, format, locale, strict, true).utc();
	    }

	    function defaultParsingFlags() {
	        // We need to deep clone this object.
	        return {
	            empty           : false,
	            unusedTokens    : [],
	            unusedInput     : [],
	            overflow        : -2,
	            charsLeftOver   : 0,
	            nullInput       : false,
	            invalidMonth    : null,
	            invalidFormat   : false,
	            userInvalidated : false,
	            iso             : false,
	            parsedDateParts : [],
	            meridiem        : null
	        };
	    }

	    function getParsingFlags(m) {
	        if (m._pf == null) {
	            m._pf = defaultParsingFlags();
	        }
	        return m._pf;
	    }

	    var some;
	    if (Array.prototype.some) {
	        some = Array.prototype.some;
	    } else {
	        some = function (fun) {
	            var t = Object(this);
	            var len = t.length >>> 0;

	            for (var i = 0; i < len; i++) {
	                if (i in t && fun.call(this, t[i], i, t)) {
	                    return true;
	                }
	            }

	            return false;
	        };
	    }

	    function valid__isValid(m) {
	        if (m._isValid == null) {
	            var flags = getParsingFlags(m);
	            var parsedParts = some.call(flags.parsedDateParts, function (i) {
	                return i != null;
	            });
	            m._isValid = !isNaN(m._d.getTime()) &&
	                flags.overflow < 0 &&
	                !flags.empty &&
	                !flags.invalidMonth &&
	                !flags.invalidWeekday &&
	                !flags.nullInput &&
	                !flags.invalidFormat &&
	                !flags.userInvalidated &&
	                (!flags.meridiem || (flags.meridiem && parsedParts));

	            if (m._strict) {
	                m._isValid = m._isValid &&
	                    flags.charsLeftOver === 0 &&
	                    flags.unusedTokens.length === 0 &&
	                    flags.bigHour === undefined;
	            }
	        }
	        return m._isValid;
	    }

	    function valid__createInvalid (flags) {
	        var m = create_utc__createUTC(NaN);
	        if (flags != null) {
	            extend(getParsingFlags(m), flags);
	        }
	        else {
	            getParsingFlags(m).userInvalidated = true;
	        }

	        return m;
	    }

	    function isUndefined(input) {
	        return input === void 0;
	    }

	    // Plugins that add properties should also add the key here (null value),
	    // so we can properly clone ourselves.
	    var momentProperties = utils_hooks__hooks.momentProperties = [];

	    function copyConfig(to, from) {
	        var i, prop, val;

	        if (!isUndefined(from._isAMomentObject)) {
	            to._isAMomentObject = from._isAMomentObject;
	        }
	        if (!isUndefined(from._i)) {
	            to._i = from._i;
	        }
	        if (!isUndefined(from._f)) {
	            to._f = from._f;
	        }
	        if (!isUndefined(from._l)) {
	            to._l = from._l;
	        }
	        if (!isUndefined(from._strict)) {
	            to._strict = from._strict;
	        }
	        if (!isUndefined(from._tzm)) {
	            to._tzm = from._tzm;
	        }
	        if (!isUndefined(from._isUTC)) {
	            to._isUTC = from._isUTC;
	        }
	        if (!isUndefined(from._offset)) {
	            to._offset = from._offset;
	        }
	        if (!isUndefined(from._pf)) {
	            to._pf = getParsingFlags(from);
	        }
	        if (!isUndefined(from._locale)) {
	            to._locale = from._locale;
	        }

	        if (momentProperties.length > 0) {
	            for (i in momentProperties) {
	                prop = momentProperties[i];
	                val = from[prop];
	                if (!isUndefined(val)) {
	                    to[prop] = val;
	                }
	            }
	        }

	        return to;
	    }

	    var updateInProgress = false;

	    // Moment prototype object
	    function Moment(config) {
	        copyConfig(this, config);
	        this._d = new Date(config._d != null ? config._d.getTime() : NaN);
	        // Prevent infinite loop in case updateOffset creates new moment
	        // objects.
	        if (updateInProgress === false) {
	            updateInProgress = true;
	            utils_hooks__hooks.updateOffset(this);
	            updateInProgress = false;
	        }
	    }

	    function isMoment (obj) {
	        return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);
	    }

	    function absFloor (number) {
	        if (number < 0) {
	            return Math.ceil(number);
	        } else {
	            return Math.floor(number);
	        }
	    }

	    function toInt(argumentForCoercion) {
	        var coercedNumber = +argumentForCoercion,
	            value = 0;

	        if (coercedNumber !== 0 && isFinite(coercedNumber)) {
	            value = absFloor(coercedNumber);
	        }

	        return value;
	    }

	    // compare two arrays, return the number of differences
	    function compareArrays(array1, array2, dontConvert) {
	        var len = Math.min(array1.length, array2.length),
	            lengthDiff = Math.abs(array1.length - array2.length),
	            diffs = 0,
	            i;
	        for (i = 0; i < len; i++) {
	            if ((dontConvert && array1[i] !== array2[i]) ||
	                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {
	                diffs++;
	            }
	        }
	        return diffs + lengthDiff;
	    }

	    function warn(msg) {
	        if (utils_hooks__hooks.suppressDeprecationWarnings === false &&
	                (typeof console !==  'undefined') && console.warn) {
	            console.warn('Deprecation warning: ' + msg);
	        }
	    }

	    function deprecate(msg, fn) {
	        var firstTime = true;

	        return extend(function () {
	            if (utils_hooks__hooks.deprecationHandler != null) {
	                utils_hooks__hooks.deprecationHandler(null, msg);
	            }
	            if (firstTime) {
	                warn(msg + '\nArguments: ' + Array.prototype.slice.call(arguments).join(', ') + '\n' + (new Error()).stack);
	                firstTime = false;
	            }
	            return fn.apply(this, arguments);
	        }, fn);
	    }

	    var deprecations = {};

	    function deprecateSimple(name, msg) {
	        if (utils_hooks__hooks.deprecationHandler != null) {
	            utils_hooks__hooks.deprecationHandler(name, msg);
	        }
	        if (!deprecations[name]) {
	            warn(msg);
	            deprecations[name] = true;
	        }
	    }

	    utils_hooks__hooks.suppressDeprecationWarnings = false;
	    utils_hooks__hooks.deprecationHandler = null;

	    function isFunction(input) {
	        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';
	    }

	    function isObject(input) {
	        return Object.prototype.toString.call(input) === '[object Object]';
	    }

	    function locale_set__set (config) {
	        var prop, i;
	        for (i in config) {
	            prop = config[i];
	            if (isFunction(prop)) {
	                this[i] = prop;
	            } else {
	                this['_' + i] = prop;
	            }
	        }
	        this._config = config;
	        // Lenient ordinal parsing accepts just a number in addition to
	        // number + (possibly) stuff coming from _ordinalParseLenient.
	        this._ordinalParseLenient = new RegExp(this._ordinalParse.source + '|' + (/\d{1,2}/).source);
	    }

	    function mergeConfigs(parentConfig, childConfig) {
	        var res = extend({}, parentConfig), prop;
	        for (prop in childConfig) {
	            if (hasOwnProp(childConfig, prop)) {
	                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {
	                    res[prop] = {};
	                    extend(res[prop], parentConfig[prop]);
	                    extend(res[prop], childConfig[prop]);
	                } else if (childConfig[prop] != null) {
	                    res[prop] = childConfig[prop];
	                } else {
	                    delete res[prop];
	                }
	            }
	        }
	        return res;
	    }

	    function Locale(config) {
	        if (config != null) {
	            this.set(config);
	        }
	    }

	    var keys;

	    if (Object.keys) {
	        keys = Object.keys;
	    } else {
	        keys = function (obj) {
	            var i, res = [];
	            for (i in obj) {
	                if (hasOwnProp(obj, i)) {
	                    res.push(i);
	                }
	            }
	            return res;
	        };
	    }

	    // internal storage for locale config files
	    var locales = {};
	    var globalLocale;

	    function normalizeLocale(key) {
	        return key ? key.toLowerCase().replace('_', '-') : key;
	    }

	    // pick the locale from the array
	    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
	    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
	    function chooseLocale(names) {
	        var i = 0, j, next, locale, split;

	        while (i < names.length) {
	            split = normalizeLocale(names[i]).split('-');
	            j = split.length;
	            next = normalizeLocale(names[i + 1]);
	            next = next ? next.split('-') : null;
	            while (j > 0) {
	                locale = loadLocale(split.slice(0, j).join('-'));
	                if (locale) {
	                    return locale;
	                }
	                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {
	                    //the next array item is better than a shallower substring of this one
	                    break;
	                }
	                j--;
	            }
	            i++;
	        }
	        return null;
	    }

	    function loadLocale(name) {
	        var oldLocale = null;
	        // TODO: Find a better way to register and load all the locales in Node
	        if (!locales[name] && (typeof module !== 'undefined') &&
	                module && module.exports) {
	            try {
	                oldLocale = globalLocale._abbr;
	                __webpack_require__(367)("./" + name);
	                // because defineLocale currently also sets the global locale, we
	                // want to undo that for lazy loaded locales
	                locale_locales__getSetGlobalLocale(oldLocale);
	            } catch (e) { }
	        }
	        return locales[name];
	    }

	    // This function will load locale and then set the global locale.  If
	    // no arguments are passed in, it will simply return the current global
	    // locale key.
	    function locale_locales__getSetGlobalLocale (key, values) {
	        var data;
	        if (key) {
	            if (isUndefined(values)) {
	                data = locale_locales__getLocale(key);
	            }
	            else {
	                data = defineLocale(key, values);
	            }

	            if (data) {
	                // moment.duration._locale = moment._locale = data;
	                globalLocale = data;
	            }
	        }

	        return globalLocale._abbr;
	    }

	    function defineLocale (name, config) {
	        if (config !== null) {
	            config.abbr = name;
	            if (locales[name] != null) {
	                deprecateSimple('defineLocaleOverride',
	                        'use moment.updateLocale(localeName, config) to change ' +
	                        'an existing locale. moment.defineLocale(localeName, ' +
	                        'config) should only be used for creating a new locale');
	                config = mergeConfigs(locales[name]._config, config);
	            } else if (config.parentLocale != null) {
	                if (locales[config.parentLocale] != null) {
	                    config = mergeConfigs(locales[config.parentLocale]._config, config);
	                } else {
	                    // treat as if there is no base config
	                    deprecateSimple('parentLocaleUndefined',
	                            'specified parentLocale is not defined yet');
	                }
	            }
	            locales[name] = new Locale(config);

	            // backwards compat for now: also set the locale
	            locale_locales__getSetGlobalLocale(name);

	            return locales[name];
	        } else {
	            // useful for testing
	            delete locales[name];
	            return null;
	        }
	    }

	    function updateLocale(name, config) {
	        if (config != null) {
	            var locale;
	            if (locales[name] != null) {
	                config = mergeConfigs(locales[name]._config, config);
	            }
	            locale = new Locale(config);
	            locale.parentLocale = locales[name];
	            locales[name] = locale;

	            // backwards compat for now: also set the locale
	            locale_locales__getSetGlobalLocale(name);
	        } else {
	            // pass null for config to unupdate, useful for tests
	            if (locales[name] != null) {
	                if (locales[name].parentLocale != null) {
	                    locales[name] = locales[name].parentLocale;
	                } else if (locales[name] != null) {
	                    delete locales[name];
	                }
	            }
	        }
	        return locales[name];
	    }

	    // returns locale data
	    function locale_locales__getLocale (key) {
	        var locale;

	        if (key && key._locale && key._locale._abbr) {
	            key = key._locale._abbr;
	        }

	        if (!key) {
	            return globalLocale;
	        }

	        if (!isArray(key)) {
	            //short-circuit everything else
	            locale = loadLocale(key);
	            if (locale) {
	                return locale;
	            }
	            key = [key];
	        }

	        return chooseLocale(key);
	    }

	    function locale_locales__listLocales() {
	        return keys(locales);
	    }

	    var aliases = {};

	    function addUnitAlias (unit, shorthand) {
	        var lowerCase = unit.toLowerCase();
	        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;
	    }

	    function normalizeUnits(units) {
	        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;
	    }

	    function normalizeObjectUnits(inputObject) {
	        var normalizedInput = {},
	            normalizedProp,
	            prop;

	        for (prop in inputObject) {
	            if (hasOwnProp(inputObject, prop)) {
	                normalizedProp = normalizeUnits(prop);
	                if (normalizedProp) {
	                    normalizedInput[normalizedProp] = inputObject[prop];
	                }
	            }
	        }

	        return normalizedInput;
	    }

	    function makeGetSet (unit, keepTime) {
	        return function (value) {
	            if (value != null) {
	                get_set__set(this, unit, value);
	                utils_hooks__hooks.updateOffset(this, keepTime);
	                return this;
	            } else {
	                return get_set__get(this, unit);
	            }
	        };
	    }

	    function get_set__get (mom, unit) {
	        return mom.isValid() ?
	            mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;
	    }

	    function get_set__set (mom, unit, value) {
	        if (mom.isValid()) {
	            mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
	        }
	    }

	    // MOMENTS

	    function getSet (units, value) {
	        var unit;
	        if (typeof units === 'object') {
	            for (unit in units) {
	                this.set(unit, units[unit]);
	            }
	        } else {
	            units = normalizeUnits(units);
	            if (isFunction(this[units])) {
	                return this[units](value);
	            }
	        }
	        return this;
	    }

	    function zeroFill(number, targetLength, forceSign) {
	        var absNumber = '' + Math.abs(number),
	            zerosToFill = targetLength - absNumber.length,
	            sign = number >= 0;
	        return (sign ? (forceSign ? '+' : '') : '-') +
	            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;
	    }

	    var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;

	    var localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;

	    var formatFunctions = {};

	    var formatTokenFunctions = {};

	    // token:    'M'
	    // padded:   ['MM', 2]
	    // ordinal:  'Mo'
	    // callback: function () { this.month() + 1 }
	    function addFormatToken (token, padded, ordinal, callback) {
	        var func = callback;
	        if (typeof callback === 'string') {
	            func = function () {
	                return this[callback]();
	            };
	        }
	        if (token) {
	            formatTokenFunctions[token] = func;
	        }
	        if (padded) {
	            formatTokenFunctions[padded[0]] = function () {
	                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
	            };
	        }
	        if (ordinal) {
	            formatTokenFunctions[ordinal] = function () {
	                return this.localeData().ordinal(func.apply(this, arguments), token);
	            };
	        }
	    }

	    function removeFormattingTokens(input) {
	        if (input.match(/\[[\s\S]/)) {
	            return input.replace(/^\[|\]$/g, '');
	        }
	        return input.replace(/\\/g, '');
	    }

	    function makeFormatFunction(format) {
	        var array = format.match(formattingTokens), i, length;

	        for (i = 0, length = array.length; i < length; i++) {
	            if (formatTokenFunctions[array[i]]) {
	                array[i] = formatTokenFunctions[array[i]];
	            } else {
	                array[i] = removeFormattingTokens(array[i]);
	            }
	        }

	        return function (mom) {
	            var output = '', i;
	            for (i = 0; i < length; i++) {
	                output += array[i] instanceof Function ? array[i].call(mom, format) : array[i];
	            }
	            return output;
	        };
	    }

	    // format date using native date object
	    function formatMoment(m, format) {
	        if (!m.isValid()) {
	            return m.localeData().invalidDate();
	        }

	        format = expandFormat(format, m.localeData());
	        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);

	        return formatFunctions[format](m);
	    }

	    function expandFormat(format, locale) {
	        var i = 5;

	        function replaceLongDateFormatTokens(input) {
	            return locale.longDateFormat(input) || input;
	        }

	        localFormattingTokens.lastIndex = 0;
	        while (i >= 0 && localFormattingTokens.test(format)) {
	            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);
	            localFormattingTokens.lastIndex = 0;
	            i -= 1;
	        }

	        return format;
	    }

	    var match1         = /\d/;            //       0 - 9
	    var match2         = /\d\d/;          //      00 - 99
	    var match3         = /\d{3}/;         //     000 - 999
	    var match4         = /\d{4}/;         //    0000 - 9999
	    var match6         = /[+-]?\d{6}/;    // -999999 - 999999
	    var match1to2      = /\d\d?/;         //       0 - 99
	    var match3to4      = /\d\d\d\d?/;     //     999 - 9999
	    var match5to6      = /\d\d\d\d\d\d?/; //   99999 - 999999
	    var match1to3      = /\d{1,3}/;       //       0 - 999
	    var match1to4      = /\d{1,4}/;       //       0 - 9999
	    var match1to6      = /[+-]?\d{1,6}/;  // -999999 - 999999

	    var matchUnsigned  = /\d+/;           //       0 - inf
	    var matchSigned    = /[+-]?\d+/;      //    -inf - inf

	    var matchOffset    = /Z|[+-]\d\d:?\d\d/gi; // +00:00 -00:00 +0000 -0000 or Z
	    var matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z

	    var matchTimestamp = /[+-]?\d+(\.\d{1,3})?/; // 123456789 123456789.123

	    // any word (or two) characters or numbers including two/three word month in arabic.
	    // includes scottish gaelic two word and hyphenated months
	    var matchWord = /[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i;


	    var regexes = {};

	    function addRegexToken (token, regex, strictRegex) {
	        regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {
	            return (isStrict && strictRegex) ? strictRegex : regex;
	        };
	    }

	    function getParseRegexForToken (token, config) {
	        if (!hasOwnProp(regexes, token)) {
	            return new RegExp(unescapeFormat(token));
	        }

	        return regexes[token](config._strict, config._locale);
	    }

	    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
	    function unescapeFormat(s) {
	        return regexEscape(s.replace('\\', '').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (matched, p1, p2, p3, p4) {
	            return p1 || p2 || p3 || p4;
	        }));
	    }

	    function regexEscape(s) {
	        return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
	    }

	    var tokens = {};

	    function addParseToken (token, callback) {
	        var i, func = callback;
	        if (typeof token === 'string') {
	            token = [token];
	        }
	        if (typeof callback === 'number') {
	            func = function (input, array) {
	                array[callback] = toInt(input);
	            };
	        }
	        for (i = 0; i < token.length; i++) {
	            tokens[token[i]] = func;
	        }
	    }

	    function addWeekParseToken (token, callback) {
	        addParseToken(token, function (input, array, config, token) {
	            config._w = config._w || {};
	            callback(input, config._w, config, token);
	        });
	    }

	    function addTimeToArrayFromToken(token, input, config) {
	        if (input != null && hasOwnProp(tokens, token)) {
	            tokens[token](input, config._a, config, token);
	        }
	    }

	    var YEAR = 0;
	    var MONTH = 1;
	    var DATE = 2;
	    var HOUR = 3;
	    var MINUTE = 4;
	    var SECOND = 5;
	    var MILLISECOND = 6;
	    var WEEK = 7;
	    var WEEKDAY = 8;

	    var indexOf;

	    if (Array.prototype.indexOf) {
	        indexOf = Array.prototype.indexOf;
	    } else {
	        indexOf = function (o) {
	            // I know
	            var i;
	            for (i = 0; i < this.length; ++i) {
	                if (this[i] === o) {
	                    return i;
	                }
	            }
	            return -1;
	        };
	    }

	    function daysInMonth(year, month) {
	        return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();
	    }

	    // FORMATTING

	    addFormatToken('M', ['MM', 2], 'Mo', function () {
	        return this.month() + 1;
	    });

	    addFormatToken('MMM', 0, 0, function (format) {
	        return this.localeData().monthsShort(this, format);
	    });

	    addFormatToken('MMMM', 0, 0, function (format) {
	        return this.localeData().months(this, format);
	    });

	    // ALIASES

	    addUnitAlias('month', 'M');

	    // PARSING

	    addRegexToken('M',    match1to2);
	    addRegexToken('MM',   match1to2, match2);
	    addRegexToken('MMM',  function (isStrict, locale) {
	        return locale.monthsShortRegex(isStrict);
	    });
	    addRegexToken('MMMM', function (isStrict, locale) {
	        return locale.monthsRegex(isStrict);
	    });

	    addParseToken(['M', 'MM'], function (input, array) {
	        array[MONTH] = toInt(input) - 1;
	    });

	    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {
	        var month = config._locale.monthsParse(input, token, config._strict);
	        // if we didn't find a month name, mark the date as invalid.
	        if (month != null) {
	            array[MONTH] = month;
	        } else {
	            getParsingFlags(config).invalidMonth = input;
	        }
	    });

	    // LOCALES

	    var MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s+)+MMMM?/;
	    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');
	    function localeMonths (m, format) {
	        return isArray(this._months) ? this._months[m.month()] :
	            this._months[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];
	    }

	    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');
	    function localeMonthsShort (m, format) {
	        return isArray(this._monthsShort) ? this._monthsShort[m.month()] :
	            this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];
	    }

	    function units_month__handleStrictParse(monthName, format, strict) {
	        var i, ii, mom, llc = monthName.toLocaleLowerCase();
	        if (!this._monthsParse) {
	            // this is not used
	            this._monthsParse = [];
	            this._longMonthsParse = [];
	            this._shortMonthsParse = [];
	            for (i = 0; i < 12; ++i) {
	                mom = create_utc__createUTC([2000, i]);
	                this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();
	                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();
	            }
	        }

	        if (strict) {
	            if (format === 'MMM') {
	                ii = indexOf.call(this._shortMonthsParse, llc);
	                return ii !== -1 ? ii : null;
	            } else {
	                ii = indexOf.call(this._longMonthsParse, llc);
	                return ii !== -1 ? ii : null;
	            }
	        } else {
	            if (format === 'MMM') {
	                ii = indexOf.call(this._shortMonthsParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._longMonthsParse, llc);
	                return ii !== -1 ? ii : null;
	            } else {
	                ii = indexOf.call(this._longMonthsParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._shortMonthsParse, llc);
	                return ii !== -1 ? ii : null;
	            }
	        }
	    }

	    function localeMonthsParse (monthName, format, strict) {
	        var i, mom, regex;

	        if (this._monthsParseExact) {
	            return units_month__handleStrictParse.call(this, monthName, format, strict);
	        }

	        if (!this._monthsParse) {
	            this._monthsParse = [];
	            this._longMonthsParse = [];
	            this._shortMonthsParse = [];
	        }

	        // TODO: add sorting
	        // Sorting makes sure if one month (or abbr) is a prefix of another
	        // see sorting in computeMonthsParse
	        for (i = 0; i < 12; i++) {
	            // make the regex if we don't have it already
	            mom = create_utc__createUTC([2000, i]);
	            if (strict && !this._longMonthsParse[i]) {
	                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');
	                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');
	            }
	            if (!strict && !this._monthsParse[i]) {
	                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
	                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
	            }
	            // test the regex
	            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {
	                return i;
	            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {
	                return i;
	            } else if (!strict && this._monthsParse[i].test(monthName)) {
	                return i;
	            }
	        }
	    }

	    // MOMENTS

	    function setMonth (mom, value) {
	        var dayOfMonth;

	        if (!mom.isValid()) {
	            // No op
	            return mom;
	        }

	        if (typeof value === 'string') {
	            if (/^\d+$/.test(value)) {
	                value = toInt(value);
	            } else {
	                value = mom.localeData().monthsParse(value);
	                // TODO: Another silent failure?
	                if (typeof value !== 'number') {
	                    return mom;
	                }
	            }
	        }

	        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
	        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
	        return mom;
	    }

	    function getSetMonth (value) {
	        if (value != null) {
	            setMonth(this, value);
	            utils_hooks__hooks.updateOffset(this, true);
	            return this;
	        } else {
	            return get_set__get(this, 'Month');
	        }
	    }

	    function getDaysInMonth () {
	        return daysInMonth(this.year(), this.month());
	    }

	    var defaultMonthsShortRegex = matchWord;
	    function monthsShortRegex (isStrict) {
	        if (this._monthsParseExact) {
	            if (!hasOwnProp(this, '_monthsRegex')) {
	                computeMonthsParse.call(this);
	            }
	            if (isStrict) {
	                return this._monthsShortStrictRegex;
	            } else {
	                return this._monthsShortRegex;
	            }
	        } else {
	            return this._monthsShortStrictRegex && isStrict ?
	                this._monthsShortStrictRegex : this._monthsShortRegex;
	        }
	    }

	    var defaultMonthsRegex = matchWord;
	    function monthsRegex (isStrict) {
	        if (this._monthsParseExact) {
	            if (!hasOwnProp(this, '_monthsRegex')) {
	                computeMonthsParse.call(this);
	            }
	            if (isStrict) {
	                return this._monthsStrictRegex;
	            } else {
	                return this._monthsRegex;
	            }
	        } else {
	            return this._monthsStrictRegex && isStrict ?
	                this._monthsStrictRegex : this._monthsRegex;
	        }
	    }

	    function computeMonthsParse () {
	        function cmpLenRev(a, b) {
	            return b.length - a.length;
	        }

	        var shortPieces = [], longPieces = [], mixedPieces = [],
	            i, mom;
	        for (i = 0; i < 12; i++) {
	            // make the regex if we don't have it already
	            mom = create_utc__createUTC([2000, i]);
	            shortPieces.push(this.monthsShort(mom, ''));
	            longPieces.push(this.months(mom, ''));
	            mixedPieces.push(this.months(mom, ''));
	            mixedPieces.push(this.monthsShort(mom, ''));
	        }
	        // Sorting makes sure if one month (or abbr) is a prefix of another it
	        // will match the longer piece.
	        shortPieces.sort(cmpLenRev);
	        longPieces.sort(cmpLenRev);
	        mixedPieces.sort(cmpLenRev);
	        for (i = 0; i < 12; i++) {
	            shortPieces[i] = regexEscape(shortPieces[i]);
	            longPieces[i] = regexEscape(longPieces[i]);
	            mixedPieces[i] = regexEscape(mixedPieces[i]);
	        }

	        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
	        this._monthsShortRegex = this._monthsRegex;
	        this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
	        this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
	    }

	    function checkOverflow (m) {
	        var overflow;
	        var a = m._a;

	        if (a && getParsingFlags(m).overflow === -2) {
	            overflow =
	                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :
	                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :
	                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :
	                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :
	                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :
	                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :
	                -1;

	            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {
	                overflow = DATE;
	            }
	            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
	                overflow = WEEK;
	            }
	            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
	                overflow = WEEKDAY;
	            }

	            getParsingFlags(m).overflow = overflow;
	        }

	        return m;
	    }

	    // iso 8601 regex
	    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
	    var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?/;
	    var basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?/;

	    var tzRegex = /Z|[+-]\d\d(?::?\d\d)?/;

	    var isoDates = [
	        ['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/],
	        ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/],
	        ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/],
	        ['GGGG-[W]WW', /\d{4}-W\d\d/, false],
	        ['YYYY-DDD', /\d{4}-\d{3}/],
	        ['YYYY-MM', /\d{4}-\d\d/, false],
	        ['YYYYYYMMDD', /[+-]\d{10}/],
	        ['YYYYMMDD', /\d{8}/],
	        // YYYYMM is NOT allowed by the standard
	        ['GGGG[W]WWE', /\d{4}W\d{3}/],
	        ['GGGG[W]WW', /\d{4}W\d{2}/, false],
	        ['YYYYDDD', /\d{7}/]
	    ];

	    // iso time formats and regexes
	    var isoTimes = [
	        ['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/],
	        ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/],
	        ['HH:mm:ss', /\d\d:\d\d:\d\d/],
	        ['HH:mm', /\d\d:\d\d/],
	        ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/],
	        ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/],
	        ['HHmmss', /\d\d\d\d\d\d/],
	        ['HHmm', /\d\d\d\d/],
	        ['HH', /\d\d/]
	    ];

	    var aspNetJsonRegex = /^\/?Date\((\-?\d+)/i;

	    // date from iso format
	    function configFromISO(config) {
	        var i, l,
	            string = config._i,
	            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),
	            allowTime, dateFormat, timeFormat, tzFormat;

	        if (match) {
	            getParsingFlags(config).iso = true;

	            for (i = 0, l = isoDates.length; i < l; i++) {
	                if (isoDates[i][1].exec(match[1])) {
	                    dateFormat = isoDates[i][0];
	                    allowTime = isoDates[i][2] !== false;
	                    break;
	                }
	            }
	            if (dateFormat == null) {
	                config._isValid = false;
	                return;
	            }
	            if (match[3]) {
	                for (i = 0, l = isoTimes.length; i < l; i++) {
	                    if (isoTimes[i][1].exec(match[3])) {
	                        // match[2] should be 'T' or space
	                        timeFormat = (match[2] || ' ') + isoTimes[i][0];
	                        break;
	                    }
	                }
	                if (timeFormat == null) {
	                    config._isValid = false;
	                    return;
	                }
	            }
	            if (!allowTime && timeFormat != null) {
	                config._isValid = false;
	                return;
	            }
	            if (match[4]) {
	                if (tzRegex.exec(match[4])) {
	                    tzFormat = 'Z';
	                } else {
	                    config._isValid = false;
	                    return;
	                }
	            }
	            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');
	            configFromStringAndFormat(config);
	        } else {
	            config._isValid = false;
	        }
	    }

	    // date from iso format or fallback
	    function configFromString(config) {
	        var matched = aspNetJsonRegex.exec(config._i);

	        if (matched !== null) {
	            config._d = new Date(+matched[1]);
	            return;
	        }

	        configFromISO(config);
	        if (config._isValid === false) {
	            delete config._isValid;
	            utils_hooks__hooks.createFromInputFallback(config);
	        }
	    }

	    utils_hooks__hooks.createFromInputFallback = deprecate(
	        'moment construction falls back to js Date. This is ' +
	        'discouraged and will be removed in upcoming major ' +
	        'release. Please refer to ' +
	        'https://github.com/moment/moment/issues/1407 for more info.',
	        function (config) {
	            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
	        }
	    );

	    function createDate (y, m, d, h, M, s, ms) {
	        //can't just apply() to create a date:
	        //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply
	        var date = new Date(y, m, d, h, M, s, ms);

	        //the date constructor remaps years 0-99 to 1900-1999
	        if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {
	            date.setFullYear(y);
	        }
	        return date;
	    }

	    function createUTCDate (y) {
	        var date = new Date(Date.UTC.apply(null, arguments));

	        //the Date.UTC function remaps years 0-99 to 1900-1999
	        if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {
	            date.setUTCFullYear(y);
	        }
	        return date;
	    }

	    // FORMATTING

	    addFormatToken('Y', 0, 0, function () {
	        var y = this.year();
	        return y <= 9999 ? '' + y : '+' + y;
	    });

	    addFormatToken(0, ['YY', 2], 0, function () {
	        return this.year() % 100;
	    });

	    addFormatToken(0, ['YYYY',   4],       0, 'year');
	    addFormatToken(0, ['YYYYY',  5],       0, 'year');
	    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');

	    // ALIASES

	    addUnitAlias('year', 'y');

	    // PARSING

	    addRegexToken('Y',      matchSigned);
	    addRegexToken('YY',     match1to2, match2);
	    addRegexToken('YYYY',   match1to4, match4);
	    addRegexToken('YYYYY',  match1to6, match6);
	    addRegexToken('YYYYYY', match1to6, match6);

	    addParseToken(['YYYYY', 'YYYYYY'], YEAR);
	    addParseToken('YYYY', function (input, array) {
	        array[YEAR] = input.length === 2 ? utils_hooks__hooks.parseTwoDigitYear(input) : toInt(input);
	    });
	    addParseToken('YY', function (input, array) {
	        array[YEAR] = utils_hooks__hooks.parseTwoDigitYear(input);
	    });
	    addParseToken('Y', function (input, array) {
	        array[YEAR] = parseInt(input, 10);
	    });

	    // HELPERS

	    function daysInYear(year) {
	        return isLeapYear(year) ? 366 : 365;
	    }

	    function isLeapYear(year) {
	        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
	    }

	    // HOOKS

	    utils_hooks__hooks.parseTwoDigitYear = function (input) {
	        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
	    };

	    // MOMENTS

	    var getSetYear = makeGetSet('FullYear', true);

	    function getIsLeapYear () {
	        return isLeapYear(this.year());
	    }

	    // start-of-first-week - start-of-year
	    function firstWeekOffset(year, dow, doy) {
	        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)
	            fwd = 7 + dow - doy,
	            // first-week day local weekday -- which local weekday is fwd
	            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;

	        return -fwdlw + fwd - 1;
	    }

	    //http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
	    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
	        var localWeekday = (7 + weekday - dow) % 7,
	            weekOffset = firstWeekOffset(year, dow, doy),
	            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,
	            resYear, resDayOfYear;

	        if (dayOfYear <= 0) {
	            resYear = year - 1;
	            resDayOfYear = daysInYear(resYear) + dayOfYear;
	        } else if (dayOfYear > daysInYear(year)) {
	            resYear = year + 1;
	            resDayOfYear = dayOfYear - daysInYear(year);
	        } else {
	            resYear = year;
	            resDayOfYear = dayOfYear;
	        }

	        return {
	            year: resYear,
	            dayOfYear: resDayOfYear
	        };
	    }

	    function weekOfYear(mom, dow, doy) {
	        var weekOffset = firstWeekOffset(mom.year(), dow, doy),
	            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,
	            resWeek, resYear;

	        if (week < 1) {
	            resYear = mom.year() - 1;
	            resWeek = week + weeksInYear(resYear, dow, doy);
	        } else if (week > weeksInYear(mom.year(), dow, doy)) {
	            resWeek = week - weeksInYear(mom.year(), dow, doy);
	            resYear = mom.year() + 1;
	        } else {
	            resYear = mom.year();
	            resWeek = week;
	        }

	        return {
	            week: resWeek,
	            year: resYear
	        };
	    }

	    function weeksInYear(year, dow, doy) {
	        var weekOffset = firstWeekOffset(year, dow, doy),
	            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
	        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
	    }

	    // Pick the first defined of two or three arguments.
	    function defaults(a, b, c) {
	        if (a != null) {
	            return a;
	        }
	        if (b != null) {
	            return b;
	        }
	        return c;
	    }

	    function currentDateArray(config) {
	        // hooks is actually the exported moment object
	        var nowValue = new Date(utils_hooks__hooks.now());
	        if (config._useUTC) {
	            return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];
	        }
	        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
	    }

	    // convert an array to a date.
	    // the array should mirror the parameters below
	    // note: all values past the year are optional and will default to the lowest possible value.
	    // [year, month, day , hour, minute, second, millisecond]
	    function configFromArray (config) {
	        var i, date, input = [], currentDate, yearToUse;

	        if (config._d) {
	            return;
	        }

	        currentDate = currentDateArray(config);

	        //compute day of the year from weeks and weekdays
	        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
	            dayOfYearFromWeekInfo(config);
	        }

	        //if the day of the year is set, figure out what it is
	        if (config._dayOfYear) {
	            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);

	            if (config._dayOfYear > daysInYear(yearToUse)) {
	                getParsingFlags(config)._overflowDayOfYear = true;
	            }

	            date = createUTCDate(yearToUse, 0, config._dayOfYear);
	            config._a[MONTH] = date.getUTCMonth();
	            config._a[DATE] = date.getUTCDate();
	        }

	        // Default to current date.
	        // * if no year, month, day of month are given, default to today
	        // * if day of month is given, default month and year
	        // * if month is given, default only year
	        // * if year is given, don't default anything
	        for (i = 0; i < 3 && config._a[i] == null; ++i) {
	            config._a[i] = input[i] = currentDate[i];
	        }

	        // Zero out whatever was not defaulted, including time
	        for (; i < 7; i++) {
	            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];
	        }

	        // Check for 24:00:00.000
	        if (config._a[HOUR] === 24 &&
	                config._a[MINUTE] === 0 &&
	                config._a[SECOND] === 0 &&
	                config._a[MILLISECOND] === 0) {
	            config._nextDay = true;
	            config._a[HOUR] = 0;
	        }

	        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);
	        // Apply timezone offset from input. The actual utcOffset can be changed
	        // with parseZone.
	        if (config._tzm != null) {
	            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
	        }

	        if (config._nextDay) {
	            config._a[HOUR] = 24;
	        }
	    }

	    function dayOfYearFromWeekInfo(config) {
	        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;

	        w = config._w;
	        if (w.GG != null || w.W != null || w.E != null) {
	            dow = 1;
	            doy = 4;

	            // TODO: We need to take the current isoWeekYear, but that depends on
	            // how we interpret now (local, utc, fixed offset). So create
	            // a now version of current config (take local/utc/offset flags, and
	            // create now).
	            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(local__createLocal(), 1, 4).year);
	            week = defaults(w.W, 1);
	            weekday = defaults(w.E, 1);
	            if (weekday < 1 || weekday > 7) {
	                weekdayOverflow = true;
	            }
	        } else {
	            dow = config._locale._week.dow;
	            doy = config._locale._week.doy;

	            weekYear = defaults(w.gg, config._a[YEAR], weekOfYear(local__createLocal(), dow, doy).year);
	            week = defaults(w.w, 1);

	            if (w.d != null) {
	                // weekday -- low day numbers are considered next week
	                weekday = w.d;
	                if (weekday < 0 || weekday > 6) {
	                    weekdayOverflow = true;
	                }
	            } else if (w.e != null) {
	                // local weekday -- counting starts from begining of week
	                weekday = w.e + dow;
	                if (w.e < 0 || w.e > 6) {
	                    weekdayOverflow = true;
	                }
	            } else {
	                // default to begining of week
	                weekday = dow;
	            }
	        }
	        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
	            getParsingFlags(config)._overflowWeeks = true;
	        } else if (weekdayOverflow != null) {
	            getParsingFlags(config)._overflowWeekday = true;
	        } else {
	            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
	            config._a[YEAR] = temp.year;
	            config._dayOfYear = temp.dayOfYear;
	        }
	    }

	    // constant that refers to the ISO standard
	    utils_hooks__hooks.ISO_8601 = function () {};

	    // date from string and format string
	    function configFromStringAndFormat(config) {
	        // TODO: Move this to another part of the creation flow to prevent circular deps
	        if (config._f === utils_hooks__hooks.ISO_8601) {
	            configFromISO(config);
	            return;
	        }

	        config._a = [];
	        getParsingFlags(config).empty = true;

	        // This array is used to make a Date, either with `new Date` or `Date.UTC`
	        var string = '' + config._i,
	            i, parsedInput, tokens, token, skipped,
	            stringLength = string.length,
	            totalParsedInputLength = 0;

	        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];

	        for (i = 0; i < tokens.length; i++) {
	            token = tokens[i];
	            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];
	            // console.log('token', token, 'parsedInput', parsedInput,
	            //         'regex', getParseRegexForToken(token, config));
	            if (parsedInput) {
	                skipped = string.substr(0, string.indexOf(parsedInput));
	                if (skipped.length > 0) {
	                    getParsingFlags(config).unusedInput.push(skipped);
	                }
	                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);
	                totalParsedInputLength += parsedInput.length;
	            }
	            // don't parse if it's not a known token
	            if (formatTokenFunctions[token]) {
	                if (parsedInput) {
	                    getParsingFlags(config).empty = false;
	                }
	                else {
	                    getParsingFlags(config).unusedTokens.push(token);
	                }
	                addTimeToArrayFromToken(token, parsedInput, config);
	            }
	            else if (config._strict && !parsedInput) {
	                getParsingFlags(config).unusedTokens.push(token);
	            }
	        }

	        // add remaining unparsed input length to the string
	        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;
	        if (string.length > 0) {
	            getParsingFlags(config).unusedInput.push(string);
	        }

	        // clear _12h flag if hour is <= 12
	        if (getParsingFlags(config).bigHour === true &&
	                config._a[HOUR] <= 12 &&
	                config._a[HOUR] > 0) {
	            getParsingFlags(config).bigHour = undefined;
	        }

	        getParsingFlags(config).parsedDateParts = config._a.slice(0);
	        getParsingFlags(config).meridiem = config._meridiem;
	        // handle meridiem
	        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);

	        configFromArray(config);
	        checkOverflow(config);
	    }


	    function meridiemFixWrap (locale, hour, meridiem) {
	        var isPm;

	        if (meridiem == null) {
	            // nothing to do
	            return hour;
	        }
	        if (locale.meridiemHour != null) {
	            return locale.meridiemHour(hour, meridiem);
	        } else if (locale.isPM != null) {
	            // Fallback
	            isPm = locale.isPM(meridiem);
	            if (isPm && hour < 12) {
	                hour += 12;
	            }
	            if (!isPm && hour === 12) {
	                hour = 0;
	            }
	            return hour;
	        } else {
	            // this is not supposed to happen
	            return hour;
	        }
	    }

	    // date from string and array of format strings
	    function configFromStringAndArray(config) {
	        var tempConfig,
	            bestMoment,

	            scoreToBeat,
	            i,
	            currentScore;

	        if (config._f.length === 0) {
	            getParsingFlags(config).invalidFormat = true;
	            config._d = new Date(NaN);
	            return;
	        }

	        for (i = 0; i < config._f.length; i++) {
	            currentScore = 0;
	            tempConfig = copyConfig({}, config);
	            if (config._useUTC != null) {
	                tempConfig._useUTC = config._useUTC;
	            }
	            tempConfig._f = config._f[i];
	            configFromStringAndFormat(tempConfig);

	            if (!valid__isValid(tempConfig)) {
	                continue;
	            }

	            // if there is any input that was not parsed add a penalty for that format
	            currentScore += getParsingFlags(tempConfig).charsLeftOver;

	            //or tokens
	            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;

	            getParsingFlags(tempConfig).score = currentScore;

	            if (scoreToBeat == null || currentScore < scoreToBeat) {
	                scoreToBeat = currentScore;
	                bestMoment = tempConfig;
	            }
	        }

	        extend(config, bestMoment || tempConfig);
	    }

	    function configFromObject(config) {
	        if (config._d) {
	            return;
	        }

	        var i = normalizeObjectUnits(config._i);
	        config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {
	            return obj && parseInt(obj, 10);
	        });

	        configFromArray(config);
	    }

	    function createFromConfig (config) {
	        var res = new Moment(checkOverflow(prepareConfig(config)));
	        if (res._nextDay) {
	            // Adding is smart enough around DST
	            res.add(1, 'd');
	            res._nextDay = undefined;
	        }

	        return res;
	    }

	    function prepareConfig (config) {
	        var input = config._i,
	            format = config._f;

	        config._locale = config._locale || locale_locales__getLocale(config._l);

	        if (input === null || (format === undefined && input === '')) {
	            return valid__createInvalid({nullInput: true});
	        }

	        if (typeof input === 'string') {
	            config._i = input = config._locale.preparse(input);
	        }

	        if (isMoment(input)) {
	            return new Moment(checkOverflow(input));
	        } else if (isArray(format)) {
	            configFromStringAndArray(config);
	        } else if (format) {
	            configFromStringAndFormat(config);
	        } else if (isDate(input)) {
	            config._d = input;
	        } else {
	            configFromInput(config);
	        }

	        if (!valid__isValid(config)) {
	            config._d = null;
	        }

	        return config;
	    }

	    function configFromInput(config) {
	        var input = config._i;
	        if (input === undefined) {
	            config._d = new Date(utils_hooks__hooks.now());
	        } else if (isDate(input)) {
	            config._d = new Date(input.valueOf());
	        } else if (typeof input === 'string') {
	            configFromString(config);
	        } else if (isArray(input)) {
	            config._a = map(input.slice(0), function (obj) {
	                return parseInt(obj, 10);
	            });
	            configFromArray(config);
	        } else if (typeof(input) === 'object') {
	            configFromObject(config);
	        } else if (typeof(input) === 'number') {
	            // from milliseconds
	            config._d = new Date(input);
	        } else {
	            utils_hooks__hooks.createFromInputFallback(config);
	        }
	    }

	    function createLocalOrUTC (input, format, locale, strict, isUTC) {
	        var c = {};

	        if (typeof(locale) === 'boolean') {
	            strict = locale;
	            locale = undefined;
	        }
	        // object construction must be done this way.
	        // https://github.com/moment/moment/issues/1423
	        c._isAMomentObject = true;
	        c._useUTC = c._isUTC = isUTC;
	        c._l = locale;
	        c._i = input;
	        c._f = format;
	        c._strict = strict;

	        return createFromConfig(c);
	    }

	    function local__createLocal (input, format, locale, strict) {
	        return createLocalOrUTC(input, format, locale, strict, false);
	    }

	    var prototypeMin = deprecate(
	         'moment().min is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548',
	         function () {
	             var other = local__createLocal.apply(null, arguments);
	             if (this.isValid() && other.isValid()) {
	                 return other < this ? this : other;
	             } else {
	                 return valid__createInvalid();
	             }
	         }
	     );

	    var prototypeMax = deprecate(
	        'moment().max is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548',
	        function () {
	            var other = local__createLocal.apply(null, arguments);
	            if (this.isValid() && other.isValid()) {
	                return other > this ? this : other;
	            } else {
	                return valid__createInvalid();
	            }
	        }
	    );

	    // Pick a moment m from moments so that m[fn](other) is true for all
	    // other. This relies on the function fn to be transitive.
	    //
	    // moments should either be an array of moment objects or an array, whose
	    // first element is an array of moment objects.
	    function pickBy(fn, moments) {
	        var res, i;
	        if (moments.length === 1 && isArray(moments[0])) {
	            moments = moments[0];
	        }
	        if (!moments.length) {
	            return local__createLocal();
	        }
	        res = moments[0];
	        for (i = 1; i < moments.length; ++i) {
	            if (!moments[i].isValid() || moments[i][fn](res)) {
	                res = moments[i];
	            }
	        }
	        return res;
	    }

	    // TODO: Use [].sort instead?
	    function min () {
	        var args = [].slice.call(arguments, 0);

	        return pickBy('isBefore', args);
	    }

	    function max () {
	        var args = [].slice.call(arguments, 0);

	        return pickBy('isAfter', args);
	    }

	    var now = function () {
	        return Date.now ? Date.now() : +(new Date());
	    };

	    function Duration (duration) {
	        var normalizedInput = normalizeObjectUnits(duration),
	            years = normalizedInput.year || 0,
	            quarters = normalizedInput.quarter || 0,
	            months = normalizedInput.month || 0,
	            weeks = normalizedInput.week || 0,
	            days = normalizedInput.day || 0,
	            hours = normalizedInput.hour || 0,
	            minutes = normalizedInput.minute || 0,
	            seconds = normalizedInput.second || 0,
	            milliseconds = normalizedInput.millisecond || 0;

	        // representation for dateAddRemove
	        this._milliseconds = +milliseconds +
	            seconds * 1e3 + // 1000
	            minutes * 6e4 + // 1000 * 60
	            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
	        // Because of dateAddRemove treats 24 hours as different from a
	        // day when working around DST, we need to store them separately
	        this._days = +days +
	            weeks * 7;
	        // It is impossible translate months into days without knowing
	        // which months you are are talking about, so we have to store
	        // it separately.
	        this._months = +months +
	            quarters * 3 +
	            years * 12;

	        this._data = {};

	        this._locale = locale_locales__getLocale();

	        this._bubble();
	    }

	    function isDuration (obj) {
	        return obj instanceof Duration;
	    }

	    // FORMATTING

	    function offset (token, separator) {
	        addFormatToken(token, 0, 0, function () {
	            var offset = this.utcOffset();
	            var sign = '+';
	            if (offset < 0) {
	                offset = -offset;
	                sign = '-';
	            }
	            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);
	        });
	    }

	    offset('Z', ':');
	    offset('ZZ', '');

	    // PARSING

	    addRegexToken('Z',  matchShortOffset);
	    addRegexToken('ZZ', matchShortOffset);
	    addParseToken(['Z', 'ZZ'], function (input, array, config) {
	        config._useUTC = true;
	        config._tzm = offsetFromString(matchShortOffset, input);
	    });

	    // HELPERS

	    // timezone chunker
	    // '+10:00' > ['10',  '00']
	    // '-1530'  > ['-15', '30']
	    var chunkOffset = /([\+\-]|\d\d)/gi;

	    function offsetFromString(matcher, string) {
	        var matches = ((string || '').match(matcher) || []);
	        var chunk   = matches[matches.length - 1] || [];
	        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];
	        var minutes = +(parts[1] * 60) + toInt(parts[2]);

	        return parts[0] === '+' ? minutes : -minutes;
	    }

	    // Return a moment from input, that is local/utc/zone equivalent to model.
	    function cloneWithOffset(input, model) {
	        var res, diff;
	        if (model._isUTC) {
	            res = model.clone();
	            diff = (isMoment(input) || isDate(input) ? input.valueOf() : local__createLocal(input).valueOf()) - res.valueOf();
	            // Use low-level api, because this fn is low-level api.
	            res._d.setTime(res._d.valueOf() + diff);
	            utils_hooks__hooks.updateOffset(res, false);
	            return res;
	        } else {
	            return local__createLocal(input).local();
	        }
	    }

	    function getDateOffset (m) {
	        // On Firefox.24 Date#getTimezoneOffset returns a floating point.
	        // https://github.com/moment/moment/pull/1871
	        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;
	    }

	    // HOOKS

	    // This function will be called whenever a moment is mutated.
	    // It is intended to keep the offset in sync with the timezone.
	    utils_hooks__hooks.updateOffset = function () {};

	    // MOMENTS

	    // keepLocalTime = true means only change the timezone, without
	    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
	    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
	    // +0200, so we adjust the time as needed, to be valid.
	    //
	    // Keeping the time actually adds/subtracts (one hour)
	    // from the actual represented time. That is why we call updateOffset
	    // a second time. In case it wants us to change the offset again
	    // _changeInProgress == true case, then we have to adjust, because
	    // there is no such time in the given timezone.
	    function getSetOffset (input, keepLocalTime) {
	        var offset = this._offset || 0,
	            localAdjust;
	        if (!this.isValid()) {
	            return input != null ? this : NaN;
	        }
	        if (input != null) {
	            if (typeof input === 'string') {
	                input = offsetFromString(matchShortOffset, input);
	            } else if (Math.abs(input) < 16) {
	                input = input * 60;
	            }
	            if (!this._isUTC && keepLocalTime) {
	                localAdjust = getDateOffset(this);
	            }
	            this._offset = input;
	            this._isUTC = true;
	            if (localAdjust != null) {
	                this.add(localAdjust, 'm');
	            }
	            if (offset !== input) {
	                if (!keepLocalTime || this._changeInProgress) {
	                    add_subtract__addSubtract(this, create__createDuration(input - offset, 'm'), 1, false);
	                } else if (!this._changeInProgress) {
	                    this._changeInProgress = true;
	                    utils_hooks__hooks.updateOffset(this, true);
	                    this._changeInProgress = null;
	                }
	            }
	            return this;
	        } else {
	            return this._isUTC ? offset : getDateOffset(this);
	        }
	    }

	    function getSetZone (input, keepLocalTime) {
	        if (input != null) {
	            if (typeof input !== 'string') {
	                input = -input;
	            }

	            this.utcOffset(input, keepLocalTime);

	            return this;
	        } else {
	            return -this.utcOffset();
	        }
	    }

	    function setOffsetToUTC (keepLocalTime) {
	        return this.utcOffset(0, keepLocalTime);
	    }

	    function setOffsetToLocal (keepLocalTime) {
	        if (this._isUTC) {
	            this.utcOffset(0, keepLocalTime);
	            this._isUTC = false;

	            if (keepLocalTime) {
	                this.subtract(getDateOffset(this), 'm');
	            }
	        }
	        return this;
	    }

	    function setOffsetToParsedOffset () {
	        if (this._tzm) {
	            this.utcOffset(this._tzm);
	        } else if (typeof this._i === 'string') {
	            this.utcOffset(offsetFromString(matchOffset, this._i));
	        }
	        return this;
	    }

	    function hasAlignedHourOffset (input) {
	        if (!this.isValid()) {
	            return false;
	        }
	        input = input ? local__createLocal(input).utcOffset() : 0;

	        return (this.utcOffset() - input) % 60 === 0;
	    }

	    function isDaylightSavingTime () {
	        return (
	            this.utcOffset() > this.clone().month(0).utcOffset() ||
	            this.utcOffset() > this.clone().month(5).utcOffset()
	        );
	    }

	    function isDaylightSavingTimeShifted () {
	        if (!isUndefined(this._isDSTShifted)) {
	            return this._isDSTShifted;
	        }

	        var c = {};

	        copyConfig(c, this);
	        c = prepareConfig(c);

	        if (c._a) {
	            var other = c._isUTC ? create_utc__createUTC(c._a) : local__createLocal(c._a);
	            this._isDSTShifted = this.isValid() &&
	                compareArrays(c._a, other.toArray()) > 0;
	        } else {
	            this._isDSTShifted = false;
	        }

	        return this._isDSTShifted;
	    }

	    function isLocal () {
	        return this.isValid() ? !this._isUTC : false;
	    }

	    function isUtcOffset () {
	        return this.isValid() ? this._isUTC : false;
	    }

	    function isUtc () {
	        return this.isValid() ? this._isUTC && this._offset === 0 : false;
	    }

	    // ASP.NET json date format regex
	    var aspNetRegex = /^(\-)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)\.?(\d{3})?\d*)?$/;

	    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
	    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
	    // and further modified to allow for strings containing both week and day
	    var isoRegex = /^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/;

	    function create__createDuration (input, key) {
	        var duration = input,
	            // matching against regexp is expensive, do it on demand
	            match = null,
	            sign,
	            ret,
	            diffRes;

	        if (isDuration(input)) {
	            duration = {
	                ms : input._milliseconds,
	                d  : input._days,
	                M  : input._months
	            };
	        } else if (typeof input === 'number') {
	            duration = {};
	            if (key) {
	                duration[key] = input;
	            } else {
	                duration.milliseconds = input;
	            }
	        } else if (!!(match = aspNetRegex.exec(input))) {
	            sign = (match[1] === '-') ? -1 : 1;
	            duration = {
	                y  : 0,
	                d  : toInt(match[DATE])        * sign,
	                h  : toInt(match[HOUR])        * sign,
	                m  : toInt(match[MINUTE])      * sign,
	                s  : toInt(match[SECOND])      * sign,
	                ms : toInt(match[MILLISECOND]) * sign
	            };
	        } else if (!!(match = isoRegex.exec(input))) {
	            sign = (match[1] === '-') ? -1 : 1;
	            duration = {
	                y : parseIso(match[2], sign),
	                M : parseIso(match[3], sign),
	                w : parseIso(match[4], sign),
	                d : parseIso(match[5], sign),
	                h : parseIso(match[6], sign),
	                m : parseIso(match[7], sign),
	                s : parseIso(match[8], sign)
	            };
	        } else if (duration == null) {// checks for null or undefined
	            duration = {};
	        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {
	            diffRes = momentsDifference(local__createLocal(duration.from), local__createLocal(duration.to));

	            duration = {};
	            duration.ms = diffRes.milliseconds;
	            duration.M = diffRes.months;
	        }

	        ret = new Duration(duration);

	        if (isDuration(input) && hasOwnProp(input, '_locale')) {
	            ret._locale = input._locale;
	        }

	        return ret;
	    }

	    create__createDuration.fn = Duration.prototype;

	    function parseIso (inp, sign) {
	        // We'd normally use ~~inp for this, but unfortunately it also
	        // converts floats to ints.
	        // inp may be undefined, so careful calling replace on it.
	        var res = inp && parseFloat(inp.replace(',', '.'));
	        // apply sign while we're at it
	        return (isNaN(res) ? 0 : res) * sign;
	    }

	    function positiveMomentsDifference(base, other) {
	        var res = {milliseconds: 0, months: 0};

	        res.months = other.month() - base.month() +
	            (other.year() - base.year()) * 12;
	        if (base.clone().add(res.months, 'M').isAfter(other)) {
	            --res.months;
	        }

	        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));

	        return res;
	    }

	    function momentsDifference(base, other) {
	        var res;
	        if (!(base.isValid() && other.isValid())) {
	            return {milliseconds: 0, months: 0};
	        }

	        other = cloneWithOffset(other, base);
	        if (base.isBefore(other)) {
	            res = positiveMomentsDifference(base, other);
	        } else {
	            res = positiveMomentsDifference(other, base);
	            res.milliseconds = -res.milliseconds;
	            res.months = -res.months;
	        }

	        return res;
	    }

	    function absRound (number) {
	        if (number < 0) {
	            return Math.round(-1 * number) * -1;
	        } else {
	            return Math.round(number);
	        }
	    }

	    // TODO: remove 'name' arg after deprecation is removed
	    function createAdder(direction, name) {
	        return function (val, period) {
	            var dur, tmp;
	            //invert the arguments, but complain about it
	            if (period !== null && !isNaN(+period)) {
	                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period).');
	                tmp = val; val = period; period = tmp;
	            }

	            val = typeof val === 'string' ? +val : val;
	            dur = create__createDuration(val, period);
	            add_subtract__addSubtract(this, dur, direction);
	            return this;
	        };
	    }

	    function add_subtract__addSubtract (mom, duration, isAdding, updateOffset) {
	        var milliseconds = duration._milliseconds,
	            days = absRound(duration._days),
	            months = absRound(duration._months);

	        if (!mom.isValid()) {
	            // No op
	            return;
	        }

	        updateOffset = updateOffset == null ? true : updateOffset;

	        if (milliseconds) {
	            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);
	        }
	        if (days) {
	            get_set__set(mom, 'Date', get_set__get(mom, 'Date') + days * isAdding);
	        }
	        if (months) {
	            setMonth(mom, get_set__get(mom, 'Month') + months * isAdding);
	        }
	        if (updateOffset) {
	            utils_hooks__hooks.updateOffset(mom, days || months);
	        }
	    }

	    var add_subtract__add      = createAdder(1, 'add');
	    var add_subtract__subtract = createAdder(-1, 'subtract');

	    function moment_calendar__calendar (time, formats) {
	        // We want to compare the start of today, vs this.
	        // Getting start-of-today depends on whether we're local/utc/offset or not.
	        var now = time || local__createLocal(),
	            sod = cloneWithOffset(now, this).startOf('day'),
	            diff = this.diff(sod, 'days', true),
	            format = diff < -6 ? 'sameElse' :
	                diff < -1 ? 'lastWeek' :
	                diff < 0 ? 'lastDay' :
	                diff < 1 ? 'sameDay' :
	                diff < 2 ? 'nextDay' :
	                diff < 7 ? 'nextWeek' : 'sameElse';

	        var output = formats && (isFunction(formats[format]) ? formats[format]() : formats[format]);

	        return this.format(output || this.localeData().calendar(format, this, local__createLocal(now)));
	    }

	    function clone () {
	        return new Moment(this);
	    }

	    function isAfter (input, units) {
	        var localInput = isMoment(input) ? input : local__createLocal(input);
	        if (!(this.isValid() && localInput.isValid())) {
	            return false;
	        }
	        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');
	        if (units === 'millisecond') {
	            return this.valueOf() > localInput.valueOf();
	        } else {
	            return localInput.valueOf() < this.clone().startOf(units).valueOf();
	        }
	    }

	    function isBefore (input, units) {
	        var localInput = isMoment(input) ? input : local__createLocal(input);
	        if (!(this.isValid() && localInput.isValid())) {
	            return false;
	        }
	        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');
	        if (units === 'millisecond') {
	            return this.valueOf() < localInput.valueOf();
	        } else {
	            return this.clone().endOf(units).valueOf() < localInput.valueOf();
	        }
	    }

	    function isBetween (from, to, units, inclusivity) {
	        inclusivity = inclusivity || '()';
	        return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&
	            (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));
	    }

	    function isSame (input, units) {
	        var localInput = isMoment(input) ? input : local__createLocal(input),
	            inputMs;
	        if (!(this.isValid() && localInput.isValid())) {
	            return false;
	        }
	        units = normalizeUnits(units || 'millisecond');
	        if (units === 'millisecond') {
	            return this.valueOf() === localInput.valueOf();
	        } else {
	            inputMs = localInput.valueOf();
	            return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();
	        }
	    }

	    function isSameOrAfter (input, units) {
	        return this.isSame(input, units) || this.isAfter(input,units);
	    }

	    function isSameOrBefore (input, units) {
	        return this.isSame(input, units) || this.isBefore(input,units);
	    }

	    function diff (input, units, asFloat) {
	        var that,
	            zoneDelta,
	            delta, output;

	        if (!this.isValid()) {
	            return NaN;
	        }

	        that = cloneWithOffset(input, this);

	        if (!that.isValid()) {
	            return NaN;
	        }

	        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;

	        units = normalizeUnits(units);

	        if (units === 'year' || units === 'month' || units === 'quarter') {
	            output = monthDiff(this, that);
	            if (units === 'quarter') {
	                output = output / 3;
	            } else if (units === 'year') {
	                output = output / 12;
	            }
	        } else {
	            delta = this - that;
	            output = units === 'second' ? delta / 1e3 : // 1000
	                units === 'minute' ? delta / 6e4 : // 1000 * 60
	                units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60
	                units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst
	                units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst
	                delta;
	        }
	        return asFloat ? output : absFloor(output);
	    }

	    function monthDiff (a, b) {
	        // difference in months
	        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),
	            // b is in (anchor - 1 month, anchor + 1 month)
	            anchor = a.clone().add(wholeMonthDiff, 'months'),
	            anchor2, adjust;

	        if (b - anchor < 0) {
	            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
	            // linear across the month
	            adjust = (b - anchor) / (anchor - anchor2);
	        } else {
	            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
	            // linear across the month
	            adjust = (b - anchor) / (anchor2 - anchor);
	        }

	        //check for negative zero, return zero if negative zero
	        return -(wholeMonthDiff + adjust) || 0;
	    }

	    utils_hooks__hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';
	    utils_hooks__hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';

	    function toString () {
	        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
	    }

	    function moment_format__toISOString () {
	        var m = this.clone().utc();
	        if (0 < m.year() && m.year() <= 9999) {
	            if (isFunction(Date.prototype.toISOString)) {
	                // native implementation is ~50x faster, use it when we can
	                return this.toDate().toISOString();
	            } else {
	                return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
	            }
	        } else {
	            return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
	        }
	    }

	    function format (inputString) {
	        if (!inputString) {
	            inputString = this.isUtc() ? utils_hooks__hooks.defaultFormatUtc : utils_hooks__hooks.defaultFormat;
	        }
	        var output = formatMoment(this, inputString);
	        return this.localeData().postformat(output);
	    }

	    function from (time, withoutSuffix) {
	        if (this.isValid() &&
	                ((isMoment(time) && time.isValid()) ||
	                 local__createLocal(time).isValid())) {
	            return create__createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);
	        } else {
	            return this.localeData().invalidDate();
	        }
	    }

	    function fromNow (withoutSuffix) {
	        return this.from(local__createLocal(), withoutSuffix);
	    }

	    function to (time, withoutSuffix) {
	        if (this.isValid() &&
	                ((isMoment(time) && time.isValid()) ||
	                 local__createLocal(time).isValid())) {
	            return create__createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);
	        } else {
	            return this.localeData().invalidDate();
	        }
	    }

	    function toNow (withoutSuffix) {
	        return this.to(local__createLocal(), withoutSuffix);
	    }

	    // If passed a locale key, it will set the locale for this
	    // instance.  Otherwise, it will return the locale configuration
	    // variables for this instance.
	    function locale (key) {
	        var newLocaleData;

	        if (key === undefined) {
	            return this._locale._abbr;
	        } else {
	            newLocaleData = locale_locales__getLocale(key);
	            if (newLocaleData != null) {
	                this._locale = newLocaleData;
	            }
	            return this;
	        }
	    }

	    var lang = deprecate(
	        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
	        function (key) {
	            if (key === undefined) {
	                return this.localeData();
	            } else {
	                return this.locale(key);
	            }
	        }
	    );

	    function localeData () {
	        return this._locale;
	    }

	    function startOf (units) {
	        units = normalizeUnits(units);
	        // the following switch intentionally omits break keywords
	        // to utilize falling through the cases.
	        switch (units) {
	        case 'year':
	            this.month(0);
	            /* falls through */
	        case 'quarter':
	        case 'month':
	            this.date(1);
	            /* falls through */
	        case 'week':
	        case 'isoWeek':
	        case 'day':
	        case 'date':
	            this.hours(0);
	            /* falls through */
	        case 'hour':
	            this.minutes(0);
	            /* falls through */
	        case 'minute':
	            this.seconds(0);
	            /* falls through */
	        case 'second':
	            this.milliseconds(0);
	        }

	        // weeks are a special case
	        if (units === 'week') {
	            this.weekday(0);
	        }
	        if (units === 'isoWeek') {
	            this.isoWeekday(1);
	        }

	        // quarters are also special
	        if (units === 'quarter') {
	            this.month(Math.floor(this.month() / 3) * 3);
	        }

	        return this;
	    }

	    function endOf (units) {
	        units = normalizeUnits(units);
	        if (units === undefined || units === 'millisecond') {
	            return this;
	        }

	        // 'date' is an alias for 'day', so it should be considered as such.
	        if (units === 'date') {
	            units = 'day';
	        }

	        return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');
	    }

	    function to_type__valueOf () {
	        return this._d.valueOf() - ((this._offset || 0) * 60000);
	    }

	    function unix () {
	        return Math.floor(this.valueOf() / 1000);
	    }

	    function toDate () {
	        return this._offset ? new Date(this.valueOf()) : this._d;
	    }

	    function toArray () {
	        var m = this;
	        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];
	    }

	    function toObject () {
	        var m = this;
	        return {
	            years: m.year(),
	            months: m.month(),
	            date: m.date(),
	            hours: m.hours(),
	            minutes: m.minutes(),
	            seconds: m.seconds(),
	            milliseconds: m.milliseconds()
	        };
	    }

	    function toJSON () {
	        // new Date(NaN).toJSON() === null
	        return this.isValid() ? this.toISOString() : null;
	    }

	    function moment_valid__isValid () {
	        return valid__isValid(this);
	    }

	    function parsingFlags () {
	        return extend({}, getParsingFlags(this));
	    }

	    function invalidAt () {
	        return getParsingFlags(this).overflow;
	    }

	    function creationData() {
	        return {
	            input: this._i,
	            format: this._f,
	            locale: this._locale,
	            isUTC: this._isUTC,
	            strict: this._strict
	        };
	    }

	    // FORMATTING

	    addFormatToken(0, ['gg', 2], 0, function () {
	        return this.weekYear() % 100;
	    });

	    addFormatToken(0, ['GG', 2], 0, function () {
	        return this.isoWeekYear() % 100;
	    });

	    function addWeekYearFormatToken (token, getter) {
	        addFormatToken(0, [token, token.length], 0, getter);
	    }

	    addWeekYearFormatToken('gggg',     'weekYear');
	    addWeekYearFormatToken('ggggg',    'weekYear');
	    addWeekYearFormatToken('GGGG',  'isoWeekYear');
	    addWeekYearFormatToken('GGGGG', 'isoWeekYear');

	    // ALIASES

	    addUnitAlias('weekYear', 'gg');
	    addUnitAlias('isoWeekYear', 'GG');

	    // PARSING

	    addRegexToken('G',      matchSigned);
	    addRegexToken('g',      matchSigned);
	    addRegexToken('GG',     match1to2, match2);
	    addRegexToken('gg',     match1to2, match2);
	    addRegexToken('GGGG',   match1to4, match4);
	    addRegexToken('gggg',   match1to4, match4);
	    addRegexToken('GGGGG',  match1to6, match6);
	    addRegexToken('ggggg',  match1to6, match6);

	    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {
	        week[token.substr(0, 2)] = toInt(input);
	    });

	    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {
	        week[token] = utils_hooks__hooks.parseTwoDigitYear(input);
	    });

	    // MOMENTS

	    function getSetWeekYear (input) {
	        return getSetWeekYearHelper.call(this,
	                input,
	                this.week(),
	                this.weekday(),
	                this.localeData()._week.dow,
	                this.localeData()._week.doy);
	    }

	    function getSetISOWeekYear (input) {
	        return getSetWeekYearHelper.call(this,
	                input, this.isoWeek(), this.isoWeekday(), 1, 4);
	    }

	    function getISOWeeksInYear () {
	        return weeksInYear(this.year(), 1, 4);
	    }

	    function getWeeksInYear () {
	        var weekInfo = this.localeData()._week;
	        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
	    }

	    function getSetWeekYearHelper(input, week, weekday, dow, doy) {
	        var weeksTarget;
	        if (input == null) {
	            return weekOfYear(this, dow, doy).year;
	        } else {
	            weeksTarget = weeksInYear(input, dow, doy);
	            if (week > weeksTarget) {
	                week = weeksTarget;
	            }
	            return setWeekAll.call(this, input, week, weekday, dow, doy);
	        }
	    }

	    function setWeekAll(weekYear, week, weekday, dow, doy) {
	        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),
	            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);

	        this.year(date.getUTCFullYear());
	        this.month(date.getUTCMonth());
	        this.date(date.getUTCDate());
	        return this;
	    }

	    // FORMATTING

	    addFormatToken('Q', 0, 'Qo', 'quarter');

	    // ALIASES

	    addUnitAlias('quarter', 'Q');

	    // PARSING

	    addRegexToken('Q', match1);
	    addParseToken('Q', function (input, array) {
	        array[MONTH] = (toInt(input) - 1) * 3;
	    });

	    // MOMENTS

	    function getSetQuarter (input) {
	        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
	    }

	    // FORMATTING

	    addFormatToken('w', ['ww', 2], 'wo', 'week');
	    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');

	    // ALIASES

	    addUnitAlias('week', 'w');
	    addUnitAlias('isoWeek', 'W');

	    // PARSING

	    addRegexToken('w',  match1to2);
	    addRegexToken('ww', match1to2, match2);
	    addRegexToken('W',  match1to2);
	    addRegexToken('WW', match1to2, match2);

	    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {
	        week[token.substr(0, 1)] = toInt(input);
	    });

	    // HELPERS

	    // LOCALES

	    function localeWeek (mom) {
	        return weekOfYear(mom, this._week.dow, this._week.doy).week;
	    }

	    var defaultLocaleWeek = {
	        dow : 0, // Sunday is the first day of the week.
	        doy : 6  // The week that contains Jan 1st is the first week of the year.
	    };

	    function localeFirstDayOfWeek () {
	        return this._week.dow;
	    }

	    function localeFirstDayOfYear () {
	        return this._week.doy;
	    }

	    // MOMENTS

	    function getSetWeek (input) {
	        var week = this.localeData().week(this);
	        return input == null ? week : this.add((input - week) * 7, 'd');
	    }

	    function getSetISOWeek (input) {
	        var week = weekOfYear(this, 1, 4).week;
	        return input == null ? week : this.add((input - week) * 7, 'd');
	    }

	    // FORMATTING

	    addFormatToken('D', ['DD', 2], 'Do', 'date');

	    // ALIASES

	    addUnitAlias('date', 'D');

	    // PARSING

	    addRegexToken('D',  match1to2);
	    addRegexToken('DD', match1to2, match2);
	    addRegexToken('Do', function (isStrict, locale) {
	        return isStrict ? locale._ordinalParse : locale._ordinalParseLenient;
	    });

	    addParseToken(['D', 'DD'], DATE);
	    addParseToken('Do', function (input, array) {
	        array[DATE] = toInt(input.match(match1to2)[0], 10);
	    });

	    // MOMENTS

	    var getSetDayOfMonth = makeGetSet('Date', true);

	    // FORMATTING

	    addFormatToken('d', 0, 'do', 'day');

	    addFormatToken('dd', 0, 0, function (format) {
	        return this.localeData().weekdaysMin(this, format);
	    });

	    addFormatToken('ddd', 0, 0, function (format) {
	        return this.localeData().weekdaysShort(this, format);
	    });

	    addFormatToken('dddd', 0, 0, function (format) {
	        return this.localeData().weekdays(this, format);
	    });

	    addFormatToken('e', 0, 0, 'weekday');
	    addFormatToken('E', 0, 0, 'isoWeekday');

	    // ALIASES

	    addUnitAlias('day', 'd');
	    addUnitAlias('weekday', 'e');
	    addUnitAlias('isoWeekday', 'E');

	    // PARSING

	    addRegexToken('d',    match1to2);
	    addRegexToken('e',    match1to2);
	    addRegexToken('E',    match1to2);
	    addRegexToken('dd',   function (isStrict, locale) {
	        return locale.weekdaysMinRegex(isStrict);
	    });
	    addRegexToken('ddd',   function (isStrict, locale) {
	        return locale.weekdaysShortRegex(isStrict);
	    });
	    addRegexToken('dddd',   function (isStrict, locale) {
	        return locale.weekdaysRegex(isStrict);
	    });

	    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {
	        var weekday = config._locale.weekdaysParse(input, token, config._strict);
	        // if we didn't get a weekday name, mark the date as invalid
	        if (weekday != null) {
	            week.d = weekday;
	        } else {
	            getParsingFlags(config).invalidWeekday = input;
	        }
	    });

	    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {
	        week[token] = toInt(input);
	    });

	    // HELPERS

	    function parseWeekday(input, locale) {
	        if (typeof input !== 'string') {
	            return input;
	        }

	        if (!isNaN(input)) {
	            return parseInt(input, 10);
	        }

	        input = locale.weekdaysParse(input);
	        if (typeof input === 'number') {
	            return input;
	        }

	        return null;
	    }

	    // LOCALES

	    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');
	    function localeWeekdays (m, format) {
	        return isArray(this._weekdays) ? this._weekdays[m.day()] :
	            this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];
	    }

	    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');
	    function localeWeekdaysShort (m) {
	        return this._weekdaysShort[m.day()];
	    }

	    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');
	    function localeWeekdaysMin (m) {
	        return this._weekdaysMin[m.day()];
	    }

	    function day_of_week__handleStrictParse(weekdayName, format, strict) {
	        var i, ii, mom, llc = weekdayName.toLocaleLowerCase();
	        if (!this._weekdaysParse) {
	            this._weekdaysParse = [];
	            this._shortWeekdaysParse = [];
	            this._minWeekdaysParse = [];

	            for (i = 0; i < 7; ++i) {
	                mom = create_utc__createUTC([2000, 1]).day(i);
	                this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();
	                this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();
	                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();
	            }
	        }

	        if (strict) {
	            if (format === 'dddd') {
	                ii = indexOf.call(this._weekdaysParse, llc);
	                return ii !== -1 ? ii : null;
	            } else if (format === 'ddd') {
	                ii = indexOf.call(this._shortWeekdaysParse, llc);
	                return ii !== -1 ? ii : null;
	            } else {
	                ii = indexOf.call(this._minWeekdaysParse, llc);
	                return ii !== -1 ? ii : null;
	            }
	        } else {
	            if (format === 'dddd') {
	                ii = indexOf.call(this._weekdaysParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._shortWeekdaysParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._minWeekdaysParse, llc);
	                return ii !== -1 ? ii : null;
	            } else if (format === 'ddd') {
	                ii = indexOf.call(this._shortWeekdaysParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._weekdaysParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._minWeekdaysParse, llc);
	                return ii !== -1 ? ii : null;
	            } else {
	                ii = indexOf.call(this._minWeekdaysParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._weekdaysParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._shortWeekdaysParse, llc);
	                return ii !== -1 ? ii : null;
	            }
	        }
	    }

	    function localeWeekdaysParse (weekdayName, format, strict) {
	        var i, mom, regex;

	        if (this._weekdaysParseExact) {
	            return day_of_week__handleStrictParse.call(this, weekdayName, format, strict);
	        }

	        if (!this._weekdaysParse) {
	            this._weekdaysParse = [];
	            this._minWeekdaysParse = [];
	            this._shortWeekdaysParse = [];
	            this._fullWeekdaysParse = [];
	        }

	        for (i = 0; i < 7; i++) {
	            // make the regex if we don't have it already

	            mom = create_utc__createUTC([2000, 1]).day(i);
	            if (strict && !this._fullWeekdaysParse[i]) {
	                this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\.?') + '$', 'i');
	                this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\.?') + '$', 'i');
	                this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\.?') + '$', 'i');
	            }
	            if (!this._weekdaysParse[i]) {
	                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');
	                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
	            }
	            // test the regex
	            if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {
	                return i;
	            } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {
	                return i;
	            } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {
	                return i;
	            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
	                return i;
	            }
	        }
	    }

	    // MOMENTS

	    function getSetDayOfWeek (input) {
	        if (!this.isValid()) {
	            return input != null ? this : NaN;
	        }
	        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
	        if (input != null) {
	            input = parseWeekday(input, this.localeData());
	            return this.add(input - day, 'd');
	        } else {
	            return day;
	        }
	    }

	    function getSetLocaleDayOfWeek (input) {
	        if (!this.isValid()) {
	            return input != null ? this : NaN;
	        }
	        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
	        return input == null ? weekday : this.add(input - weekday, 'd');
	    }

	    function getSetISODayOfWeek (input) {
	        if (!this.isValid()) {
	            return input != null ? this : NaN;
	        }
	        // behaves the same as moment#day except
	        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
	        // as a setter, sunday should belong to the previous week.
	        return input == null ? this.day() || 7 : this.day(this.day() % 7 ? input : input - 7);
	    }

	    var defaultWeekdaysRegex = matchWord;
	    function weekdaysRegex (isStrict) {
	        if (this._weekdaysParseExact) {
	            if (!hasOwnProp(this, '_weekdaysRegex')) {
	                computeWeekdaysParse.call(this);
	            }
	            if (isStrict) {
	                return this._weekdaysStrictRegex;
	            } else {
	                return this._weekdaysRegex;
	            }
	        } else {
	            return this._weekdaysStrictRegex && isStrict ?
	                this._weekdaysStrictRegex : this._weekdaysRegex;
	        }
	    }

	    var defaultWeekdaysShortRegex = matchWord;
	    function weekdaysShortRegex (isStrict) {
	        if (this._weekdaysParseExact) {
	            if (!hasOwnProp(this, '_weekdaysRegex')) {
	                computeWeekdaysParse.call(this);
	            }
	            if (isStrict) {
	                return this._weekdaysShortStrictRegex;
	            } else {
	                return this._weekdaysShortRegex;
	            }
	        } else {
	            return this._weekdaysShortStrictRegex && isStrict ?
	                this._weekdaysShortStrictRegex : this._weekdaysShortRegex;
	        }
	    }

	    var defaultWeekdaysMinRegex = matchWord;
	    function weekdaysMinRegex (isStrict) {
	        if (this._weekdaysParseExact) {
	            if (!hasOwnProp(this, '_weekdaysRegex')) {
	                computeWeekdaysParse.call(this);
	            }
	            if (isStrict) {
	                return this._weekdaysMinStrictRegex;
	            } else {
	                return this._weekdaysMinRegex;
	            }
	        } else {
	            return this._weekdaysMinStrictRegex && isStrict ?
	                this._weekdaysMinStrictRegex : this._weekdaysMinRegex;
	        }
	    }


	    function computeWeekdaysParse () {
	        function cmpLenRev(a, b) {
	            return b.length - a.length;
	        }

	        var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],
	            i, mom, minp, shortp, longp;
	        for (i = 0; i < 7; i++) {
	            // make the regex if we don't have it already
	            mom = create_utc__createUTC([2000, 1]).day(i);
	            minp = this.weekdaysMin(mom, '');
	            shortp = this.weekdaysShort(mom, '');
	            longp = this.weekdays(mom, '');
	            minPieces.push(minp);
	            shortPieces.push(shortp);
	            longPieces.push(longp);
	            mixedPieces.push(minp);
	            mixedPieces.push(shortp);
	            mixedPieces.push(longp);
	        }
	        // Sorting makes sure if one weekday (or abbr) is a prefix of another it
	        // will match the longer piece.
	        minPieces.sort(cmpLenRev);
	        shortPieces.sort(cmpLenRev);
	        longPieces.sort(cmpLenRev);
	        mixedPieces.sort(cmpLenRev);
	        for (i = 0; i < 7; i++) {
	            shortPieces[i] = regexEscape(shortPieces[i]);
	            longPieces[i] = regexEscape(longPieces[i]);
	            mixedPieces[i] = regexEscape(mixedPieces[i]);
	        }

	        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
	        this._weekdaysShortRegex = this._weekdaysRegex;
	        this._weekdaysMinRegex = this._weekdaysRegex;

	        this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
	        this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
	        this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');
	    }

	    // FORMATTING

	    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');

	    // ALIASES

	    addUnitAlias('dayOfYear', 'DDD');

	    // PARSING

	    addRegexToken('DDD',  match1to3);
	    addRegexToken('DDDD', match3);
	    addParseToken(['DDD', 'DDDD'], function (input, array, config) {
	        config._dayOfYear = toInt(input);
	    });

	    // HELPERS

	    // MOMENTS

	    function getSetDayOfYear (input) {
	        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;
	        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');
	    }

	    // FORMATTING

	    function hFormat() {
	        return this.hours() % 12 || 12;
	    }

	    function kFormat() {
	        return this.hours() || 24;
	    }

	    addFormatToken('H', ['HH', 2], 0, 'hour');
	    addFormatToken('h', ['hh', 2], 0, hFormat);
	    addFormatToken('k', ['kk', 2], 0, kFormat);

	    addFormatToken('hmm', 0, 0, function () {
	        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);
	    });

	    addFormatToken('hmmss', 0, 0, function () {
	        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +
	            zeroFill(this.seconds(), 2);
	    });

	    addFormatToken('Hmm', 0, 0, function () {
	        return '' + this.hours() + zeroFill(this.minutes(), 2);
	    });

	    addFormatToken('Hmmss', 0, 0, function () {
	        return '' + this.hours() + zeroFill(this.minutes(), 2) +
	            zeroFill(this.seconds(), 2);
	    });

	    function meridiem (token, lowercase) {
	        addFormatToken(token, 0, 0, function () {
	            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);
	        });
	    }

	    meridiem('a', true);
	    meridiem('A', false);

	    // ALIASES

	    addUnitAlias('hour', 'h');

	    // PARSING

	    function matchMeridiem (isStrict, locale) {
	        return locale._meridiemParse;
	    }

	    addRegexToken('a',  matchMeridiem);
	    addRegexToken('A',  matchMeridiem);
	    addRegexToken('H',  match1to2);
	    addRegexToken('h',  match1to2);
	    addRegexToken('HH', match1to2, match2);
	    addRegexToken('hh', match1to2, match2);

	    addRegexToken('hmm', match3to4);
	    addRegexToken('hmmss', match5to6);
	    addRegexToken('Hmm', match3to4);
	    addRegexToken('Hmmss', match5to6);

	    addParseToken(['H', 'HH'], HOUR);
	    addParseToken(['a', 'A'], function (input, array, config) {
	        config._isPm = config._locale.isPM(input);
	        config._meridiem = input;
	    });
	    addParseToken(['h', 'hh'], function (input, array, config) {
	        array[HOUR] = toInt(input);
	        getParsingFlags(config).bigHour = true;
	    });
	    addParseToken('hmm', function (input, array, config) {
	        var pos = input.length - 2;
	        array[HOUR] = toInt(input.substr(0, pos));
	        array[MINUTE] = toInt(input.substr(pos));
	        getParsingFlags(config).bigHour = true;
	    });
	    addParseToken('hmmss', function (input, array, config) {
	        var pos1 = input.length - 4;
	        var pos2 = input.length - 2;
	        array[HOUR] = toInt(input.substr(0, pos1));
	        array[MINUTE] = toInt(input.substr(pos1, 2));
	        array[SECOND] = toInt(input.substr(pos2));
	        getParsingFlags(config).bigHour = true;
	    });
	    addParseToken('Hmm', function (input, array, config) {
	        var pos = input.length - 2;
	        array[HOUR] = toInt(input.substr(0, pos));
	        array[MINUTE] = toInt(input.substr(pos));
	    });
	    addParseToken('Hmmss', function (input, array, config) {
	        var pos1 = input.length - 4;
	        var pos2 = input.length - 2;
	        array[HOUR] = toInt(input.substr(0, pos1));
	        array[MINUTE] = toInt(input.substr(pos1, 2));
	        array[SECOND] = toInt(input.substr(pos2));
	    });

	    // LOCALES

	    function localeIsPM (input) {
	        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
	        // Using charAt should be more compatible.
	        return ((input + '').toLowerCase().charAt(0) === 'p');
	    }

	    var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i;
	    function localeMeridiem (hours, minutes, isLower) {
	        if (hours > 11) {
	            return isLower ? 'pm' : 'PM';
	        } else {
	            return isLower ? 'am' : 'AM';
	        }
	    }


	    // MOMENTS

	    // Setting the hour should keep the time, because the user explicitly
	    // specified which hour he wants. So trying to maintain the same hour (in
	    // a new timezone) makes sense. Adding/subtracting hours does not follow
	    // this rule.
	    var getSetHour = makeGetSet('Hours', true);

	    // FORMATTING

	    addFormatToken('m', ['mm', 2], 0, 'minute');

	    // ALIASES

	    addUnitAlias('minute', 'm');

	    // PARSING

	    addRegexToken('m',  match1to2);
	    addRegexToken('mm', match1to2, match2);
	    addParseToken(['m', 'mm'], MINUTE);

	    // MOMENTS

	    var getSetMinute = makeGetSet('Minutes', false);

	    // FORMATTING

	    addFormatToken('s', ['ss', 2], 0, 'second');

	    // ALIASES

	    addUnitAlias('second', 's');

	    // PARSING

	    addRegexToken('s',  match1to2);
	    addRegexToken('ss', match1to2, match2);
	    addParseToken(['s', 'ss'], SECOND);

	    // MOMENTS

	    var getSetSecond = makeGetSet('Seconds', false);

	    // FORMATTING

	    addFormatToken('S', 0, 0, function () {
	        return ~~(this.millisecond() / 100);
	    });

	    addFormatToken(0, ['SS', 2], 0, function () {
	        return ~~(this.millisecond() / 10);
	    });

	    addFormatToken(0, ['SSS', 3], 0, 'millisecond');
	    addFormatToken(0, ['SSSS', 4], 0, function () {
	        return this.millisecond() * 10;
	    });
	    addFormatToken(0, ['SSSSS', 5], 0, function () {
	        return this.millisecond() * 100;
	    });
	    addFormatToken(0, ['SSSSSS', 6], 0, function () {
	        return this.millisecond() * 1000;
	    });
	    addFormatToken(0, ['SSSSSSS', 7], 0, function () {
	        return this.millisecond() * 10000;
	    });
	    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
	        return this.millisecond() * 100000;
	    });
	    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
	        return this.millisecond() * 1000000;
	    });


	    // ALIASES

	    addUnitAlias('millisecond', 'ms');

	    // PARSING

	    addRegexToken('S',    match1to3, match1);
	    addRegexToken('SS',   match1to3, match2);
	    addRegexToken('SSS',  match1to3, match3);

	    var token;
	    for (token = 'SSSS'; token.length <= 9; token += 'S') {
	        addRegexToken(token, matchUnsigned);
	    }

	    function parseMs(input, array) {
	        array[MILLISECOND] = toInt(('0.' + input) * 1000);
	    }

	    for (token = 'S'; token.length <= 9; token += 'S') {
	        addParseToken(token, parseMs);
	    }
	    // MOMENTS

	    var getSetMillisecond = makeGetSet('Milliseconds', false);

	    // FORMATTING

	    addFormatToken('z',  0, 0, 'zoneAbbr');
	    addFormatToken('zz', 0, 0, 'zoneName');

	    // MOMENTS

	    function getZoneAbbr () {
	        return this._isUTC ? 'UTC' : '';
	    }

	    function getZoneName () {
	        return this._isUTC ? 'Coordinated Universal Time' : '';
	    }

	    var momentPrototype__proto = Moment.prototype;

	    momentPrototype__proto.add               = add_subtract__add;
	    momentPrototype__proto.calendar          = moment_calendar__calendar;
	    momentPrototype__proto.clone             = clone;
	    momentPrototype__proto.diff              = diff;
	    momentPrototype__proto.endOf             = endOf;
	    momentPrototype__proto.format            = format;
	    momentPrototype__proto.from              = from;
	    momentPrototype__proto.fromNow           = fromNow;
	    momentPrototype__proto.to                = to;
	    momentPrototype__proto.toNow             = toNow;
	    momentPrototype__proto.get               = getSet;
	    momentPrototype__proto.invalidAt         = invalidAt;
	    momentPrototype__proto.isAfter           = isAfter;
	    momentPrototype__proto.isBefore          = isBefore;
	    momentPrototype__proto.isBetween         = isBetween;
	    momentPrototype__proto.isSame            = isSame;
	    momentPrototype__proto.isSameOrAfter     = isSameOrAfter;
	    momentPrototype__proto.isSameOrBefore    = isSameOrBefore;
	    momentPrototype__proto.isValid           = moment_valid__isValid;
	    momentPrototype__proto.lang              = lang;
	    momentPrototype__proto.locale            = locale;
	    momentPrototype__proto.localeData        = localeData;
	    momentPrototype__proto.max               = prototypeMax;
	    momentPrototype__proto.min               = prototypeMin;
	    momentPrototype__proto.parsingFlags      = parsingFlags;
	    momentPrototype__proto.set               = getSet;
	    momentPrototype__proto.startOf           = startOf;
	    momentPrototype__proto.subtract          = add_subtract__subtract;
	    momentPrototype__proto.toArray           = toArray;
	    momentPrototype__proto.toObject          = toObject;
	    momentPrototype__proto.toDate            = toDate;
	    momentPrototype__proto.toISOString       = moment_format__toISOString;
	    momentPrototype__proto.toJSON            = toJSON;
	    momentPrototype__proto.toString          = toString;
	    momentPrototype__proto.unix              = unix;
	    momentPrototype__proto.valueOf           = to_type__valueOf;
	    momentPrototype__proto.creationData      = creationData;

	    // Year
	    momentPrototype__proto.year       = getSetYear;
	    momentPrototype__proto.isLeapYear = getIsLeapYear;

	    // Week Year
	    momentPrototype__proto.weekYear    = getSetWeekYear;
	    momentPrototype__proto.isoWeekYear = getSetISOWeekYear;

	    // Quarter
	    momentPrototype__proto.quarter = momentPrototype__proto.quarters = getSetQuarter;

	    // Month
	    momentPrototype__proto.month       = getSetMonth;
	    momentPrototype__proto.daysInMonth = getDaysInMonth;

	    // Week
	    momentPrototype__proto.week           = momentPrototype__proto.weeks        = getSetWeek;
	    momentPrototype__proto.isoWeek        = momentPrototype__proto.isoWeeks     = getSetISOWeek;
	    momentPrototype__proto.weeksInYear    = getWeeksInYear;
	    momentPrototype__proto.isoWeeksInYear = getISOWeeksInYear;

	    // Day
	    momentPrototype__proto.date       = getSetDayOfMonth;
	    momentPrototype__proto.day        = momentPrototype__proto.days             = getSetDayOfWeek;
	    momentPrototype__proto.weekday    = getSetLocaleDayOfWeek;
	    momentPrototype__proto.isoWeekday = getSetISODayOfWeek;
	    momentPrototype__proto.dayOfYear  = getSetDayOfYear;

	    // Hour
	    momentPrototype__proto.hour = momentPrototype__proto.hours = getSetHour;

	    // Minute
	    momentPrototype__proto.minute = momentPrototype__proto.minutes = getSetMinute;

	    // Second
	    momentPrototype__proto.second = momentPrototype__proto.seconds = getSetSecond;

	    // Millisecond
	    momentPrototype__proto.millisecond = momentPrototype__proto.milliseconds = getSetMillisecond;

	    // Offset
	    momentPrototype__proto.utcOffset            = getSetOffset;
	    momentPrototype__proto.utc                  = setOffsetToUTC;
	    momentPrototype__proto.local                = setOffsetToLocal;
	    momentPrototype__proto.parseZone            = setOffsetToParsedOffset;
	    momentPrototype__proto.hasAlignedHourOffset = hasAlignedHourOffset;
	    momentPrototype__proto.isDST                = isDaylightSavingTime;
	    momentPrototype__proto.isDSTShifted         = isDaylightSavingTimeShifted;
	    momentPrototype__proto.isLocal              = isLocal;
	    momentPrototype__proto.isUtcOffset          = isUtcOffset;
	    momentPrototype__proto.isUtc                = isUtc;
	    momentPrototype__proto.isUTC                = isUtc;

	    // Timezone
	    momentPrototype__proto.zoneAbbr = getZoneAbbr;
	    momentPrototype__proto.zoneName = getZoneName;

	    // Deprecations
	    momentPrototype__proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);
	    momentPrototype__proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);
	    momentPrototype__proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);
	    momentPrototype__proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. https://github.com/moment/moment/issues/1779', getSetZone);

	    var momentPrototype = momentPrototype__proto;

	    function moment__createUnix (input) {
	        return local__createLocal(input * 1000);
	    }

	    function moment__createInZone () {
	        return local__createLocal.apply(null, arguments).parseZone();
	    }

	    var defaultCalendar = {
	        sameDay : '[Today at] LT',
	        nextDay : '[Tomorrow at] LT',
	        nextWeek : 'dddd [at] LT',
	        lastDay : '[Yesterday at] LT',
	        lastWeek : '[Last] dddd [at] LT',
	        sameElse : 'L'
	    };

	    function locale_calendar__calendar (key, mom, now) {
	        var output = this._calendar[key];
	        return isFunction(output) ? output.call(mom, now) : output;
	    }

	    var defaultLongDateFormat = {
	        LTS  : 'h:mm:ss A',
	        LT   : 'h:mm A',
	        L    : 'MM/DD/YYYY',
	        LL   : 'MMMM D, YYYY',
	        LLL  : 'MMMM D, YYYY h:mm A',
	        LLLL : 'dddd, MMMM D, YYYY h:mm A'
	    };

	    function longDateFormat (key) {
	        var format = this._longDateFormat[key],
	            formatUpper = this._longDateFormat[key.toUpperCase()];

	        if (format || !formatUpper) {
	            return format;
	        }

	        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {
	            return val.slice(1);
	        });

	        return this._longDateFormat[key];
	    }

	    var defaultInvalidDate = 'Invalid date';

	    function invalidDate () {
	        return this._invalidDate;
	    }

	    var defaultOrdinal = '%d';
	    var defaultOrdinalParse = /\d{1,2}/;

	    function ordinal (number) {
	        return this._ordinal.replace('%d', number);
	    }

	    function preParsePostFormat (string) {
	        return string;
	    }

	    var defaultRelativeTime = {
	        future : 'in %s',
	        past   : '%s ago',
	        s  : 'a few seconds',
	        m  : 'a minute',
	        mm : '%d minutes',
	        h  : 'an hour',
	        hh : '%d hours',
	        d  : 'a day',
	        dd : '%d days',
	        M  : 'a month',
	        MM : '%d months',
	        y  : 'a year',
	        yy : '%d years'
	    };

	    function relative__relativeTime (number, withoutSuffix, string, isFuture) {
	        var output = this._relativeTime[string];
	        return (isFunction(output)) ?
	            output(number, withoutSuffix, string, isFuture) :
	            output.replace(/%d/i, number);
	    }

	    function pastFuture (diff, output) {
	        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
	        return isFunction(format) ? format(output) : format.replace(/%s/i, output);
	    }

	    var prototype__proto = Locale.prototype;

	    prototype__proto._calendar       = defaultCalendar;
	    prototype__proto.calendar        = locale_calendar__calendar;
	    prototype__proto._longDateFormat = defaultLongDateFormat;
	    prototype__proto.longDateFormat  = longDateFormat;
	    prototype__proto._invalidDate    = defaultInvalidDate;
	    prototype__proto.invalidDate     = invalidDate;
	    prototype__proto._ordinal        = defaultOrdinal;
	    prototype__proto.ordinal         = ordinal;
	    prototype__proto._ordinalParse   = defaultOrdinalParse;
	    prototype__proto.preparse        = preParsePostFormat;
	    prototype__proto.postformat      = preParsePostFormat;
	    prototype__proto._relativeTime   = defaultRelativeTime;
	    prototype__proto.relativeTime    = relative__relativeTime;
	    prototype__proto.pastFuture      = pastFuture;
	    prototype__proto.set             = locale_set__set;

	    // Month
	    prototype__proto.months            =        localeMonths;
	    prototype__proto._months           = defaultLocaleMonths;
	    prototype__proto.monthsShort       =        localeMonthsShort;
	    prototype__proto._monthsShort      = defaultLocaleMonthsShort;
	    prototype__proto.monthsParse       =        localeMonthsParse;
	    prototype__proto._monthsRegex      = defaultMonthsRegex;
	    prototype__proto.monthsRegex       = monthsRegex;
	    prototype__proto._monthsShortRegex = defaultMonthsShortRegex;
	    prototype__proto.monthsShortRegex  = monthsShortRegex;

	    // Week
	    prototype__proto.week = localeWeek;
	    prototype__proto._week = defaultLocaleWeek;
	    prototype__proto.firstDayOfYear = localeFirstDayOfYear;
	    prototype__proto.firstDayOfWeek = localeFirstDayOfWeek;

	    // Day of Week
	    prototype__proto.weekdays       =        localeWeekdays;
	    prototype__proto._weekdays      = defaultLocaleWeekdays;
	    prototype__proto.weekdaysMin    =        localeWeekdaysMin;
	    prototype__proto._weekdaysMin   = defaultLocaleWeekdaysMin;
	    prototype__proto.weekdaysShort  =        localeWeekdaysShort;
	    prototype__proto._weekdaysShort = defaultLocaleWeekdaysShort;
	    prototype__proto.weekdaysParse  =        localeWeekdaysParse;

	    prototype__proto._weekdaysRegex      = defaultWeekdaysRegex;
	    prototype__proto.weekdaysRegex       =        weekdaysRegex;
	    prototype__proto._weekdaysShortRegex = defaultWeekdaysShortRegex;
	    prototype__proto.weekdaysShortRegex  =        weekdaysShortRegex;
	    prototype__proto._weekdaysMinRegex   = defaultWeekdaysMinRegex;
	    prototype__proto.weekdaysMinRegex    =        weekdaysMinRegex;

	    // Hours
	    prototype__proto.isPM = localeIsPM;
	    prototype__proto._meridiemParse = defaultLocaleMeridiemParse;
	    prototype__proto.meridiem = localeMeridiem;

	    function lists__get (format, index, field, setter) {
	        var locale = locale_locales__getLocale();
	        var utc = create_utc__createUTC().set(setter, index);
	        return locale[field](utc, format);
	    }

	    function listMonthsImpl (format, index, field) {
	        if (typeof format === 'number') {
	            index = format;
	            format = undefined;
	        }

	        format = format || '';

	        if (index != null) {
	            return lists__get(format, index, field, 'month');
	        }

	        var i;
	        var out = [];
	        for (i = 0; i < 12; i++) {
	            out[i] = lists__get(format, i, field, 'month');
	        }
	        return out;
	    }

	    // ()
	    // (5)
	    // (fmt, 5)
	    // (fmt)
	    // (true)
	    // (true, 5)
	    // (true, fmt, 5)
	    // (true, fmt)
	    function listWeekdaysImpl (localeSorted, format, index, field) {
	        if (typeof localeSorted === 'boolean') {
	            if (typeof format === 'number') {
	                index = format;
	                format = undefined;
	            }

	            format = format || '';
	        } else {
	            format = localeSorted;
	            index = format;
	            localeSorted = false;

	            if (typeof format === 'number') {
	                index = format;
	                format = undefined;
	            }

	            format = format || '';
	        }

	        var locale = locale_locales__getLocale(),
	            shift = localeSorted ? locale._week.dow : 0;

	        if (index != null) {
	            return lists__get(format, (index + shift) % 7, field, 'day');
	        }

	        var i;
	        var out = [];
	        for (i = 0; i < 7; i++) {
	            out[i] = lists__get(format, (i + shift) % 7, field, 'day');
	        }
	        return out;
	    }

	    function lists__listMonths (format, index) {
	        return listMonthsImpl(format, index, 'months');
	    }

	    function lists__listMonthsShort (format, index) {
	        return listMonthsImpl(format, index, 'monthsShort');
	    }

	    function lists__listWeekdays (localeSorted, format, index) {
	        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');
	    }

	    function lists__listWeekdaysShort (localeSorted, format, index) {
	        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');
	    }

	    function lists__listWeekdaysMin (localeSorted, format, index) {
	        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');
	    }

	    locale_locales__getSetGlobalLocale('en', {
	        ordinalParse: /\d{1,2}(th|st|nd|rd)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (toInt(number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	            return number + output;
	        }
	    });

	    // Side effect imports
	    utils_hooks__hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', locale_locales__getSetGlobalLocale);
	    utils_hooks__hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', locale_locales__getLocale);

	    var mathAbs = Math.abs;

	    function duration_abs__abs () {
	        var data           = this._data;

	        this._milliseconds = mathAbs(this._milliseconds);
	        this._days         = mathAbs(this._days);
	        this._months       = mathAbs(this._months);

	        data.milliseconds  = mathAbs(data.milliseconds);
	        data.seconds       = mathAbs(data.seconds);
	        data.minutes       = mathAbs(data.minutes);
	        data.hours         = mathAbs(data.hours);
	        data.months        = mathAbs(data.months);
	        data.years         = mathAbs(data.years);

	        return this;
	    }

	    function duration_add_subtract__addSubtract (duration, input, value, direction) {
	        var other = create__createDuration(input, value);

	        duration._milliseconds += direction * other._milliseconds;
	        duration._days         += direction * other._days;
	        duration._months       += direction * other._months;

	        return duration._bubble();
	    }

	    // supports only 2.0-style add(1, 's') or add(duration)
	    function duration_add_subtract__add (input, value) {
	        return duration_add_subtract__addSubtract(this, input, value, 1);
	    }

	    // supports only 2.0-style subtract(1, 's') or subtract(duration)
	    function duration_add_subtract__subtract (input, value) {
	        return duration_add_subtract__addSubtract(this, input, value, -1);
	    }

	    function absCeil (number) {
	        if (number < 0) {
	            return Math.floor(number);
	        } else {
	            return Math.ceil(number);
	        }
	    }

	    function bubble () {
	        var milliseconds = this._milliseconds;
	        var days         = this._days;
	        var months       = this._months;
	        var data         = this._data;
	        var seconds, minutes, hours, years, monthsFromDays;

	        // if we have a mix of positive and negative values, bubble down first
	        // check: https://github.com/moment/moment/issues/2166
	        if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||
	                (milliseconds <= 0 && days <= 0 && months <= 0))) {
	            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
	            days = 0;
	            months = 0;
	        }

	        // The following code bubbles up values, see the tests for
	        // examples of what that means.
	        data.milliseconds = milliseconds % 1000;

	        seconds           = absFloor(milliseconds / 1000);
	        data.seconds      = seconds % 60;

	        minutes           = absFloor(seconds / 60);
	        data.minutes      = minutes % 60;

	        hours             = absFloor(minutes / 60);
	        data.hours        = hours % 24;

	        days += absFloor(hours / 24);

	        // convert days to months
	        monthsFromDays = absFloor(daysToMonths(days));
	        months += monthsFromDays;
	        days -= absCeil(monthsToDays(monthsFromDays));

	        // 12 months -> 1 year
	        years = absFloor(months / 12);
	        months %= 12;

	        data.days   = days;
	        data.months = months;
	        data.years  = years;

	        return this;
	    }

	    function daysToMonths (days) {
	        // 400 years have 146097 days (taking into account leap year rules)
	        // 400 years have 12 months === 4800
	        return days * 4800 / 146097;
	    }

	    function monthsToDays (months) {
	        // the reverse of daysToMonths
	        return months * 146097 / 4800;
	    }

	    function as (units) {
	        var days;
	        var months;
	        var milliseconds = this._milliseconds;

	        units = normalizeUnits(units);

	        if (units === 'month' || units === 'year') {
	            days   = this._days   + milliseconds / 864e5;
	            months = this._months + daysToMonths(days);
	            return units === 'month' ? months : months / 12;
	        } else {
	            // handle milliseconds separately because of floating point math errors (issue #1867)
	            days = this._days + Math.round(monthsToDays(this._months));
	            switch (units) {
	                case 'week'   : return days / 7     + milliseconds / 6048e5;
	                case 'day'    : return days         + milliseconds / 864e5;
	                case 'hour'   : return days * 24    + milliseconds / 36e5;
	                case 'minute' : return days * 1440  + milliseconds / 6e4;
	                case 'second' : return days * 86400 + milliseconds / 1000;
	                // Math.floor prevents floating point math errors here
	                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;
	                default: throw new Error('Unknown unit ' + units);
	            }
	        }
	    }

	    // TODO: Use this.as('ms')?
	    function duration_as__valueOf () {
	        return (
	            this._milliseconds +
	            this._days * 864e5 +
	            (this._months % 12) * 2592e6 +
	            toInt(this._months / 12) * 31536e6
	        );
	    }

	    function makeAs (alias) {
	        return function () {
	            return this.as(alias);
	        };
	    }

	    var asMilliseconds = makeAs('ms');
	    var asSeconds      = makeAs('s');
	    var asMinutes      = makeAs('m');
	    var asHours        = makeAs('h');
	    var asDays         = makeAs('d');
	    var asWeeks        = makeAs('w');
	    var asMonths       = makeAs('M');
	    var asYears        = makeAs('y');

	    function duration_get__get (units) {
	        units = normalizeUnits(units);
	        return this[units + 's']();
	    }

	    function makeGetter(name) {
	        return function () {
	            return this._data[name];
	        };
	    }

	    var milliseconds = makeGetter('milliseconds');
	    var seconds      = makeGetter('seconds');
	    var minutes      = makeGetter('minutes');
	    var hours        = makeGetter('hours');
	    var days         = makeGetter('days');
	    var months       = makeGetter('months');
	    var years        = makeGetter('years');

	    function weeks () {
	        return absFloor(this.days() / 7);
	    }

	    var round = Math.round;
	    var thresholds = {
	        s: 45,  // seconds to minute
	        m: 45,  // minutes to hour
	        h: 22,  // hours to day
	        d: 26,  // days to month
	        M: 11   // months to year
	    };

	    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
	    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
	        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
	    }

	    function duration_humanize__relativeTime (posNegDuration, withoutSuffix, locale) {
	        var duration = create__createDuration(posNegDuration).abs();
	        var seconds  = round(duration.as('s'));
	        var minutes  = round(duration.as('m'));
	        var hours    = round(duration.as('h'));
	        var days     = round(duration.as('d'));
	        var months   = round(duration.as('M'));
	        var years    = round(duration.as('y'));

	        var a = seconds < thresholds.s && ['s', seconds]  ||
	                minutes <= 1           && ['m']           ||
	                minutes < thresholds.m && ['mm', minutes] ||
	                hours   <= 1           && ['h']           ||
	                hours   < thresholds.h && ['hh', hours]   ||
	                days    <= 1           && ['d']           ||
	                days    < thresholds.d && ['dd', days]    ||
	                months  <= 1           && ['M']           ||
	                months  < thresholds.M && ['MM', months]  ||
	                years   <= 1           && ['y']           || ['yy', years];

	        a[2] = withoutSuffix;
	        a[3] = +posNegDuration > 0;
	        a[4] = locale;
	        return substituteTimeAgo.apply(null, a);
	    }

	    // This function allows you to set a threshold for relative time strings
	    function duration_humanize__getSetRelativeTimeThreshold (threshold, limit) {
	        if (thresholds[threshold] === undefined) {
	            return false;
	        }
	        if (limit === undefined) {
	            return thresholds[threshold];
	        }
	        thresholds[threshold] = limit;
	        return true;
	    }

	    function humanize (withSuffix) {
	        var locale = this.localeData();
	        var output = duration_humanize__relativeTime(this, !withSuffix, locale);

	        if (withSuffix) {
	            output = locale.pastFuture(+this, output);
	        }

	        return locale.postformat(output);
	    }

	    var iso_string__abs = Math.abs;

	    function iso_string__toISOString() {
	        // for ISO strings we do not use the normal bubbling rules:
	        //  * milliseconds bubble up until they become hours
	        //  * days do not bubble at all
	        //  * months bubble up until they become years
	        // This is because there is no context-free conversion between hours and days
	        // (think of clock changes)
	        // and also not between days and months (28-31 days per month)
	        var seconds = iso_string__abs(this._milliseconds) / 1000;
	        var days         = iso_string__abs(this._days);
	        var months       = iso_string__abs(this._months);
	        var minutes, hours, years;

	        // 3600 seconds -> 60 minutes -> 1 hour
	        minutes           = absFloor(seconds / 60);
	        hours             = absFloor(minutes / 60);
	        seconds %= 60;
	        minutes %= 60;

	        // 12 months -> 1 year
	        years  = absFloor(months / 12);
	        months %= 12;


	        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
	        var Y = years;
	        var M = months;
	        var D = days;
	        var h = hours;
	        var m = minutes;
	        var s = seconds;
	        var total = this.asSeconds();

	        if (!total) {
	            // this is the same as C#'s (Noda) and python (isodate)...
	            // but not other JS (goog.date)
	            return 'P0D';
	        }

	        return (total < 0 ? '-' : '') +
	            'P' +
	            (Y ? Y + 'Y' : '') +
	            (M ? M + 'M' : '') +
	            (D ? D + 'D' : '') +
	            ((h || m || s) ? 'T' : '') +
	            (h ? h + 'H' : '') +
	            (m ? m + 'M' : '') +
	            (s ? s + 'S' : '');
	    }

	    var duration_prototype__proto = Duration.prototype;

	    duration_prototype__proto.abs            = duration_abs__abs;
	    duration_prototype__proto.add            = duration_add_subtract__add;
	    duration_prototype__proto.subtract       = duration_add_subtract__subtract;
	    duration_prototype__proto.as             = as;
	    duration_prototype__proto.asMilliseconds = asMilliseconds;
	    duration_prototype__proto.asSeconds      = asSeconds;
	    duration_prototype__proto.asMinutes      = asMinutes;
	    duration_prototype__proto.asHours        = asHours;
	    duration_prototype__proto.asDays         = asDays;
	    duration_prototype__proto.asWeeks        = asWeeks;
	    duration_prototype__proto.asMonths       = asMonths;
	    duration_prototype__proto.asYears        = asYears;
	    duration_prototype__proto.valueOf        = duration_as__valueOf;
	    duration_prototype__proto._bubble        = bubble;
	    duration_prototype__proto.get            = duration_get__get;
	    duration_prototype__proto.milliseconds   = milliseconds;
	    duration_prototype__proto.seconds        = seconds;
	    duration_prototype__proto.minutes        = minutes;
	    duration_prototype__proto.hours          = hours;
	    duration_prototype__proto.days           = days;
	    duration_prototype__proto.weeks          = weeks;
	    duration_prototype__proto.months         = months;
	    duration_prototype__proto.years          = years;
	    duration_prototype__proto.humanize       = humanize;
	    duration_prototype__proto.toISOString    = iso_string__toISOString;
	    duration_prototype__proto.toString       = iso_string__toISOString;
	    duration_prototype__proto.toJSON         = iso_string__toISOString;
	    duration_prototype__proto.locale         = locale;
	    duration_prototype__proto.localeData     = localeData;

	    // Deprecations
	    duration_prototype__proto.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', iso_string__toISOString);
	    duration_prototype__proto.lang = lang;

	    // Side effect imports

	    // FORMATTING

	    addFormatToken('X', 0, 0, 'unix');
	    addFormatToken('x', 0, 0, 'valueOf');

	    // PARSING

	    addRegexToken('x', matchSigned);
	    addRegexToken('X', matchTimestamp);
	    addParseToken('X', function (input, array, config) {
	        config._d = new Date(parseFloat(input, 10) * 1000);
	    });
	    addParseToken('x', function (input, array, config) {
	        config._d = new Date(toInt(input));
	    });

	    // Side effect imports


	    utils_hooks__hooks.version = '2.13.0';

	    setHookCallback(local__createLocal);

	    utils_hooks__hooks.fn                    = momentPrototype;
	    utils_hooks__hooks.min                   = min;
	    utils_hooks__hooks.max                   = max;
	    utils_hooks__hooks.now                   = now;
	    utils_hooks__hooks.utc                   = create_utc__createUTC;
	    utils_hooks__hooks.unix                  = moment__createUnix;
	    utils_hooks__hooks.months                = lists__listMonths;
	    utils_hooks__hooks.isDate                = isDate;
	    utils_hooks__hooks.locale                = locale_locales__getSetGlobalLocale;
	    utils_hooks__hooks.invalid               = valid__createInvalid;
	    utils_hooks__hooks.duration              = create__createDuration;
	    utils_hooks__hooks.isMoment              = isMoment;
	    utils_hooks__hooks.weekdays              = lists__listWeekdays;
	    utils_hooks__hooks.parseZone             = moment__createInZone;
	    utils_hooks__hooks.localeData            = locale_locales__getLocale;
	    utils_hooks__hooks.isDuration            = isDuration;
	    utils_hooks__hooks.monthsShort           = lists__listMonthsShort;
	    utils_hooks__hooks.weekdaysMin           = lists__listWeekdaysMin;
	    utils_hooks__hooks.defineLocale          = defineLocale;
	    utils_hooks__hooks.updateLocale          = updateLocale;
	    utils_hooks__hooks.locales               = locale_locales__listLocales;
	    utils_hooks__hooks.weekdaysShort         = lists__listWeekdaysShort;
	    utils_hooks__hooks.normalizeUnits        = normalizeUnits;
	    utils_hooks__hooks.relativeTimeThreshold = duration_humanize__getSetRelativeTimeThreshold;
	    utils_hooks__hooks.prototype             = momentPrototype;

	    var _moment = utils_hooks__hooks;

	    return _moment;

	}));
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(38)(module)))

/***/ }),
/* 367 */
/***/ (function(module, exports, __webpack_require__) {

	var map = {
		"./af": 368,
		"./af.js": 368,
		"./ar": 369,
		"./ar-ma": 370,
		"./ar-ma.js": 370,
		"./ar-sa": 371,
		"./ar-sa.js": 371,
		"./ar-tn": 372,
		"./ar-tn.js": 372,
		"./ar.js": 369,
		"./az": 373,
		"./az.js": 373,
		"./be": 374,
		"./be.js": 374,
		"./bg": 375,
		"./bg.js": 375,
		"./bn": 376,
		"./bn.js": 376,
		"./bo": 377,
		"./bo.js": 377,
		"./br": 378,
		"./br.js": 378,
		"./bs": 379,
		"./bs.js": 379,
		"./ca": 380,
		"./ca.js": 380,
		"./cs": 381,
		"./cs.js": 381,
		"./cv": 382,
		"./cv.js": 382,
		"./cy": 383,
		"./cy.js": 383,
		"./da": 384,
		"./da.js": 384,
		"./de": 385,
		"./de-at": 386,
		"./de-at.js": 386,
		"./de.js": 385,
		"./dv": 387,
		"./dv.js": 387,
		"./el": 388,
		"./el.js": 388,
		"./en-au": 389,
		"./en-au.js": 389,
		"./en-ca": 390,
		"./en-ca.js": 390,
		"./en-gb": 391,
		"./en-gb.js": 391,
		"./en-ie": 392,
		"./en-ie.js": 392,
		"./en-nz": 393,
		"./en-nz.js": 393,
		"./eo": 394,
		"./eo.js": 394,
		"./es": 395,
		"./es.js": 395,
		"./et": 396,
		"./et.js": 396,
		"./eu": 397,
		"./eu.js": 397,
		"./fa": 398,
		"./fa.js": 398,
		"./fi": 399,
		"./fi.js": 399,
		"./fo": 400,
		"./fo.js": 400,
		"./fr": 401,
		"./fr-ca": 402,
		"./fr-ca.js": 402,
		"./fr-ch": 403,
		"./fr-ch.js": 403,
		"./fr.js": 401,
		"./fy": 404,
		"./fy.js": 404,
		"./gd": 405,
		"./gd.js": 405,
		"./gl": 406,
		"./gl.js": 406,
		"./he": 407,
		"./he.js": 407,
		"./hi": 408,
		"./hi.js": 408,
		"./hr": 409,
		"./hr.js": 409,
		"./hu": 410,
		"./hu.js": 410,
		"./hy-am": 411,
		"./hy-am.js": 411,
		"./id": 412,
		"./id.js": 412,
		"./is": 413,
		"./is.js": 413,
		"./it": 414,
		"./it.js": 414,
		"./ja": 415,
		"./ja.js": 415,
		"./jv": 416,
		"./jv.js": 416,
		"./ka": 417,
		"./ka.js": 417,
		"./kk": 418,
		"./kk.js": 418,
		"./km": 419,
		"./km.js": 419,
		"./ko": 420,
		"./ko.js": 420,
		"./ky": 421,
		"./ky.js": 421,
		"./lb": 422,
		"./lb.js": 422,
		"./lo": 423,
		"./lo.js": 423,
		"./lt": 424,
		"./lt.js": 424,
		"./lv": 425,
		"./lv.js": 425,
		"./me": 426,
		"./me.js": 426,
		"./mk": 427,
		"./mk.js": 427,
		"./ml": 428,
		"./ml.js": 428,
		"./mr": 429,
		"./mr.js": 429,
		"./ms": 430,
		"./ms-my": 431,
		"./ms-my.js": 431,
		"./ms.js": 430,
		"./my": 432,
		"./my.js": 432,
		"./nb": 433,
		"./nb.js": 433,
		"./ne": 434,
		"./ne.js": 434,
		"./nl": 435,
		"./nl.js": 435,
		"./nn": 436,
		"./nn.js": 436,
		"./pa-in": 437,
		"./pa-in.js": 437,
		"./pl": 438,
		"./pl.js": 438,
		"./pt": 439,
		"./pt-br": 440,
		"./pt-br.js": 440,
		"./pt.js": 439,
		"./ro": 441,
		"./ro.js": 441,
		"./ru": 442,
		"./ru.js": 442,
		"./se": 443,
		"./se.js": 443,
		"./si": 444,
		"./si.js": 444,
		"./sk": 445,
		"./sk.js": 445,
		"./sl": 446,
		"./sl.js": 446,
		"./sq": 447,
		"./sq.js": 447,
		"./sr": 448,
		"./sr-cyrl": 449,
		"./sr-cyrl.js": 449,
		"./sr.js": 448,
		"./ss": 450,
		"./ss.js": 450,
		"./sv": 451,
		"./sv.js": 451,
		"./sw": 452,
		"./sw.js": 452,
		"./ta": 453,
		"./ta.js": 453,
		"./te": 454,
		"./te.js": 454,
		"./th": 455,
		"./th.js": 455,
		"./tl-ph": 456,
		"./tl-ph.js": 456,
		"./tlh": 457,
		"./tlh.js": 457,
		"./tr": 458,
		"./tr.js": 458,
		"./tzl": 459,
		"./tzl.js": 459,
		"./tzm": 460,
		"./tzm-latn": 461,
		"./tzm-latn.js": 461,
		"./tzm.js": 460,
		"./uk": 462,
		"./uk.js": 462,
		"./uz": 463,
		"./uz.js": 463,
		"./vi": 464,
		"./vi.js": 464,
		"./x-pseudo": 465,
		"./x-pseudo.js": 465,
		"./zh-cn": 466,
		"./zh-cn.js": 466,
		"./zh-tw": 467,
		"./zh-tw.js": 467
	};
	function webpackContext(req) {
		return __webpack_require__(webpackContextResolve(req));
	};
	function webpackContextResolve(req) {
		return map[req] || (function() { throw new Error("Cannot find module '" + req + "'.") }());
	};
	webpackContext.keys = function webpackContextKeys() {
		return Object.keys(map);
	};
	webpackContext.resolve = webpackContextResolve;
	module.exports = webpackContext;
	webpackContext.id = 367;


/***/ }),
/* 368 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : afrikaans (af)
	//! author : Werner Mollentze : https://github.com/wernerm

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var af = moment.defineLocale('af', {
	        months : 'Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des'.split('_'),
	        weekdays : 'Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag'.split('_'),
	        weekdaysShort : 'Son_Maa_Din_Woe_Don_Vry_Sat'.split('_'),
	        weekdaysMin : 'So_Ma_Di_Wo_Do_Vr_Sa'.split('_'),
	        meridiemParse: /vm|nm/i,
	        isPM : function (input) {
	            return /^nm$/i.test(input);
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 12) {
	                return isLower ? 'vm' : 'VM';
	            } else {
	                return isLower ? 'nm' : 'NM';
	            }
	        },
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Vandag om] LT',
	            nextDay : '[Môre om] LT',
	            nextWeek : 'dddd [om] LT',
	            lastDay : '[Gister om] LT',
	            lastWeek : '[Laas] dddd [om] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'oor %s',
	            past : '%s gelede',
	            s : '\'n paar sekondes',
	            m : '\'n minuut',
	            mm : '%d minute',
	            h : '\'n uur',
	            hh : '%d ure',
	            d : '\'n dag',
	            dd : '%d dae',
	            M : '\'n maand',
	            MM : '%d maande',
	            y : '\'n jaar',
	            yy : '%d jaar'
	        },
	        ordinalParse: /\d{1,2}(ste|de)/,
	        ordinal : function (number) {
	            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de'); // Thanks to Joris Röling : https://github.com/jjupiter
	        },
	        week : {
	            dow : 1, // Maandag is die eerste dag van die week.
	            doy : 4  // Die week wat die 4de Januarie bevat is die eerste week van die jaar.
	        }
	    });

	    return af;

	}));

/***/ }),
/* 369 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! Locale: Arabic (ar)
	//! Author: Abdel Said: https://github.com/abdelsaid
	//! Changes in months, weekdays: Ahmed Elkhatib
	//! Native plural forms: forabi https://github.com/forabi

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var symbolMap = {
	        '1': '١',
	        '2': '٢',
	        '3': '٣',
	        '4': '٤',
	        '5': '٥',
	        '6': '٦',
	        '7': '٧',
	        '8': '٨',
	        '9': '٩',
	        '0': '٠'
	    }, numberMap = {
	        '١': '1',
	        '٢': '2',
	        '٣': '3',
	        '٤': '4',
	        '٥': '5',
	        '٦': '6',
	        '٧': '7',
	        '٨': '8',
	        '٩': '9',
	        '٠': '0'
	    }, pluralForm = function (n) {
	        return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;
	    }, plurals = {
	        s : ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],
	        m : ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],
	        h : ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],
	        d : ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],
	        M : ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],
	        y : ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']
	    }, pluralize = function (u) {
	        return function (number, withoutSuffix, string, isFuture) {
	            var f = pluralForm(number),
	                str = plurals[u][pluralForm(number)];
	            if (f === 2) {
	                str = str[withoutSuffix ? 0 : 1];
	            }
	            return str.replace(/%d/i, number);
	        };
	    }, months = [
	        'كانون الثاني يناير',
	        'شباط فبراير',
	        'آذار مارس',
	        'نيسان أبريل',
	        'أيار مايو',
	        'حزيران يونيو',
	        'تموز يوليو',
	        'آب أغسطس',
	        'أيلول سبتمبر',
	        'تشرين الأول أكتوبر',
	        'تشرين الثاني نوفمبر',
	        'كانون الأول ديسمبر'
	    ];

	    var ar = moment.defineLocale('ar', {
	        months : months,
	        monthsShort : months,
	        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	        weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
	        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'D/\u200FM/\u200FYYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        meridiemParse: /ص|م/,
	        isPM : function (input) {
	            return 'م' === input;
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return 'ص';
	            } else {
	                return 'م';
	            }
	        },
	        calendar : {
	            sameDay: '[اليوم عند الساعة] LT',
	            nextDay: '[غدًا عند الساعة] LT',
	            nextWeek: 'dddd [عند الساعة] LT',
	            lastDay: '[أمس عند الساعة] LT',
	            lastWeek: 'dddd [عند الساعة] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'بعد %s',
	            past : 'منذ %s',
	            s : pluralize('s'),
	            m : pluralize('m'),
	            mm : pluralize('m'),
	            h : pluralize('h'),
	            hh : pluralize('h'),
	            d : pluralize('d'),
	            dd : pluralize('d'),
	            M : pluralize('M'),
	            MM : pluralize('M'),
	            y : pluralize('y'),
	            yy : pluralize('y')
	        },
	        preparse: function (string) {
	            return string.replace(/\u200f/g, '').replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
	                return numberMap[match];
	            }).replace(/،/g, ',');
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            }).replace(/,/g, '،');
	        },
	        week : {
	            dow : 6, // Saturday is the first day of the week.
	            doy : 12  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ar;

	}));

/***/ }),
/* 370 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Moroccan Arabic (ar-ma)
	//! author : ElFadili Yassine : https://github.com/ElFadiliY
	//! author : Abdel Said : https://github.com/abdelsaid

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var ar_ma = moment.defineLocale('ar-ma', {
	        months : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
	        monthsShort : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
	        weekdays : 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	        weekdaysShort : 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
	        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[اليوم على الساعة] LT',
	            nextDay: '[غدا على الساعة] LT',
	            nextWeek: 'dddd [على الساعة] LT',
	            lastDay: '[أمس على الساعة] LT',
	            lastWeek: 'dddd [على الساعة] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'في %s',
	            past : 'منذ %s',
	            s : 'ثوان',
	            m : 'دقيقة',
	            mm : '%d دقائق',
	            h : 'ساعة',
	            hh : '%d ساعات',
	            d : 'يوم',
	            dd : '%d أيام',
	            M : 'شهر',
	            MM : '%d أشهر',
	            y : 'سنة',
	            yy : '%d سنوات'
	        },
	        week : {
	            dow : 6, // Saturday is the first day of the week.
	            doy : 12  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ar_ma;

	}));

/***/ }),
/* 371 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Arabic Saudi Arabia (ar-sa)
	//! author : Suhail Alkowaileet : https://github.com/xsoh

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var symbolMap = {
	        '1': '١',
	        '2': '٢',
	        '3': '٣',
	        '4': '٤',
	        '5': '٥',
	        '6': '٦',
	        '7': '٧',
	        '8': '٨',
	        '9': '٩',
	        '0': '٠'
	    }, numberMap = {
	        '١': '1',
	        '٢': '2',
	        '٣': '3',
	        '٤': '4',
	        '٥': '5',
	        '٦': '6',
	        '٧': '7',
	        '٨': '8',
	        '٩': '9',
	        '٠': '0'
	    };

	    var ar_sa = moment.defineLocale('ar-sa', {
	        months : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
	        monthsShort : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
	        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	        weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
	        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        meridiemParse: /ص|م/,
	        isPM : function (input) {
	            return 'م' === input;
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return 'ص';
	            } else {
	                return 'م';
	            }
	        },
	        calendar : {
	            sameDay: '[اليوم على الساعة] LT',
	            nextDay: '[غدا على الساعة] LT',
	            nextWeek: 'dddd [على الساعة] LT',
	            lastDay: '[أمس على الساعة] LT',
	            lastWeek: 'dddd [على الساعة] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'في %s',
	            past : 'منذ %s',
	            s : 'ثوان',
	            m : 'دقيقة',
	            mm : '%d دقائق',
	            h : 'ساعة',
	            hh : '%d ساعات',
	            d : 'يوم',
	            dd : '%d أيام',
	            M : 'شهر',
	            MM : '%d أشهر',
	            y : 'سنة',
	            yy : '%d سنوات'
	        },
	        preparse: function (string) {
	            return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
	                return numberMap[match];
	            }).replace(/،/g, ',');
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            }).replace(/,/g, '،');
	        },
	        week : {
	            dow : 6, // Saturday is the first day of the week.
	            doy : 12  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ar_sa;

	}));

/***/ }),
/* 372 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale  : Tunisian Arabic (ar-tn)

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var ar_tn = moment.defineLocale('ar-tn', {
	        months: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
	        monthsShort: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
	        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	        weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
	        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[اليوم على الساعة] LT',
	            nextDay: '[غدا على الساعة] LT',
	            nextWeek: 'dddd [على الساعة] LT',
	            lastDay: '[أمس على الساعة] LT',
	            lastWeek: 'dddd [على الساعة] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'في %s',
	            past: 'منذ %s',
	            s: 'ثوان',
	            m: 'دقيقة',
	            mm: '%d دقائق',
	            h: 'ساعة',
	            hh: '%d ساعات',
	            d: 'يوم',
	            dd: '%d أيام',
	            M: 'شهر',
	            MM: '%d أشهر',
	            y: 'سنة',
	            yy: '%d سنوات'
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return ar_tn;

	}));

/***/ }),
/* 373 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : azerbaijani (az)
	//! author : topchiyev : https://github.com/topchiyev

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var suffixes = {
	        1: '-inci',
	        5: '-inci',
	        8: '-inci',
	        70: '-inci',
	        80: '-inci',
	        2: '-nci',
	        7: '-nci',
	        20: '-nci',
	        50: '-nci',
	        3: '-üncü',
	        4: '-üncü',
	        100: '-üncü',
	        6: '-ncı',
	        9: '-uncu',
	        10: '-uncu',
	        30: '-uncu',
	        60: '-ıncı',
	        90: '-ıncı'
	    };

	    var az = moment.defineLocale('az', {
	        months : 'yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr'.split('_'),
	        monthsShort : 'yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek'.split('_'),
	        weekdays : 'Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə'.split('_'),
	        weekdaysShort : 'Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən'.split('_'),
	        weekdaysMin : 'Bz_BE_ÇA_Çə_CA_Cü_Şə'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[bugün saat] LT',
	            nextDay : '[sabah saat] LT',
	            nextWeek : '[gələn həftə] dddd [saat] LT',
	            lastDay : '[dünən] LT',
	            lastWeek : '[keçən həftə] dddd [saat] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s sonra',
	            past : '%s əvvəl',
	            s : 'birneçə saniyyə',
	            m : 'bir dəqiqə',
	            mm : '%d dəqiqə',
	            h : 'bir saat',
	            hh : '%d saat',
	            d : 'bir gün',
	            dd : '%d gün',
	            M : 'bir ay',
	            MM : '%d ay',
	            y : 'bir il',
	            yy : '%d il'
	        },
	        meridiemParse: /gecə|səhər|gündüz|axşam/,
	        isPM : function (input) {
	            return /^(gündüz|axşam)$/.test(input);
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'gecə';
	            } else if (hour < 12) {
	                return 'səhər';
	            } else if (hour < 17) {
	                return 'gündüz';
	            } else {
	                return 'axşam';
	            }
	        },
	        ordinalParse: /\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,
	        ordinal : function (number) {
	            if (number === 0) {  // special case for zero
	                return number + '-ıncı';
	            }
	            var a = number % 10,
	                b = number % 100 - a,
	                c = number >= 100 ? 100 : null;
	            return number + (suffixes[a] || suffixes[b] || suffixes[c]);
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return az;

	}));

/***/ }),
/* 374 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : belarusian (be)
	//! author : Dmitry Demidov : https://github.com/demidov91
	//! author: Praleska: http://praleska.pro/
	//! Author : Menelion Elensúle : https://github.com/Oire

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function plural(word, num) {
	        var forms = word.split('_');
	        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
	    }
	    function relativeTimeWithPlural(number, withoutSuffix, key) {
	        var format = {
	            'mm': withoutSuffix ? 'хвіліна_хвіліны_хвілін' : 'хвіліну_хвіліны_хвілін',
	            'hh': withoutSuffix ? 'гадзіна_гадзіны_гадзін' : 'гадзіну_гадзіны_гадзін',
	            'dd': 'дзень_дні_дзён',
	            'MM': 'месяц_месяцы_месяцаў',
	            'yy': 'год_гады_гадоў'
	        };
	        if (key === 'm') {
	            return withoutSuffix ? 'хвіліна' : 'хвіліну';
	        }
	        else if (key === 'h') {
	            return withoutSuffix ? 'гадзіна' : 'гадзіну';
	        }
	        else {
	            return number + ' ' + plural(format[key], +number);
	        }
	    }

	    var be = moment.defineLocale('be', {
	        months : {
	            format: 'студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня'.split('_'),
	            standalone: 'студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань'.split('_')
	        },
	        monthsShort : 'студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж'.split('_'),
	        weekdays : {
	            format: 'нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу'.split('_'),
	            standalone: 'нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота'.split('_'),
	            isFormat: /\[ ?[Вв] ?(?:мінулую|наступную)? ?\] ?dddd/
	        },
	        weekdaysShort : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
	        weekdaysMin : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY г.',
	            LLL : 'D MMMM YYYY г., HH:mm',
	            LLLL : 'dddd, D MMMM YYYY г., HH:mm'
	        },
	        calendar : {
	            sameDay: '[Сёння ў] LT',
	            nextDay: '[Заўтра ў] LT',
	            lastDay: '[Учора ў] LT',
	            nextWeek: function () {
	                return '[У] dddd [ў] LT';
	            },
	            lastWeek: function () {
	                switch (this.day()) {
	                case 0:
	                case 3:
	                case 5:
	                case 6:
	                    return '[У мінулую] dddd [ў] LT';
	                case 1:
	                case 2:
	                case 4:
	                    return '[У мінулы] dddd [ў] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'праз %s',
	            past : '%s таму',
	            s : 'некалькі секунд',
	            m : relativeTimeWithPlural,
	            mm : relativeTimeWithPlural,
	            h : relativeTimeWithPlural,
	            hh : relativeTimeWithPlural,
	            d : 'дзень',
	            dd : relativeTimeWithPlural,
	            M : 'месяц',
	            MM : relativeTimeWithPlural,
	            y : 'год',
	            yy : relativeTimeWithPlural
	        },
	        meridiemParse: /ночы|раніцы|дня|вечара/,
	        isPM : function (input) {
	            return /^(дня|вечара)$/.test(input);
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'ночы';
	            } else if (hour < 12) {
	                return 'раніцы';
	            } else if (hour < 17) {
	                return 'дня';
	            } else {
	                return 'вечара';
	            }
	        },
	        ordinalParse: /\d{1,2}-(і|ы|га)/,
	        ordinal: function (number, period) {
	            switch (period) {
	            case 'M':
	            case 'd':
	            case 'DDD':
	            case 'w':
	            case 'W':
	                return (number % 10 === 2 || number % 10 === 3) && (number % 100 !== 12 && number % 100 !== 13) ? number + '-і' : number + '-ы';
	            case 'D':
	                return number + '-га';
	            default:
	                return number;
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return be;

	}));

/***/ }),
/* 375 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : bulgarian (bg)
	//! author : Krasen Borisov : https://github.com/kraz

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var bg = moment.defineLocale('bg', {
	        months : 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split('_'),
	        monthsShort : 'янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),
	        weekdays : 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split('_'),
	        weekdaysShort : 'нед_пон_вто_сря_чет_пет_съб'.split('_'),
	        weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'D.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY H:mm',
	            LLLL : 'dddd, D MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay : '[Днес в] LT',
	            nextDay : '[Утре в] LT',
	            nextWeek : 'dddd [в] LT',
	            lastDay : '[Вчера в] LT',
	            lastWeek : function () {
	                switch (this.day()) {
	                case 0:
	                case 3:
	                case 6:
	                    return '[В изминалата] dddd [в] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[В изминалия] dddd [в] LT';
	                }
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'след %s',
	            past : 'преди %s',
	            s : 'няколко секунди',
	            m : 'минута',
	            mm : '%d минути',
	            h : 'час',
	            hh : '%d часа',
	            d : 'ден',
	            dd : '%d дни',
	            M : 'месец',
	            MM : '%d месеца',
	            y : 'година',
	            yy : '%d години'
	        },
	        ordinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
	        ordinal : function (number) {
	            var lastDigit = number % 10,
	                last2Digits = number % 100;
	            if (number === 0) {
	                return number + '-ев';
	            } else if (last2Digits === 0) {
	                return number + '-ен';
	            } else if (last2Digits > 10 && last2Digits < 20) {
	                return number + '-ти';
	            } else if (lastDigit === 1) {
	                return number + '-ви';
	            } else if (lastDigit === 2) {
	                return number + '-ри';
	            } else if (lastDigit === 7 || lastDigit === 8) {
	                return number + '-ми';
	            } else {
	                return number + '-ти';
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return bg;

	}));

/***/ }),
/* 376 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Bengali (bn)
	//! author : Kaushik Gandhi : https://github.com/kaushikgandhi

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var symbolMap = {
	        '1': '১',
	        '2': '২',
	        '3': '৩',
	        '4': '৪',
	        '5': '৫',
	        '6': '৬',
	        '7': '৭',
	        '8': '৮',
	        '9': '৯',
	        '0': '০'
	    },
	    numberMap = {
	        '১': '1',
	        '২': '2',
	        '৩': '3',
	        '৪': '4',
	        '৫': '5',
	        '৬': '6',
	        '৭': '7',
	        '৮': '8',
	        '৯': '9',
	        '০': '0'
	    };

	    var bn = moment.defineLocale('bn', {
	        months : 'জানুয়ারী_ফেবুয়ারী_মার্চ_এপ্রিল_মে_জুন_জুলাই_অগাস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split('_'),
	        monthsShort : 'জানু_ফেব_মার্চ_এপর_মে_জুন_জুল_অগ_সেপ্ট_অক্টো_নভ_ডিসেম্'.split('_'),
	        weekdays : 'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পত্তিবার_শুক্রবার_শনিবার'.split('_'),
	        weekdaysShort : 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পত্তি_শুক্র_শনি'.split('_'),
	        weekdaysMin : 'রব_সম_মঙ্গ_বু_ব্রিহ_শু_শনি'.split('_'),
	        longDateFormat : {
	            LT : 'A h:mm সময়',
	            LTS : 'A h:mm:ss সময়',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, A h:mm সময়',
	            LLLL : 'dddd, D MMMM YYYY, A h:mm সময়'
	        },
	        calendar : {
	            sameDay : '[আজ] LT',
	            nextDay : '[আগামীকাল] LT',
	            nextWeek : 'dddd, LT',
	            lastDay : '[গতকাল] LT',
	            lastWeek : '[গত] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s পরে',
	            past : '%s আগে',
	            s : 'কয়েক সেকেন্ড',
	            m : 'এক মিনিট',
	            mm : '%d মিনিট',
	            h : 'এক ঘন্টা',
	            hh : '%d ঘন্টা',
	            d : 'এক দিন',
	            dd : '%d দিন',
	            M : 'এক মাস',
	            MM : '%d মাস',
	            y : 'এক বছর',
	            yy : '%d বছর'
	        },
	        preparse: function (string) {
	            return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        meridiemParse: /রাত|সকাল|দুপুর|বিকাল|রাত/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if ((meridiem === 'রাত' && hour >= 4) ||
	                    (meridiem === 'দুপুর' && hour < 5) ||
	                    meridiem === 'বিকাল') {
	                return hour + 12;
	            } else {
	                return hour;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'রাত';
	            } else if (hour < 10) {
	                return 'সকাল';
	            } else if (hour < 17) {
	                return 'দুপুর';
	            } else if (hour < 20) {
	                return 'বিকাল';
	            } else {
	                return 'রাত';
	            }
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return bn;

	}));

/***/ }),
/* 377 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : tibetan (bo)
	//! author : Thupten N. Chakrishar : https://github.com/vajradog

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var symbolMap = {
	        '1': '༡',
	        '2': '༢',
	        '3': '༣',
	        '4': '༤',
	        '5': '༥',
	        '6': '༦',
	        '7': '༧',
	        '8': '༨',
	        '9': '༩',
	        '0': '༠'
	    },
	    numberMap = {
	        '༡': '1',
	        '༢': '2',
	        '༣': '3',
	        '༤': '4',
	        '༥': '5',
	        '༦': '6',
	        '༧': '7',
	        '༨': '8',
	        '༩': '9',
	        '༠': '0'
	    };

	    var bo = moment.defineLocale('bo', {
	        months : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),
	        monthsShort : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),
	        weekdays : 'གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་'.split('_'),
	        weekdaysShort : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),
	        weekdaysMin : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),
	        longDateFormat : {
	            LT : 'A h:mm',
	            LTS : 'A h:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, A h:mm',
	            LLLL : 'dddd, D MMMM YYYY, A h:mm'
	        },
	        calendar : {
	            sameDay : '[དི་རིང] LT',
	            nextDay : '[སང་ཉིན] LT',
	            nextWeek : '[བདུན་ཕྲག་རྗེས་མ], LT',
	            lastDay : '[ཁ་སང] LT',
	            lastWeek : '[བདུན་ཕྲག་མཐའ་མ] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s ལ་',
	            past : '%s སྔན་ལ',
	            s : 'ལམ་སང',
	            m : 'སྐར་མ་གཅིག',
	            mm : '%d སྐར་མ',
	            h : 'ཆུ་ཚོད་གཅིག',
	            hh : '%d ཆུ་ཚོད',
	            d : 'ཉིན་གཅིག',
	            dd : '%d ཉིན་',
	            M : 'ཟླ་བ་གཅིག',
	            MM : '%d ཟླ་བ',
	            y : 'ལོ་གཅིག',
	            yy : '%d ལོ'
	        },
	        preparse: function (string) {
	            return string.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        meridiemParse: /མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if ((meridiem === 'མཚན་མོ' && hour >= 4) ||
	                    (meridiem === 'ཉིན་གུང' && hour < 5) ||
	                    meridiem === 'དགོང་དག') {
	                return hour + 12;
	            } else {
	                return hour;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'མཚན་མོ';
	            } else if (hour < 10) {
	                return 'ཞོགས་ཀས';
	            } else if (hour < 17) {
	                return 'ཉིན་གུང';
	            } else if (hour < 20) {
	                return 'དགོང་དག';
	            } else {
	                return 'མཚན་མོ';
	            }
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return bo;

	}));

/***/ }),
/* 378 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : breton (br)
	//! author : Jean-Baptiste Le Duigou : https://github.com/jbleduigou

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function relativeTimeWithMutation(number, withoutSuffix, key) {
	        var format = {
	            'mm': 'munutenn',
	            'MM': 'miz',
	            'dd': 'devezh'
	        };
	        return number + ' ' + mutation(format[key], number);
	    }
	    function specialMutationForYears(number) {
	        switch (lastNumber(number)) {
	        case 1:
	        case 3:
	        case 4:
	        case 5:
	        case 9:
	            return number + ' bloaz';
	        default:
	            return number + ' vloaz';
	        }
	    }
	    function lastNumber(number) {
	        if (number > 9) {
	            return lastNumber(number % 10);
	        }
	        return number;
	    }
	    function mutation(text, number) {
	        if (number === 2) {
	            return softMutation(text);
	        }
	        return text;
	    }
	    function softMutation(text) {
	        var mutationTable = {
	            'm': 'v',
	            'b': 'v',
	            'd': 'z'
	        };
	        if (mutationTable[text.charAt(0)] === undefined) {
	            return text;
	        }
	        return mutationTable[text.charAt(0)] + text.substring(1);
	    }

	    var br = moment.defineLocale('br', {
	        months : 'Genver_C\'hwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu'.split('_'),
	        monthsShort : 'Gen_C\'hwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker'.split('_'),
	        weekdays : 'Sul_Lun_Meurzh_Merc\'her_Yaou_Gwener_Sadorn'.split('_'),
	        weekdaysShort : 'Sul_Lun_Meu_Mer_Yao_Gwe_Sad'.split('_'),
	        weekdaysMin : 'Su_Lu_Me_Mer_Ya_Gw_Sa'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'h[e]mm A',
	            LTS : 'h[e]mm:ss A',
	            L : 'DD/MM/YYYY',
	            LL : 'D [a viz] MMMM YYYY',
	            LLL : 'D [a viz] MMMM YYYY h[e]mm A',
	            LLLL : 'dddd, D [a viz] MMMM YYYY h[e]mm A'
	        },
	        calendar : {
	            sameDay : '[Hiziv da] LT',
	            nextDay : '[Warc\'hoazh da] LT',
	            nextWeek : 'dddd [da] LT',
	            lastDay : '[Dec\'h da] LT',
	            lastWeek : 'dddd [paset da] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'a-benn %s',
	            past : '%s \'zo',
	            s : 'un nebeud segondennoù',
	            m : 'ur vunutenn',
	            mm : relativeTimeWithMutation,
	            h : 'un eur',
	            hh : '%d eur',
	            d : 'un devezh',
	            dd : relativeTimeWithMutation,
	            M : 'ur miz',
	            MM : relativeTimeWithMutation,
	            y : 'ur bloaz',
	            yy : specialMutationForYears
	        },
	        ordinalParse: /\d{1,2}(añ|vet)/,
	        ordinal : function (number) {
	            var output = (number === 1) ? 'añ' : 'vet';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return br;

	}));

/***/ }),
/* 379 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : bosnian (bs)
	//! author : Nedim Cholich : https://github.com/frontyard
	//! based on (hr) translation by Bojan Marković

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function translate(number, withoutSuffix, key) {
	        var result = number + ' ';
	        switch (key) {
	        case 'm':
	            return withoutSuffix ? 'jedna minuta' : 'jedne minute';
	        case 'mm':
	            if (number === 1) {
	                result += 'minuta';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'minute';
	            } else {
	                result += 'minuta';
	            }
	            return result;
	        case 'h':
	            return withoutSuffix ? 'jedan sat' : 'jednog sata';
	        case 'hh':
	            if (number === 1) {
	                result += 'sat';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'sata';
	            } else {
	                result += 'sati';
	            }
	            return result;
	        case 'dd':
	            if (number === 1) {
	                result += 'dan';
	            } else {
	                result += 'dana';
	            }
	            return result;
	        case 'MM':
	            if (number === 1) {
	                result += 'mjesec';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'mjeseca';
	            } else {
	                result += 'mjeseci';
	            }
	            return result;
	        case 'yy':
	            if (number === 1) {
	                result += 'godina';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'godine';
	            } else {
	                result += 'godina';
	            }
	            return result;
	        }
	    }

	    var bs = moment.defineLocale('bs', {
	        months : 'januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar'.split('_'),
	        monthsShort : 'jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.'.split('_'),
	        monthsParseExact: true,
	        weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
	        weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
	        weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD. MM. YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY H:mm',
	            LLLL : 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay  : '[danas u] LT',
	            nextDay  : '[sutra u] LT',
	            nextWeek : function () {
	                switch (this.day()) {
	                case 0:
	                    return '[u] [nedjelju] [u] LT';
	                case 3:
	                    return '[u] [srijedu] [u] LT';
	                case 6:
	                    return '[u] [subotu] [u] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[u] dddd [u] LT';
	                }
	            },
	            lastDay  : '[jučer u] LT',
	            lastWeek : function () {
	                switch (this.day()) {
	                case 0:
	                case 3:
	                    return '[prošlu] dddd [u] LT';
	                case 6:
	                    return '[prošle] [subote] [u] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[prošli] dddd [u] LT';
	                }
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'za %s',
	            past   : 'prije %s',
	            s      : 'par sekundi',
	            m      : translate,
	            mm     : translate,
	            h      : translate,
	            hh     : translate,
	            d      : 'dan',
	            dd     : translate,
	            M      : 'mjesec',
	            MM     : translate,
	            y      : 'godinu',
	            yy     : translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return bs;

	}));

/***/ }),
/* 380 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : catalan (ca)
	//! author : Juan G. Hurtado : https://github.com/juanghurtado

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var ca = moment.defineLocale('ca', {
	        months : 'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split('_'),
	        monthsShort : 'gen._febr._mar._abr._mai._jun._jul._ag._set._oct._nov._des.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split('_'),
	        weekdaysShort : 'dg._dl._dt._dc._dj._dv._ds.'.split('_'),
	        weekdaysMin : 'Dg_Dl_Dt_Dc_Dj_Dv_Ds'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY H:mm',
	            LLLL : 'dddd D MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay : function () {
	                return '[avui a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
	            },
	            nextDay : function () {
	                return '[demà a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
	            },
	            nextWeek : function () {
	                return 'dddd [a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
	            },
	            lastDay : function () {
	                return '[ahir a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
	            },
	            lastWeek : function () {
	                return '[el] dddd [passat a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'en %s',
	            past : 'fa %s',
	            s : 'uns segons',
	            m : 'un minut',
	            mm : '%d minuts',
	            h : 'una hora',
	            hh : '%d hores',
	            d : 'un dia',
	            dd : '%d dies',
	            M : 'un mes',
	            MM : '%d mesos',
	            y : 'un any',
	            yy : '%d anys'
	        },
	        ordinalParse: /\d{1,2}(r|n|t|è|a)/,
	        ordinal : function (number, period) {
	            var output = (number === 1) ? 'r' :
	                (number === 2) ? 'n' :
	                (number === 3) ? 'r' :
	                (number === 4) ? 't' : 'è';
	            if (period === 'w' || period === 'W') {
	                output = 'a';
	            }
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return ca;

	}));

/***/ }),
/* 381 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : czech (cs)
	//! author : petrbela : https://github.com/petrbela

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var months = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split('_'),
	        monthsShort = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_');
	    function plural(n) {
	        return (n > 1) && (n < 5) && (~~(n / 10) !== 1);
	    }
	    function translate(number, withoutSuffix, key, isFuture) {
	        var result = number + ' ';
	        switch (key) {
	        case 's':  // a few seconds / in a few seconds / a few seconds ago
	            return (withoutSuffix || isFuture) ? 'pár sekund' : 'pár sekundami';
	        case 'm':  // a minute / in a minute / a minute ago
	            return withoutSuffix ? 'minuta' : (isFuture ? 'minutu' : 'minutou');
	        case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'minuty' : 'minut');
	            } else {
	                return result + 'minutami';
	            }
	            break;
	        case 'h':  // an hour / in an hour / an hour ago
	            return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');
	        case 'hh': // 9 hours / in 9 hours / 9 hours ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'hodiny' : 'hodin');
	            } else {
	                return result + 'hodinami';
	            }
	            break;
	        case 'd':  // a day / in a day / a day ago
	            return (withoutSuffix || isFuture) ? 'den' : 'dnem';
	        case 'dd': // 9 days / in 9 days / 9 days ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'dny' : 'dní');
	            } else {
	                return result + 'dny';
	            }
	            break;
	        case 'M':  // a month / in a month / a month ago
	            return (withoutSuffix || isFuture) ? 'měsíc' : 'měsícem';
	        case 'MM': // 9 months / in 9 months / 9 months ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'měsíce' : 'měsíců');
	            } else {
	                return result + 'měsíci';
	            }
	            break;
	        case 'y':  // a year / in a year / a year ago
	            return (withoutSuffix || isFuture) ? 'rok' : 'rokem';
	        case 'yy': // 9 years / in 9 years / 9 years ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'roky' : 'let');
	            } else {
	                return result + 'lety';
	            }
	            break;
	        }
	    }

	    var cs = moment.defineLocale('cs', {
	        months : months,
	        monthsShort : monthsShort,
	        monthsParse : (function (months, monthsShort) {
	            var i, _monthsParse = [];
	            for (i = 0; i < 12; i++) {
	                // use custom parser to solve problem with July (červenec)
	                _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');
	            }
	            return _monthsParse;
	        }(months, monthsShort)),
	        shortMonthsParse : (function (monthsShort) {
	            var i, _shortMonthsParse = [];
	            for (i = 0; i < 12; i++) {
	                _shortMonthsParse[i] = new RegExp('^' + monthsShort[i] + '$', 'i');
	            }
	            return _shortMonthsParse;
	        }(monthsShort)),
	        longMonthsParse : (function (months) {
	            var i, _longMonthsParse = [];
	            for (i = 0; i < 12; i++) {
	                _longMonthsParse[i] = new RegExp('^' + months[i] + '$', 'i');
	            }
	            return _longMonthsParse;
	        }(months)),
	        weekdays : 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),
	        weekdaysShort : 'ne_po_út_st_čt_pá_so'.split('_'),
	        weekdaysMin : 'ne_po_út_st_čt_pá_so'.split('_'),
	        longDateFormat : {
	            LT: 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY H:mm',
	            LLLL : 'dddd D. MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay: '[dnes v] LT',
	            nextDay: '[zítra v] LT',
	            nextWeek: function () {
	                switch (this.day()) {
	                case 0:
	                    return '[v neděli v] LT';
	                case 1:
	                case 2:
	                    return '[v] dddd [v] LT';
	                case 3:
	                    return '[ve středu v] LT';
	                case 4:
	                    return '[ve čtvrtek v] LT';
	                case 5:
	                    return '[v pátek v] LT';
	                case 6:
	                    return '[v sobotu v] LT';
	                }
	            },
	            lastDay: '[včera v] LT',
	            lastWeek: function () {
	                switch (this.day()) {
	                case 0:
	                    return '[minulou neděli v] LT';
	                case 1:
	                case 2:
	                    return '[minulé] dddd [v] LT';
	                case 3:
	                    return '[minulou středu v] LT';
	                case 4:
	                case 5:
	                    return '[minulý] dddd [v] LT';
	                case 6:
	                    return '[minulou sobotu v] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'za %s',
	            past : 'před %s',
	            s : translate,
	            m : translate,
	            mm : translate,
	            h : translate,
	            hh : translate,
	            d : translate,
	            dd : translate,
	            M : translate,
	            MM : translate,
	            y : translate,
	            yy : translate
	        },
	        ordinalParse : /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return cs;

	}));

/***/ }),
/* 382 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : chuvash (cv)
	//! author : Anatoly Mironov : https://github.com/mirontoli

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var cv = moment.defineLocale('cv', {
	        months : 'кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав'.split('_'),
	        monthsShort : 'кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш'.split('_'),
	        weekdays : 'вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун'.split('_'),
	        weekdaysShort : 'выр_тун_ытл_юн_кӗҫ_эрн_шӑм'.split('_'),
	        weekdaysMin : 'вр_тн_ыт_юн_кҫ_эр_шм'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD-MM-YYYY',
	            LL : 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]',
	            LLL : 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm',
	            LLLL : 'dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm'
	        },
	        calendar : {
	            sameDay: '[Паян] LT [сехетре]',
	            nextDay: '[Ыран] LT [сехетре]',
	            lastDay: '[Ӗнер] LT [сехетре]',
	            nextWeek: '[Ҫитес] dddd LT [сехетре]',
	            lastWeek: '[Иртнӗ] dddd LT [сехетре]',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : function (output) {
	                var affix = /сехет$/i.exec(output) ? 'рен' : /ҫул$/i.exec(output) ? 'тан' : 'ран';
	                return output + affix;
	            },
	            past : '%s каялла',
	            s : 'пӗр-ик ҫеккунт',
	            m : 'пӗр минут',
	            mm : '%d минут',
	            h : 'пӗр сехет',
	            hh : '%d сехет',
	            d : 'пӗр кун',
	            dd : '%d кун',
	            M : 'пӗр уйӑх',
	            MM : '%d уйӑх',
	            y : 'пӗр ҫул',
	            yy : '%d ҫул'
	        },
	        ordinalParse: /\d{1,2}-мӗш/,
	        ordinal : '%d-мӗш',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return cv;

	}));

/***/ }),
/* 383 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Welsh (cy)
	//! author : Robert Allen

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var cy = moment.defineLocale('cy', {
	        months: 'Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr'.split('_'),
	        monthsShort: 'Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag'.split('_'),
	        weekdays: 'Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn'.split('_'),
	        weekdaysShort: 'Sul_Llun_Maw_Mer_Iau_Gwe_Sad'.split('_'),
	        weekdaysMin: 'Su_Ll_Ma_Me_Ia_Gw_Sa'.split('_'),
	        weekdaysParseExact : true,
	        // time formats are the same as en-gb
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[Heddiw am] LT',
	            nextDay: '[Yfory am] LT',
	            nextWeek: 'dddd [am] LT',
	            lastDay: '[Ddoe am] LT',
	            lastWeek: 'dddd [diwethaf am] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'mewn %s',
	            past: '%s yn ôl',
	            s: 'ychydig eiliadau',
	            m: 'munud',
	            mm: '%d munud',
	            h: 'awr',
	            hh: '%d awr',
	            d: 'diwrnod',
	            dd: '%d diwrnod',
	            M: 'mis',
	            MM: '%d mis',
	            y: 'blwyddyn',
	            yy: '%d flynedd'
	        },
	        ordinalParse: /\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,
	        // traditional ordinal numbers above 31 are not commonly used in colloquial Welsh
	        ordinal: function (number) {
	            var b = number,
	                output = '',
	                lookup = [
	                    '', 'af', 'il', 'ydd', 'ydd', 'ed', 'ed', 'ed', 'fed', 'fed', 'fed', // 1af to 10fed
	                    'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'fed' // 11eg to 20fed
	                ];
	            if (b > 20) {
	                if (b === 40 || b === 50 || b === 60 || b === 80 || b === 100) {
	                    output = 'fed'; // not 30ain, 70ain or 90ain
	                } else {
	                    output = 'ain';
	                }
	            } else if (b > 0) {
	                output = lookup[b];
	            }
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return cy;

	}));

/***/ }),
/* 384 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : danish (da)
	//! author : Ulrik Nielsen : https://github.com/mrbase

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var da = moment.defineLocale('da', {
	        months : 'januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
	        weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
	        weekdaysShort : 'søn_man_tir_ons_tor_fre_lør'.split('_'),
	        weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY HH:mm',
	            LLLL : 'dddd [d.] D. MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[I dag kl.] LT',
	            nextDay : '[I morgen kl.] LT',
	            nextWeek : 'dddd [kl.] LT',
	            lastDay : '[I går kl.] LT',
	            lastWeek : '[sidste] dddd [kl] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'om %s',
	            past : '%s siden',
	            s : 'få sekunder',
	            m : 'et minut',
	            mm : '%d minutter',
	            h : 'en time',
	            hh : '%d timer',
	            d : 'en dag',
	            dd : '%d dage',
	            M : 'en måned',
	            MM : '%d måneder',
	            y : 'et år',
	            yy : '%d år'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return da;

	}));

/***/ }),
/* 385 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : german (de)
	//! author : lluchs : https://github.com/lluchs
	//! author: Menelion Elensúle: https://github.com/Oire
	//! author : Mikolaj Dadela : https://github.com/mik01aj

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var format = {
	            'm': ['eine Minute', 'einer Minute'],
	            'h': ['eine Stunde', 'einer Stunde'],
	            'd': ['ein Tag', 'einem Tag'],
	            'dd': [number + ' Tage', number + ' Tagen'],
	            'M': ['ein Monat', 'einem Monat'],
	            'MM': [number + ' Monate', number + ' Monaten'],
	            'y': ['ein Jahr', 'einem Jahr'],
	            'yy': [number + ' Jahre', number + ' Jahren']
	        };
	        return withoutSuffix ? format[key][0] : format[key][1];
	    }

	    var de = moment.defineLocale('de', {
	        months : 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
	        monthsShort : 'Jan._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
	        weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
	        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY HH:mm',
	            LLLL : 'dddd, D. MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[heute um] LT [Uhr]',
	            sameElse: 'L',
	            nextDay: '[morgen um] LT [Uhr]',
	            nextWeek: 'dddd [um] LT [Uhr]',
	            lastDay: '[gestern um] LT [Uhr]',
	            lastWeek: '[letzten] dddd [um] LT [Uhr]'
	        },
	        relativeTime : {
	            future : 'in %s',
	            past : 'vor %s',
	            s : 'ein paar Sekunden',
	            m : processRelativeTime,
	            mm : '%d Minuten',
	            h : processRelativeTime,
	            hh : '%d Stunden',
	            d : processRelativeTime,
	            dd : processRelativeTime,
	            M : processRelativeTime,
	            MM : processRelativeTime,
	            y : processRelativeTime,
	            yy : processRelativeTime
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return de;

	}));

/***/ }),
/* 386 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : austrian german (de-at)
	//! author : lluchs : https://github.com/lluchs
	//! author: Menelion Elensúle: https://github.com/Oire
	//! author : Martin Groller : https://github.com/MadMG
	//! author : Mikolaj Dadela : https://github.com/mik01aj

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var format = {
	            'm': ['eine Minute', 'einer Minute'],
	            'h': ['eine Stunde', 'einer Stunde'],
	            'd': ['ein Tag', 'einem Tag'],
	            'dd': [number + ' Tage', number + ' Tagen'],
	            'M': ['ein Monat', 'einem Monat'],
	            'MM': [number + ' Monate', number + ' Monaten'],
	            'y': ['ein Jahr', 'einem Jahr'],
	            'yy': [number + ' Jahre', number + ' Jahren']
	        };
	        return withoutSuffix ? format[key][0] : format[key][1];
	    }

	    var de_at = moment.defineLocale('de-at', {
	        months : 'Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
	        monthsShort : 'Jän._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
	        weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
	        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY HH:mm',
	            LLLL : 'dddd, D. MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[heute um] LT [Uhr]',
	            sameElse: 'L',
	            nextDay: '[morgen um] LT [Uhr]',
	            nextWeek: 'dddd [um] LT [Uhr]',
	            lastDay: '[gestern um] LT [Uhr]',
	            lastWeek: '[letzten] dddd [um] LT [Uhr]'
	        },
	        relativeTime : {
	            future : 'in %s',
	            past : 'vor %s',
	            s : 'ein paar Sekunden',
	            m : processRelativeTime,
	            mm : '%d Minuten',
	            h : processRelativeTime,
	            hh : '%d Stunden',
	            d : processRelativeTime,
	            dd : processRelativeTime,
	            M : processRelativeTime,
	            MM : processRelativeTime,
	            y : processRelativeTime,
	            yy : processRelativeTime
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return de_at;

	}));

/***/ }),
/* 387 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : dhivehi (dv)
	//! author : Jawish Hameed : https://github.com/jawish

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var months = [
	        'ޖެނުއަރީ',
	        'ފެބްރުއަރީ',
	        'މާރިޗު',
	        'އޭޕްރީލު',
	        'މޭ',
	        'ޖޫން',
	        'ޖުލައި',
	        'އޯގަސްޓު',
	        'ސެޕްޓެމްބަރު',
	        'އޮކްޓޯބަރު',
	        'ނޮވެމްބަރު',
	        'ޑިސެމްބަރު'
	    ], weekdays = [
	        'އާދިއްތަ',
	        'ހޯމަ',
	        'އަންގާރަ',
	        'ބުދަ',
	        'ބުރާސްފަތި',
	        'ހުކުރު',
	        'ހޮނިހިރު'
	    ];

	    var dv = moment.defineLocale('dv', {
	        months : months,
	        monthsShort : months,
	        weekdays : weekdays,
	        weekdaysShort : weekdays,
	        weekdaysMin : 'އާދި_ހޯމަ_އަން_ބުދަ_ބުރާ_ހުކު_ހޮނި'.split('_'),
	        longDateFormat : {

	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'D/M/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        meridiemParse: /މކ|މފ/,
	        isPM : function (input) {
	            return 'މފ' === input;
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return 'މކ';
	            } else {
	                return 'މފ';
	            }
	        },
	        calendar : {
	            sameDay : '[މިއަދު] LT',
	            nextDay : '[މާދަމާ] LT',
	            nextWeek : 'dddd LT',
	            lastDay : '[އިއްޔެ] LT',
	            lastWeek : '[ފާއިތުވި] dddd LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'ތެރޭގައި %s',
	            past : 'ކުރިން %s',
	            s : 'ސިކުންތުކޮޅެއް',
	            m : 'މިނިޓެއް',
	            mm : 'މިނިޓު %d',
	            h : 'ގަޑިއިރެއް',
	            hh : 'ގަޑިއިރު %d',
	            d : 'ދުވަހެއް',
	            dd : 'ދުވަސް %d',
	            M : 'މަހެއް',
	            MM : 'މަސް %d',
	            y : 'އަހަރެއް',
	            yy : 'އަހަރު %d'
	        },
	        preparse: function (string) {
	            return string.replace(/،/g, ',');
	        },
	        postformat: function (string) {
	            return string.replace(/,/g, '،');
	        },
	        week : {
	            dow : 7,  // Sunday is the first day of the week.
	            doy : 12  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return dv;

	}));

/***/ }),
/* 388 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : modern greek (el)
	//! author : Aggelos Karalias : https://github.com/mehiel

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';

	    function isFunction(input) {
	        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';
	    }


	    var el = moment.defineLocale('el', {
	        monthsNominativeEl : 'Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος'.split('_'),
	        monthsGenitiveEl : 'Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου'.split('_'),
	        months : function (momentToFormat, format) {
	            if (/D/.test(format.substring(0, format.indexOf('MMMM')))) { // if there is a day number before 'MMMM'
	                return this._monthsGenitiveEl[momentToFormat.month()];
	            } else {
	                return this._monthsNominativeEl[momentToFormat.month()];
	            }
	        },
	        monthsShort : 'Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ'.split('_'),
	        weekdays : 'Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο'.split('_'),
	        weekdaysShort : 'Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ'.split('_'),
	        weekdaysMin : 'Κυ_Δε_Τρ_Τε_Πε_Πα_Σα'.split('_'),
	        meridiem : function (hours, minutes, isLower) {
	            if (hours > 11) {
	                return isLower ? 'μμ' : 'ΜΜ';
	            } else {
	                return isLower ? 'πμ' : 'ΠΜ';
	            }
	        },
	        isPM : function (input) {
	            return ((input + '').toLowerCase()[0] === 'μ');
	        },
	        meridiemParse : /[ΠΜ]\.?Μ?\.?/i,
	        longDateFormat : {
	            LT : 'h:mm A',
	            LTS : 'h:mm:ss A',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY h:mm A',
	            LLLL : 'dddd, D MMMM YYYY h:mm A'
	        },
	        calendarEl : {
	            sameDay : '[Σήμερα {}] LT',
	            nextDay : '[Αύριο {}] LT',
	            nextWeek : 'dddd [{}] LT',
	            lastDay : '[Χθες {}] LT',
	            lastWeek : function () {
	                switch (this.day()) {
	                    case 6:
	                        return '[το προηγούμενο] dddd [{}] LT';
	                    default:
	                        return '[την προηγούμενη] dddd [{}] LT';
	                }
	            },
	            sameElse : 'L'
	        },
	        calendar : function (key, mom) {
	            var output = this._calendarEl[key],
	                hours = mom && mom.hours();
	            if (isFunction(output)) {
	                output = output.apply(mom);
	            }
	            return output.replace('{}', (hours % 12 === 1 ? 'στη' : 'στις'));
	        },
	        relativeTime : {
	            future : 'σε %s',
	            past : '%s πριν',
	            s : 'λίγα δευτερόλεπτα',
	            m : 'ένα λεπτό',
	            mm : '%d λεπτά',
	            h : 'μία ώρα',
	            hh : '%d ώρες',
	            d : 'μία μέρα',
	            dd : '%d μέρες',
	            M : 'ένας μήνας',
	            MM : '%d μήνες',
	            y : 'ένας χρόνος',
	            yy : '%d χρόνια'
	        },
	        ordinalParse: /\d{1,2}η/,
	        ordinal: '%dη',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4st is the first week of the year.
	        }
	    });

	    return el;

	}));

/***/ }),
/* 389 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : australian english (en-au)

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var en_au = moment.defineLocale('en-au', {
	        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	        longDateFormat : {
	            LT : 'h:mm A',
	            LTS : 'h:mm:ss A',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY h:mm A',
	            LLLL : 'dddd, D MMMM YYYY h:mm A'
	        },
	        calendar : {
	            sameDay : '[Today at] LT',
	            nextDay : '[Tomorrow at] LT',
	            nextWeek : 'dddd [at] LT',
	            lastDay : '[Yesterday at] LT',
	            lastWeek : '[Last] dddd [at] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'in %s',
	            past : '%s ago',
	            s : 'a few seconds',
	            m : 'a minute',
	            mm : '%d minutes',
	            h : 'an hour',
	            hh : '%d hours',
	            d : 'a day',
	            dd : '%d days',
	            M : 'a month',
	            MM : '%d months',
	            y : 'a year',
	            yy : '%d years'
	        },
	        ordinalParse: /\d{1,2}(st|nd|rd|th)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (~~(number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return en_au;

	}));

/***/ }),
/* 390 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : canadian english (en-ca)
	//! author : Jonathan Abourbih : https://github.com/jonbca

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var en_ca = moment.defineLocale('en-ca', {
	        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	        longDateFormat : {
	            LT : 'h:mm A',
	            LTS : 'h:mm:ss A',
	            L : 'YYYY-MM-DD',
	            LL : 'MMMM D, YYYY',
	            LLL : 'MMMM D, YYYY h:mm A',
	            LLLL : 'dddd, MMMM D, YYYY h:mm A'
	        },
	        calendar : {
	            sameDay : '[Today at] LT',
	            nextDay : '[Tomorrow at] LT',
	            nextWeek : 'dddd [at] LT',
	            lastDay : '[Yesterday at] LT',
	            lastWeek : '[Last] dddd [at] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'in %s',
	            past : '%s ago',
	            s : 'a few seconds',
	            m : 'a minute',
	            mm : '%d minutes',
	            h : 'an hour',
	            hh : '%d hours',
	            d : 'a day',
	            dd : '%d days',
	            M : 'a month',
	            MM : '%d months',
	            y : 'a year',
	            yy : '%d years'
	        },
	        ordinalParse: /\d{1,2}(st|nd|rd|th)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (~~(number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	            return number + output;
	        }
	    });

	    return en_ca;

	}));

/***/ }),
/* 391 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : great britain english (en-gb)
	//! author : Chris Gedrim : https://github.com/chrisgedrim

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var en_gb = moment.defineLocale('en-gb', {
	        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Today at] LT',
	            nextDay : '[Tomorrow at] LT',
	            nextWeek : 'dddd [at] LT',
	            lastDay : '[Yesterday at] LT',
	            lastWeek : '[Last] dddd [at] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'in %s',
	            past : '%s ago',
	            s : 'a few seconds',
	            m : 'a minute',
	            mm : '%d minutes',
	            h : 'an hour',
	            hh : '%d hours',
	            d : 'a day',
	            dd : '%d days',
	            M : 'a month',
	            MM : '%d months',
	            y : 'a year',
	            yy : '%d years'
	        },
	        ordinalParse: /\d{1,2}(st|nd|rd|th)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (~~(number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return en_gb;

	}));

/***/ }),
/* 392 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Irish english (en-ie)
	//! author : Chris Cartlidge : https://github.com/chriscartlidge

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var en_ie = moment.defineLocale('en-ie', {
	        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD-MM-YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Today at] LT',
	            nextDay : '[Tomorrow at] LT',
	            nextWeek : 'dddd [at] LT',
	            lastDay : '[Yesterday at] LT',
	            lastWeek : '[Last] dddd [at] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'in %s',
	            past : '%s ago',
	            s : 'a few seconds',
	            m : 'a minute',
	            mm : '%d minutes',
	            h : 'an hour',
	            hh : '%d hours',
	            d : 'a day',
	            dd : '%d days',
	            M : 'a month',
	            MM : '%d months',
	            y : 'a year',
	            yy : '%d years'
	        },
	        ordinalParse: /\d{1,2}(st|nd|rd|th)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (~~(number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return en_ie;

	}));

/***/ }),
/* 393 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : New Zealand english (en-nz)

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var en_nz = moment.defineLocale('en-nz', {
	        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	        longDateFormat : {
	            LT : 'h:mm A',
	            LTS : 'h:mm:ss A',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY h:mm A',
	            LLLL : 'dddd, D MMMM YYYY h:mm A'
	        },
	        calendar : {
	            sameDay : '[Today at] LT',
	            nextDay : '[Tomorrow at] LT',
	            nextWeek : 'dddd [at] LT',
	            lastDay : '[Yesterday at] LT',
	            lastWeek : '[Last] dddd [at] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'in %s',
	            past : '%s ago',
	            s : 'a few seconds',
	            m : 'a minute',
	            mm : '%d minutes',
	            h : 'an hour',
	            hh : '%d hours',
	            d : 'a day',
	            dd : '%d days',
	            M : 'a month',
	            MM : '%d months',
	            y : 'a year',
	            yy : '%d years'
	        },
	        ordinalParse: /\d{1,2}(st|nd|rd|th)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (~~(number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return en_nz;

	}));

/***/ }),
/* 394 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : esperanto (eo)
	//! author : Colin Dean : https://github.com/colindean
	//! komento: Mi estas malcerta se mi korekte traktis akuzativojn en tiu traduko.
	//!          Se ne, bonvolu korekti kaj avizi min por ke mi povas lerni!

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var eo = moment.defineLocale('eo', {
	        months : 'januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aŭg_sep_okt_nov_dec'.split('_'),
	        weekdays : 'Dimanĉo_Lundo_Mardo_Merkredo_Ĵaŭdo_Vendredo_Sabato'.split('_'),
	        weekdaysShort : 'Dim_Lun_Mard_Merk_Ĵaŭ_Ven_Sab'.split('_'),
	        weekdaysMin : 'Di_Lu_Ma_Me_Ĵa_Ve_Sa'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'YYYY-MM-DD',
	            LL : 'D[-an de] MMMM, YYYY',
	            LLL : 'D[-an de] MMMM, YYYY HH:mm',
	            LLLL : 'dddd, [la] D[-an de] MMMM, YYYY HH:mm'
	        },
	        meridiemParse: /[ap]\.t\.m/i,
	        isPM: function (input) {
	            return input.charAt(0).toLowerCase() === 'p';
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours > 11) {
	                return isLower ? 'p.t.m.' : 'P.T.M.';
	            } else {
	                return isLower ? 'a.t.m.' : 'A.T.M.';
	            }
	        },
	        calendar : {
	            sameDay : '[Hodiaŭ je] LT',
	            nextDay : '[Morgaŭ je] LT',
	            nextWeek : 'dddd [je] LT',
	            lastDay : '[Hieraŭ je] LT',
	            lastWeek : '[pasinta] dddd [je] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'je %s',
	            past : 'antaŭ %s',
	            s : 'sekundoj',
	            m : 'minuto',
	            mm : '%d minutoj',
	            h : 'horo',
	            hh : '%d horoj',
	            d : 'tago',//ne 'diurno', ĉar estas uzita por proksimumo
	            dd : '%d tagoj',
	            M : 'monato',
	            MM : '%d monatoj',
	            y : 'jaro',
	            yy : '%d jaroj'
	        },
	        ordinalParse: /\d{1,2}a/,
	        ordinal : '%da',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return eo;

	}));

/***/ }),
/* 395 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : spanish (es)
	//! author : Julio Napurí : https://github.com/julionc

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),
	        monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');

	    var es = moment.defineLocale('es', {
	        months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
	        monthsShort : function (m, format) {
	            if (/-MMM-/.test(format)) {
	                return monthsShort[m.month()];
	            } else {
	                return monthsShortDot[m.month()];
	            }
	        },
	        monthsParseExact : true,
	        weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
	        weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
	        weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D [de] MMMM [de] YYYY',
	            LLL : 'D [de] MMMM [de] YYYY H:mm',
	            LLLL : 'dddd, D [de] MMMM [de] YYYY H:mm'
	        },
	        calendar : {
	            sameDay : function () {
	                return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            nextDay : function () {
	                return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            nextWeek : function () {
	                return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            lastDay : function () {
	                return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            lastWeek : function () {
	                return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'en %s',
	            past : 'hace %s',
	            s : 'unos segundos',
	            m : 'un minuto',
	            mm : '%d minutos',
	            h : 'una hora',
	            hh : '%d horas',
	            d : 'un día',
	            dd : '%d días',
	            M : 'un mes',
	            MM : '%d meses',
	            y : 'un año',
	            yy : '%d años'
	        },
	        ordinalParse : /\d{1,2}º/,
	        ordinal : '%dº',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return es;

	}));

/***/ }),
/* 396 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : estonian (et)
	//! author : Henry Kehlmann : https://github.com/madhenry
	//! improvements : Illimar Tambek : https://github.com/ragulka

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var format = {
	            's' : ['mõne sekundi', 'mõni sekund', 'paar sekundit'],
	            'm' : ['ühe minuti', 'üks minut'],
	            'mm': [number + ' minuti', number + ' minutit'],
	            'h' : ['ühe tunni', 'tund aega', 'üks tund'],
	            'hh': [number + ' tunni', number + ' tundi'],
	            'd' : ['ühe päeva', 'üks päev'],
	            'M' : ['kuu aja', 'kuu aega', 'üks kuu'],
	            'MM': [number + ' kuu', number + ' kuud'],
	            'y' : ['ühe aasta', 'aasta', 'üks aasta'],
	            'yy': [number + ' aasta', number + ' aastat']
	        };
	        if (withoutSuffix) {
	            return format[key][2] ? format[key][2] : format[key][1];
	        }
	        return isFuture ? format[key][0] : format[key][1];
	    }

	    var et = moment.defineLocale('et', {
	        months        : 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split('_'),
	        monthsShort   : 'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split('_'),
	        weekdays      : 'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split('_'),
	        weekdaysShort : 'P_E_T_K_N_R_L'.split('_'),
	        weekdaysMin   : 'P_E_T_K_N_R_L'.split('_'),
	        longDateFormat : {
	            LT   : 'H:mm',
	            LTS : 'H:mm:ss',
	            L    : 'DD.MM.YYYY',
	            LL   : 'D. MMMM YYYY',
	            LLL  : 'D. MMMM YYYY H:mm',
	            LLLL : 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay  : '[Täna,] LT',
	            nextDay  : '[Homme,] LT',
	            nextWeek : '[Järgmine] dddd LT',
	            lastDay  : '[Eile,] LT',
	            lastWeek : '[Eelmine] dddd LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s pärast',
	            past   : '%s tagasi',
	            s      : processRelativeTime,
	            m      : processRelativeTime,
	            mm     : processRelativeTime,
	            h      : processRelativeTime,
	            hh     : processRelativeTime,
	            d      : processRelativeTime,
	            dd     : '%d päeva',
	            M      : processRelativeTime,
	            MM     : processRelativeTime,
	            y      : processRelativeTime,
	            yy     : processRelativeTime
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return et;

	}));

/***/ }),
/* 397 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : euskara (eu)
	//! author : Eneko Illarramendi : https://github.com/eillarra

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var eu = moment.defineLocale('eu', {
	        months : 'urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua'.split('_'),
	        monthsShort : 'urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata'.split('_'),
	        weekdaysShort : 'ig._al._ar._az._og._ol._lr.'.split('_'),
	        weekdaysMin : 'ig_al_ar_az_og_ol_lr'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'YYYY-MM-DD',
	            LL : 'YYYY[ko] MMMM[ren] D[a]',
	            LLL : 'YYYY[ko] MMMM[ren] D[a] HH:mm',
	            LLLL : 'dddd, YYYY[ko] MMMM[ren] D[a] HH:mm',
	            l : 'YYYY-M-D',
	            ll : 'YYYY[ko] MMM D[a]',
	            lll : 'YYYY[ko] MMM D[a] HH:mm',
	            llll : 'ddd, YYYY[ko] MMM D[a] HH:mm'
	        },
	        calendar : {
	            sameDay : '[gaur] LT[etan]',
	            nextDay : '[bihar] LT[etan]',
	            nextWeek : 'dddd LT[etan]',
	            lastDay : '[atzo] LT[etan]',
	            lastWeek : '[aurreko] dddd LT[etan]',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s barru',
	            past : 'duela %s',
	            s : 'segundo batzuk',
	            m : 'minutu bat',
	            mm : '%d minutu',
	            h : 'ordu bat',
	            hh : '%d ordu',
	            d : 'egun bat',
	            dd : '%d egun',
	            M : 'hilabete bat',
	            MM : '%d hilabete',
	            y : 'urte bat',
	            yy : '%d urte'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return eu;

	}));

/***/ }),
/* 398 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Persian (fa)
	//! author : Ebrahim Byagowi : https://github.com/ebraminio

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var symbolMap = {
	        '1': '۱',
	        '2': '۲',
	        '3': '۳',
	        '4': '۴',
	        '5': '۵',
	        '6': '۶',
	        '7': '۷',
	        '8': '۸',
	        '9': '۹',
	        '0': '۰'
	    }, numberMap = {
	        '۱': '1',
	        '۲': '2',
	        '۳': '3',
	        '۴': '4',
	        '۵': '5',
	        '۶': '6',
	        '۷': '7',
	        '۸': '8',
	        '۹': '9',
	        '۰': '0'
	    };

	    var fa = moment.defineLocale('fa', {
	        months : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),
	        monthsShort : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),
	        weekdays : 'یک\u200cشنبه_دوشنبه_سه\u200cشنبه_چهارشنبه_پنج\u200cشنبه_جمعه_شنبه'.split('_'),
	        weekdaysShort : 'یک\u200cشنبه_دوشنبه_سه\u200cشنبه_چهارشنبه_پنج\u200cشنبه_جمعه_شنبه'.split('_'),
	        weekdaysMin : 'ی_د_س_چ_پ_ج_ش'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        meridiemParse: /قبل از ظهر|بعد از ظهر/,
	        isPM: function (input) {
	            return /بعد از ظهر/.test(input);
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return 'قبل از ظهر';
	            } else {
	                return 'بعد از ظهر';
	            }
	        },
	        calendar : {
	            sameDay : '[امروز ساعت] LT',
	            nextDay : '[فردا ساعت] LT',
	            nextWeek : 'dddd [ساعت] LT',
	            lastDay : '[دیروز ساعت] LT',
	            lastWeek : 'dddd [پیش] [ساعت] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'در %s',
	            past : '%s پیش',
	            s : 'چندین ثانیه',
	            m : 'یک دقیقه',
	            mm : '%d دقیقه',
	            h : 'یک ساعت',
	            hh : '%d ساعت',
	            d : 'یک روز',
	            dd : '%d روز',
	            M : 'یک ماه',
	            MM : '%d ماه',
	            y : 'یک سال',
	            yy : '%d سال'
	        },
	        preparse: function (string) {
	            return string.replace(/[۰-۹]/g, function (match) {
	                return numberMap[match];
	            }).replace(/،/g, ',');
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            }).replace(/,/g, '،');
	        },
	        ordinalParse: /\d{1,2}م/,
	        ordinal : '%dم',
	        week : {
	            dow : 6, // Saturday is the first day of the week.
	            doy : 12 // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return fa;

	}));

/***/ }),
/* 399 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : finnish (fi)
	//! author : Tarmo Aidantausta : https://github.com/bleadof

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var numbersPast = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(' '),
	        numbersFuture = [
	            'nolla', 'yhden', 'kahden', 'kolmen', 'neljän', 'viiden', 'kuuden',
	            numbersPast[7], numbersPast[8], numbersPast[9]
	        ];
	    function translate(number, withoutSuffix, key, isFuture) {
	        var result = '';
	        switch (key) {
	        case 's':
	            return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';
	        case 'm':
	            return isFuture ? 'minuutin' : 'minuutti';
	        case 'mm':
	            result = isFuture ? 'minuutin' : 'minuuttia';
	            break;
	        case 'h':
	            return isFuture ? 'tunnin' : 'tunti';
	        case 'hh':
	            result = isFuture ? 'tunnin' : 'tuntia';
	            break;
	        case 'd':
	            return isFuture ? 'päivän' : 'päivä';
	        case 'dd':
	            result = isFuture ? 'päivän' : 'päivää';
	            break;
	        case 'M':
	            return isFuture ? 'kuukauden' : 'kuukausi';
	        case 'MM':
	            result = isFuture ? 'kuukauden' : 'kuukautta';
	            break;
	        case 'y':
	            return isFuture ? 'vuoden' : 'vuosi';
	        case 'yy':
	            result = isFuture ? 'vuoden' : 'vuotta';
	            break;
	        }
	        result = verbalNumber(number, isFuture) + ' ' + result;
	        return result;
	    }
	    function verbalNumber(number, isFuture) {
	        return number < 10 ? (isFuture ? numbersFuture[number] : numbersPast[number]) : number;
	    }

	    var fi = moment.defineLocale('fi', {
	        months : 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split('_'),
	        monthsShort : 'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split('_'),
	        weekdays : 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split('_'),
	        weekdaysShort : 'su_ma_ti_ke_to_pe_la'.split('_'),
	        weekdaysMin : 'su_ma_ti_ke_to_pe_la'.split('_'),
	        longDateFormat : {
	            LT : 'HH.mm',
	            LTS : 'HH.mm.ss',
	            L : 'DD.MM.YYYY',
	            LL : 'Do MMMM[ta] YYYY',
	            LLL : 'Do MMMM[ta] YYYY, [klo] HH.mm',
	            LLLL : 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',
	            l : 'D.M.YYYY',
	            ll : 'Do MMM YYYY',
	            lll : 'Do MMM YYYY, [klo] HH.mm',
	            llll : 'ddd, Do MMM YYYY, [klo] HH.mm'
	        },
	        calendar : {
	            sameDay : '[tänään] [klo] LT',
	            nextDay : '[huomenna] [klo] LT',
	            nextWeek : 'dddd [klo] LT',
	            lastDay : '[eilen] [klo] LT',
	            lastWeek : '[viime] dddd[na] [klo] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s päästä',
	            past : '%s sitten',
	            s : translate,
	            m : translate,
	            mm : translate,
	            h : translate,
	            hh : translate,
	            d : translate,
	            dd : translate,
	            M : translate,
	            MM : translate,
	            y : translate,
	            yy : translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return fi;

	}));

/***/ }),
/* 400 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : faroese (fo)
	//! author : Ragnar Johannesen : https://github.com/ragnar123

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var fo = moment.defineLocale('fo', {
	        months : 'januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
	        weekdays : 'sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur'.split('_'),
	        weekdaysShort : 'sun_mán_týs_mik_hós_frí_ley'.split('_'),
	        weekdaysMin : 'su_má_tý_mi_hó_fr_le'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D. MMMM, YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Í dag kl.] LT',
	            nextDay : '[Í morgin kl.] LT',
	            nextWeek : 'dddd [kl.] LT',
	            lastDay : '[Í gjár kl.] LT',
	            lastWeek : '[síðstu] dddd [kl] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'um %s',
	            past : '%s síðani',
	            s : 'fá sekund',
	            m : 'ein minutt',
	            mm : '%d minuttir',
	            h : 'ein tími',
	            hh : '%d tímar',
	            d : 'ein dagur',
	            dd : '%d dagar',
	            M : 'ein mánaði',
	            MM : '%d mánaðir',
	            y : 'eitt ár',
	            yy : '%d ár'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return fo;

	}));

/***/ }),
/* 401 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : french (fr)
	//! author : John Fischer : https://github.com/jfroffice

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var fr = moment.defineLocale('fr', {
	        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
	        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
	        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
	        weekdaysMin : 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Aujourd\'hui à] LT',
	            nextDay: '[Demain à] LT',
	            nextWeek: 'dddd [à] LT',
	            lastDay: '[Hier à] LT',
	            lastWeek: 'dddd [dernier à] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'dans %s',
	            past : 'il y a %s',
	            s : 'quelques secondes',
	            m : 'une minute',
	            mm : '%d minutes',
	            h : 'une heure',
	            hh : '%d heures',
	            d : 'un jour',
	            dd : '%d jours',
	            M : 'un mois',
	            MM : '%d mois',
	            y : 'un an',
	            yy : '%d ans'
	        },
	        ordinalParse: /\d{1,2}(er|)/,
	        ordinal : function (number) {
	            return number + (number === 1 ? 'er' : '');
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return fr;

	}));

/***/ }),
/* 402 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : canadian french (fr-ca)
	//! author : Jonathan Abourbih : https://github.com/jonbca

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var fr_ca = moment.defineLocale('fr-ca', {
	        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
	        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
	        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
	        weekdaysMin : 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'YYYY-MM-DD',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Aujourd\'hui à] LT',
	            nextDay: '[Demain à] LT',
	            nextWeek: 'dddd [à] LT',
	            lastDay: '[Hier à] LT',
	            lastWeek: 'dddd [dernier à] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'dans %s',
	            past : 'il y a %s',
	            s : 'quelques secondes',
	            m : 'une minute',
	            mm : '%d minutes',
	            h : 'une heure',
	            hh : '%d heures',
	            d : 'un jour',
	            dd : '%d jours',
	            M : 'un mois',
	            MM : '%d mois',
	            y : 'un an',
	            yy : '%d ans'
	        },
	        ordinalParse: /\d{1,2}(er|e)/,
	        ordinal : function (number) {
	            return number + (number === 1 ? 'er' : 'e');
	        }
	    });

	    return fr_ca;

	}));

/***/ }),
/* 403 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : swiss french (fr)
	//! author : Gaspard Bucher : https://github.com/gaspard

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var fr_ch = moment.defineLocale('fr-ch', {
	        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
	        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
	        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
	        weekdaysMin : 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Aujourd\'hui à] LT',
	            nextDay: '[Demain à] LT',
	            nextWeek: 'dddd [à] LT',
	            lastDay: '[Hier à] LT',
	            lastWeek: 'dddd [dernier à] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'dans %s',
	            past : 'il y a %s',
	            s : 'quelques secondes',
	            m : 'une minute',
	            mm : '%d minutes',
	            h : 'une heure',
	            hh : '%d heures',
	            d : 'un jour',
	            dd : '%d jours',
	            M : 'un mois',
	            MM : '%d mois',
	            y : 'un an',
	            yy : '%d ans'
	        },
	        ordinalParse: /\d{1,2}(er|e)/,
	        ordinal : function (number) {
	            return number + (number === 1 ? 'er' : 'e');
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return fr_ch;

	}));

/***/ }),
/* 404 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : frisian (fy)
	//! author : Robin van der Vliet : https://github.com/robin0van0der0v

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var monthsShortWithDots = 'jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.'.split('_'),
	        monthsShortWithoutDots = 'jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_');

	    var fy = moment.defineLocale('fy', {
	        months : 'jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber'.split('_'),
	        monthsShort : function (m, format) {
	            if (/-MMM-/.test(format)) {
	                return monthsShortWithoutDots[m.month()];
	            } else {
	                return monthsShortWithDots[m.month()];
	            }
	        },
	        monthsParseExact : true,
	        weekdays : 'snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon'.split('_'),
	        weekdaysShort : 'si._mo._ti._wo._to._fr._so.'.split('_'),
	        weekdaysMin : 'Si_Mo_Ti_Wo_To_Fr_So'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD-MM-YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[hjoed om] LT',
	            nextDay: '[moarn om] LT',
	            nextWeek: 'dddd [om] LT',
	            lastDay: '[juster om] LT',
	            lastWeek: '[ôfrûne] dddd [om] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'oer %s',
	            past : '%s lyn',
	            s : 'in pear sekonden',
	            m : 'ien minút',
	            mm : '%d minuten',
	            h : 'ien oere',
	            hh : '%d oeren',
	            d : 'ien dei',
	            dd : '%d dagen',
	            M : 'ien moanne',
	            MM : '%d moannen',
	            y : 'ien jier',
	            yy : '%d jierren'
	        },
	        ordinalParse: /\d{1,2}(ste|de)/,
	        ordinal : function (number) {
	            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return fy;

	}));

/***/ }),
/* 405 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : great britain scottish gealic (gd)
	//! author : Jon Ashdown : https://github.com/jonashdown

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var months = [
	        'Am Faoilleach', 'An Gearran', 'Am Màrt', 'An Giblean', 'An Cèitean', 'An t-Ògmhios', 'An t-Iuchar', 'An Lùnastal', 'An t-Sultain', 'An Dàmhair', 'An t-Samhain', 'An Dùbhlachd'
	    ];

	    var monthsShort = ['Faoi', 'Gear', 'Màrt', 'Gibl', 'Cèit', 'Ògmh', 'Iuch', 'Lùn', 'Sult', 'Dàmh', 'Samh', 'Dùbh'];

	    var weekdays = ['Didòmhnaich', 'Diluain', 'Dimàirt', 'Diciadain', 'Diardaoin', 'Dihaoine', 'Disathairne'];

	    var weekdaysShort = ['Did', 'Dil', 'Dim', 'Dic', 'Dia', 'Dih', 'Dis'];

	    var weekdaysMin = ['Dò', 'Lu', 'Mà', 'Ci', 'Ar', 'Ha', 'Sa'];

	    var gd = moment.defineLocale('gd', {
	        months : months,
	        monthsShort : monthsShort,
	        monthsParseExact : true,
	        weekdays : weekdays,
	        weekdaysShort : weekdaysShort,
	        weekdaysMin : weekdaysMin,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[An-diugh aig] LT',
	            nextDay : '[A-màireach aig] LT',
	            nextWeek : 'dddd [aig] LT',
	            lastDay : '[An-dè aig] LT',
	            lastWeek : 'dddd [seo chaidh] [aig] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'ann an %s',
	            past : 'bho chionn %s',
	            s : 'beagan diogan',
	            m : 'mionaid',
	            mm : '%d mionaidean',
	            h : 'uair',
	            hh : '%d uairean',
	            d : 'latha',
	            dd : '%d latha',
	            M : 'mìos',
	            MM : '%d mìosan',
	            y : 'bliadhna',
	            yy : '%d bliadhna'
	        },
	        ordinalParse : /\d{1,2}(d|na|mh)/,
	        ordinal : function (number) {
	            var output = number === 1 ? 'd' : number % 10 === 2 ? 'na' : 'mh';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return gd;

	}));

/***/ }),
/* 406 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : galician (gl)
	//! author : Juan G. Hurtado : https://github.com/juanghurtado

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var gl = moment.defineLocale('gl', {
	        months : 'Xaneiro_Febreiro_Marzo_Abril_Maio_Xuño_Xullo_Agosto_Setembro_Outubro_Novembro_Decembro'.split('_'),
	        monthsShort : 'Xan._Feb._Mar._Abr._Mai._Xuñ._Xul._Ago._Set._Out._Nov._Dec.'.split('_'),
	        monthsParseExact: true,
	        weekdays : 'Domingo_Luns_Martes_Mércores_Xoves_Venres_Sábado'.split('_'),
	        weekdaysShort : 'Dom._Lun._Mar._Mér._Xov._Ven._Sáb.'.split('_'),
	        weekdaysMin : 'Do_Lu_Ma_Mé_Xo_Ve_Sá'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY H:mm',
	            LLLL : 'dddd D MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay : function () {
	                return '[hoxe ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';
	            },
	            nextDay : function () {
	                return '[mañá ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';
	            },
	            nextWeek : function () {
	                return 'dddd [' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';
	            },
	            lastDay : function () {
	                return '[onte ' + ((this.hours() !== 1) ? 'á' : 'a') + '] LT';
	            },
	            lastWeek : function () {
	                return '[o] dddd [pasado ' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : function (str) {
	                if (str === 'uns segundos') {
	                    return 'nuns segundos';
	                }
	                return 'en ' + str;
	            },
	            past : 'hai %s',
	            s : 'uns segundos',
	            m : 'un minuto',
	            mm : '%d minutos',
	            h : 'unha hora',
	            hh : '%d horas',
	            d : 'un día',
	            dd : '%d días',
	            M : 'un mes',
	            MM : '%d meses',
	            y : 'un ano',
	            yy : '%d anos'
	        },
	        ordinalParse : /\d{1,2}º/,
	        ordinal : '%dº',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return gl;

	}));

/***/ }),
/* 407 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Hebrew (he)
	//! author : Tomer Cohen : https://github.com/tomer
	//! author : Moshe Simantov : https://github.com/DevelopmentIL
	//! author : Tal Ater : https://github.com/TalAter

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var he = moment.defineLocale('he', {
	        months : 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split('_'),
	        monthsShort : 'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split('_'),
	        weekdays : 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),
	        weekdaysShort : 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),
	        weekdaysMin : 'א_ב_ג_ד_ה_ו_ש'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D [ב]MMMM YYYY',
	            LLL : 'D [ב]MMMM YYYY HH:mm',
	            LLLL : 'dddd, D [ב]MMMM YYYY HH:mm',
	            l : 'D/M/YYYY',
	            ll : 'D MMM YYYY',
	            lll : 'D MMM YYYY HH:mm',
	            llll : 'ddd, D MMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[היום ב־]LT',
	            nextDay : '[מחר ב־]LT',
	            nextWeek : 'dddd [בשעה] LT',
	            lastDay : '[אתמול ב־]LT',
	            lastWeek : '[ביום] dddd [האחרון בשעה] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'בעוד %s',
	            past : 'לפני %s',
	            s : 'מספר שניות',
	            m : 'דקה',
	            mm : '%d דקות',
	            h : 'שעה',
	            hh : function (number) {
	                if (number === 2) {
	                    return 'שעתיים';
	                }
	                return number + ' שעות';
	            },
	            d : 'יום',
	            dd : function (number) {
	                if (number === 2) {
	                    return 'יומיים';
	                }
	                return number + ' ימים';
	            },
	            M : 'חודש',
	            MM : function (number) {
	                if (number === 2) {
	                    return 'חודשיים';
	                }
	                return number + ' חודשים';
	            },
	            y : 'שנה',
	            yy : function (number) {
	                if (number === 2) {
	                    return 'שנתיים';
	                } else if (number % 10 === 0 && number !== 10) {
	                    return number + ' שנה';
	                }
	                return number + ' שנים';
	            }
	        },
	        meridiemParse: /אחה"צ|לפנה"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,
	        isPM : function (input) {
	            return /^(אחה"צ|אחרי הצהריים|בערב)$/.test(input);
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 5) {
	                return 'לפנות בוקר';
	            } else if (hour < 10) {
	                return 'בבוקר';
	            } else if (hour < 12) {
	                return isLower ? 'לפנה"צ' : 'לפני הצהריים';
	            } else if (hour < 18) {
	                return isLower ? 'אחה"צ' : 'אחרי הצהריים';
	            } else {
	                return 'בערב';
	            }
	        }
	    });

	    return he;

	}));

/***/ }),
/* 408 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : hindi (hi)
	//! author : Mayank Singhal : https://github.com/mayanksinghal

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var symbolMap = {
	        '1': '१',
	        '2': '२',
	        '3': '३',
	        '4': '४',
	        '5': '५',
	        '6': '६',
	        '7': '७',
	        '8': '८',
	        '9': '९',
	        '0': '०'
	    },
	    numberMap = {
	        '१': '1',
	        '२': '2',
	        '३': '3',
	        '४': '4',
	        '५': '5',
	        '६': '6',
	        '७': '7',
	        '८': '8',
	        '९': '9',
	        '०': '0'
	    };

	    var hi = moment.defineLocale('hi', {
	        months : 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split('_'),
	        monthsShort : 'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split('_'),
	        monthsParseExact: true,
	        weekdays : 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
	        weekdaysShort : 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),
	        weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),
	        longDateFormat : {
	            LT : 'A h:mm बजे',
	            LTS : 'A h:mm:ss बजे',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, A h:mm बजे',
	            LLLL : 'dddd, D MMMM YYYY, A h:mm बजे'
	        },
	        calendar : {
	            sameDay : '[आज] LT',
	            nextDay : '[कल] LT',
	            nextWeek : 'dddd, LT',
	            lastDay : '[कल] LT',
	            lastWeek : '[पिछले] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s में',
	            past : '%s पहले',
	            s : 'कुछ ही क्षण',
	            m : 'एक मिनट',
	            mm : '%d मिनट',
	            h : 'एक घंटा',
	            hh : '%d घंटे',
	            d : 'एक दिन',
	            dd : '%d दिन',
	            M : 'एक महीने',
	            MM : '%d महीने',
	            y : 'एक वर्ष',
	            yy : '%d वर्ष'
	        },
	        preparse: function (string) {
	            return string.replace(/[१२३४५६७८९०]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        // Hindi notation for meridiems are quite fuzzy in practice. While there exists
	        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.
	        meridiemParse: /रात|सुबह|दोपहर|शाम/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'रात') {
	                return hour < 4 ? hour : hour + 12;
	            } else if (meridiem === 'सुबह') {
	                return hour;
	            } else if (meridiem === 'दोपहर') {
	                return hour >= 10 ? hour : hour + 12;
	            } else if (meridiem === 'शाम') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'रात';
	            } else if (hour < 10) {
	                return 'सुबह';
	            } else if (hour < 17) {
	                return 'दोपहर';
	            } else if (hour < 20) {
	                return 'शाम';
	            } else {
	                return 'रात';
	            }
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return hi;

	}));

/***/ }),
/* 409 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : hrvatski (hr)
	//! author : Bojan Marković : https://github.com/bmarkovic

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function translate(number, withoutSuffix, key) {
	        var result = number + ' ';
	        switch (key) {
	        case 'm':
	            return withoutSuffix ? 'jedna minuta' : 'jedne minute';
	        case 'mm':
	            if (number === 1) {
	                result += 'minuta';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'minute';
	            } else {
	                result += 'minuta';
	            }
	            return result;
	        case 'h':
	            return withoutSuffix ? 'jedan sat' : 'jednog sata';
	        case 'hh':
	            if (number === 1) {
	                result += 'sat';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'sata';
	            } else {
	                result += 'sati';
	            }
	            return result;
	        case 'dd':
	            if (number === 1) {
	                result += 'dan';
	            } else {
	                result += 'dana';
	            }
	            return result;
	        case 'MM':
	            if (number === 1) {
	                result += 'mjesec';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'mjeseca';
	            } else {
	                result += 'mjeseci';
	            }
	            return result;
	        case 'yy':
	            if (number === 1) {
	                result += 'godina';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'godine';
	            } else {
	                result += 'godina';
	            }
	            return result;
	        }
	    }

	    var hr = moment.defineLocale('hr', {
	        months : {
	            format: 'siječnja_veljače_ožujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca'.split('_'),
	            standalone: 'siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac'.split('_')
	        },
	        monthsShort : 'sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.'.split('_'),
	        monthsParseExact: true,
	        weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
	        weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
	        weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD. MM. YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY H:mm',
	            LLLL : 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay  : '[danas u] LT',
	            nextDay  : '[sutra u] LT',
	            nextWeek : function () {
	                switch (this.day()) {
	                case 0:
	                    return '[u] [nedjelju] [u] LT';
	                case 3:
	                    return '[u] [srijedu] [u] LT';
	                case 6:
	                    return '[u] [subotu] [u] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[u] dddd [u] LT';
	                }
	            },
	            lastDay  : '[jučer u] LT',
	            lastWeek : function () {
	                switch (this.day()) {
	                case 0:
	                case 3:
	                    return '[prošlu] dddd [u] LT';
	                case 6:
	                    return '[prošle] [subote] [u] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[prošli] dddd [u] LT';
	                }
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'za %s',
	            past   : 'prije %s',
	            s      : 'par sekundi',
	            m      : translate,
	            mm     : translate,
	            h      : translate,
	            hh     : translate,
	            d      : 'dan',
	            dd     : translate,
	            M      : 'mjesec',
	            MM     : translate,
	            y      : 'godinu',
	            yy     : translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return hr;

	}));

/***/ }),
/* 410 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : hungarian (hu)
	//! author : Adam Brunner : https://github.com/adambrunner

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var weekEndings = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(' ');
	    function translate(number, withoutSuffix, key, isFuture) {
	        var num = number,
	            suffix;
	        switch (key) {
	        case 's':
	            return (isFuture || withoutSuffix) ? 'néhány másodperc' : 'néhány másodperce';
	        case 'm':
	            return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');
	        case 'mm':
	            return num + (isFuture || withoutSuffix ? ' perc' : ' perce');
	        case 'h':
	            return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája');
	        case 'hh':
	            return num + (isFuture || withoutSuffix ? ' óra' : ' órája');
	        case 'd':
	            return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');
	        case 'dd':
	            return num + (isFuture || withoutSuffix ? ' nap' : ' napja');
	        case 'M':
	            return 'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
	        case 'MM':
	            return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
	        case 'y':
	            return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve');
	        case 'yy':
	            return num + (isFuture || withoutSuffix ? ' év' : ' éve');
	        }
	        return '';
	    }
	    function week(isFuture) {
	        return (isFuture ? '' : '[múlt] ') + '[' + weekEndings[this.day()] + '] LT[-kor]';
	    }

	    var hu = moment.defineLocale('hu', {
	        months : 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split('_'),
	        monthsShort : 'jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec'.split('_'),
	        weekdays : 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),
	        weekdaysShort : 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),
	        weekdaysMin : 'v_h_k_sze_cs_p_szo'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'YYYY.MM.DD.',
	            LL : 'YYYY. MMMM D.',
	            LLL : 'YYYY. MMMM D. H:mm',
	            LLLL : 'YYYY. MMMM D., dddd H:mm'
	        },
	        meridiemParse: /de|du/i,
	        isPM: function (input) {
	            return input.charAt(1).toLowerCase() === 'u';
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 12) {
	                return isLower === true ? 'de' : 'DE';
	            } else {
	                return isLower === true ? 'du' : 'DU';
	            }
	        },
	        calendar : {
	            sameDay : '[ma] LT[-kor]',
	            nextDay : '[holnap] LT[-kor]',
	            nextWeek : function () {
	                return week.call(this, true);
	            },
	            lastDay : '[tegnap] LT[-kor]',
	            lastWeek : function () {
	                return week.call(this, false);
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s múlva',
	            past : '%s',
	            s : translate,
	            m : translate,
	            mm : translate,
	            h : translate,
	            hh : translate,
	            d : translate,
	            dd : translate,
	            M : translate,
	            MM : translate,
	            y : translate,
	            yy : translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return hu;

	}));

/***/ }),
/* 411 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Armenian (hy-am)
	//! author : Armendarabyan : https://github.com/armendarabyan

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var hy_am = moment.defineLocale('hy-am', {
	        months : {
	            format: 'հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի'.split('_'),
	            standalone: 'հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր'.split('_')
	        },
	        monthsShort : 'հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ'.split('_'),
	        weekdays : 'կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ'.split('_'),
	        weekdaysShort : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
	        weekdaysMin : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY թ.',
	            LLL : 'D MMMM YYYY թ., HH:mm',
	            LLLL : 'dddd, D MMMM YYYY թ., HH:mm'
	        },
	        calendar : {
	            sameDay: '[այսօր] LT',
	            nextDay: '[վաղը] LT',
	            lastDay: '[երեկ] LT',
	            nextWeek: function () {
	                return 'dddd [օրը ժամը] LT';
	            },
	            lastWeek: function () {
	                return '[անցած] dddd [օրը ժամը] LT';
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : '%s հետո',
	            past : '%s առաջ',
	            s : 'մի քանի վայրկյան',
	            m : 'րոպե',
	            mm : '%d րոպե',
	            h : 'ժամ',
	            hh : '%d ժամ',
	            d : 'օր',
	            dd : '%d օր',
	            M : 'ամիս',
	            MM : '%d ամիս',
	            y : 'տարի',
	            yy : '%d տարի'
	        },
	        meridiemParse: /գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,
	        isPM: function (input) {
	            return /^(ցերեկվա|երեկոյան)$/.test(input);
	        },
	        meridiem : function (hour) {
	            if (hour < 4) {
	                return 'գիշերվա';
	            } else if (hour < 12) {
	                return 'առավոտվա';
	            } else if (hour < 17) {
	                return 'ցերեկվա';
	            } else {
	                return 'երեկոյան';
	            }
	        },
	        ordinalParse: /\d{1,2}|\d{1,2}-(ին|րդ)/,
	        ordinal: function (number, period) {
	            switch (period) {
	            case 'DDD':
	            case 'w':
	            case 'W':
	            case 'DDDo':
	                if (number === 1) {
	                    return number + '-ին';
	                }
	                return number + '-րդ';
	            default:
	                return number;
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return hy_am;

	}));

/***/ }),
/* 412 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Bahasa Indonesia (id)
	//! author : Mohammad Satrio Utomo : https://github.com/tyok
	//! reference: http://id.wikisource.org/wiki/Pedoman_Umum_Ejaan_Bahasa_Indonesia_yang_Disempurnakan

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var id = moment.defineLocale('id', {
	        months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nov_Des'.split('_'),
	        weekdays : 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),
	        weekdaysShort : 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),
	        weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),
	        longDateFormat : {
	            LT : 'HH.mm',
	            LTS : 'HH.mm.ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY [pukul] HH.mm',
	            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
	        },
	        meridiemParse: /pagi|siang|sore|malam/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'pagi') {
	                return hour;
	            } else if (meridiem === 'siang') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === 'sore' || meridiem === 'malam') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 11) {
	                return 'pagi';
	            } else if (hours < 15) {
	                return 'siang';
	            } else if (hours < 19) {
	                return 'sore';
	            } else {
	                return 'malam';
	            }
	        },
	        calendar : {
	            sameDay : '[Hari ini pukul] LT',
	            nextDay : '[Besok pukul] LT',
	            nextWeek : 'dddd [pukul] LT',
	            lastDay : '[Kemarin pukul] LT',
	            lastWeek : 'dddd [lalu pukul] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'dalam %s',
	            past : '%s yang lalu',
	            s : 'beberapa detik',
	            m : 'semenit',
	            mm : '%d menit',
	            h : 'sejam',
	            hh : '%d jam',
	            d : 'sehari',
	            dd : '%d hari',
	            M : 'sebulan',
	            MM : '%d bulan',
	            y : 'setahun',
	            yy : '%d tahun'
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return id;

	}));

/***/ }),
/* 413 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : icelandic (is)
	//! author : Hinrik Örn Sigurðsson : https://github.com/hinrik

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function plural(n) {
	        if (n % 100 === 11) {
	            return true;
	        } else if (n % 10 === 1) {
	            return false;
	        }
	        return true;
	    }
	    function translate(number, withoutSuffix, key, isFuture) {
	        var result = number + ' ';
	        switch (key) {
	        case 's':
	            return withoutSuffix || isFuture ? 'nokkrar sekúndur' : 'nokkrum sekúndum';
	        case 'm':
	            return withoutSuffix ? 'mínúta' : 'mínútu';
	        case 'mm':
	            if (plural(number)) {
	                return result + (withoutSuffix || isFuture ? 'mínútur' : 'mínútum');
	            } else if (withoutSuffix) {
	                return result + 'mínúta';
	            }
	            return result + 'mínútu';
	        case 'hh':
	            if (plural(number)) {
	                return result + (withoutSuffix || isFuture ? 'klukkustundir' : 'klukkustundum');
	            }
	            return result + 'klukkustund';
	        case 'd':
	            if (withoutSuffix) {
	                return 'dagur';
	            }
	            return isFuture ? 'dag' : 'degi';
	        case 'dd':
	            if (plural(number)) {
	                if (withoutSuffix) {
	                    return result + 'dagar';
	                }
	                return result + (isFuture ? 'daga' : 'dögum');
	            } else if (withoutSuffix) {
	                return result + 'dagur';
	            }
	            return result + (isFuture ? 'dag' : 'degi');
	        case 'M':
	            if (withoutSuffix) {
	                return 'mánuður';
	            }
	            return isFuture ? 'mánuð' : 'mánuði';
	        case 'MM':
	            if (plural(number)) {
	                if (withoutSuffix) {
	                    return result + 'mánuðir';
	                }
	                return result + (isFuture ? 'mánuði' : 'mánuðum');
	            } else if (withoutSuffix) {
	                return result + 'mánuður';
	            }
	            return result + (isFuture ? 'mánuð' : 'mánuði');
	        case 'y':
	            return withoutSuffix || isFuture ? 'ár' : 'ári';
	        case 'yy':
	            if (plural(number)) {
	                return result + (withoutSuffix || isFuture ? 'ár' : 'árum');
	            }
	            return result + (withoutSuffix || isFuture ? 'ár' : 'ári');
	        }
	    }

	    var is = moment.defineLocale('is', {
	        months : 'janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des'.split('_'),
	        weekdays : 'sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur'.split('_'),
	        weekdaysShort : 'sun_mán_þri_mið_fim_fös_lau'.split('_'),
	        weekdaysMin : 'Su_Má_Þr_Mi_Fi_Fö_La'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY [kl.] H:mm',
	            LLLL : 'dddd, D. MMMM YYYY [kl.] H:mm'
	        },
	        calendar : {
	            sameDay : '[í dag kl.] LT',
	            nextDay : '[á morgun kl.] LT',
	            nextWeek : 'dddd [kl.] LT',
	            lastDay : '[í gær kl.] LT',
	            lastWeek : '[síðasta] dddd [kl.] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'eftir %s',
	            past : 'fyrir %s síðan',
	            s : translate,
	            m : translate,
	            mm : translate,
	            h : 'klukkustund',
	            hh : translate,
	            d : translate,
	            dd : translate,
	            M : translate,
	            MM : translate,
	            y : translate,
	            yy : translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return is;

	}));

/***/ }),
/* 414 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : italian (it)
	//! author : Lorenzo : https://github.com/aliem
	//! author: Mattia Larentis: https://github.com/nostalgiaz

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var it = moment.defineLocale('it', {
	        months : 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),
	        monthsShort : 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),
	        weekdays : 'Domenica_Lunedì_Martedì_Mercoledì_Giovedì_Venerdì_Sabato'.split('_'),
	        weekdaysShort : 'Dom_Lun_Mar_Mer_Gio_Ven_Sab'.split('_'),
	        weekdaysMin : 'Do_Lu_Ma_Me_Gi_Ve_Sa'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Oggi alle] LT',
	            nextDay: '[Domani alle] LT',
	            nextWeek: 'dddd [alle] LT',
	            lastDay: '[Ieri alle] LT',
	            lastWeek: function () {
	                switch (this.day()) {
	                    case 0:
	                        return '[la scorsa] dddd [alle] LT';
	                    default:
	                        return '[lo scorso] dddd [alle] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : function (s) {
	                return ((/^[0-9].+$/).test(s) ? 'tra' : 'in') + ' ' + s;
	            },
	            past : '%s fa',
	            s : 'alcuni secondi',
	            m : 'un minuto',
	            mm : '%d minuti',
	            h : 'un\'ora',
	            hh : '%d ore',
	            d : 'un giorno',
	            dd : '%d giorni',
	            M : 'un mese',
	            MM : '%d mesi',
	            y : 'un anno',
	            yy : '%d anni'
	        },
	        ordinalParse : /\d{1,2}º/,
	        ordinal: '%dº',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return it;

	}));

/***/ }),
/* 415 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : japanese (ja)
	//! author : LI Long : https://github.com/baryon

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var ja = moment.defineLocale('ja', {
	        months : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
	        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
	        weekdays : '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),
	        weekdaysShort : '日_月_火_水_木_金_土'.split('_'),
	        weekdaysMin : '日_月_火_水_木_金_土'.split('_'),
	        longDateFormat : {
	            LT : 'Ah時m分',
	            LTS : 'Ah時m分s秒',
	            L : 'YYYY/MM/DD',
	            LL : 'YYYY年M月D日',
	            LLL : 'YYYY年M月D日Ah時m分',
	            LLLL : 'YYYY年M月D日Ah時m分 dddd'
	        },
	        meridiemParse: /午前|午後/i,
	        isPM : function (input) {
	            return input === '午後';
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return '午前';
	            } else {
	                return '午後';
	            }
	        },
	        calendar : {
	            sameDay : '[今日] LT',
	            nextDay : '[明日] LT',
	            nextWeek : '[来週]dddd LT',
	            lastDay : '[昨日] LT',
	            lastWeek : '[前週]dddd LT',
	            sameElse : 'L'
	        },
	        ordinalParse : /\d{1,2}日/,
	        ordinal : function (number, period) {
	            switch (period) {
	            case 'd':
	            case 'D':
	            case 'DDD':
	                return number + '日';
	            default:
	                return number;
	            }
	        },
	        relativeTime : {
	            future : '%s後',
	            past : '%s前',
	            s : '数秒',
	            m : '1分',
	            mm : '%d分',
	            h : '1時間',
	            hh : '%d時間',
	            d : '1日',
	            dd : '%d日',
	            M : '1ヶ月',
	            MM : '%dヶ月',
	            y : '1年',
	            yy : '%d年'
	        }
	    });

	    return ja;

	}));

/***/ }),
/* 416 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Boso Jowo (jv)
	//! author : Rony Lantip : https://github.com/lantip
	//! reference: http://jv.wikipedia.org/wiki/Basa_Jawa

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var jv = moment.defineLocale('jv', {
	        months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des'.split('_'),
	        weekdays : 'Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu'.split('_'),
	        weekdaysShort : 'Min_Sen_Sel_Reb_Kem_Jem_Sep'.split('_'),
	        weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sp'.split('_'),
	        longDateFormat : {
	            LT : 'HH.mm',
	            LTS : 'HH.mm.ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY [pukul] HH.mm',
	            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
	        },
	        meridiemParse: /enjing|siyang|sonten|ndalu/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'enjing') {
	                return hour;
	            } else if (meridiem === 'siyang') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === 'sonten' || meridiem === 'ndalu') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 11) {
	                return 'enjing';
	            } else if (hours < 15) {
	                return 'siyang';
	            } else if (hours < 19) {
	                return 'sonten';
	            } else {
	                return 'ndalu';
	            }
	        },
	        calendar : {
	            sameDay : '[Dinten puniko pukul] LT',
	            nextDay : '[Mbenjang pukul] LT',
	            nextWeek : 'dddd [pukul] LT',
	            lastDay : '[Kala wingi pukul] LT',
	            lastWeek : 'dddd [kepengker pukul] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'wonten ing %s',
	            past : '%s ingkang kepengker',
	            s : 'sawetawis detik',
	            m : 'setunggal menit',
	            mm : '%d menit',
	            h : 'setunggal jam',
	            hh : '%d jam',
	            d : 'sedinten',
	            dd : '%d dinten',
	            M : 'sewulan',
	            MM : '%d wulan',
	            y : 'setaun',
	            yy : '%d taun'
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return jv;

	}));

/***/ }),
/* 417 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Georgian (ka)
	//! author : Irakli Janiashvili : https://github.com/irakli-janiashvili

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var ka = moment.defineLocale('ka', {
	        months : {
	            standalone: 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split('_'),
	            format: 'იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს'.split('_')
	        },
	        monthsShort : 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),
	        weekdays : {
	            standalone: 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split('_'),
	            format: 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split('_'),
	            isFormat: /(წინა|შემდეგ)/
	        },
	        weekdaysShort : 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),
	        weekdaysMin : 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),
	        longDateFormat : {
	            LT : 'h:mm A',
	            LTS : 'h:mm:ss A',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY h:mm A',
	            LLLL : 'dddd, D MMMM YYYY h:mm A'
	        },
	        calendar : {
	            sameDay : '[დღეს] LT[-ზე]',
	            nextDay : '[ხვალ] LT[-ზე]',
	            lastDay : '[გუშინ] LT[-ზე]',
	            nextWeek : '[შემდეგ] dddd LT[-ზე]',
	            lastWeek : '[წინა] dddd LT-ზე',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : function (s) {
	                return (/(წამი|წუთი|საათი|წელი)/).test(s) ?
	                    s.replace(/ი$/, 'ში') :
	                    s + 'ში';
	            },
	            past : function (s) {
	                if ((/(წამი|წუთი|საათი|დღე|თვე)/).test(s)) {
	                    return s.replace(/(ი|ე)$/, 'ის წინ');
	                }
	                if ((/წელი/).test(s)) {
	                    return s.replace(/წელი$/, 'წლის წინ');
	                }
	            },
	            s : 'რამდენიმე წამი',
	            m : 'წუთი',
	            mm : '%d წუთი',
	            h : 'საათი',
	            hh : '%d საათი',
	            d : 'დღე',
	            dd : '%d დღე',
	            M : 'თვე',
	            MM : '%d თვე',
	            y : 'წელი',
	            yy : '%d წელი'
	        },
	        ordinalParse: /0|1-ლი|მე-\d{1,2}|\d{1,2}-ე/,
	        ordinal : function (number) {
	            if (number === 0) {
	                return number;
	            }
	            if (number === 1) {
	                return number + '-ლი';
	            }
	            if ((number < 20) || (number <= 100 && (number % 20 === 0)) || (number % 100 === 0)) {
	                return 'მე-' + number;
	            }
	            return number + '-ე';
	        },
	        week : {
	            dow : 1,
	            doy : 7
	        }
	    });

	    return ka;

	}));

/***/ }),
/* 418 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : kazakh (kk)
	//! authors : Nurlan Rakhimzhanov : https://github.com/nurlan

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var suffixes = {
	        0: '-ші',
	        1: '-ші',
	        2: '-ші',
	        3: '-ші',
	        4: '-ші',
	        5: '-ші',
	        6: '-шы',
	        7: '-ші',
	        8: '-ші',
	        9: '-шы',
	        10: '-шы',
	        20: '-шы',
	        30: '-шы',
	        40: '-шы',
	        50: '-ші',
	        60: '-шы',
	        70: '-ші',
	        80: '-ші',
	        90: '-шы',
	        100: '-ші'
	    };

	    var kk = moment.defineLocale('kk', {
	        months : 'қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан'.split('_'),
	        monthsShort : 'қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел'.split('_'),
	        weekdays : 'жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі'.split('_'),
	        weekdaysShort : 'жек_дүй_сей_сәр_бей_жұм_сен'.split('_'),
	        weekdaysMin : 'жк_дй_сй_ср_бй_жм_сн'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Бүгін сағат] LT',
	            nextDay : '[Ертең сағат] LT',
	            nextWeek : 'dddd [сағат] LT',
	            lastDay : '[Кеше сағат] LT',
	            lastWeek : '[Өткен аптаның] dddd [сағат] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s ішінде',
	            past : '%s бұрын',
	            s : 'бірнеше секунд',
	            m : 'бір минут',
	            mm : '%d минут',
	            h : 'бір сағат',
	            hh : '%d сағат',
	            d : 'бір күн',
	            dd : '%d күн',
	            M : 'бір ай',
	            MM : '%d ай',
	            y : 'бір жыл',
	            yy : '%d жыл'
	        },
	        ordinalParse: /\d{1,2}-(ші|шы)/,
	        ordinal : function (number) {
	            var a = number % 10,
	                b = number >= 100 ? 100 : null;
	            return number + (suffixes[number] || suffixes[a] || suffixes[b]);
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return kk;

	}));

/***/ }),
/* 419 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : khmer (km)
	//! author : Kruy Vanna : https://github.com/kruyvanna

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var km = moment.defineLocale('km', {
	        months: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split('_'),
	        monthsShort: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split('_'),
	        weekdays: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
	        weekdaysShort: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
	        weekdaysMin: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[ថ្ងៃនេះ ម៉ោង] LT',
	            nextDay: '[ស្អែក ម៉ោង] LT',
	            nextWeek: 'dddd [ម៉ោង] LT',
	            lastDay: '[ម្សិលមិញ ម៉ោង] LT',
	            lastWeek: 'dddd [សប្តាហ៍មុន] [ម៉ោង] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: '%sទៀត',
	            past: '%sមុន',
	            s: 'ប៉ុន្មានវិនាទី',
	            m: 'មួយនាទី',
	            mm: '%d នាទី',
	            h: 'មួយម៉ោង',
	            hh: '%d ម៉ោង',
	            d: 'មួយថ្ងៃ',
	            dd: '%d ថ្ងៃ',
	            M: 'មួយខែ',
	            MM: '%d ខែ',
	            y: 'មួយឆ្នាំ',
	            yy: '%d ឆ្នាំ'
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return km;

	}));

/***/ }),
/* 420 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : korean (ko)
	//!
	//! authors
	//!
	//! - Kyungwook, Park : https://github.com/kyungw00k
	//! - Jeeeyul Lee <jeeeyul@gmail.com>

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var ko = moment.defineLocale('ko', {
	        months : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
	        monthsShort : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
	        weekdays : '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),
	        weekdaysShort : '일_월_화_수_목_금_토'.split('_'),
	        weekdaysMin : '일_월_화_수_목_금_토'.split('_'),
	        longDateFormat : {
	            LT : 'A h시 m분',
	            LTS : 'A h시 m분 s초',
	            L : 'YYYY.MM.DD',
	            LL : 'YYYY년 MMMM D일',
	            LLL : 'YYYY년 MMMM D일 A h시 m분',
	            LLLL : 'YYYY년 MMMM D일 dddd A h시 m분'
	        },
	        calendar : {
	            sameDay : '오늘 LT',
	            nextDay : '내일 LT',
	            nextWeek : 'dddd LT',
	            lastDay : '어제 LT',
	            lastWeek : '지난주 dddd LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s 후',
	            past : '%s 전',
	            s : '몇 초',
	            ss : '%d초',
	            m : '일분',
	            mm : '%d분',
	            h : '한 시간',
	            hh : '%d시간',
	            d : '하루',
	            dd : '%d일',
	            M : '한 달',
	            MM : '%d달',
	            y : '일 년',
	            yy : '%d년'
	        },
	        ordinalParse : /\d{1,2}일/,
	        ordinal : '%d일',
	        meridiemParse : /오전|오후/,
	        isPM : function (token) {
	            return token === '오후';
	        },
	        meridiem : function (hour, minute, isUpper) {
	            return hour < 12 ? '오전' : '오후';
	        }
	    });

	    return ko;

	}));

/***/ }),
/* 421 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : kyrgyz (ky)
	//! author : Chyngyz Arystan uulu : https://github.com/chyngyz

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';



	    var suffixes = {
	        0: '-чү',
	        1: '-чи',
	        2: '-чи',
	        3: '-чү',
	        4: '-чү',
	        5: '-чи',
	        6: '-чы',
	        7: '-чи',
	        8: '-чи',
	        9: '-чу',
	        10: '-чу',
	        20: '-чы',
	        30: '-чу',
	        40: '-чы',
	        50: '-чү',
	        60: '-чы',
	        70: '-чи',
	        80: '-чи',
	        90: '-чу',
	        100: '-чү'
	    };

	    var ky = moment.defineLocale('ky', {
	        months : 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_'),
	        monthsShort : 'янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split('_'),
	        weekdays : 'Жекшемби_Дүйшөмбү_Шейшемби_Шаршемби_Бейшемби_Жума_Ишемби'.split('_'),
	        weekdaysShort : 'Жек_Дүй_Шей_Шар_Бей_Жум_Ише'.split('_'),
	        weekdaysMin : 'Жк_Дй_Шй_Шр_Бй_Жм_Иш'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Бүгүн саат] LT',
	            nextDay : '[Эртең саат] LT',
	            nextWeek : 'dddd [саат] LT',
	            lastDay : '[Кече саат] LT',
	            lastWeek : '[Өткен аптанын] dddd [күнү] [саат] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s ичинде',
	            past : '%s мурун',
	            s : 'бирнече секунд',
	            m : 'бир мүнөт',
	            mm : '%d мүнөт',
	            h : 'бир саат',
	            hh : '%d саат',
	            d : 'бир күн',
	            dd : '%d күн',
	            M : 'бир ай',
	            MM : '%d ай',
	            y : 'бир жыл',
	            yy : '%d жыл'
	        },
	        ordinalParse: /\d{1,2}-(чи|чы|чү|чу)/,
	        ordinal : function (number) {
	            var a = number % 10,
	                b = number >= 100 ? 100 : null;
	            return number + (suffixes[number] || suffixes[a] || suffixes[b]);
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ky;

	}));

/***/ }),
/* 422 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Luxembourgish (lb)
	//! author : mweimerskirch : https://github.com/mweimerskirch, David Raison : https://github.com/kwisatz

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var format = {
	            'm': ['eng Minutt', 'enger Minutt'],
	            'h': ['eng Stonn', 'enger Stonn'],
	            'd': ['een Dag', 'engem Dag'],
	            'M': ['ee Mount', 'engem Mount'],
	            'y': ['ee Joer', 'engem Joer']
	        };
	        return withoutSuffix ? format[key][0] : format[key][1];
	    }
	    function processFutureTime(string) {
	        var number = string.substr(0, string.indexOf(' '));
	        if (eifelerRegelAppliesToNumber(number)) {
	            return 'a ' + string;
	        }
	        return 'an ' + string;
	    }
	    function processPastTime(string) {
	        var number = string.substr(0, string.indexOf(' '));
	        if (eifelerRegelAppliesToNumber(number)) {
	            return 'viru ' + string;
	        }
	        return 'virun ' + string;
	    }
	    /**
	     * Returns true if the word before the given number loses the '-n' ending.
	     * e.g. 'an 10 Deeg' but 'a 5 Deeg'
	     *
	     * @param number {integer}
	     * @returns {boolean}
	     */
	    function eifelerRegelAppliesToNumber(number) {
	        number = parseInt(number, 10);
	        if (isNaN(number)) {
	            return false;
	        }
	        if (number < 0) {
	            // Negative Number --> always true
	            return true;
	        } else if (number < 10) {
	            // Only 1 digit
	            if (4 <= number && number <= 7) {
	                return true;
	            }
	            return false;
	        } else if (number < 100) {
	            // 2 digits
	            var lastDigit = number % 10, firstDigit = number / 10;
	            if (lastDigit === 0) {
	                return eifelerRegelAppliesToNumber(firstDigit);
	            }
	            return eifelerRegelAppliesToNumber(lastDigit);
	        } else if (number < 10000) {
	            // 3 or 4 digits --> recursively check first digit
	            while (number >= 10) {
	                number = number / 10;
	            }
	            return eifelerRegelAppliesToNumber(number);
	        } else {
	            // Anything larger than 4 digits: recursively check first n-3 digits
	            number = number / 1000;
	            return eifelerRegelAppliesToNumber(number);
	        }
	    }

	    var lb = moment.defineLocale('lb', {
	        months: 'Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
	        monthsShort: 'Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),
	        monthsParseExact : true,
	        weekdays: 'Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg'.split('_'),
	        weekdaysShort: 'So._Mé._Dë._Më._Do._Fr._Sa.'.split('_'),
	        weekdaysMin: 'So_Mé_Dë_Më_Do_Fr_Sa'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat: {
	            LT: 'H:mm [Auer]',
	            LTS: 'H:mm:ss [Auer]',
	            L: 'DD.MM.YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY H:mm [Auer]',
	            LLLL: 'dddd, D. MMMM YYYY H:mm [Auer]'
	        },
	        calendar: {
	            sameDay: '[Haut um] LT',
	            sameElse: 'L',
	            nextDay: '[Muer um] LT',
	            nextWeek: 'dddd [um] LT',
	            lastDay: '[Gëschter um] LT',
	            lastWeek: function () {
	                // Different date string for 'Dënschdeg' (Tuesday) and 'Donneschdeg' (Thursday) due to phonological rule
	                switch (this.day()) {
	                    case 2:
	                    case 4:
	                        return '[Leschten] dddd [um] LT';
	                    default:
	                        return '[Leschte] dddd [um] LT';
	                }
	            }
	        },
	        relativeTime : {
	            future : processFutureTime,
	            past : processPastTime,
	            s : 'e puer Sekonnen',
	            m : processRelativeTime,
	            mm : '%d Minutten',
	            h : processRelativeTime,
	            hh : '%d Stonnen',
	            d : processRelativeTime,
	            dd : '%d Deeg',
	            M : processRelativeTime,
	            MM : '%d Méint',
	            y : processRelativeTime,
	            yy : '%d Joer'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal: '%d.',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return lb;

	}));

/***/ }),
/* 423 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : lao (lo)
	//! author : Ryan Hart : https://github.com/ryanhart2

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var lo = moment.defineLocale('lo', {
	        months : 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),
	        monthsShort : 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),
	        weekdays : 'ອາທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
	        weekdaysShort : 'ທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
	        weekdaysMin : 'ທ_ຈ_ອຄ_ພ_ພຫ_ສກ_ສ'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'ວັນdddd D MMMM YYYY HH:mm'
	        },
	        meridiemParse: /ຕອນເຊົ້າ|ຕອນແລງ/,
	        isPM: function (input) {
	            return input === 'ຕອນແລງ';
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return 'ຕອນເຊົ້າ';
	            } else {
	                return 'ຕອນແລງ';
	            }
	        },
	        calendar : {
	            sameDay : '[ມື້ນີ້ເວລາ] LT',
	            nextDay : '[ມື້ອື່ນເວລາ] LT',
	            nextWeek : '[ວັນ]dddd[ໜ້າເວລາ] LT',
	            lastDay : '[ມື້ວານນີ້ເວລາ] LT',
	            lastWeek : '[ວັນ]dddd[ແລ້ວນີ້ເວລາ] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'ອີກ %s',
	            past : '%sຜ່ານມາ',
	            s : 'ບໍ່ເທົ່າໃດວິນາທີ',
	            m : '1 ນາທີ',
	            mm : '%d ນາທີ',
	            h : '1 ຊົ່ວໂມງ',
	            hh : '%d ຊົ່ວໂມງ',
	            d : '1 ມື້',
	            dd : '%d ມື້',
	            M : '1 ເດືອນ',
	            MM : '%d ເດືອນ',
	            y : '1 ປີ',
	            yy : '%d ປີ'
	        },
	        ordinalParse: /(ທີ່)\d{1,2}/,
	        ordinal : function (number) {
	            return 'ທີ່' + number;
	        }
	    });

	    return lo;

	}));

/***/ }),
/* 424 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Lithuanian (lt)
	//! author : Mindaugas Mozūras : https://github.com/mmozuras

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var units = {
	        'm' : 'minutė_minutės_minutę',
	        'mm': 'minutės_minučių_minutes',
	        'h' : 'valanda_valandos_valandą',
	        'hh': 'valandos_valandų_valandas',
	        'd' : 'diena_dienos_dieną',
	        'dd': 'dienos_dienų_dienas',
	        'M' : 'mėnuo_mėnesio_mėnesį',
	        'MM': 'mėnesiai_mėnesių_mėnesius',
	        'y' : 'metai_metų_metus',
	        'yy': 'metai_metų_metus'
	    };
	    function translateSeconds(number, withoutSuffix, key, isFuture) {
	        if (withoutSuffix) {
	            return 'kelios sekundės';
	        } else {
	            return isFuture ? 'kelių sekundžių' : 'kelias sekundes';
	        }
	    }
	    function translateSingular(number, withoutSuffix, key, isFuture) {
	        return withoutSuffix ? forms(key)[0] : (isFuture ? forms(key)[1] : forms(key)[2]);
	    }
	    function special(number) {
	        return number % 10 === 0 || (number > 10 && number < 20);
	    }
	    function forms(key) {
	        return units[key].split('_');
	    }
	    function translate(number, withoutSuffix, key, isFuture) {
	        var result = number + ' ';
	        if (number === 1) {
	            return result + translateSingular(number, withoutSuffix, key[0], isFuture);
	        } else if (withoutSuffix) {
	            return result + (special(number) ? forms(key)[1] : forms(key)[0]);
	        } else {
	            if (isFuture) {
	                return result + forms(key)[1];
	            } else {
	                return result + (special(number) ? forms(key)[1] : forms(key)[2]);
	            }
	        }
	    }
	    var lt = moment.defineLocale('lt', {
	        months : {
	            format: 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split('_'),
	            standalone: 'sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis'.split('_')
	        },
	        monthsShort : 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),
	        weekdays : {
	            format: 'sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį'.split('_'),
	            standalone: 'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split('_'),
	            isFormat: /dddd HH:mm/
	        },
	        weekdaysShort : 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),
	        weekdaysMin : 'S_P_A_T_K_Pn_Š'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'YYYY-MM-DD',
	            LL : 'YYYY [m.] MMMM D [d.]',
	            LLL : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
	            LLLL : 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',
	            l : 'YYYY-MM-DD',
	            ll : 'YYYY [m.] MMMM D [d.]',
	            lll : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
	            llll : 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]'
	        },
	        calendar : {
	            sameDay : '[Šiandien] LT',
	            nextDay : '[Rytoj] LT',
	            nextWeek : 'dddd LT',
	            lastDay : '[Vakar] LT',
	            lastWeek : '[Praėjusį] dddd LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'po %s',
	            past : 'prieš %s',
	            s : translateSeconds,
	            m : translateSingular,
	            mm : translate,
	            h : translateSingular,
	            hh : translate,
	            d : translateSingular,
	            dd : translate,
	            M : translateSingular,
	            MM : translate,
	            y : translateSingular,
	            yy : translate
	        },
	        ordinalParse: /\d{1,2}-oji/,
	        ordinal : function (number) {
	            return number + '-oji';
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return lt;

	}));

/***/ }),
/* 425 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : latvian (lv)
	//! author : Kristaps Karlsons : https://github.com/skakri
	//! author : Jānis Elmeris : https://github.com/JanisE

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var units = {
	        'm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),
	        'mm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),
	        'h': 'stundas_stundām_stunda_stundas'.split('_'),
	        'hh': 'stundas_stundām_stunda_stundas'.split('_'),
	        'd': 'dienas_dienām_diena_dienas'.split('_'),
	        'dd': 'dienas_dienām_diena_dienas'.split('_'),
	        'M': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
	        'MM': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
	        'y': 'gada_gadiem_gads_gadi'.split('_'),
	        'yy': 'gada_gadiem_gads_gadi'.split('_')
	    };
	    /**
	     * @param withoutSuffix boolean true = a length of time; false = before/after a period of time.
	     */
	    function format(forms, number, withoutSuffix) {
	        if (withoutSuffix) {
	            // E.g. "21 minūte", "3 minūtes".
	            return number % 10 === 1 && number !== 11 ? forms[2] : forms[3];
	        } else {
	            // E.g. "21 minūtes" as in "pēc 21 minūtes".
	            // E.g. "3 minūtēm" as in "pēc 3 minūtēm".
	            return number % 10 === 1 && number !== 11 ? forms[0] : forms[1];
	        }
	    }
	    function relativeTimeWithPlural(number, withoutSuffix, key) {
	        return number + ' ' + format(units[key], number, withoutSuffix);
	    }
	    function relativeTimeWithSingular(number, withoutSuffix, key) {
	        return format(units[key], number, withoutSuffix);
	    }
	    function relativeSeconds(number, withoutSuffix) {
	        return withoutSuffix ? 'dažas sekundes' : 'dažām sekundēm';
	    }

	    var lv = moment.defineLocale('lv', {
	        months : 'janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec'.split('_'),
	        weekdays : 'svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena'.split('_'),
	        weekdaysShort : 'Sv_P_O_T_C_Pk_S'.split('_'),
	        weekdaysMin : 'Sv_P_O_T_C_Pk_S'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY.',
	            LL : 'YYYY. [gada] D. MMMM',
	            LLL : 'YYYY. [gada] D. MMMM, HH:mm',
	            LLLL : 'YYYY. [gada] D. MMMM, dddd, HH:mm'
	        },
	        calendar : {
	            sameDay : '[Šodien pulksten] LT',
	            nextDay : '[Rīt pulksten] LT',
	            nextWeek : 'dddd [pulksten] LT',
	            lastDay : '[Vakar pulksten] LT',
	            lastWeek : '[Pagājušā] dddd [pulksten] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'pēc %s',
	            past : 'pirms %s',
	            s : relativeSeconds,
	            m : relativeTimeWithSingular,
	            mm : relativeTimeWithPlural,
	            h : relativeTimeWithSingular,
	            hh : relativeTimeWithPlural,
	            d : relativeTimeWithSingular,
	            dd : relativeTimeWithPlural,
	            M : relativeTimeWithSingular,
	            MM : relativeTimeWithPlural,
	            y : relativeTimeWithSingular,
	            yy : relativeTimeWithPlural
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return lv;

	}));

/***/ }),
/* 426 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Montenegrin (me)
	//! author : Miodrag Nikač <miodrag@restartit.me> : https://github.com/miodragnikac

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var translator = {
	        words: { //Different grammatical cases
	            m: ['jedan minut', 'jednog minuta'],
	            mm: ['minut', 'minuta', 'minuta'],
	            h: ['jedan sat', 'jednog sata'],
	            hh: ['sat', 'sata', 'sati'],
	            dd: ['dan', 'dana', 'dana'],
	            MM: ['mjesec', 'mjeseca', 'mjeseci'],
	            yy: ['godina', 'godine', 'godina']
	        },
	        correctGrammaticalCase: function (number, wordKey) {
	            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
	        },
	        translate: function (number, withoutSuffix, key) {
	            var wordKey = translator.words[key];
	            if (key.length === 1) {
	                return withoutSuffix ? wordKey[0] : wordKey[1];
	            } else {
	                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
	            }
	        }
	    };

	    var me = moment.defineLocale('me', {
	        months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),
	        monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),
	        monthsParseExact : true,
	        weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
	        weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
	        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS : 'H:mm:ss',
	            L: 'DD. MM. YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY H:mm',
	            LLLL: 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar: {
	            sameDay: '[danas u] LT',
	            nextDay: '[sjutra u] LT',

	            nextWeek: function () {
	                switch (this.day()) {
	                case 0:
	                    return '[u] [nedjelju] [u] LT';
	                case 3:
	                    return '[u] [srijedu] [u] LT';
	                case 6:
	                    return '[u] [subotu] [u] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[u] dddd [u] LT';
	                }
	            },
	            lastDay  : '[juče u] LT',
	            lastWeek : function () {
	                var lastWeekDays = [
	                    '[prošle] [nedjelje] [u] LT',
	                    '[prošlog] [ponedjeljka] [u] LT',
	                    '[prošlog] [utorka] [u] LT',
	                    '[prošle] [srijede] [u] LT',
	                    '[prošlog] [četvrtka] [u] LT',
	                    '[prošlog] [petka] [u] LT',
	                    '[prošle] [subote] [u] LT'
	                ];
	                return lastWeekDays[this.day()];
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'za %s',
	            past   : 'prije %s',
	            s      : 'nekoliko sekundi',
	            m      : translator.translate,
	            mm     : translator.translate,
	            h      : translator.translate,
	            hh     : translator.translate,
	            d      : 'dan',
	            dd     : translator.translate,
	            M      : 'mjesec',
	            MM     : translator.translate,
	            y      : 'godinu',
	            yy     : translator.translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return me;

	}));

/***/ }),
/* 427 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : macedonian (mk)
	//! author : Borislav Mickov : https://github.com/B0k0

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var mk = moment.defineLocale('mk', {
	        months : 'јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември'.split('_'),
	        monthsShort : 'јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек'.split('_'),
	        weekdays : 'недела_понеделник_вторник_среда_четврток_петок_сабота'.split('_'),
	        weekdaysShort : 'нед_пон_вто_сре_чет_пет_саб'.split('_'),
	        weekdaysMin : 'нe_пo_вт_ср_че_пе_сa'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'D.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY H:mm',
	            LLLL : 'dddd, D MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay : '[Денес во] LT',
	            nextDay : '[Утре во] LT',
	            nextWeek : '[Во] dddd [во] LT',
	            lastDay : '[Вчера во] LT',
	            lastWeek : function () {
	                switch (this.day()) {
	                case 0:
	                case 3:
	                case 6:
	                    return '[Изминатата] dddd [во] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[Изминатиот] dddd [во] LT';
	                }
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'после %s',
	            past : 'пред %s',
	            s : 'неколку секунди',
	            m : 'минута',
	            mm : '%d минути',
	            h : 'час',
	            hh : '%d часа',
	            d : 'ден',
	            dd : '%d дена',
	            M : 'месец',
	            MM : '%d месеци',
	            y : 'година',
	            yy : '%d години'
	        },
	        ordinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
	        ordinal : function (number) {
	            var lastDigit = number % 10,
	                last2Digits = number % 100;
	            if (number === 0) {
	                return number + '-ев';
	            } else if (last2Digits === 0) {
	                return number + '-ен';
	            } else if (last2Digits > 10 && last2Digits < 20) {
	                return number + '-ти';
	            } else if (lastDigit === 1) {
	                return number + '-ви';
	            } else if (lastDigit === 2) {
	                return number + '-ри';
	            } else if (lastDigit === 7 || lastDigit === 8) {
	                return number + '-ми';
	            } else {
	                return number + '-ти';
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return mk;

	}));

/***/ }),
/* 428 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : malayalam (ml)
	//! author : Floyd Pink : https://github.com/floydpink

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var ml = moment.defineLocale('ml', {
	        months : 'ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ'.split('_'),
	        monthsShort : 'ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച'.split('_'),
	        weekdaysShort : 'ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി'.split('_'),
	        weekdaysMin : 'ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ'.split('_'),
	        longDateFormat : {
	            LT : 'A h:mm -നു',
	            LTS : 'A h:mm:ss -നു',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, A h:mm -നു',
	            LLLL : 'dddd, D MMMM YYYY, A h:mm -നു'
	        },
	        calendar : {
	            sameDay : '[ഇന്ന്] LT',
	            nextDay : '[നാളെ] LT',
	            nextWeek : 'dddd, LT',
	            lastDay : '[ഇന്നലെ] LT',
	            lastWeek : '[കഴിഞ്ഞ] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s കഴിഞ്ഞ്',
	            past : '%s മുൻപ്',
	            s : 'അൽപ നിമിഷങ്ങൾ',
	            m : 'ഒരു മിനിറ്റ്',
	            mm : '%d മിനിറ്റ്',
	            h : 'ഒരു മണിക്കൂർ',
	            hh : '%d മണിക്കൂർ',
	            d : 'ഒരു ദിവസം',
	            dd : '%d ദിവസം',
	            M : 'ഒരു മാസം',
	            MM : '%d മാസം',
	            y : 'ഒരു വർഷം',
	            yy : '%d വർഷം'
	        },
	        meridiemParse: /രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if ((meridiem === 'രാത്രി' && hour >= 4) ||
	                    meridiem === 'ഉച്ച കഴിഞ്ഞ്' ||
	                    meridiem === 'വൈകുന്നേരം') {
	                return hour + 12;
	            } else {
	                return hour;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'രാത്രി';
	            } else if (hour < 12) {
	                return 'രാവിലെ';
	            } else if (hour < 17) {
	                return 'ഉച്ച കഴിഞ്ഞ്';
	            } else if (hour < 20) {
	                return 'വൈകുന്നേരം';
	            } else {
	                return 'രാത്രി';
	            }
	        }
	    });

	    return ml;

	}));

/***/ }),
/* 429 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Marathi (mr)
	//! author : Harshad Kale : https://github.com/kalehv
	//! author : Vivek Athalye : https://github.com/vnathalye

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var symbolMap = {
	        '1': '१',
	        '2': '२',
	        '3': '३',
	        '4': '४',
	        '5': '५',
	        '6': '६',
	        '7': '७',
	        '8': '८',
	        '9': '९',
	        '0': '०'
	    },
	    numberMap = {
	        '१': '1',
	        '२': '2',
	        '३': '3',
	        '४': '4',
	        '५': '5',
	        '६': '6',
	        '७': '7',
	        '८': '8',
	        '९': '9',
	        '०': '0'
	    };

	    function relativeTimeMr(number, withoutSuffix, string, isFuture)
	    {
	        var output = '';
	        if (withoutSuffix) {
	            switch (string) {
	                case 's': output = 'काही सेकंद'; break;
	                case 'm': output = 'एक मिनिट'; break;
	                case 'mm': output = '%d मिनिटे'; break;
	                case 'h': output = 'एक तास'; break;
	                case 'hh': output = '%d तास'; break;
	                case 'd': output = 'एक दिवस'; break;
	                case 'dd': output = '%d दिवस'; break;
	                case 'M': output = 'एक महिना'; break;
	                case 'MM': output = '%d महिने'; break;
	                case 'y': output = 'एक वर्ष'; break;
	                case 'yy': output = '%d वर्षे'; break;
	            }
	        }
	        else {
	            switch (string) {
	                case 's': output = 'काही सेकंदां'; break;
	                case 'm': output = 'एका मिनिटा'; break;
	                case 'mm': output = '%d मिनिटां'; break;
	                case 'h': output = 'एका तासा'; break;
	                case 'hh': output = '%d तासां'; break;
	                case 'd': output = 'एका दिवसा'; break;
	                case 'dd': output = '%d दिवसां'; break;
	                case 'M': output = 'एका महिन्या'; break;
	                case 'MM': output = '%d महिन्यां'; break;
	                case 'y': output = 'एका वर्षा'; break;
	                case 'yy': output = '%d वर्षां'; break;
	            }
	        }
	        return output.replace(/%d/i, number);
	    }

	    var mr = moment.defineLocale('mr', {
	        months : 'जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split('_'),
	        monthsShort: 'जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
	        weekdaysShort : 'रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि'.split('_'),
	        weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),
	        longDateFormat : {
	            LT : 'A h:mm वाजता',
	            LTS : 'A h:mm:ss वाजता',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, A h:mm वाजता',
	            LLLL : 'dddd, D MMMM YYYY, A h:mm वाजता'
	        },
	        calendar : {
	            sameDay : '[आज] LT',
	            nextDay : '[उद्या] LT',
	            nextWeek : 'dddd, LT',
	            lastDay : '[काल] LT',
	            lastWeek: '[मागील] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future: '%sमध्ये',
	            past: '%sपूर्वी',
	            s: relativeTimeMr,
	            m: relativeTimeMr,
	            mm: relativeTimeMr,
	            h: relativeTimeMr,
	            hh: relativeTimeMr,
	            d: relativeTimeMr,
	            dd: relativeTimeMr,
	            M: relativeTimeMr,
	            MM: relativeTimeMr,
	            y: relativeTimeMr,
	            yy: relativeTimeMr
	        },
	        preparse: function (string) {
	            return string.replace(/[१२३४५६७८९०]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        meridiemParse: /रात्री|सकाळी|दुपारी|सायंकाळी/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'रात्री') {
	                return hour < 4 ? hour : hour + 12;
	            } else if (meridiem === 'सकाळी') {
	                return hour;
	            } else if (meridiem === 'दुपारी') {
	                return hour >= 10 ? hour : hour + 12;
	            } else if (meridiem === 'सायंकाळी') {
	                return hour + 12;
	            }
	        },
	        meridiem: function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'रात्री';
	            } else if (hour < 10) {
	                return 'सकाळी';
	            } else if (hour < 17) {
	                return 'दुपारी';
	            } else if (hour < 20) {
	                return 'सायंकाळी';
	            } else {
	                return 'रात्री';
	            }
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return mr;

	}));

/***/ }),
/* 430 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Bahasa Malaysia (ms-MY)
	//! author : Weldan Jamili : https://github.com/weldan

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var ms = moment.defineLocale('ms', {
	        months : 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),
	        monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
	        weekdays : 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
	        weekdaysShort : 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
	        weekdaysMin : 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
	        longDateFormat : {
	            LT : 'HH.mm',
	            LTS : 'HH.mm.ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY [pukul] HH.mm',
	            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
	        },
	        meridiemParse: /pagi|tengahari|petang|malam/,
	        meridiemHour: function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'pagi') {
	                return hour;
	            } else if (meridiem === 'tengahari') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === 'petang' || meridiem === 'malam') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 11) {
	                return 'pagi';
	            } else if (hours < 15) {
	                return 'tengahari';
	            } else if (hours < 19) {
	                return 'petang';
	            } else {
	                return 'malam';
	            }
	        },
	        calendar : {
	            sameDay : '[Hari ini pukul] LT',
	            nextDay : '[Esok pukul] LT',
	            nextWeek : 'dddd [pukul] LT',
	            lastDay : '[Kelmarin pukul] LT',
	            lastWeek : 'dddd [lepas pukul] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'dalam %s',
	            past : '%s yang lepas',
	            s : 'beberapa saat',
	            m : 'seminit',
	            mm : '%d minit',
	            h : 'sejam',
	            hh : '%d jam',
	            d : 'sehari',
	            dd : '%d hari',
	            M : 'sebulan',
	            MM : '%d bulan',
	            y : 'setahun',
	            yy : '%d tahun'
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ms;

	}));

/***/ }),
/* 431 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Bahasa Malaysia (ms-MY)
	//! author : Weldan Jamili : https://github.com/weldan

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var ms_my = moment.defineLocale('ms-my', {
	        months : 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),
	        monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
	        weekdays : 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
	        weekdaysShort : 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
	        weekdaysMin : 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
	        longDateFormat : {
	            LT : 'HH.mm',
	            LTS : 'HH.mm.ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY [pukul] HH.mm',
	            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
	        },
	        meridiemParse: /pagi|tengahari|petang|malam/,
	        meridiemHour: function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'pagi') {
	                return hour;
	            } else if (meridiem === 'tengahari') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === 'petang' || meridiem === 'malam') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 11) {
	                return 'pagi';
	            } else if (hours < 15) {
	                return 'tengahari';
	            } else if (hours < 19) {
	                return 'petang';
	            } else {
	                return 'malam';
	            }
	        },
	        calendar : {
	            sameDay : '[Hari ini pukul] LT',
	            nextDay : '[Esok pukul] LT',
	            nextWeek : 'dddd [pukul] LT',
	            lastDay : '[Kelmarin pukul] LT',
	            lastWeek : 'dddd [lepas pukul] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'dalam %s',
	            past : '%s yang lepas',
	            s : 'beberapa saat',
	            m : 'seminit',
	            mm : '%d minit',
	            h : 'sejam',
	            hh : '%d jam',
	            d : 'sehari',
	            dd : '%d hari',
	            M : 'sebulan',
	            MM : '%d bulan',
	            y : 'setahun',
	            yy : '%d tahun'
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ms_my;

	}));

/***/ }),
/* 432 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Burmese (my)
	//! author : Squar team, mysquar.com

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var symbolMap = {
	        '1': '၁',
	        '2': '၂',
	        '3': '၃',
	        '4': '၄',
	        '5': '၅',
	        '6': '၆',
	        '7': '၇',
	        '8': '၈',
	        '9': '၉',
	        '0': '၀'
	    }, numberMap = {
	        '၁': '1',
	        '၂': '2',
	        '၃': '3',
	        '၄': '4',
	        '၅': '5',
	        '၆': '6',
	        '၇': '7',
	        '၈': '8',
	        '၉': '9',
	        '၀': '0'
	    };

	    var my = moment.defineLocale('my', {
	        months: 'ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ'.split('_'),
	        monthsShort: 'ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ'.split('_'),
	        weekdays: 'တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ'.split('_'),
	        weekdaysShort: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),
	        weekdaysMin: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),

	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[ယနေ.] LT [မှာ]',
	            nextDay: '[မနက်ဖြန်] LT [မှာ]',
	            nextWeek: 'dddd LT [မှာ]',
	            lastDay: '[မနေ.က] LT [မှာ]',
	            lastWeek: '[ပြီးခဲ့သော] dddd LT [မှာ]',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'လာမည့် %s မှာ',
	            past: 'လွန်ခဲ့သော %s က',
	            s: 'စက္ကန်.အနည်းငယ်',
	            m: 'တစ်မိနစ်',
	            mm: '%d မိနစ်',
	            h: 'တစ်နာရီ',
	            hh: '%d နာရီ',
	            d: 'တစ်ရက်',
	            dd: '%d ရက်',
	            M: 'တစ်လ',
	            MM: '%d လ',
	            y: 'တစ်နှစ်',
	            yy: '%d နှစ်'
	        },
	        preparse: function (string) {
	            return string.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return my;

	}));

/***/ }),
/* 433 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : norwegian bokmål (nb)
	//! authors : Espen Hovlandsdal : https://github.com/rexxars
	//!           Sigurd Gartmann : https://github.com/sigurdga

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var nb = moment.defineLocale('nb', {
	        months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
	        monthsShort : 'jan._feb._mars_april_mai_juni_juli_aug._sep._okt._nov._des.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
	        weekdaysShort : 'sø._ma._ti._on._to._fr._lø.'.split('_'),
	        weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY [kl.] HH:mm',
	            LLLL : 'dddd D. MMMM YYYY [kl.] HH:mm'
	        },
	        calendar : {
	            sameDay: '[i dag kl.] LT',
	            nextDay: '[i morgen kl.] LT',
	            nextWeek: 'dddd [kl.] LT',
	            lastDay: '[i går kl.] LT',
	            lastWeek: '[forrige] dddd [kl.] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'om %s',
	            past : '%s siden',
	            s : 'noen sekunder',
	            m : 'ett minutt',
	            mm : '%d minutter',
	            h : 'en time',
	            hh : '%d timer',
	            d : 'en dag',
	            dd : '%d dager',
	            M : 'en måned',
	            MM : '%d måneder',
	            y : 'ett år',
	            yy : '%d år'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return nb;

	}));

/***/ }),
/* 434 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : nepali/nepalese
	//! author : suvash : https://github.com/suvash

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var symbolMap = {
	        '1': '१',
	        '2': '२',
	        '3': '३',
	        '4': '४',
	        '5': '५',
	        '6': '६',
	        '7': '७',
	        '8': '८',
	        '9': '९',
	        '0': '०'
	    },
	    numberMap = {
	        '१': '1',
	        '२': '2',
	        '३': '3',
	        '४': '4',
	        '५': '5',
	        '६': '6',
	        '७': '7',
	        '८': '8',
	        '९': '9',
	        '०': '0'
	    };

	    var ne = moment.defineLocale('ne', {
	        months : 'जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर'.split('_'),
	        monthsShort : 'जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार'.split('_'),
	        weekdaysShort : 'आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.'.split('_'),
	        weekdaysMin : 'आ._सो._मं._बु._बि._शु._श.'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'Aको h:mm बजे',
	            LTS : 'Aको h:mm:ss बजे',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, Aको h:mm बजे',
	            LLLL : 'dddd, D MMMM YYYY, Aको h:mm बजे'
	        },
	        preparse: function (string) {
	            return string.replace(/[१२३४५६७८९०]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        meridiemParse: /राति|बिहान|दिउँसो|साँझ/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'राति') {
	                return hour < 4 ? hour : hour + 12;
	            } else if (meridiem === 'बिहान') {
	                return hour;
	            } else if (meridiem === 'दिउँसो') {
	                return hour >= 10 ? hour : hour + 12;
	            } else if (meridiem === 'साँझ') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 3) {
	                return 'राति';
	            } else if (hour < 12) {
	                return 'बिहान';
	            } else if (hour < 16) {
	                return 'दिउँसो';
	            } else if (hour < 20) {
	                return 'साँझ';
	            } else {
	                return 'राति';
	            }
	        },
	        calendar : {
	            sameDay : '[आज] LT',
	            nextDay : '[भोलि] LT',
	            nextWeek : '[आउँदो] dddd[,] LT',
	            lastDay : '[हिजो] LT',
	            lastWeek : '[गएको] dddd[,] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%sमा',
	            past : '%s अगाडि',
	            s : 'केही क्षण',
	            m : 'एक मिनेट',
	            mm : '%d मिनेट',
	            h : 'एक घण्टा',
	            hh : '%d घण्टा',
	            d : 'एक दिन',
	            dd : '%d दिन',
	            M : 'एक महिना',
	            MM : '%d महिना',
	            y : 'एक बर्ष',
	            yy : '%d बर्ष'
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ne;

	}));

/***/ }),
/* 435 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : dutch (nl)
	//! author : Joris Röling : https://github.com/jjupiter

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),
	        monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');

	    var nl = moment.defineLocale('nl', {
	        months : 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),
	        monthsShort : function (m, format) {
	            if (/-MMM-/.test(format)) {
	                return monthsShortWithoutDots[m.month()];
	            } else {
	                return monthsShortWithDots[m.month()];
	            }
	        },
	        monthsParseExact : true,
	        weekdays : 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),
	        weekdaysShort : 'zo._ma._di._wo._do._vr._za.'.split('_'),
	        weekdaysMin : 'Zo_Ma_Di_Wo_Do_Vr_Za'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD-MM-YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[vandaag om] LT',
	            nextDay: '[morgen om] LT',
	            nextWeek: 'dddd [om] LT',
	            lastDay: '[gisteren om] LT',
	            lastWeek: '[afgelopen] dddd [om] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'over %s',
	            past : '%s geleden',
	            s : 'een paar seconden',
	            m : 'één minuut',
	            mm : '%d minuten',
	            h : 'één uur',
	            hh : '%d uur',
	            d : 'één dag',
	            dd : '%d dagen',
	            M : 'één maand',
	            MM : '%d maanden',
	            y : 'één jaar',
	            yy : '%d jaar'
	        },
	        ordinalParse: /\d{1,2}(ste|de)/,
	        ordinal : function (number) {
	            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return nl;

	}));

/***/ }),
/* 436 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : norwegian nynorsk (nn)
	//! author : https://github.com/mechuwind

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var nn = moment.defineLocale('nn', {
	        months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
	        weekdays : 'sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag'.split('_'),
	        weekdaysShort : 'sun_mån_tys_ons_tor_fre_lau'.split('_'),
	        weekdaysMin : 'su_må_ty_on_to_fr_lø'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY [kl.] H:mm',
	            LLLL : 'dddd D. MMMM YYYY [kl.] HH:mm'
	        },
	        calendar : {
	            sameDay: '[I dag klokka] LT',
	            nextDay: '[I morgon klokka] LT',
	            nextWeek: 'dddd [klokka] LT',
	            lastDay: '[I går klokka] LT',
	            lastWeek: '[Føregåande] dddd [klokka] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'om %s',
	            past : '%s sidan',
	            s : 'nokre sekund',
	            m : 'eit minutt',
	            mm : '%d minutt',
	            h : 'ein time',
	            hh : '%d timar',
	            d : 'ein dag',
	            dd : '%d dagar',
	            M : 'ein månad',
	            MM : '%d månader',
	            y : 'eit år',
	            yy : '%d år'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return nn;

	}));

/***/ }),
/* 437 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : punjabi india (pa-in)
	//! author : Harpreet Singh : https://github.com/harpreetkhalsagtbit

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var symbolMap = {
	        '1': '੧',
	        '2': '੨',
	        '3': '੩',
	        '4': '੪',
	        '5': '੫',
	        '6': '੬',
	        '7': '੭',
	        '8': '੮',
	        '9': '੯',
	        '0': '੦'
	    },
	    numberMap = {
	        '੧': '1',
	        '੨': '2',
	        '੩': '3',
	        '੪': '4',
	        '੫': '5',
	        '੬': '6',
	        '੭': '7',
	        '੮': '8',
	        '੯': '9',
	        '੦': '0'
	    };

	    var pa_in = moment.defineLocale('pa-in', {
	        // There are months name as per Nanakshahi Calender but they are not used as rigidly in modern Punjabi.
	        months : 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),
	        monthsShort : 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),
	        weekdays : 'ਐਤਵਾਰ_ਸੋਮਵਾਰ_ਮੰਗਲਵਾਰ_ਬੁਧਵਾਰ_ਵੀਰਵਾਰ_ਸ਼ੁੱਕਰਵਾਰ_ਸ਼ਨੀਚਰਵਾਰ'.split('_'),
	        weekdaysShort : 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
	        weekdaysMin : 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
	        longDateFormat : {
	            LT : 'A h:mm ਵਜੇ',
	            LTS : 'A h:mm:ss ਵਜੇ',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, A h:mm ਵਜੇ',
	            LLLL : 'dddd, D MMMM YYYY, A h:mm ਵਜੇ'
	        },
	        calendar : {
	            sameDay : '[ਅਜ] LT',
	            nextDay : '[ਕਲ] LT',
	            nextWeek : 'dddd, LT',
	            lastDay : '[ਕਲ] LT',
	            lastWeek : '[ਪਿਛਲੇ] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s ਵਿੱਚ',
	            past : '%s ਪਿਛਲੇ',
	            s : 'ਕੁਝ ਸਕਿੰਟ',
	            m : 'ਇਕ ਮਿੰਟ',
	            mm : '%d ਮਿੰਟ',
	            h : 'ਇੱਕ ਘੰਟਾ',
	            hh : '%d ਘੰਟੇ',
	            d : 'ਇੱਕ ਦਿਨ',
	            dd : '%d ਦਿਨ',
	            M : 'ਇੱਕ ਮਹੀਨਾ',
	            MM : '%d ਮਹੀਨੇ',
	            y : 'ਇੱਕ ਸਾਲ',
	            yy : '%d ਸਾਲ'
	        },
	        preparse: function (string) {
	            return string.replace(/[੧੨੩੪੫੬੭੮੯੦]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        // Punjabi notation for meridiems are quite fuzzy in practice. While there exists
	        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Punjabi.
	        meridiemParse: /ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'ਰਾਤ') {
	                return hour < 4 ? hour : hour + 12;
	            } else if (meridiem === 'ਸਵੇਰ') {
	                return hour;
	            } else if (meridiem === 'ਦੁਪਹਿਰ') {
	                return hour >= 10 ? hour : hour + 12;
	            } else if (meridiem === 'ਸ਼ਾਮ') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'ਰਾਤ';
	            } else if (hour < 10) {
	                return 'ਸਵੇਰ';
	            } else if (hour < 17) {
	                return 'ਦੁਪਹਿਰ';
	            } else if (hour < 20) {
	                return 'ਸ਼ਾਮ';
	            } else {
	                return 'ਰਾਤ';
	            }
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return pa_in;

	}));

/***/ }),
/* 438 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : polish (pl)
	//! author : Rafal Hirsz : https://github.com/evoL

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split('_'),
	        monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split('_');
	    function plural(n) {
	        return (n % 10 < 5) && (n % 10 > 1) && ((~~(n / 10) % 10) !== 1);
	    }
	    function translate(number, withoutSuffix, key) {
	        var result = number + ' ';
	        switch (key) {
	        case 'm':
	            return withoutSuffix ? 'minuta' : 'minutę';
	        case 'mm':
	            return result + (plural(number) ? 'minuty' : 'minut');
	        case 'h':
	            return withoutSuffix  ? 'godzina'  : 'godzinę';
	        case 'hh':
	            return result + (plural(number) ? 'godziny' : 'godzin');
	        case 'MM':
	            return result + (plural(number) ? 'miesiące' : 'miesięcy');
	        case 'yy':
	            return result + (plural(number) ? 'lata' : 'lat');
	        }
	    }

	    var pl = moment.defineLocale('pl', {
	        months : function (momentToFormat, format) {
	            if (format === '') {
	                // Hack: if format empty we know this is used to generate
	                // RegExp by moment. Give then back both valid forms of months
	                // in RegExp ready format.
	                return '(' + monthsSubjective[momentToFormat.month()] + '|' + monthsNominative[momentToFormat.month()] + ')';
	            } else if (/D MMMM/.test(format)) {
	                return monthsSubjective[momentToFormat.month()];
	            } else {
	                return monthsNominative[momentToFormat.month()];
	            }
	        },
	        monthsShort : 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),
	        weekdays : 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),
	        weekdaysShort : 'nie_pon_wt_śr_czw_pt_sb'.split('_'),
	        weekdaysMin : 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Dziś o] LT',
	            nextDay: '[Jutro o] LT',
	            nextWeek: '[W] dddd [o] LT',
	            lastDay: '[Wczoraj o] LT',
	            lastWeek: function () {
	                switch (this.day()) {
	                case 0:
	                    return '[W zeszłą niedzielę o] LT';
	                case 3:
	                    return '[W zeszłą środę o] LT';
	                case 6:
	                    return '[W zeszłą sobotę o] LT';
	                default:
	                    return '[W zeszły] dddd [o] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'za %s',
	            past : '%s temu',
	            s : 'kilka sekund',
	            m : translate,
	            mm : translate,
	            h : translate,
	            hh : translate,
	            d : '1 dzień',
	            dd : '%d dni',
	            M : 'miesiąc',
	            MM : translate,
	            y : 'rok',
	            yy : translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return pl;

	}));

/***/ }),
/* 439 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : portuguese (pt)
	//! author : Jefferson : https://github.com/jalex79

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var pt = moment.defineLocale('pt', {
	        months : 'Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split('_'),
	        monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),
	        weekdays : 'Domingo_Segunda-Feira_Terça-Feira_Quarta-Feira_Quinta-Feira_Sexta-Feira_Sábado'.split('_'),
	        weekdaysShort : 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
	        weekdaysMin : 'Dom_2ª_3ª_4ª_5ª_6ª_Sáb'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D [de] MMMM [de] YYYY',
	            LLL : 'D [de] MMMM [de] YYYY HH:mm',
	            LLLL : 'dddd, D [de] MMMM [de] YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Hoje às] LT',
	            nextDay: '[Amanhã às] LT',
	            nextWeek: 'dddd [às] LT',
	            lastDay: '[Ontem às] LT',
	            lastWeek: function () {
	                return (this.day() === 0 || this.day() === 6) ?
	                    '[Último] dddd [às] LT' : // Saturday + Sunday
	                    '[Última] dddd [às] LT'; // Monday - Friday
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'em %s',
	            past : 'há %s',
	            s : 'segundos',
	            m : 'um minuto',
	            mm : '%d minutos',
	            h : 'uma hora',
	            hh : '%d horas',
	            d : 'um dia',
	            dd : '%d dias',
	            M : 'um mês',
	            MM : '%d meses',
	            y : 'um ano',
	            yy : '%d anos'
	        },
	        ordinalParse: /\d{1,2}º/,
	        ordinal : '%dº',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return pt;

	}));

/***/ }),
/* 440 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : brazilian portuguese (pt-br)
	//! author : Caio Ribeiro Pereira : https://github.com/caio-ribeiro-pereira

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var pt_br = moment.defineLocale('pt-br', {
	        months : 'Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split('_'),
	        monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),
	        weekdays : 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),
	        weekdaysShort : 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
	        weekdaysMin : 'Dom_2ª_3ª_4ª_5ª_6ª_Sáb'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D [de] MMMM [de] YYYY',
	            LLL : 'D [de] MMMM [de] YYYY [às] HH:mm',
	            LLLL : 'dddd, D [de] MMMM [de] YYYY [às] HH:mm'
	        },
	        calendar : {
	            sameDay: '[Hoje às] LT',
	            nextDay: '[Amanhã às] LT',
	            nextWeek: 'dddd [às] LT',
	            lastDay: '[Ontem às] LT',
	            lastWeek: function () {
	                return (this.day() === 0 || this.day() === 6) ?
	                    '[Último] dddd [às] LT' : // Saturday + Sunday
	                    '[Última] dddd [às] LT'; // Monday - Friday
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'em %s',
	            past : '%s atrás',
	            s : 'poucos segundos',
	            m : 'um minuto',
	            mm : '%d minutos',
	            h : 'uma hora',
	            hh : '%d horas',
	            d : 'um dia',
	            dd : '%d dias',
	            M : 'um mês',
	            MM : '%d meses',
	            y : 'um ano',
	            yy : '%d anos'
	        },
	        ordinalParse: /\d{1,2}º/,
	        ordinal : '%dº'
	    });

	    return pt_br;

	}));

/***/ }),
/* 441 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : romanian (ro)
	//! author : Vlad Gurdiga : https://github.com/gurdiga
	//! author : Valentin Agachi : https://github.com/avaly

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function relativeTimeWithPlural(number, withoutSuffix, key) {
	        var format = {
	                'mm': 'minute',
	                'hh': 'ore',
	                'dd': 'zile',
	                'MM': 'luni',
	                'yy': 'ani'
	            },
	            separator = ' ';
	        if (number % 100 >= 20 || (number >= 100 && number % 100 === 0)) {
	            separator = ' de ';
	        }
	        return number + separator + format[key];
	    }

	    var ro = moment.defineLocale('ro', {
	        months : 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split('_'),
	        monthsShort : 'ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split('_'),
	        monthsParseExact: true,
	        weekdays : 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'),
	        weekdaysShort : 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),
	        weekdaysMin : 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY H:mm',
	            LLLL : 'dddd, D MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay: '[azi la] LT',
	            nextDay: '[mâine la] LT',
	            nextWeek: 'dddd [la] LT',
	            lastDay: '[ieri la] LT',
	            lastWeek: '[fosta] dddd [la] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'peste %s',
	            past : '%s în urmă',
	            s : 'câteva secunde',
	            m : 'un minut',
	            mm : relativeTimeWithPlural,
	            h : 'o oră',
	            hh : relativeTimeWithPlural,
	            d : 'o zi',
	            dd : relativeTimeWithPlural,
	            M : 'o lună',
	            MM : relativeTimeWithPlural,
	            y : 'un an',
	            yy : relativeTimeWithPlural
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ro;

	}));

/***/ }),
/* 442 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : russian (ru)
	//! author : Viktorminator : https://github.com/Viktorminator
	//! Author : Menelion Elensúle : https://github.com/Oire
	//! author : Коренберг Марк : https://github.com/socketpair

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function plural(word, num) {
	        var forms = word.split('_');
	        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
	    }
	    function relativeTimeWithPlural(number, withoutSuffix, key) {
	        var format = {
	            'mm': withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',
	            'hh': 'час_часа_часов',
	            'dd': 'день_дня_дней',
	            'MM': 'месяц_месяца_месяцев',
	            'yy': 'год_года_лет'
	        };
	        if (key === 'm') {
	            return withoutSuffix ? 'минута' : 'минуту';
	        }
	        else {
	            return number + ' ' + plural(format[key], +number);
	        }
	    }
	    var monthsParse = [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[йя]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i];

	    // http://new.gramota.ru/spravka/rules/139-prop : § 103
	    // Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637
	    // CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753
	    var ru = moment.defineLocale('ru', {
	        months : {
	            format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_'),
	            standalone: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_')
	        },
	        monthsShort : {
	            // по CLDR именно "июл." и "июн.", но какой смысл менять букву на точку ?
	            format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split('_'),
	            standalone: 'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split('_')
	        },
	        weekdays : {
	            standalone: 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),
	            format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_'),
	            isFormat: /\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\] ?dddd/
	        },
	        weekdaysShort : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
	        weekdaysMin : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
	        monthsParse : monthsParse,
	        longMonthsParse : monthsParse,
	        shortMonthsParse : monthsParse,
	        monthsRegex: /^(сентябр[яь]|октябр[яь]|декабр[яь]|феврал[яь]|январ[яь]|апрел[яь]|августа?|ноябр[яь]|сент\.|февр\.|нояб\.|июнь|янв.|июль|дек.|авг.|апр.|марта|мар[.т]|окт.|июн[яь]|июл[яь]|ма[яй])/i,
	        monthsShortRegex: /^(сентябр[яь]|октябр[яь]|декабр[яь]|феврал[яь]|январ[яь]|апрел[яь]|августа?|ноябр[яь]|сент\.|февр\.|нояб\.|июнь|янв.|июль|дек.|авг.|апр.|марта|мар[.т]|окт.|июн[яь]|июл[яь]|ма[яй])/i,
	        monthsStrictRegex: /^(сентябр[яь]|октябр[яь]|декабр[яь]|феврал[яь]|январ[яь]|апрел[яь]|августа?|ноябр[яь]|марта?|июн[яь]|июл[яь]|ма[яй])/i,
	        monthsShortStrictRegex: /^(нояб\.|февр\.|сент\.|июль|янв\.|июн[яь]|мар[.т]|авг\.|апр\.|окт\.|дек\.|ма[яй])/i,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY г.',
	            LLL : 'D MMMM YYYY г., HH:mm',
	            LLLL : 'dddd, D MMMM YYYY г., HH:mm'
	        },
	        calendar : {
	            sameDay: '[Сегодня в] LT',
	            nextDay: '[Завтра в] LT',
	            lastDay: '[Вчера в] LT',
	            nextWeek: function (now) {
	                if (now.week() !== this.week()) {
	                    switch (this.day()) {
	                    case 0:
	                        return '[В следующее] dddd [в] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                        return '[В следующий] dddd [в] LT';
	                    case 3:
	                    case 5:
	                    case 6:
	                        return '[В следующую] dddd [в] LT';
	                    }
	                } else {
	                    if (this.day() === 2) {
	                        return '[Во] dddd [в] LT';
	                    } else {
	                        return '[В] dddd [в] LT';
	                    }
	                }
	            },
	            lastWeek: function (now) {
	                if (now.week() !== this.week()) {
	                    switch (this.day()) {
	                    case 0:
	                        return '[В прошлое] dddd [в] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                        return '[В прошлый] dddd [в] LT';
	                    case 3:
	                    case 5:
	                    case 6:
	                        return '[В прошлую] dddd [в] LT';
	                    }
	                } else {
	                    if (this.day() === 2) {
	                        return '[Во] dddd [в] LT';
	                    } else {
	                        return '[В] dddd [в] LT';
	                    }
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'через %s',
	            past : '%s назад',
	            s : 'несколько секунд',
	            m : relativeTimeWithPlural,
	            mm : relativeTimeWithPlural,
	            h : 'час',
	            hh : relativeTimeWithPlural,
	            d : 'день',
	            dd : relativeTimeWithPlural,
	            M : 'месяц',
	            MM : relativeTimeWithPlural,
	            y : 'год',
	            yy : relativeTimeWithPlural
	        },
	        meridiemParse: /ночи|утра|дня|вечера/i,
	        isPM : function (input) {
	            return /^(дня|вечера)$/.test(input);
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'ночи';
	            } else if (hour < 12) {
	                return 'утра';
	            } else if (hour < 17) {
	                return 'дня';
	            } else {
	                return 'вечера';
	            }
	        },
	        ordinalParse: /\d{1,2}-(й|го|я)/,
	        ordinal: function (number, period) {
	            switch (period) {
	            case 'M':
	            case 'd':
	            case 'DDD':
	                return number + '-й';
	            case 'D':
	                return number + '-го';
	            case 'w':
	            case 'W':
	                return number + '-я';
	            default:
	                return number;
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ru;

	}));

/***/ }),
/* 443 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Northern Sami (se)
	//! authors : Bård Rolstad Henriksen : https://github.com/karamell

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';



	    var se = moment.defineLocale('se', {
	        months : 'ođđajagemánnu_guovvamánnu_njukčamánnu_cuoŋománnu_miessemánnu_geassemánnu_suoidnemánnu_borgemánnu_čakčamánnu_golggotmánnu_skábmamánnu_juovlamánnu'.split('_'),
	        monthsShort : 'ođđj_guov_njuk_cuo_mies_geas_suoi_borg_čakč_golg_skáb_juov'.split('_'),
	        weekdays : 'sotnabeaivi_vuossárga_maŋŋebárga_gaskavahkku_duorastat_bearjadat_lávvardat'.split('_'),
	        weekdaysShort : 'sotn_vuos_maŋ_gask_duor_bear_láv'.split('_'),
	        weekdaysMin : 's_v_m_g_d_b_L'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'MMMM D. [b.] YYYY',
	            LLL : 'MMMM D. [b.] YYYY [ti.] HH:mm',
	            LLLL : 'dddd, MMMM D. [b.] YYYY [ti.] HH:mm'
	        },
	        calendar : {
	            sameDay: '[otne ti] LT',
	            nextDay: '[ihttin ti] LT',
	            nextWeek: 'dddd [ti] LT',
	            lastDay: '[ikte ti] LT',
	            lastWeek: '[ovddit] dddd [ti] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : '%s geažes',
	            past : 'maŋit %s',
	            s : 'moadde sekunddat',
	            m : 'okta minuhta',
	            mm : '%d minuhtat',
	            h : 'okta diimmu',
	            hh : '%d diimmut',
	            d : 'okta beaivi',
	            dd : '%d beaivvit',
	            M : 'okta mánnu',
	            MM : '%d mánut',
	            y : 'okta jahki',
	            yy : '%d jagit'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return se;

	}));

/***/ }),
/* 444 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Sinhalese (si)
	//! author : Sampath Sitinamaluwa : https://github.com/sampathsris

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    /*jshint -W100*/
	    var si = moment.defineLocale('si', {
	        months : 'ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්'.split('_'),
	        monthsShort : 'ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ'.split('_'),
	        weekdays : 'ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා'.split('_'),
	        weekdaysShort : 'ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන'.split('_'),
	        weekdaysMin : 'ඉ_ස_අ_බ_බ්‍ර_සි_සෙ'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'a h:mm',
	            LTS : 'a h:mm:ss',
	            L : 'YYYY/MM/DD',
	            LL : 'YYYY MMMM D',
	            LLL : 'YYYY MMMM D, a h:mm',
	            LLLL : 'YYYY MMMM D [වැනි] dddd, a h:mm:ss'
	        },
	        calendar : {
	            sameDay : '[අද] LT[ට]',
	            nextDay : '[හෙට] LT[ට]',
	            nextWeek : 'dddd LT[ට]',
	            lastDay : '[ඊයේ] LT[ට]',
	            lastWeek : '[පසුගිය] dddd LT[ට]',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%sකින්',
	            past : '%sකට පෙර',
	            s : 'තත්පර කිහිපය',
	            m : 'මිනිත්තුව',
	            mm : 'මිනිත්තු %d',
	            h : 'පැය',
	            hh : 'පැය %d',
	            d : 'දිනය',
	            dd : 'දින %d',
	            M : 'මාසය',
	            MM : 'මාස %d',
	            y : 'වසර',
	            yy : 'වසර %d'
	        },
	        ordinalParse: /\d{1,2} වැනි/,
	        ordinal : function (number) {
	            return number + ' වැනි';
	        },
	        meridiemParse : /පෙර වරු|පස් වරු|පෙ.ව|ප.ව./,
	        isPM : function (input) {
	            return input === 'ප.ව.' || input === 'පස් වරු';
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours > 11) {
	                return isLower ? 'ප.ව.' : 'පස් වරු';
	            } else {
	                return isLower ? 'පෙ.ව.' : 'පෙර වරු';
	            }
	        }
	    });

	    return si;

	}));

/***/ }),
/* 445 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : slovak (sk)
	//! author : Martin Minka : https://github.com/k2s
	//! based on work of petrbela : https://github.com/petrbela

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var months = 'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split('_'),
	        monthsShort = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');
	    function plural(n) {
	        return (n > 1) && (n < 5);
	    }
	    function translate(number, withoutSuffix, key, isFuture) {
	        var result = number + ' ';
	        switch (key) {
	        case 's':  // a few seconds / in a few seconds / a few seconds ago
	            return (withoutSuffix || isFuture) ? 'pár sekúnd' : 'pár sekundami';
	        case 'm':  // a minute / in a minute / a minute ago
	            return withoutSuffix ? 'minúta' : (isFuture ? 'minútu' : 'minútou');
	        case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'minúty' : 'minút');
	            } else {
	                return result + 'minútami';
	            }
	            break;
	        case 'h':  // an hour / in an hour / an hour ago
	            return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');
	        case 'hh': // 9 hours / in 9 hours / 9 hours ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'hodiny' : 'hodín');
	            } else {
	                return result + 'hodinami';
	            }
	            break;
	        case 'd':  // a day / in a day / a day ago
	            return (withoutSuffix || isFuture) ? 'deň' : 'dňom';
	        case 'dd': // 9 days / in 9 days / 9 days ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'dni' : 'dní');
	            } else {
	                return result + 'dňami';
	            }
	            break;
	        case 'M':  // a month / in a month / a month ago
	            return (withoutSuffix || isFuture) ? 'mesiac' : 'mesiacom';
	        case 'MM': // 9 months / in 9 months / 9 months ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'mesiace' : 'mesiacov');
	            } else {
	                return result + 'mesiacmi';
	            }
	            break;
	        case 'y':  // a year / in a year / a year ago
	            return (withoutSuffix || isFuture) ? 'rok' : 'rokom';
	        case 'yy': // 9 years / in 9 years / 9 years ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'roky' : 'rokov');
	            } else {
	                return result + 'rokmi';
	            }
	            break;
	        }
	    }

	    var sk = moment.defineLocale('sk', {
	        months : months,
	        monthsShort : monthsShort,
	        weekdays : 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'),
	        weekdaysShort : 'ne_po_ut_st_št_pi_so'.split('_'),
	        weekdaysMin : 'ne_po_ut_st_št_pi_so'.split('_'),
	        longDateFormat : {
	            LT: 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY H:mm',
	            LLLL : 'dddd D. MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay: '[dnes o] LT',
	            nextDay: '[zajtra o] LT',
	            nextWeek: function () {
	                switch (this.day()) {
	                case 0:
	                    return '[v nedeľu o] LT';
	                case 1:
	                case 2:
	                    return '[v] dddd [o] LT';
	                case 3:
	                    return '[v stredu o] LT';
	                case 4:
	                    return '[vo štvrtok o] LT';
	                case 5:
	                    return '[v piatok o] LT';
	                case 6:
	                    return '[v sobotu o] LT';
	                }
	            },
	            lastDay: '[včera o] LT',
	            lastWeek: function () {
	                switch (this.day()) {
	                case 0:
	                    return '[minulú nedeľu o] LT';
	                case 1:
	                case 2:
	                    return '[minulý] dddd [o] LT';
	                case 3:
	                    return '[minulú stredu o] LT';
	                case 4:
	                case 5:
	                    return '[minulý] dddd [o] LT';
	                case 6:
	                    return '[minulú sobotu o] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'za %s',
	            past : 'pred %s',
	            s : translate,
	            m : translate,
	            mm : translate,
	            h : translate,
	            hh : translate,
	            d : translate,
	            dd : translate,
	            M : translate,
	            MM : translate,
	            y : translate,
	            yy : translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return sk;

	}));

/***/ }),
/* 446 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : slovenian (sl)
	//! author : Robert Sedovšek : https://github.com/sedovsek

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var result = number + ' ';
	        switch (key) {
	        case 's':
	            return withoutSuffix || isFuture ? 'nekaj sekund' : 'nekaj sekundami';
	        case 'm':
	            return withoutSuffix ? 'ena minuta' : 'eno minuto';
	        case 'mm':
	            if (number === 1) {
	                result += withoutSuffix ? 'minuta' : 'minuto';
	            } else if (number === 2) {
	                result += withoutSuffix || isFuture ? 'minuti' : 'minutama';
	            } else if (number < 5) {
	                result += withoutSuffix || isFuture ? 'minute' : 'minutami';
	            } else {
	                result += withoutSuffix || isFuture ? 'minut' : 'minutami';
	            }
	            return result;
	        case 'h':
	            return withoutSuffix ? 'ena ura' : 'eno uro';
	        case 'hh':
	            if (number === 1) {
	                result += withoutSuffix ? 'ura' : 'uro';
	            } else if (number === 2) {
	                result += withoutSuffix || isFuture ? 'uri' : 'urama';
	            } else if (number < 5) {
	                result += withoutSuffix || isFuture ? 'ure' : 'urami';
	            } else {
	                result += withoutSuffix || isFuture ? 'ur' : 'urami';
	            }
	            return result;
	        case 'd':
	            return withoutSuffix || isFuture ? 'en dan' : 'enim dnem';
	        case 'dd':
	            if (number === 1) {
	                result += withoutSuffix || isFuture ? 'dan' : 'dnem';
	            } else if (number === 2) {
	                result += withoutSuffix || isFuture ? 'dni' : 'dnevoma';
	            } else {
	                result += withoutSuffix || isFuture ? 'dni' : 'dnevi';
	            }
	            return result;
	        case 'M':
	            return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem';
	        case 'MM':
	            if (number === 1) {
	                result += withoutSuffix || isFuture ? 'mesec' : 'mesecem';
	            } else if (number === 2) {
	                result += withoutSuffix || isFuture ? 'meseca' : 'mesecema';
	            } else if (number < 5) {
	                result += withoutSuffix || isFuture ? 'mesece' : 'meseci';
	            } else {
	                result += withoutSuffix || isFuture ? 'mesecev' : 'meseci';
	            }
	            return result;
	        case 'y':
	            return withoutSuffix || isFuture ? 'eno leto' : 'enim letom';
	        case 'yy':
	            if (number === 1) {
	                result += withoutSuffix || isFuture ? 'leto' : 'letom';
	            } else if (number === 2) {
	                result += withoutSuffix || isFuture ? 'leti' : 'letoma';
	            } else if (number < 5) {
	                result += withoutSuffix || isFuture ? 'leta' : 'leti';
	            } else {
	                result += withoutSuffix || isFuture ? 'let' : 'leti';
	            }
	            return result;
	        }
	    }

	    var sl = moment.defineLocale('sl', {
	        months : 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split('_'),
	        monthsShort : 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split('_'),
	        monthsParseExact: true,
	        weekdays : 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),
	        weekdaysShort : 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),
	        weekdaysMin : 'ne_po_to_sr_če_pe_so'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD. MM. YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY H:mm',
	            LLLL : 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay  : '[danes ob] LT',
	            nextDay  : '[jutri ob] LT',

	            nextWeek : function () {
	                switch (this.day()) {
	                case 0:
	                    return '[v] [nedeljo] [ob] LT';
	                case 3:
	                    return '[v] [sredo] [ob] LT';
	                case 6:
	                    return '[v] [soboto] [ob] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[v] dddd [ob] LT';
	                }
	            },
	            lastDay  : '[včeraj ob] LT',
	            lastWeek : function () {
	                switch (this.day()) {
	                case 0:
	                    return '[prejšnjo] [nedeljo] [ob] LT';
	                case 3:
	                    return '[prejšnjo] [sredo] [ob] LT';
	                case 6:
	                    return '[prejšnjo] [soboto] [ob] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[prejšnji] dddd [ob] LT';
	                }
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'čez %s',
	            past   : 'pred %s',
	            s      : processRelativeTime,
	            m      : processRelativeTime,
	            mm     : processRelativeTime,
	            h      : processRelativeTime,
	            hh     : processRelativeTime,
	            d      : processRelativeTime,
	            dd     : processRelativeTime,
	            M      : processRelativeTime,
	            MM     : processRelativeTime,
	            y      : processRelativeTime,
	            yy     : processRelativeTime
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return sl;

	}));

/***/ }),
/* 447 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Albanian (sq)
	//! author : Flakërim Ismani : https://github.com/flakerimi
	//! author: Menelion Elensúle: https://github.com/Oire (tests)
	//! author : Oerd Cukalla : https://github.com/oerd (fixes)

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var sq = moment.defineLocale('sq', {
	        months : 'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split('_'),
	        monthsShort : 'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split('_'),
	        weekdays : 'E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split('_'),
	        weekdaysShort : 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),
	        weekdaysMin : 'D_H_Ma_Më_E_P_Sh'.split('_'),
	        weekdaysParseExact : true,
	        meridiemParse: /PD|MD/,
	        isPM: function (input) {
	            return input.charAt(0) === 'M';
	        },
	        meridiem : function (hours, minutes, isLower) {
	            return hours < 12 ? 'PD' : 'MD';
	        },
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Sot në] LT',
	            nextDay : '[Nesër në] LT',
	            nextWeek : 'dddd [në] LT',
	            lastDay : '[Dje në] LT',
	            lastWeek : 'dddd [e kaluar në] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'në %s',
	            past : '%s më parë',
	            s : 'disa sekonda',
	            m : 'një minutë',
	            mm : '%d minuta',
	            h : 'një orë',
	            hh : '%d orë',
	            d : 'një ditë',
	            dd : '%d ditë',
	            M : 'një muaj',
	            MM : '%d muaj',
	            y : 'një vit',
	            yy : '%d vite'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return sq;

	}));

/***/ }),
/* 448 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Serbian-latin (sr)
	//! author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var translator = {
	        words: { //Different grammatical cases
	            m: ['jedan minut', 'jedne minute'],
	            mm: ['minut', 'minute', 'minuta'],
	            h: ['jedan sat', 'jednog sata'],
	            hh: ['sat', 'sata', 'sati'],
	            dd: ['dan', 'dana', 'dana'],
	            MM: ['mesec', 'meseca', 'meseci'],
	            yy: ['godina', 'godine', 'godina']
	        },
	        correctGrammaticalCase: function (number, wordKey) {
	            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
	        },
	        translate: function (number, withoutSuffix, key) {
	            var wordKey = translator.words[key];
	            if (key.length === 1) {
	                return withoutSuffix ? wordKey[0] : wordKey[1];
	            } else {
	                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
	            }
	        }
	    };

	    var sr = moment.defineLocale('sr', {
	        months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),
	        monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),
	        monthsParseExact: true,
	        weekdays: 'nedelja_ponedeljak_utorak_sreda_četvrtak_petak_subota'.split('_'),
	        weekdaysShort: 'ned._pon._uto._sre._čet._pet._sub.'.split('_'),
	        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS : 'H:mm:ss',
	            L: 'DD. MM. YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY H:mm',
	            LLLL: 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar: {
	            sameDay: '[danas u] LT',
	            nextDay: '[sutra u] LT',
	            nextWeek: function () {
	                switch (this.day()) {
	                case 0:
	                    return '[u] [nedelju] [u] LT';
	                case 3:
	                    return '[u] [sredu] [u] LT';
	                case 6:
	                    return '[u] [subotu] [u] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[u] dddd [u] LT';
	                }
	            },
	            lastDay  : '[juče u] LT',
	            lastWeek : function () {
	                var lastWeekDays = [
	                    '[prošle] [nedelje] [u] LT',
	                    '[prošlog] [ponedeljka] [u] LT',
	                    '[prošlog] [utorka] [u] LT',
	                    '[prošle] [srede] [u] LT',
	                    '[prošlog] [četvrtka] [u] LT',
	                    '[prošlog] [petka] [u] LT',
	                    '[prošle] [subote] [u] LT'
	                ];
	                return lastWeekDays[this.day()];
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'za %s',
	            past   : 'pre %s',
	            s      : 'nekoliko sekundi',
	            m      : translator.translate,
	            mm     : translator.translate,
	            h      : translator.translate,
	            hh     : translator.translate,
	            d      : 'dan',
	            dd     : translator.translate,
	            M      : 'mesec',
	            MM     : translator.translate,
	            y      : 'godinu',
	            yy     : translator.translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return sr;

	}));

/***/ }),
/* 449 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Serbian-cyrillic (sr-cyrl)
	//! author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var translator = {
	        words: { //Different grammatical cases
	            m: ['један минут', 'једне минуте'],
	            mm: ['минут', 'минуте', 'минута'],
	            h: ['један сат', 'једног сата'],
	            hh: ['сат', 'сата', 'сати'],
	            dd: ['дан', 'дана', 'дана'],
	            MM: ['месец', 'месеца', 'месеци'],
	            yy: ['година', 'године', 'година']
	        },
	        correctGrammaticalCase: function (number, wordKey) {
	            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
	        },
	        translate: function (number, withoutSuffix, key) {
	            var wordKey = translator.words[key];
	            if (key.length === 1) {
	                return withoutSuffix ? wordKey[0] : wordKey[1];
	            } else {
	                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
	            }
	        }
	    };

	    var sr_cyrl = moment.defineLocale('sr-cyrl', {
	        months: 'јануар_фебруар_март_април_мај_јун_јул_август_септембар_октобар_новембар_децембар'.split('_'),
	        monthsShort: 'јан._феб._мар._апр._мај_јун_јул_авг._сеп._окт._нов._дец.'.split('_'),
	        monthsParseExact: true,
	        weekdays: 'недеља_понедељак_уторак_среда_четвртак_петак_субота'.split('_'),
	        weekdaysShort: 'нед._пон._уто._сре._чет._пет._суб.'.split('_'),
	        weekdaysMin: 'не_по_ут_ср_че_пе_су'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS : 'H:mm:ss',
	            L: 'DD. MM. YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY H:mm',
	            LLLL: 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar: {
	            sameDay: '[данас у] LT',
	            nextDay: '[сутра у] LT',
	            nextWeek: function () {
	                switch (this.day()) {
	                case 0:
	                    return '[у] [недељу] [у] LT';
	                case 3:
	                    return '[у] [среду] [у] LT';
	                case 6:
	                    return '[у] [суботу] [у] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[у] dddd [у] LT';
	                }
	            },
	            lastDay  : '[јуче у] LT',
	            lastWeek : function () {
	                var lastWeekDays = [
	                    '[прошле] [недеље] [у] LT',
	                    '[прошлог] [понедељка] [у] LT',
	                    '[прошлог] [уторка] [у] LT',
	                    '[прошле] [среде] [у] LT',
	                    '[прошлог] [четвртка] [у] LT',
	                    '[прошлог] [петка] [у] LT',
	                    '[прошле] [суботе] [у] LT'
	                ];
	                return lastWeekDays[this.day()];
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'за %s',
	            past   : 'пре %s',
	            s      : 'неколико секунди',
	            m      : translator.translate,
	            mm     : translator.translate,
	            h      : translator.translate,
	            hh     : translator.translate,
	            d      : 'дан',
	            dd     : translator.translate,
	            M      : 'месец',
	            MM     : translator.translate,
	            y      : 'годину',
	            yy     : translator.translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return sr_cyrl;

	}));

/***/ }),
/* 450 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : siSwati (ss)
	//! author : Nicolai Davies<mail@nicolai.io> : https://github.com/nicolaidavies

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';



	    var ss = moment.defineLocale('ss', {
	        months : "Bhimbidvwane_Indlovana_Indlov'lenkhulu_Mabasa_Inkhwekhweti_Inhlaba_Kholwane_Ingci_Inyoni_Imphala_Lweti_Ingongoni".split('_'),
	        monthsShort : 'Bhi_Ina_Inu_Mab_Ink_Inh_Kho_Igc_Iny_Imp_Lwe_Igo'.split('_'),
	        weekdays : 'Lisontfo_Umsombuluko_Lesibili_Lesitsatfu_Lesine_Lesihlanu_Umgcibelo'.split('_'),
	        weekdaysShort : 'Lis_Umb_Lsb_Les_Lsi_Lsh_Umg'.split('_'),
	        weekdaysMin : 'Li_Us_Lb_Lt_Ls_Lh_Ug'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'h:mm A',
	            LTS : 'h:mm:ss A',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY h:mm A',
	            LLLL : 'dddd, D MMMM YYYY h:mm A'
	        },
	        calendar : {
	            sameDay : '[Namuhla nga] LT',
	            nextDay : '[Kusasa nga] LT',
	            nextWeek : 'dddd [nga] LT',
	            lastDay : '[Itolo nga] LT',
	            lastWeek : 'dddd [leliphelile] [nga] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'nga %s',
	            past : 'wenteka nga %s',
	            s : 'emizuzwana lomcane',
	            m : 'umzuzu',
	            mm : '%d emizuzu',
	            h : 'lihora',
	            hh : '%d emahora',
	            d : 'lilanga',
	            dd : '%d emalanga',
	            M : 'inyanga',
	            MM : '%d tinyanga',
	            y : 'umnyaka',
	            yy : '%d iminyaka'
	        },
	        meridiemParse: /ekuseni|emini|entsambama|ebusuku/,
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 11) {
	                return 'ekuseni';
	            } else if (hours < 15) {
	                return 'emini';
	            } else if (hours < 19) {
	                return 'entsambama';
	            } else {
	                return 'ebusuku';
	            }
	        },
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'ekuseni') {
	                return hour;
	            } else if (meridiem === 'emini') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === 'entsambama' || meridiem === 'ebusuku') {
	                if (hour === 0) {
	                    return 0;
	                }
	                return hour + 12;
	            }
	        },
	        ordinalParse: /\d{1,2}/,
	        ordinal : '%d',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return ss;

	}));

/***/ }),
/* 451 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : swedish (sv)
	//! author : Jens Alm : https://github.com/ulmus

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var sv = moment.defineLocale('sv', {
	        months : 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
	        weekdays : 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),
	        weekdaysShort : 'sön_mån_tis_ons_tor_fre_lör'.split('_'),
	        weekdaysMin : 'sö_må_ti_on_to_fr_lö'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'YYYY-MM-DD',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY [kl.] HH:mm',
	            LLLL : 'dddd D MMMM YYYY [kl.] HH:mm',
	            lll : 'D MMM YYYY HH:mm',
	            llll : 'ddd D MMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Idag] LT',
	            nextDay: '[Imorgon] LT',
	            lastDay: '[Igår] LT',
	            nextWeek: '[På] dddd LT',
	            lastWeek: '[I] dddd[s] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'om %s',
	            past : 'för %s sedan',
	            s : 'några sekunder',
	            m : 'en minut',
	            mm : '%d minuter',
	            h : 'en timme',
	            hh : '%d timmar',
	            d : 'en dag',
	            dd : '%d dagar',
	            M : 'en månad',
	            MM : '%d månader',
	            y : 'ett år',
	            yy : '%d år'
	        },
	        ordinalParse: /\d{1,2}(e|a)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (~~(number % 100 / 10) === 1) ? 'e' :
	                (b === 1) ? 'a' :
	                (b === 2) ? 'a' :
	                (b === 3) ? 'e' : 'e';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return sv;

	}));

/***/ }),
/* 452 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : swahili (sw)
	//! author : Fahad Kassim : https://github.com/fadsel

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var sw = moment.defineLocale('sw', {
	        months : 'Januari_Februari_Machi_Aprili_Mei_Juni_Julai_Agosti_Septemba_Oktoba_Novemba_Desemba'.split('_'),
	        monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ago_Sep_Okt_Nov_Des'.split('_'),
	        weekdays : 'Jumapili_Jumatatu_Jumanne_Jumatano_Alhamisi_Ijumaa_Jumamosi'.split('_'),
	        weekdaysShort : 'Jpl_Jtat_Jnne_Jtan_Alh_Ijm_Jmos'.split('_'),
	        weekdaysMin : 'J2_J3_J4_J5_Al_Ij_J1'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[leo saa] LT',
	            nextDay : '[kesho saa] LT',
	            nextWeek : '[wiki ijayo] dddd [saat] LT',
	            lastDay : '[jana] LT',
	            lastWeek : '[wiki iliyopita] dddd [saat] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s baadaye',
	            past : 'tokea %s',
	            s : 'hivi punde',
	            m : 'dakika moja',
	            mm : 'dakika %d',
	            h : 'saa limoja',
	            hh : 'masaa %d',
	            d : 'siku moja',
	            dd : 'masiku %d',
	            M : 'mwezi mmoja',
	            MM : 'miezi %d',
	            y : 'mwaka mmoja',
	            yy : 'miaka %d'
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return sw;

	}));

/***/ }),
/* 453 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : tamil (ta)
	//! author : Arjunkumar Krishnamoorthy : https://github.com/tk120404

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var symbolMap = {
	        '1': '௧',
	        '2': '௨',
	        '3': '௩',
	        '4': '௪',
	        '5': '௫',
	        '6': '௬',
	        '7': '௭',
	        '8': '௮',
	        '9': '௯',
	        '0': '௦'
	    }, numberMap = {
	        '௧': '1',
	        '௨': '2',
	        '௩': '3',
	        '௪': '4',
	        '௫': '5',
	        '௬': '6',
	        '௭': '7',
	        '௮': '8',
	        '௯': '9',
	        '௦': '0'
	    };

	    var ta = moment.defineLocale('ta', {
	        months : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),
	        monthsShort : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),
	        weekdays : 'ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை'.split('_'),
	        weekdaysShort : 'ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி'.split('_'),
	        weekdaysMin : 'ஞா_தி_செ_பு_வி_வெ_ச'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, HH:mm',
	            LLLL : 'dddd, D MMMM YYYY, HH:mm'
	        },
	        calendar : {
	            sameDay : '[இன்று] LT',
	            nextDay : '[நாளை] LT',
	            nextWeek : 'dddd, LT',
	            lastDay : '[நேற்று] LT',
	            lastWeek : '[கடந்த வாரம்] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s இல்',
	            past : '%s முன்',
	            s : 'ஒரு சில விநாடிகள்',
	            m : 'ஒரு நிமிடம்',
	            mm : '%d நிமிடங்கள்',
	            h : 'ஒரு மணி நேரம்',
	            hh : '%d மணி நேரம்',
	            d : 'ஒரு நாள்',
	            dd : '%d நாட்கள்',
	            M : 'ஒரு மாதம்',
	            MM : '%d மாதங்கள்',
	            y : 'ஒரு வருடம்',
	            yy : '%d ஆண்டுகள்'
	        },
	        ordinalParse: /\d{1,2}வது/,
	        ordinal : function (number) {
	            return number + 'வது';
	        },
	        preparse: function (string) {
	            return string.replace(/[௧௨௩௪௫௬௭௮௯௦]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        // refer http://ta.wikipedia.org/s/1er1
	        meridiemParse: /யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 2) {
	                return ' யாமம்';
	            } else if (hour < 6) {
	                return ' வைகறை';  // வைகறை
	            } else if (hour < 10) {
	                return ' காலை'; // காலை
	            } else if (hour < 14) {
	                return ' நண்பகல்'; // நண்பகல்
	            } else if (hour < 18) {
	                return ' எற்பாடு'; // எற்பாடு
	            } else if (hour < 22) {
	                return ' மாலை'; // மாலை
	            } else {
	                return ' யாமம்';
	            }
	        },
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'யாமம்') {
	                return hour < 2 ? hour : hour + 12;
	            } else if (meridiem === 'வைகறை' || meridiem === 'காலை') {
	                return hour;
	            } else if (meridiem === 'நண்பகல்') {
	                return hour >= 10 ? hour : hour + 12;
	            } else {
	                return hour + 12;
	            }
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ta;

	}));

/***/ }),
/* 454 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : telugu (te)
	//! author : Krishna Chaitanya Thota : https://github.com/kcthota

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var te = moment.defineLocale('te', {
	        months : 'జనవరి_ఫిబ్రవరి_మార్చి_ఏప్రిల్_మే_జూన్_జూలై_ఆగస్టు_సెప్టెంబర్_అక్టోబర్_నవంబర్_డిసెంబర్'.split('_'),
	        monthsShort : 'జన._ఫిబ్ర._మార్చి_ఏప్రి._మే_జూన్_జూలై_ఆగ._సెప్._అక్టో._నవ._డిసె.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'ఆదివారం_సోమవారం_మంగళవారం_బుధవారం_గురువారం_శుక్రవారం_శనివారం'.split('_'),
	        weekdaysShort : 'ఆది_సోమ_మంగళ_బుధ_గురు_శుక్ర_శని'.split('_'),
	        weekdaysMin : 'ఆ_సో_మం_బు_గు_శు_శ'.split('_'),
	        longDateFormat : {
	            LT : 'A h:mm',
	            LTS : 'A h:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, A h:mm',
	            LLLL : 'dddd, D MMMM YYYY, A h:mm'
	        },
	        calendar : {
	            sameDay : '[నేడు] LT',
	            nextDay : '[రేపు] LT',
	            nextWeek : 'dddd, LT',
	            lastDay : '[నిన్న] LT',
	            lastWeek : '[గత] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s లో',
	            past : '%s క్రితం',
	            s : 'కొన్ని క్షణాలు',
	            m : 'ఒక నిమిషం',
	            mm : '%d నిమిషాలు',
	            h : 'ఒక గంట',
	            hh : '%d గంటలు',
	            d : 'ఒక రోజు',
	            dd : '%d రోజులు',
	            M : 'ఒక నెల',
	            MM : '%d నెలలు',
	            y : 'ఒక సంవత్సరం',
	            yy : '%d సంవత్సరాలు'
	        },
	        ordinalParse : /\d{1,2}వ/,
	        ordinal : '%dవ',
	        meridiemParse: /రాత్రి|ఉదయం|మధ్యాహ్నం|సాయంత్రం/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'రాత్రి') {
	                return hour < 4 ? hour : hour + 12;
	            } else if (meridiem === 'ఉదయం') {
	                return hour;
	            } else if (meridiem === 'మధ్యాహ్నం') {
	                return hour >= 10 ? hour : hour + 12;
	            } else if (meridiem === 'సాయంత్రం') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'రాత్రి';
	            } else if (hour < 10) {
	                return 'ఉదయం';
	            } else if (hour < 17) {
	                return 'మధ్యాహ్నం';
	            } else if (hour < 20) {
	                return 'సాయంత్రం';
	            } else {
	                return 'రాత్రి';
	            }
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return te;

	}));

/***/ }),
/* 455 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : thai (th)
	//! author : Kridsada Thanabulpong : https://github.com/sirn

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var th = moment.defineLocale('th', {
	        months : 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),
	        monthsShort : 'มกรา_กุมภา_มีนา_เมษา_พฤษภา_มิถุนา_กรกฎา_สิงหา_กันยา_ตุลา_พฤศจิกา_ธันวา'.split('_'),
	        monthsParseExact: true,
	        weekdays : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),
	        weekdaysShort : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์'.split('_'), // yes, three characters difference
	        weekdaysMin : 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'H นาฬิกา m นาที',
	            LTS : 'H นาฬิกา m นาที s วินาที',
	            L : 'YYYY/MM/DD',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY เวลา H นาฬิกา m นาที',
	            LLLL : 'วันddddที่ D MMMM YYYY เวลา H นาฬิกา m นาที'
	        },
	        meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,
	        isPM: function (input) {
	            return input === 'หลังเที่ยง';
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return 'ก่อนเที่ยง';
	            } else {
	                return 'หลังเที่ยง';
	            }
	        },
	        calendar : {
	            sameDay : '[วันนี้ เวลา] LT',
	            nextDay : '[พรุ่งนี้ เวลา] LT',
	            nextWeek : 'dddd[หน้า เวลา] LT',
	            lastDay : '[เมื่อวานนี้ เวลา] LT',
	            lastWeek : '[วัน]dddd[ที่แล้ว เวลา] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'อีก %s',
	            past : '%sที่แล้ว',
	            s : 'ไม่กี่วินาที',
	            m : '1 นาที',
	            mm : '%d นาที',
	            h : '1 ชั่วโมง',
	            hh : '%d ชั่วโมง',
	            d : '1 วัน',
	            dd : '%d วัน',
	            M : '1 เดือน',
	            MM : '%d เดือน',
	            y : '1 ปี',
	            yy : '%d ปี'
	        }
	    });

	    return th;

	}));

/***/ }),
/* 456 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Tagalog/Filipino (tl-ph)
	//! author : Dan Hagman

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var tl_ph = moment.defineLocale('tl-ph', {
	        months : 'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split('_'),
	        monthsShort : 'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'),
	        weekdays : 'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split('_'),
	        weekdaysShort : 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),
	        weekdaysMin : 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'MM/D/YYYY',
	            LL : 'MMMM D, YYYY',
	            LLL : 'MMMM D, YYYY HH:mm',
	            LLLL : 'dddd, MMMM DD, YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Ngayon sa] LT',
	            nextDay: '[Bukas sa] LT',
	            nextWeek: 'dddd [sa] LT',
	            lastDay: '[Kahapon sa] LT',
	            lastWeek: 'dddd [huling linggo] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'sa loob ng %s',
	            past : '%s ang nakalipas',
	            s : 'ilang segundo',
	            m : 'isang minuto',
	            mm : '%d minuto',
	            h : 'isang oras',
	            hh : '%d oras',
	            d : 'isang araw',
	            dd : '%d araw',
	            M : 'isang buwan',
	            MM : '%d buwan',
	            y : 'isang taon',
	            yy : '%d taon'
	        },
	        ordinalParse: /\d{1,2}/,
	        ordinal : function (number) {
	            return number;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return tl_ph;

	}));

/***/ }),
/* 457 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Klingon (tlh)
	//! author : Dominika Kruk : https://github.com/amaranthrose

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var numbersNouns = 'pagh_wa’_cha’_wej_loS_vagh_jav_Soch_chorgh_Hut'.split('_');

	    function translateFuture(output) {
	        var time = output;
	        time = (output.indexOf('jaj') !== -1) ?
	    	time.slice(0, -3) + 'leS' :
	    	(output.indexOf('jar') !== -1) ?
	    	time.slice(0, -3) + 'waQ' :
	    	(output.indexOf('DIS') !== -1) ?
	    	time.slice(0, -3) + 'nem' :
	    	time + ' pIq';
	        return time;
	    }

	    function translatePast(output) {
	        var time = output;
	        time = (output.indexOf('jaj') !== -1) ?
	    	time.slice(0, -3) + 'Hu’' :
	    	(output.indexOf('jar') !== -1) ?
	    	time.slice(0, -3) + 'wen' :
	    	(output.indexOf('DIS') !== -1) ?
	    	time.slice(0, -3) + 'ben' :
	    	time + ' ret';
	        return time;
	    }

	    function translate(number, withoutSuffix, string, isFuture) {
	        var numberNoun = numberAsNoun(number);
	        switch (string) {
	            case 'mm':
	                return numberNoun + ' tup';
	            case 'hh':
	                return numberNoun + ' rep';
	            case 'dd':
	                return numberNoun + ' jaj';
	            case 'MM':
	                return numberNoun + ' jar';
	            case 'yy':
	                return numberNoun + ' DIS';
	        }
	    }

	    function numberAsNoun(number) {
	        var hundred = Math.floor((number % 1000) / 100),
	    	ten = Math.floor((number % 100) / 10),
	    	one = number % 10,
	    	word = '';
	        if (hundred > 0) {
	            word += numbersNouns[hundred] + 'vatlh';
	        }
	        if (ten > 0) {
	            word += ((word !== '') ? ' ' : '') + numbersNouns[ten] + 'maH';
	        }
	        if (one > 0) {
	            word += ((word !== '') ? ' ' : '') + numbersNouns[one];
	        }
	        return (word === '') ? 'pagh' : word;
	    }

	    var tlh = moment.defineLocale('tlh', {
	        months : 'tera’ jar wa’_tera’ jar cha’_tera’ jar wej_tera’ jar loS_tera’ jar vagh_tera’ jar jav_tera’ jar Soch_tera’ jar chorgh_tera’ jar Hut_tera’ jar wa’maH_tera’ jar wa’maH wa’_tera’ jar wa’maH cha’'.split('_'),
	        monthsShort : 'jar wa’_jar cha’_jar wej_jar loS_jar vagh_jar jav_jar Soch_jar chorgh_jar Hut_jar wa’maH_jar wa’maH wa’_jar wa’maH cha’'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
	        weekdaysShort : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
	        weekdaysMin : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[DaHjaj] LT',
	            nextDay: '[wa’leS] LT',
	            nextWeek: 'LLL',
	            lastDay: '[wa’Hu’] LT',
	            lastWeek: 'LLL',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : translateFuture,
	            past : translatePast,
	            s : 'puS lup',
	            m : 'wa’ tup',
	            mm : translate,
	            h : 'wa’ rep',
	            hh : translate,
	            d : 'wa’ jaj',
	            dd : translate,
	            M : 'wa’ jar',
	            MM : translate,
	            y : 'wa’ DIS',
	            yy : translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return tlh;

	}));

/***/ }),
/* 458 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : turkish (tr)
	//! authors : Erhan Gundogan : https://github.com/erhangundogan,
	//!           Burak Yiğit Kaya: https://github.com/BYK

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var suffixes = {
	        1: '\'inci',
	        5: '\'inci',
	        8: '\'inci',
	        70: '\'inci',
	        80: '\'inci',
	        2: '\'nci',
	        7: '\'nci',
	        20: '\'nci',
	        50: '\'nci',
	        3: '\'üncü',
	        4: '\'üncü',
	        100: '\'üncü',
	        6: '\'ncı',
	        9: '\'uncu',
	        10: '\'uncu',
	        30: '\'uncu',
	        60: '\'ıncı',
	        90: '\'ıncı'
	    };

	    var tr = moment.defineLocale('tr', {
	        months : 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split('_'),
	        monthsShort : 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),
	        weekdays : 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split('_'),
	        weekdaysShort : 'Paz_Pts_Sal_Çar_Per_Cum_Cts'.split('_'),
	        weekdaysMin : 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[bugün saat] LT',
	            nextDay : '[yarın saat] LT',
	            nextWeek : '[haftaya] dddd [saat] LT',
	            lastDay : '[dün] LT',
	            lastWeek : '[geçen hafta] dddd [saat] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s sonra',
	            past : '%s önce',
	            s : 'birkaç saniye',
	            m : 'bir dakika',
	            mm : '%d dakika',
	            h : 'bir saat',
	            hh : '%d saat',
	            d : 'bir gün',
	            dd : '%d gün',
	            M : 'bir ay',
	            MM : '%d ay',
	            y : 'bir yıl',
	            yy : '%d yıl'
	        },
	        ordinalParse: /\d{1,2}'(inci|nci|üncü|ncı|uncu|ıncı)/,
	        ordinal : function (number) {
	            if (number === 0) {  // special case for zero
	                return number + '\'ıncı';
	            }
	            var a = number % 10,
	                b = number % 100 - a,
	                c = number >= 100 ? 100 : null;
	            return number + (suffixes[a] || suffixes[b] || suffixes[c]);
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return tr;

	}));

/***/ }),
/* 459 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : talossan (tzl)
	//! author : Robin van der Vliet : https://github.com/robin0van0der0v with the help of Iustì Canun

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';



	    // After the year there should be a slash and the amount of years since December 26, 1979 in Roman numerals.
	    // This is currently too difficult (maybe even impossible) to add.
	    var tzl = moment.defineLocale('tzl', {
	        months : 'Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar'.split('_'),
	        monthsShort : 'Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec'.split('_'),
	        weekdays : 'Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi'.split('_'),
	        weekdaysShort : 'Súl_Lún_Mai_Már_Xhú_Vié_Sát'.split('_'),
	        weekdaysMin : 'Sú_Lú_Ma_Má_Xh_Vi_Sá'.split('_'),
	        longDateFormat : {
	            LT : 'HH.mm',
	            LTS : 'HH.mm.ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM [dallas] YYYY',
	            LLL : 'D. MMMM [dallas] YYYY HH.mm',
	            LLLL : 'dddd, [li] D. MMMM [dallas] YYYY HH.mm'
	        },
	        meridiemParse: /d\'o|d\'a/i,
	        isPM : function (input) {
	            return 'd\'o' === input.toLowerCase();
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours > 11) {
	                return isLower ? 'd\'o' : 'D\'O';
	            } else {
	                return isLower ? 'd\'a' : 'D\'A';
	            }
	        },
	        calendar : {
	            sameDay : '[oxhi à] LT',
	            nextDay : '[demà à] LT',
	            nextWeek : 'dddd [à] LT',
	            lastDay : '[ieiri à] LT',
	            lastWeek : '[sür el] dddd [lasteu à] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'osprei %s',
	            past : 'ja%s',
	            s : processRelativeTime,
	            m : processRelativeTime,
	            mm : processRelativeTime,
	            h : processRelativeTime,
	            hh : processRelativeTime,
	            d : processRelativeTime,
	            dd : processRelativeTime,
	            M : processRelativeTime,
	            MM : processRelativeTime,
	            y : processRelativeTime,
	            yy : processRelativeTime
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var format = {
	            's': ['viensas secunds', '\'iensas secunds'],
	            'm': ['\'n míut', '\'iens míut'],
	            'mm': [number + ' míuts', '' + number + ' míuts'],
	            'h': ['\'n þora', '\'iensa þora'],
	            'hh': [number + ' þoras', '' + number + ' þoras'],
	            'd': ['\'n ziua', '\'iensa ziua'],
	            'dd': [number + ' ziuas', '' + number + ' ziuas'],
	            'M': ['\'n mes', '\'iens mes'],
	            'MM': [number + ' mesen', '' + number + ' mesen'],
	            'y': ['\'n ar', '\'iens ar'],
	            'yy': [number + ' ars', '' + number + ' ars']
	        };
	        return isFuture ? format[key][0] : (withoutSuffix ? format[key][0] : format[key][1]);
	    }

	    return tzl;

	}));

/***/ }),
/* 460 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Morocco Central Atlas Tamaziɣt (tzm)
	//! author : Abdel Said : https://github.com/abdelsaid

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var tzm = moment.defineLocale('tzm', {
	        months : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),
	        monthsShort : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),
	        weekdays : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
	        weekdaysShort : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
	        weekdaysMin : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[ⴰⵙⴷⵅ ⴴ] LT',
	            nextDay: '[ⴰⵙⴽⴰ ⴴ] LT',
	            nextWeek: 'dddd [ⴴ] LT',
	            lastDay: '[ⴰⵚⴰⵏⵜ ⴴ] LT',
	            lastWeek: 'dddd [ⴴ] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s',
	            past : 'ⵢⴰⵏ %s',
	            s : 'ⵉⵎⵉⴽ',
	            m : 'ⵎⵉⵏⵓⴺ',
	            mm : '%d ⵎⵉⵏⵓⴺ',
	            h : 'ⵙⴰⵄⴰ',
	            hh : '%d ⵜⴰⵙⵙⴰⵄⵉⵏ',
	            d : 'ⴰⵙⵙ',
	            dd : '%d oⵙⵙⴰⵏ',
	            M : 'ⴰⵢoⵓⵔ',
	            MM : '%d ⵉⵢⵢⵉⵔⵏ',
	            y : 'ⴰⵙⴳⴰⵙ',
	            yy : '%d ⵉⵙⴳⴰⵙⵏ'
	        },
	        week : {
	            dow : 6, // Saturday is the first day of the week.
	            doy : 12  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return tzm;

	}));

/***/ }),
/* 461 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Morocco Central Atlas Tamaziɣt in Latin (tzm-latn)
	//! author : Abdel Said : https://github.com/abdelsaid

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var tzm_latn = moment.defineLocale('tzm-latn', {
	        months : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),
	        monthsShort : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),
	        weekdays : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
	        weekdaysShort : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
	        weekdaysMin : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[asdkh g] LT',
	            nextDay: '[aska g] LT',
	            nextWeek: 'dddd [g] LT',
	            lastDay: '[assant g] LT',
	            lastWeek: 'dddd [g] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'dadkh s yan %s',
	            past : 'yan %s',
	            s : 'imik',
	            m : 'minuḍ',
	            mm : '%d minuḍ',
	            h : 'saɛa',
	            hh : '%d tassaɛin',
	            d : 'ass',
	            dd : '%d ossan',
	            M : 'ayowr',
	            MM : '%d iyyirn',
	            y : 'asgas',
	            yy : '%d isgasn'
	        },
	        week : {
	            dow : 6, // Saturday is the first day of the week.
	            doy : 12  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return tzm_latn;

	}));

/***/ }),
/* 462 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : ukrainian (uk)
	//! author : zemlanin : https://github.com/zemlanin
	//! Author : Menelion Elensúle : https://github.com/Oire

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function plural(word, num) {
	        var forms = word.split('_');
	        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
	    }
	    function relativeTimeWithPlural(number, withoutSuffix, key) {
	        var format = {
	            'mm': withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',
	            'hh': withoutSuffix ? 'година_години_годин' : 'годину_години_годин',
	            'dd': 'день_дні_днів',
	            'MM': 'місяць_місяці_місяців',
	            'yy': 'рік_роки_років'
	        };
	        if (key === 'm') {
	            return withoutSuffix ? 'хвилина' : 'хвилину';
	        }
	        else if (key === 'h') {
	            return withoutSuffix ? 'година' : 'годину';
	        }
	        else {
	            return number + ' ' + plural(format[key], +number);
	        }
	    }
	    function weekdaysCaseReplace(m, format) {
	        var weekdays = {
	            'nominative': 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split('_'),
	            'accusative': 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split('_'),
	            'genitive': 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split('_')
	        },
	        nounCase = (/(\[[ВвУу]\]) ?dddd/).test(format) ?
	            'accusative' :
	            ((/\[?(?:минулої|наступної)? ?\] ?dddd/).test(format) ?
	                'genitive' :
	                'nominative');
	        return weekdays[nounCase][m.day()];
	    }
	    function processHoursFunction(str) {
	        return function () {
	            return str + 'о' + (this.hours() === 11 ? 'б' : '') + '] LT';
	        };
	    }

	    var uk = moment.defineLocale('uk', {
	        months : {
	            'format': 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split('_'),
	            'standalone': 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split('_')
	        },
	        monthsShort : 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split('_'),
	        weekdays : weekdaysCaseReplace,
	        weekdaysShort : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
	        weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY р.',
	            LLL : 'D MMMM YYYY р., HH:mm',
	            LLLL : 'dddd, D MMMM YYYY р., HH:mm'
	        },
	        calendar : {
	            sameDay: processHoursFunction('[Сьогодні '),
	            nextDay: processHoursFunction('[Завтра '),
	            lastDay: processHoursFunction('[Вчора '),
	            nextWeek: processHoursFunction('[У] dddd ['),
	            lastWeek: function () {
	                switch (this.day()) {
	                case 0:
	                case 3:
	                case 5:
	                case 6:
	                    return processHoursFunction('[Минулої] dddd [').call(this);
	                case 1:
	                case 2:
	                case 4:
	                    return processHoursFunction('[Минулого] dddd [').call(this);
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'за %s',
	            past : '%s тому',
	            s : 'декілька секунд',
	            m : relativeTimeWithPlural,
	            mm : relativeTimeWithPlural,
	            h : 'годину',
	            hh : relativeTimeWithPlural,
	            d : 'день',
	            dd : relativeTimeWithPlural,
	            M : 'місяць',
	            MM : relativeTimeWithPlural,
	            y : 'рік',
	            yy : relativeTimeWithPlural
	        },
	        // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason
	        meridiemParse: /ночі|ранку|дня|вечора/,
	        isPM: function (input) {
	            return /^(дня|вечора)$/.test(input);
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'ночі';
	            } else if (hour < 12) {
	                return 'ранку';
	            } else if (hour < 17) {
	                return 'дня';
	            } else {
	                return 'вечора';
	            }
	        },
	        ordinalParse: /\d{1,2}-(й|го)/,
	        ordinal: function (number, period) {
	            switch (period) {
	            case 'M':
	            case 'd':
	            case 'DDD':
	            case 'w':
	            case 'W':
	                return number + '-й';
	            case 'D':
	                return number + '-го';
	            default:
	                return number;
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return uk;

	}));

/***/ }),
/* 463 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : uzbek (uz)
	//! author : Sardor Muminov : https://github.com/muminoff

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var uz = moment.defineLocale('uz', {
	        months : 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split('_'),
	        monthsShort : 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),
	        weekdays : 'Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба'.split('_'),
	        weekdaysShort : 'Якш_Душ_Сеш_Чор_Пай_Жум_Шан'.split('_'),
	        weekdaysMin : 'Як_Ду_Се_Чо_Па_Жу_Ша'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'D MMMM YYYY, dddd HH:mm'
	        },
	        calendar : {
	            sameDay : '[Бугун соат] LT [да]',
	            nextDay : '[Эртага] LT [да]',
	            nextWeek : 'dddd [куни соат] LT [да]',
	            lastDay : '[Кеча соат] LT [да]',
	            lastWeek : '[Утган] dddd [куни соат] LT [да]',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'Якин %s ичида',
	            past : 'Бир неча %s олдин',
	            s : 'фурсат',
	            m : 'бир дакика',
	            mm : '%d дакика',
	            h : 'бир соат',
	            hh : '%d соат',
	            d : 'бир кун',
	            dd : '%d кун',
	            M : 'бир ой',
	            MM : '%d ой',
	            y : 'бир йил',
	            yy : '%d йил'
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return uz;

	}));

/***/ }),
/* 464 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : vietnamese (vi)
	//! author : Bang Nguyen : https://github.com/bangnk

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var vi = moment.defineLocale('vi', {
	        months : 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split('_'),
	        monthsShort : 'Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split('_'),
	        weekdaysShort : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
	        weekdaysMin : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
	        weekdaysParseExact : true,
	        meridiemParse: /sa|ch/i,
	        isPM : function (input) {
	            return /^ch$/i.test(input);
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 12) {
	                return isLower ? 'sa' : 'SA';
	            } else {
	                return isLower ? 'ch' : 'CH';
	            }
	        },
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM [năm] YYYY',
	            LLL : 'D MMMM [năm] YYYY HH:mm',
	            LLLL : 'dddd, D MMMM [năm] YYYY HH:mm',
	            l : 'DD/M/YYYY',
	            ll : 'D MMM YYYY',
	            lll : 'D MMM YYYY HH:mm',
	            llll : 'ddd, D MMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Hôm nay lúc] LT',
	            nextDay: '[Ngày mai lúc] LT',
	            nextWeek: 'dddd [tuần tới lúc] LT',
	            lastDay: '[Hôm qua lúc] LT',
	            lastWeek: 'dddd [tuần rồi lúc] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : '%s tới',
	            past : '%s trước',
	            s : 'vài giây',
	            m : 'một phút',
	            mm : '%d phút',
	            h : 'một giờ',
	            hh : '%d giờ',
	            d : 'một ngày',
	            dd : '%d ngày',
	            M : 'một tháng',
	            MM : '%d tháng',
	            y : 'một năm',
	            yy : '%d năm'
	        },
	        ordinalParse: /\d{1,2}/,
	        ordinal : function (number) {
	            return number;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return vi;

	}));

/***/ }),
/* 465 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : pseudo (x-pseudo)
	//! author : Andrew Hood : https://github.com/andrewhood125

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var x_pseudo = moment.defineLocale('x-pseudo', {
	        months : 'J~áñúá~rý_F~ébrú~árý_~Márc~h_Áp~ríl_~Máý_~Júñé~_Júl~ý_Áú~gúst~_Sép~témb~ér_Ó~ctób~ér_Ñ~óvém~bér_~Décé~mbér'.split('_'),
	        monthsShort : 'J~áñ_~Féb_~Már_~Ápr_~Máý_~Júñ_~Júl_~Áúg_~Sép_~Óct_~Ñóv_~Déc'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'S~úñdá~ý_Mó~ñdáý~_Túé~sdáý~_Wéd~ñésd~áý_T~húrs~dáý_~Fríd~áý_S~átúr~dáý'.split('_'),
	        weekdaysShort : 'S~úñ_~Móñ_~Túé_~Wéd_~Thú_~Frí_~Sát'.split('_'),
	        weekdaysMin : 'S~ú_Mó~_Tú_~Wé_T~h_Fr~_Sá'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[T~ódá~ý át] LT',
	            nextDay : '[T~ómó~rró~w át] LT',
	            nextWeek : 'dddd [át] LT',
	            lastDay : '[Ý~ést~érdá~ý át] LT',
	            lastWeek : '[L~ást] dddd [át] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'í~ñ %s',
	            past : '%s á~gó',
	            s : 'á ~féw ~sécó~ñds',
	            m : 'á ~míñ~úté',
	            mm : '%d m~íñú~tés',
	            h : 'á~ñ hó~úr',
	            hh : '%d h~óúrs',
	            d : 'á ~dáý',
	            dd : '%d d~áýs',
	            M : 'á ~móñ~th',
	            MM : '%d m~óñt~hs',
	            y : 'á ~ýéár',
	            yy : '%d ý~éárs'
	        },
	        ordinalParse: /\d{1,2}(th|st|nd|rd)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (~~(number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return x_pseudo;

	}));

/***/ }),
/* 466 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : chinese (zh-cn)
	//! author : suupic : https://github.com/suupic
	//! author : Zeno Zeng : https://github.com/zenozeng

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var zh_cn = moment.defineLocale('zh-cn', {
	        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
	        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
	        weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
	        weekdaysShort : '周日_周一_周二_周三_周四_周五_周六'.split('_'),
	        weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
	        longDateFormat : {
	            LT : 'Ah点mm分',
	            LTS : 'Ah点m分s秒',
	            L : 'YYYY-MM-DD',
	            LL : 'YYYY年MMMD日',
	            LLL : 'YYYY年MMMD日Ah点mm分',
	            LLLL : 'YYYY年MMMD日ddddAh点mm分',
	            l : 'YYYY-MM-DD',
	            ll : 'YYYY年MMMD日',
	            lll : 'YYYY年MMMD日Ah点mm分',
	            llll : 'YYYY年MMMD日ddddAh点mm分'
	        },
	        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
	        meridiemHour: function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === '凌晨' || meridiem === '早上' ||
	                    meridiem === '上午') {
	                return hour;
	            } else if (meridiem === '下午' || meridiem === '晚上') {
	                return hour + 12;
	            } else {
	                // '中午'
	                return hour >= 11 ? hour : hour + 12;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            var hm = hour * 100 + minute;
	            if (hm < 600) {
	                return '凌晨';
	            } else if (hm < 900) {
	                return '早上';
	            } else if (hm < 1130) {
	                return '上午';
	            } else if (hm < 1230) {
	                return '中午';
	            } else if (hm < 1800) {
	                return '下午';
	            } else {
	                return '晚上';
	            }
	        },
	        calendar : {
	            sameDay : function () {
	                return this.minutes() === 0 ? '[今天]Ah[点整]' : '[今天]LT';
	            },
	            nextDay : function () {
	                return this.minutes() === 0 ? '[明天]Ah[点整]' : '[明天]LT';
	            },
	            lastDay : function () {
	                return this.minutes() === 0 ? '[昨天]Ah[点整]' : '[昨天]LT';
	            },
	            nextWeek : function () {
	                var startOfWeek, prefix;
	                startOfWeek = moment().startOf('week');
	                prefix = this.diff(startOfWeek, 'days') >= 7 ? '[下]' : '[本]';
	                return this.minutes() === 0 ? prefix + 'dddAh点整' : prefix + 'dddAh点mm';
	            },
	            lastWeek : function () {
	                var startOfWeek, prefix;
	                startOfWeek = moment().startOf('week');
	                prefix = this.unix() < startOfWeek.unix()  ? '[上]' : '[本]';
	                return this.minutes() === 0 ? prefix + 'dddAh点整' : prefix + 'dddAh点mm';
	            },
	            sameElse : 'LL'
	        },
	        ordinalParse: /\d{1,2}(日|月|周)/,
	        ordinal : function (number, period) {
	            switch (period) {
	            case 'd':
	            case 'D':
	            case 'DDD':
	                return number + '日';
	            case 'M':
	                return number + '月';
	            case 'w':
	            case 'W':
	                return number + '周';
	            default:
	                return number;
	            }
	        },
	        relativeTime : {
	            future : '%s内',
	            past : '%s前',
	            s : '几秒',
	            m : '1 分钟',
	            mm : '%d 分钟',
	            h : '1 小时',
	            hh : '%d 小时',
	            d : '1 天',
	            dd : '%d 天',
	            M : '1 个月',
	            MM : '%d 个月',
	            y : '1 年',
	            yy : '%d 年'
	        },
	        week : {
	            // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return zh_cn;

	}));

/***/ }),
/* 467 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : traditional chinese (zh-tw)
	//! author : Ben : https://github.com/ben-lin

	;(function (global, factory) {
	    true ? factory(__webpack_require__(366)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var zh_tw = moment.defineLocale('zh-tw', {
	        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
	        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
	        weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
	        weekdaysShort : '週日_週一_週二_週三_週四_週五_週六'.split('_'),
	        weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
	        longDateFormat : {
	            LT : 'Ah點mm分',
	            LTS : 'Ah點m分s秒',
	            L : 'YYYY年MMMD日',
	            LL : 'YYYY年MMMD日',
	            LLL : 'YYYY年MMMD日Ah點mm分',
	            LLLL : 'YYYY年MMMD日ddddAh點mm分',
	            l : 'YYYY年MMMD日',
	            ll : 'YYYY年MMMD日',
	            lll : 'YYYY年MMMD日Ah點mm分',
	            llll : 'YYYY年MMMD日ddddAh點mm分'
	        },
	        meridiemParse: /早上|上午|中午|下午|晚上/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === '早上' || meridiem === '上午') {
	                return hour;
	            } else if (meridiem === '中午') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === '下午' || meridiem === '晚上') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            var hm = hour * 100 + minute;
	            if (hm < 900) {
	                return '早上';
	            } else if (hm < 1130) {
	                return '上午';
	            } else if (hm < 1230) {
	                return '中午';
	            } else if (hm < 1800) {
	                return '下午';
	            } else {
	                return '晚上';
	            }
	        },
	        calendar : {
	            sameDay : '[今天]LT',
	            nextDay : '[明天]LT',
	            nextWeek : '[下]ddddLT',
	            lastDay : '[昨天]LT',
	            lastWeek : '[上]ddddLT',
	            sameElse : 'L'
	        },
	        ordinalParse: /\d{1,2}(日|月|週)/,
	        ordinal : function (number, period) {
	            switch (period) {
	            case 'd' :
	            case 'D' :
	            case 'DDD' :
	                return number + '日';
	            case 'M' :
	                return number + '月';
	            case 'w' :
	            case 'W' :
	                return number + '週';
	            default :
	                return number;
	            }
	        },
	        relativeTime : {
	            future : '%s內',
	            past : '%s前',
	            s : '幾秒',
	            m : '1分鐘',
	            mm : '%d分鐘',
	            h : '1小時',
	            hh : '%d小時',
	            d : '1天',
	            dd : '%d天',
	            M : '1個月',
	            MM : '%d個月',
	            y : '1年',
	            yy : '%d年'
	        }
	    });

	    return zh_tw;

	}));

/***/ }),
/* 468 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var __metadata = (this && this.__metadata) || function (k, v) {
	    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
	};
	var core_1 = __webpack_require__(2);
	var common_1 = __webpack_require__(182);
	var ng2_bootstrap_config_1 = __webpack_require__(359);
	var datepicker_inner_component_1 = __webpack_require__(364);
	// write an interface for template options
	var TEMPLATE_OPTIONS = (_a = {},
	    _a[ng2_bootstrap_config_1.Ng2BootstrapTheme.BS4] = {
	        DAY_TITLE: "\n        <th *ngFor=\"let labelz of labels\" class=\"text-xs-center\"><small aria-label=\"labelz.full\"><b>{{labelz.abbr}}</b></small></th>\n    ",
	        WEEK_ROW: "\n        <td *ngIf=\"datePicker.showWeeks\" class=\"text-xs-center h6\"><em>{{ weekNumbers[index] }}</em></td>\n        <td *ngFor=\"let dtz of rowz\" class=\"text-xs-center\" role=\"gridcell\" [id]=\"dtz.uid\">\n          <button type=\"button\" style=\"min-width:100%;\" class=\"btn btn-sm {{dtz.customClass}}\"\n                  *ngIf=\"!(datePicker.onlyCurrentMonth && dtz.secondary)\"\n                  [ngClass]=\"{'btn-secondary': !dtz.selected && !datePicker.isActive(dtz), 'btn-info': dtz.selected, disabled: dtz.disabled}\"\n                  [disabled]=\"dtz.disabled\"\n                  (click)=\"datePicker.select(dtz.date)\" tabindex=\"-1\">\n            <span [ngClass]=\"{'text-muted': dtz.secondary || dtz.current}\">{{dtz.label}}</span>\n          </button>\n        </td>\n    ",
	        ARROW_LEFT: '&lt;',
	        ARROW_RIGHT: '&gt;'
	    },
	    _a[ng2_bootstrap_config_1.Ng2BootstrapTheme.BS3] = {
	        DAY_TITLE: "\n        <th *ngFor=\"let labelz of labels\" class=\"text-center\"><small aria-label=\"labelz.full\"><b>{{labelz.abbr}}</b></small></th>\n    ",
	        WEEK_ROW: "\n        <td *ngIf=\"datePicker.showWeeks\" class=\"text-center h6\"><em>{{ weekNumbers[index] }}</em></td>\n        <td *ngFor=\"let dtz of rowz\" class=\"text-center\" role=\"gridcell\" [id]=\"dtz.uid\">\n          <button type=\"button\" style=\"min-width:100%;\" class=\"btn btn-default btn-sm {{dtz.customClass}}\"\n                  *ngIf=\"!(datePicker.onlyCurrentMonth && dtz.secondary)\"\n                  [ngClass]=\"{'btn-info': dtz.selected, active: datePicker.isActive(dtz), disabled: dtz.disabled}\"\n                  [disabled]=\"dtz.disabled\"\n                  (click)=\"datePicker.select(dtz.date)\" tabindex=\"-1\">\n            <span [ngClass]=\"{'text-muted': dtz.secondary, 'text-info': dtz.current}\">{{dtz.label}}</span>\n          </button>\n        </td>\n    ",
	        ARROW_LEFT: "\n    <i class=\"glyphicon glyphicon-chevron-left\"></i>\n    ",
	        ARROW_RIGHT: "\n    <i class=\"glyphicon glyphicon-chevron-right\"></i>\n    "
	    },
	    _a
	);
	var CURRENT_THEME_TEMPLATE = TEMPLATE_OPTIONS[ng2_bootstrap_config_1.Ng2BootstrapConfig.theme || ng2_bootstrap_config_1.Ng2BootstrapTheme.BS3];
	var DayPickerComponent = (function () {
	    function DayPickerComponent(datePicker) {
	        this.labels = [];
	        this.rows = [];
	        this.weekNumbers = [];
	        this.datePicker = datePicker;
	    }
	    /*private getDaysInMonth(year:number, month:number) {
	     return ((month === 1) && (year % 4 === 0) &&
	     ((year % 100 !== 0) || (year % 400 === 0))) ? 29 : DAYS_IN_MONTH[month];
	     }*/
	    DayPickerComponent.prototype.ngOnInit = function () {
	        var self = this;
	        this.datePicker.stepDay = { months: 1 };
	        this.datePicker.setRefreshViewHandler(function () {
	            var year = this.activeDate.getFullYear();
	            var month = this.activeDate.getMonth();
	            var firstDayOfMonth = new Date(year, month, 1);
	            var difference = this.startingDay - firstDayOfMonth.getDay();
	            var numDisplayedFromPreviousMonth = (difference > 0)
	                ? 7 - difference
	                : -difference;
	            var firstDate = new Date(firstDayOfMonth.getTime());
	            if (numDisplayedFromPreviousMonth > 0) {
	                firstDate.setDate(-numDisplayedFromPreviousMonth + 1);
	            }
	            // 42 is the number of days on a six-week calendar
	            var _days = self.getDates(firstDate, 42);
	            var days = [];
	            for (var i = 0; i < 42; i++) {
	                var _dateObject = this.createDateObject(_days[i], this.formatDay);
	                _dateObject.secondary = _days[i].getMonth() !== month;
	                _dateObject.uid = this.uniqueId + '-' + i;
	                days[i] = _dateObject;
	            }
	            self.labels = [];
	            for (var j = 0; j < 7; j++) {
	                self.labels[j] = {};
	                self.labels[j].abbr = this.dateFilter(days[j].date, this.formatDayHeader);
	                self.labels[j].full = this.dateFilter(days[j].date, 'EEEE');
	            }
	            self.title = this.dateFilter(this.activeDate, this.formatDayTitle);
	            self.rows = this.split(days, 7);
	            if (this.showWeeks) {
	                self.weekNumbers = [];
	                var thursdayIndex = (4 + 7 - this.startingDay) % 7;
	                var numWeeks = self.rows.length;
	                for (var curWeek = 0; curWeek < numWeeks; curWeek++) {
	                    self.weekNumbers.push(self.getISO8601WeekNumber(self.rows[curWeek][thursdayIndex].date));
	                }
	            }
	        }, 'day');
	        this.datePicker.setCompareHandler(function (date1, date2) {
	            var d1 = new Date(date1.getFullYear(), date1.getMonth(), date1.getDate());
	            var d2 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate());
	            return d1.getTime() - d2.getTime();
	        }, 'day');
	        this.datePicker.refreshView();
	    };
	    DayPickerComponent.prototype.getDates = function (startDate, n) {
	        var dates = new Array(n);
	        var current = new Date(startDate.getTime());
	        var i = 0;
	        var date;
	        while (i < n) {
	            date = new Date(current.getTime());
	            date = this.datePicker.fixTimeZone(date);
	            dates[i++] = date;
	            current = new Date(current.getFullYear(), current.getMonth(), current.getDate() + 1);
	        }
	        return dates;
	    };
	    DayPickerComponent.prototype.getISO8601WeekNumber = function (date) {
	        var checkDate = new Date(date.getTime());
	        // Thursday
	        checkDate.setDate(checkDate.getDate() + 4 - (checkDate.getDay() || 7));
	        var time = checkDate.getTime();
	        // Compare with Jan 1
	        checkDate.setMonth(0);
	        checkDate.setDate(1);
	        return Math.floor(Math.round((time - checkDate.getTime()) / 86400000) / 7) + 1;
	    };
	    DayPickerComponent = __decorate([
	        core_1.Component({
	            selector: 'daypicker',
	            template: "\n<table *ngIf=\"datePicker.datepickerMode==='day'\" role=\"grid\" aria-labelledby=\"uniqueId+'-title'\" aria-activedescendant=\"activeDateId\">\n  <thead>\n    <tr>\n      <th>\n        <button type=\"button\" class=\"btn btn-default btn-secondary btn-sm pull-left\" (click)=\"datePicker.move(-1)\" tabindex=\"-1\">\n        " + CURRENT_THEME_TEMPLATE.ARROW_LEFT + "\n        </button>\n      </th>\n      <th [attr.colspan]=\"5 + datePicker.showWeeks\">\n        <button [id]=\"datePicker.uniqueId + '-title'\"\n                type=\"button\" class=\"btn btn-default btn-secondary btn-sm\"\n                (click)=\"datePicker.toggleMode()\"\n                [disabled]=\"datePicker.datepickerMode === datePicker.maxMode\"\n                [ngClass]=\"{disabled: datePicker.datepickerMode === datePicker.maxMode}\" tabindex=\"-1\" style=\"width:100%;\">\n          <strong>{{title}}</strong>\n        </button>\n      </th>\n      <th>\n        <button type=\"button\" class=\"btn btn-default btn-secondary btn-sm pull-right\" (click)=\"datePicker.move(1)\" tabindex=\"-1\">\n        " + CURRENT_THEME_TEMPLATE.ARROW_RIGHT + "\n        </button>\n      </th>\n    </tr>\n    <tr>\n      <th *ngIf=\"datePicker.showWeeks\"></th>\n      " + CURRENT_THEME_TEMPLATE.DAY_TITLE + "\n    </tr>\n  </thead>\n  <tbody>\n    <template ngFor [ngForOf]=\"rows\" let-rowz=\"$implicit\" let-index=\"index\">\n      <tr *ngIf=\"!(datePicker.onlyCurrentMonth && rowz[0].secondary && rowz[6].secondary)\">\n        " + CURRENT_THEME_TEMPLATE.WEEK_ROW + "\n      </tr>\n    </template>\n  </tbody>\n</table>\n  ",
	            directives: [common_1.FORM_DIRECTIVES, common_1.CORE_DIRECTIVES, common_1.NgClass]
	        }), 
	        __metadata('design:paramtypes', [datepicker_inner_component_1.DatePickerInnerComponent])
	    ], DayPickerComponent);
	    return DayPickerComponent;
	}());
	exports.DayPickerComponent = DayPickerComponent;
	var _a;


/***/ }),
/* 469 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var __metadata = (this && this.__metadata) || function (k, v) {
	    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
	};
	var core_1 = __webpack_require__(2);
	var common_1 = __webpack_require__(182);
	var datepicker_inner_component_1 = __webpack_require__(364);
	var ng2_bootstrap_config_1 = __webpack_require__(359);
	// write an interface for template options
	var TEMPLATE_OPTIONS = {
	    bs4: {
	        MONTH_BUTTON: "\n        <button type=\"button\" style=\"min-width:100%;\" class=\"btn btn-default\"\n                [ngClass]=\"{'btn-info': dtz.selected, 'btn-link': !dtz.selected && !datePicker.isActive(dtz), 'btn-info': !dtz.selected && datePicker.isActive(dtz), disabled: dtz.disabled}\"\n                [disabled]=\"dtz.disabled\"\n                (click)=\"datePicker.select(dtz.date)\" tabindex=\"-1\"><span [ngClass]=\"{'text-success': dtz.current}\">{{dtz.label}}</span></button>\n    "
	    },
	    bs3: {
	        MONTH_BUTTON: "\n        <button type=\"button\" style=\"min-width:100%;\" class=\"btn btn-default\"\n                [ngClass]=\"{'btn-info': dtz.selected, active: datePicker.isActive(dtz), disabled: dtz.disabled}\"\n                [disabled]=\"dtz.disabled\"\n                (click)=\"datePicker.select(dtz.date)\" tabindex=\"-1\"><span [ngClass]=\"{'text-info': dtz.current}\">{{dtz.label}}</span></button>\n    "
	    }
	};
	var CURRENT_THEME_TEMPLATE = TEMPLATE_OPTIONS[ng2_bootstrap_config_1.Ng2BootstrapConfig.theme] || TEMPLATE_OPTIONS.bs3;
	var MonthPickerComponent = (function () {
	    function MonthPickerComponent(datePicker) {
	        this.rows = [];
	        this.datePicker = datePicker;
	    }
	    MonthPickerComponent.prototype.ngOnInit = function () {
	        var self = this;
	        this.datePicker.stepMonth = { years: 1 };
	        this.datePicker.setRefreshViewHandler(function () {
	            var months = new Array(12);
	            var year = this.activeDate.getFullYear();
	            var date;
	            for (var i = 0; i < 12; i++) {
	                date = new Date(year, i, 1);
	                date = this.fixTimeZone(date);
	                months[i] = this.createDateObject(date, this.formatMonth);
	                months[i].uid = this.uniqueId + '-' + i;
	            }
	            self.title = this.dateFilter(this.activeDate, this.formatMonthTitle);
	            self.rows = this.split(months, 3);
	        }, 'month');
	        this.datePicker.setCompareHandler(function (date1, date2) {
	            var d1 = new Date(date1.getFullYear(), date1.getMonth());
	            var d2 = new Date(date2.getFullYear(), date2.getMonth());
	            return d1.getTime() - d2.getTime();
	        }, 'month');
	        this.datePicker.refreshView();
	    };
	    MonthPickerComponent = __decorate([
	        core_1.Component({
	            selector: 'monthpicker',
	            template: "\n<table *ngIf=\"datePicker.datepickerMode==='month'\" role=\"grid\">\n  <thead>\n    <tr>\n      <th>\n        <button type=\"button\" class=\"btn btn-default btn-sm pull-left\"\n                (click)=\"datePicker.move(-1)\" tabindex=\"-1\">\n          <i class=\"glyphicon glyphicon-chevron-left\"></i>\n        </button></th>\n      <th>\n        <button [id]=\"uniqueId + '-title'\"\n                type=\"button\" class=\"btn btn-default btn-sm\"\n                (click)=\"datePicker.toggleMode()\"\n                [disabled]=\"datePicker.datepickerMode === maxMode\"\n                [ngClass]=\"{disabled: datePicker.datepickerMode === maxMode}\" tabindex=\"-1\" style=\"width:100%;\">\n          <strong>{{title}}</strong>\n        </button>\n      </th>\n      <th>\n        <button type=\"button\" class=\"btn btn-default btn-sm pull-right\"\n                (click)=\"datePicker.move(1)\" tabindex=\"-1\">\n          <i class=\"glyphicon glyphicon-chevron-right\"></i>\n        </button>\n      </th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let rowz of rows\">\n      <td *ngFor=\"let dtz of rowz\" class=\"text-center\" role=\"gridcell\" id=\"{{dtz.uid}}\" [ngClass]=\"dtz.customClass\">\n        " + CURRENT_THEME_TEMPLATE.MONTH_BUTTON + "\n      </td>\n    </tr>\n  </tbody>\n</table>\n  ",
	            directives: [common_1.FORM_DIRECTIVES, common_1.CORE_DIRECTIVES, common_1.NgClass]
	        }), 
	        __metadata('design:paramtypes', [datepicker_inner_component_1.DatePickerInnerComponent])
	    ], MonthPickerComponent);
	    return MonthPickerComponent;
	}());
	exports.MonthPickerComponent = MonthPickerComponent;


/***/ }),
/* 470 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var __metadata = (this && this.__metadata) || function (k, v) {
	    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
	};
	var core_1 = __webpack_require__(2);
	var common_1 = __webpack_require__(182);
	var ng2_bootstrap_config_1 = __webpack_require__(359);
	var datepicker_inner_component_1 = __webpack_require__(364);
	// write an interface for template options
	var TEMPLATE_OPTIONS = {
	    bs4: {
	        YEAR_BUTTON: "\n        <button type=\"button\" style=\"min-width:100%;\" class=\"btn btn-default\"\n                [ngClass]=\"{'btn-info': dtz.selected, 'btn-link': !dtz.selected && !datePicker.isActive(dtz), 'btn-info': !dtz.selected && datePicker.isActive(dtz), disabled: dtz.disabled}\"\n                [disabled]=\"dtz.disabled\"\n                (click)=\"datePicker.select(dtz.date)\" tabindex=\"-1\">\n          <span [ngClass]=\"{'text-success': dtz.current}\">{{dtz.label}}</span>\n        </button>\n    "
	    },
	    bs3: {
	        YEAR_BUTTON: "\n        <button type=\"button\" style=\"min-width:100%;\" class=\"btn btn-default\"\n                [ngClass]=\"{'btn-info': dtz.selected, active: datePicker.isActive(dtz), disabled: dtz.disabled}\"\n                [disabled]=\"dtz.disabled\"\n                (click)=\"datePicker.select(dtz.date)\" tabindex=\"-1\">\n          <span [ngClass]=\"{'text-info': dtz.current}\">{{dtz.label}}</span>\n        </button>\n    "
	    }
	};
	var CURRENT_THEME_TEMPLATE = TEMPLATE_OPTIONS[ng2_bootstrap_config_1.Ng2BootstrapConfig.theme] || TEMPLATE_OPTIONS.bs3;
	var YearPickerComponent = (function () {
	    function YearPickerComponent(datePicker) {
	        this.rows = [];
	        this.datePicker = datePicker;
	    }
	    YearPickerComponent.prototype.ngOnInit = function () {
	        var self = this;
	        this.datePicker.stepYear = { years: this.datePicker.yearRange };
	        this.datePicker.setRefreshViewHandler(function () {
	            var years = new Array(this.yearRange);
	            var date;
	            var start = self.getStartingYear(this.activeDate.getFullYear());
	            for (var i = 0; i < this.yearRange; i++) {
	                date = new Date(start + i, 0, 1);
	                date = this.fixTimeZone(date);
	                years[i] = this.createDateObject(date, this.formatYear);
	                years[i].uid = this.uniqueId + '-' + i;
	            }
	            self.title = [years[0].label,
	                years[this.yearRange - 1].label].join(' - ');
	            self.rows = this.split(years, 5);
	        }, 'year');
	        this.datePicker.setCompareHandler(function (date1, date2) {
	            return date1.getFullYear() - date2.getFullYear();
	        }, 'year');
	        this.datePicker.refreshView();
	    };
	    YearPickerComponent.prototype.getStartingYear = function (year) {
	        // todo: parseInt
	        return ((year - 1) / this.datePicker.yearRange) * this.datePicker.yearRange + 1;
	    };
	    YearPickerComponent = __decorate([
	        core_1.Component({
	            selector: 'yearpicker',
	            template: "\n<table *ngIf=\"datePicker.datepickerMode==='year'\" role=\"grid\">\n  <thead>\n    <tr>\n      <th>\n        <button type=\"button\" class=\"btn btn-default btn-sm pull-left\"\n                (click)=\"datePicker.move(-1)\" tabindex=\"-1\">\n          <i class=\"glyphicon glyphicon-chevron-left\"></i>\n        </button>\n      </th>\n      <th colspan=\"3\">\n        <button [id]=\"uniqueId + '-title'\" role=\"heading\"\n                type=\"button\" class=\"btn btn-default btn-sm\"\n                (click)=\"datePicker.toggleMode()\"\n                [disabled]=\"datePicker.datepickerMode === datePicker.maxMode\"\n                [ngClass]=\"{disabled: datePicker.datepickerMode === datePicker.maxMode}\" tabindex=\"-1\" style=\"width:100%;\">\n          <strong>{{title}}</strong>\n        </button>\n      </th>\n      <th>\n        <button type=\"button\" class=\"btn btn-default btn-sm pull-right\"\n                (click)=\"datePicker.move(1)\" tabindex=\"-1\">\n          <i class=\"glyphicon glyphicon-chevron-right\"></i>\n        </button>\n      </th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let rowz of rows\">\n      <td *ngFor=\"let dtz of rowz\" class=\"text-center\" role=\"gridcell\">\n      " + CURRENT_THEME_TEMPLATE.YEAR_BUTTON + "\n      </td>\n    </tr>\n  </tbody>\n</table>\n  ",
	            directives: [common_1.FORM_DIRECTIVES, common_1.CORE_DIRECTIVES, common_1.NgClass]
	        }), 
	        __metadata('design:paramtypes', [datepicker_inner_component_1.DatePickerInnerComponent])
	    ], YearPickerComponent);
	    return YearPickerComponent;
	}());
	exports.YearPickerComponent = YearPickerComponent;


/***/ }),
/* 471 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var dropdown_directive_1 = __webpack_require__(472);
	var dropdown_menu_directive_1 = __webpack_require__(474);
	var dropdown_toggle_directive_1 = __webpack_require__(475);
	var dropdown_directive_2 = __webpack_require__(472);
	exports.DropdownDirective = dropdown_directive_2.DropdownDirective;
	var dropdown_menu_directive_2 = __webpack_require__(474);
	exports.DropdownMenuDirective = dropdown_menu_directive_2.DropdownMenuDirective;
	var dropdown_toggle_directive_2 = __webpack_require__(475);
	exports.DropdownToggleDirective = dropdown_toggle_directive_2.DropdownToggleDirective;
	exports.DROPDOWN_DIRECTIVES = [dropdown_directive_1.DropdownDirective, dropdown_toggle_directive_1.DropdownToggleDirective, dropdown_menu_directive_1.DropdownMenuDirective];


/***/ }),
/* 472 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var __metadata = (this && this.__metadata) || function (k, v) {
	    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
	};
	var core_1 = __webpack_require__(2);
	var dropdown_service_1 = __webpack_require__(473);
	var DropdownDirective = (function () {
	    function DropdownDirective(el) {
	        this.onToggle = new core_1.EventEmitter(false);
	        this.isOpenChange = new core_1.EventEmitter(false);
	        this.addClass = true;
	        // @Query('dropdownMenu', {descendants: false})
	        // dropdownMenuList:QueryList<ElementRef>) {
	        this.el = el;
	        // todo: bind to route change event
	    }
	    Object.defineProperty(DropdownDirective.prototype, "isOpen", {
	        get: function () {
	            return this._isOpen;
	        },
	        set: function (value) {
	            this._isOpen = !!value;
	            // todo: implement after porting position
	            // if (this.appendToBody && this.menuEl) {
	            //
	            // }
	            // todo: $animate open<->close transitions, as soon as ng2Animate will be
	            // ready
	            if (this.isOpen) {
	                this.focusToggleElement();
	                dropdown_service_1.dropdownService.open(this);
	            }
	            else {
	                dropdown_service_1.dropdownService.close(this);
	                this.selectedOption = void 0;
	            }
	            this.onToggle.emit(this.isOpen);
	            this.isOpenChange.emit(this.isOpen);
	            // todo: implement call to setIsOpen if set and function
	        },
	        enumerable: true,
	        configurable: true
	    });
	    DropdownDirective.prototype.ngOnInit = function () {
	        this.autoClose = this.autoClose || dropdown_service_1.NONINPUT;
	        if (this.isOpen) {
	        }
	    };
	    DropdownDirective.prototype.ngOnDestroy = function () {
	        if (this.appendToBody && this.menuEl) {
	            this.menuEl.nativeElement.remove();
	        }
	    };
	    Object.defineProperty(DropdownDirective.prototype, "dropDownMenu", {
	        set: function (dropdownMenu) {
	            // init drop down menu
	            this.menuEl = dropdownMenu.el;
	            if (this.appendToBody) {
	                window.document.body.appendChild(this.menuEl.nativeElement);
	            }
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(DropdownDirective.prototype, "dropDownToggle", {
	        set: function (dropdownToggle) {
	            // init toggle element
	            this.toggleEl = dropdownToggle.el;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    DropdownDirective.prototype.toggle = function (open) {
	        return this.isOpen = arguments.length ? !!open : !this.isOpen;
	    };
	    DropdownDirective.prototype.focusDropdownEntry = function (keyCode) {
	        // If append to body is used.
	        var hostEl = this.menuEl ?
	            this.menuEl.nativeElement :
	            this.el.nativeElement.getElementsByTagName('ul')[0];
	        if (!hostEl) {
	            // todo: throw exception?
	            return;
	        }
	        var elems = hostEl.getElementsByTagName('a');
	        if (!elems || !elems.length) {
	            // todo: throw exception?
	            return;
	        }
	        // todo: use parseInt to detect isNumber?
	        // todo: or implement selectedOption as a get\set pair with parseInt on set
	        switch (keyCode) {
	            case (40):
	                if (typeof this.selectedOption !== 'number') {
	                    this.selectedOption = 0;
	                    break;
	                }
	                if (this.selectedOption === elems.length - 1) {
	                    break;
	                }
	                this.selectedOption++;
	                break;
	            case (38):
	                if (typeof this.selectedOption !== 'number') {
	                    return;
	                }
	                if (this.selectedOption === 0) {
	                    // todo: return?
	                    break;
	                }
	                this.selectedOption--;
	                break;
	            default:
	                break;
	        }
	        elems[this.selectedOption].focus();
	    };
	    DropdownDirective.prototype.focusToggleElement = function () {
	        if (this.toggleEl) {
	            this.toggleEl.nativeElement.focus();
	        }
	    };
	    __decorate([
	        core_1.HostBinding('class.open'),
	        core_1.Input(), 
	        __metadata('design:type', Boolean)
	    ], DropdownDirective.prototype, "isOpen", null);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', String)
	    ], DropdownDirective.prototype, "autoClose", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Boolean)
	    ], DropdownDirective.prototype, "keyboardNav", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Boolean)
	    ], DropdownDirective.prototype, "appendToBody", void 0);
	    __decorate([
	        core_1.Output(), 
	        __metadata('design:type', core_1.EventEmitter)
	    ], DropdownDirective.prototype, "onToggle", void 0);
	    __decorate([
	        core_1.Output(), 
	        __metadata('design:type', core_1.EventEmitter)
	    ], DropdownDirective.prototype, "isOpenChange", void 0);
	    __decorate([
	        core_1.HostBinding('class.dropdown'), 
	        __metadata('design:type', Boolean)
	    ], DropdownDirective.prototype, "addClass", void 0);
	    DropdownDirective = __decorate([
	        core_1.Directive({ selector: '[dropdown]' }), 
	        __metadata('design:paramtypes', [core_1.ElementRef])
	    ], DropdownDirective);
	    return DropdownDirective;
	}());
	exports.DropdownDirective = DropdownDirective;


/***/ }),
/* 473 */
/***/ (function(module, exports) {

	"use strict";
	exports.ALWAYS = 'always';
	exports.DISABLED = 'disabled';
	exports.OUTSIDECLICK = 'outsideClick';
	exports.NONINPUT = 'nonInput';
	var DropdownService = (function () {
	    function DropdownService() {
	        this.closeDropdownBind = this.closeDropdown.bind(this);
	        this.keybindFilterBind = this.keybindFilter.bind(this);
	    }
	    DropdownService.prototype.open = function (dropdownScope) {
	        if (!this.openScope) {
	            window.document.addEventListener('click', this.closeDropdownBind, true);
	            window.document.addEventListener('keydown', this.keybindFilterBind);
	        }
	        if (this.openScope && this.openScope !== dropdownScope) {
	            this.openScope.isOpen = false;
	        }
	        this.openScope = dropdownScope;
	    };
	    DropdownService.prototype.close = function (dropdownScope) {
	        if (this.openScope !== dropdownScope) {
	            return;
	        }
	        this.openScope = void 0;
	        window.document.removeEventListener('click', this.closeDropdownBind, true);
	        window.document.removeEventListener('keydown', this.keybindFilterBind);
	    };
	    DropdownService.prototype.closeDropdown = function (event) {
	        if (!this.openScope) {
	            return;
	        }
	        if (event && this.openScope.autoClose === exports.DISABLED) {
	            return;
	        }
	        if (event && this.openScope.toggleEl &&
	            this.openScope.toggleEl.nativeElement === event.target) {
	            return;
	        }
	        if (event && this.openScope.autoClose === exports.NONINPUT &&
	            this.openScope.menuEl &&
	            /input|textarea/i.test(event.target.tagName) &&
	            this.openScope.menuEl.nativeElement.contains(event.target)) {
	            return;
	        }
	        if (event && this.openScope.autoClose === exports.OUTSIDECLICK &&
	            this.openScope.menuEl &&
	            this.openScope.menuEl.nativeElement.contains(event.target)) {
	            return;
	        }
	        this.openScope.isOpen = false;
	    };
	    DropdownService.prototype.keybindFilter = function (event) {
	        if (event.which === 27) {
	            this.openScope.focusToggleElement();
	            this.closeDropdown(void 0);
	            return;
	        }
	        if (this.openScope.keyboardNav && this.openScope.isOpen &&
	            (event.which === 38 || event.which === 40)) {
	            event.preventDefault();
	            event.stopPropagation();
	            this.openScope.focusDropdownEntry(event.which);
	        }
	    };
	    return DropdownService;
	}());
	exports.DropdownService = DropdownService;
	exports.dropdownService = new DropdownService();


/***/ }),
/* 474 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var __metadata = (this && this.__metadata) || function (k, v) {
	    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
	};
	var __param = (this && this.__param) || function (paramIndex, decorator) {
	    return function (target, key) { decorator(target, key, paramIndex); }
	};
	var core_1 = __webpack_require__(2);
	var dropdown_directive_1 = __webpack_require__(472);
	var DropdownMenuDirective = (function () {
	    function DropdownMenuDirective(dropdown, el) {
	        this.dropdown = dropdown;
	        this.el = el;
	    }
	    DropdownMenuDirective.prototype.ngOnInit = function () {
	        this.dropdown.dropDownMenu = this;
	    };
	    DropdownMenuDirective = __decorate([
	        core_1.Directive({ selector: '[dropdownMenu]' }),
	        __param(0, core_1.Host()), 
	        __metadata('design:paramtypes', [dropdown_directive_1.DropdownDirective, core_1.ElementRef])
	    ], DropdownMenuDirective);
	    return DropdownMenuDirective;
	}());
	exports.DropdownMenuDirective = DropdownMenuDirective;


/***/ }),
/* 475 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var __metadata = (this && this.__metadata) || function (k, v) {
	    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
	};
	var __param = (this && this.__param) || function (paramIndex, decorator) {
	    return function (target, key) { decorator(target, key, paramIndex); }
	};
	var core_1 = __webpack_require__(2);
	var dropdown_directive_1 = __webpack_require__(472);
	var lang_1 = __webpack_require__(5);
	/* tslint:disable */
	var MouseEvent = lang_1.global.MouseEvent;
	/* tslint:enable */
	var DropdownToggleDirective = (function () {
	    function DropdownToggleDirective(dropdown, el) {
	        this.disabled = false;
	        this.addClass = true;
	        this.dropdown = dropdown;
	        this.el = el;
	    }
	    DropdownToggleDirective.prototype.ngOnInit = function () {
	        this.dropdown.dropDownToggle = this;
	    };
	    Object.defineProperty(DropdownToggleDirective.prototype, "isOpen", {
	        get: function () {
	            return this.dropdown.isOpen;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    DropdownToggleDirective.prototype.toggleDropdown = function (event) {
	        event.stopPropagation();
	        if (!this.disabled) {
	            this.dropdown.toggle();
	        }
	        return false;
	    };
	    __decorate([
	        core_1.HostBinding('class.disabled'),
	        core_1.Input(), 
	        __metadata('design:type', Boolean)
	    ], DropdownToggleDirective.prototype, "disabled", void 0);
	    __decorate([
	        core_1.HostBinding('class.dropdown-toggle'),
	        core_1.HostBinding('attr.aria-haspopup'), 
	        __metadata('design:type', Boolean)
	    ], DropdownToggleDirective.prototype, "addClass", void 0);
	    __decorate([
	        core_1.HostBinding('attr.aria-expanded'), 
	        __metadata('design:type', Boolean)
	    ], DropdownToggleDirective.prototype, "isOpen", null);
	    __decorate([
	        core_1.HostListener('click', ['$event']), 
	        __metadata('design:type', Function), 
	        __metadata('design:paramtypes', [Object]), 
	        __metadata('design:returntype', Boolean)
	    ], DropdownToggleDirective.prototype, "toggleDropdown", null);
	    DropdownToggleDirective = __decorate([
	        core_1.Directive({ selector: '[dropdownToggle]' }),
	        __param(0, core_1.Host()), 
	        __metadata('design:paramtypes', [dropdown_directive_1.DropdownDirective, core_1.ElementRef])
	    ], DropdownToggleDirective);
	    return DropdownToggleDirective;
	}());
	exports.DropdownToggleDirective = DropdownToggleDirective;


/***/ }),
/* 476 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	function __export(m) {
	    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
	}
	__export(__webpack_require__(477));
	__export(__webpack_require__(478));
	__export(__webpack_require__(479));
	var modal_backdrop_component_2 = __webpack_require__(477);
	var modal_component_2 = __webpack_require__(479);
	exports.MODAL_DIRECTVES = [
	    modal_component_2.ModalDirective, modal_backdrop_component_2.ModalBackdropComponent
	];


/***/ }),
/* 477 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var __metadata = (this && this.__metadata) || function (k, v) {
	    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
	};
	var core_1 = __webpack_require__(2);
	var common_1 = __webpack_require__(182);
	var modal_options_class_1 = __webpack_require__(478);
	var ModalBackdropOptions = (function () {
	    function ModalBackdropOptions(options) {
	        this.animate = true;
	        Object.assign(this, options);
	    }
	    return ModalBackdropOptions;
	}());
	exports.ModalBackdropOptions = ModalBackdropOptions;
	var ModalBackdropComponent = (function () {
	    function ModalBackdropComponent(options, element) {
	        this.isAnimated = true;
	        this.isShown = false;
	        this.isAnimated = options.animate;
	        this.element = element;
	    }
	    ModalBackdropComponent = __decorate([
	        core_1.Component({
	            selector: 'bs-modal-backdrop',
	            directives: [common_1.NgClass],
	            template: "\n<div class=\"" + modal_options_class_1.ClassName.BACKDROP + "\"\n  [class." + modal_options_class_1.ClassName.IN + "]=\"isShown\"\n  [class." + modal_options_class_1.ClassName.FADE + "]=\"isAnimated\"></div>"
	        }), 
	        __metadata('design:paramtypes', [ModalBackdropOptions, core_1.ElementRef])
	    ], ModalBackdropComponent);
	    return ModalBackdropComponent;
	}());
	exports.ModalBackdropComponent = ModalBackdropComponent;


/***/ }),
/* 478 */
/***/ (function(module, exports) {

	"use strict";
	exports.modalConfigDefaults = {
	    backdrop: true,
	    keyboard: true,
	    focus: true,
	    show: true
	};
	exports.ClassName = {
	    SCROLLBAR_MEASURER: 'modal-scrollbar-measure',
	    BACKDROP: 'modal-backdrop',
	    OPEN: 'modal-open',
	    FADE: 'fade',
	    IN: 'in'
	};
	exports.Selector = {
	    DIALOG: '.modal-dialog',
	    DATA_TOGGLE: '[data-toggle="modal"]',
	    DATA_DISMISS: '[data-dismiss="modal"]',
	    FIXED_CONTENT: '.navbar-fixed-top, .navbar-fixed-bottom, .is-fixed'
	};


/***/ }),
/* 479 */
/***/ (function(module, exports, __webpack_require__) {

	// todo: should we support enforce focus in?
	// todo: in original bs there are was a way to prevent modal from showing
	// todo: original modal had resize events
	"use strict";
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var __metadata = (this && this.__metadata) || function (k, v) {
	    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
	};
	var __param = (this && this.__param) || function (paramIndex, decorator) {
	    return function (target, key) { decorator(target, key, paramIndex); }
	};
	var core_1 = __webpack_require__(2);
	var lang_1 = __webpack_require__(5);
	var platform_browser_1 = __webpack_require__(177);
	var modal_backdrop_component_1 = __webpack_require__(477);
	var modal_options_class_1 = __webpack_require__(478);
	var components_helper_service_1 = __webpack_require__(480);
	var utils_class_1 = __webpack_require__(481);
	var TRANSITION_DURATION = 300;
	var BACKDROP_TRANSITION_DURATION = 150;
	var ModalDirective = (function () {
	    function ModalDirective(element, renderer, document, componentsHelper) {
	        this.onShow = new core_1.EventEmitter();
	        this.onShown = new core_1.EventEmitter();
	        this.onHide = new core_1.EventEmitter();
	        this.onHidden = new core_1.EventEmitter();
	        // seems like an Options
	        this.isAnimated = true;
	        this._isShown = false;
	        this.isBodyOverflowing = false;
	        this.ignoreBackdropClick = false;
	        this.originalBodyPadding = 0;
	        this.scrollbarWidth = 0;
	        this.element = element;
	        this.renderer = renderer;
	        this.document = document;
	        this.componentsHelper = componentsHelper;
	    }
	    Object.defineProperty(ModalDirective.prototype, "config", {
	        get: function () {
	            return this._config;
	        },
	        set: function (conf) {
	            this._config = this.getConfig(conf);
	        },
	        enumerable: true,
	        configurable: true
	    });
	    ;
	    Object.defineProperty(ModalDirective.prototype, "isShown", {
	        get: function () {
	            return this._isShown;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    /** Host element manipulations */
	    // @HostBinding(`class.${ClassName.IN}`) private _addClassIn:boolean;
	    ModalDirective.prototype.onClick = function (event) {
	        if (event.target === this.element.nativeElement) {
	            this.hide(event);
	        }
	    };
	    // todo: consider preventing default and stopping propagation
	    ModalDirective.prototype.onEsc = function () {
	        if (this.config.keyboard) {
	            this.hide();
	        }
	    };
	    ModalDirective.prototype.ngOnDestroy = function () {
	        this.config = void 0;
	        // this._element             = null
	        // this._dialog              = null
	        // this._backdrop            = null
	        this._isShown = void 0;
	        this.isBodyOverflowing = void 0;
	        this.ignoreBackdropClick = void 0;
	        this.originalBodyPadding = void 0;
	        this.scrollbarWidth = void 0;
	        this.document = void 0;
	    };
	    ModalDirective.prototype.ngAfterViewInit = function () {
	        this._config = this._config || this.getConfig();
	    };
	    /** Public methods */
	    ModalDirective.prototype.toggle = function () {
	        return this._isShown ? this.hide() : this.show();
	    };
	    ModalDirective.prototype.show = function () {
	        var _this = this;
	        this.onShow.emit(this);
	        if (this._isShown) {
	            return;
	        }
	        this._isShown = true;
	        this.checkScrollbar();
	        this.setScrollbar();
	        if (this.document && this.document.body) {
	            this.renderer.setElementClass(this.document.body, modal_options_class_1.ClassName.OPEN, true);
	        }
	        this.showBackdrop(function () {
	            _this.showElement();
	        });
	    };
	    ModalDirective.prototype.hide = function (event) {
	        var _this = this;
	        if (event) {
	            event.preventDefault();
	        }
	        this.onHide.emit(this);
	        // todo: add an option to prevent hiding
	        if (!this._isShown) {
	            return;
	        }
	        this._isShown = false;
	        this.renderer.setElementClass(this.element.nativeElement, modal_options_class_1.ClassName.IN, false);
	        // this._addClassIn = false;
	        if (this.isAnimated) {
	            setTimeout(function () { return _this.hideModal(); }, TRANSITION_DURATION);
	        }
	        else {
	            this.hideModal();
	        }
	    };
	    /** Private methods */
	    ModalDirective.prototype.getConfig = function (config) {
	        return Object.assign({}, modal_options_class_1.modalConfigDefaults, config);
	    };
	    /**
	     *  Show dialog
	     */
	    ModalDirective.prototype.showElement = function () {
	        var _this = this;
	        // todo: replace this with component helper usage `add to root`
	        if (!this.element.nativeElement.parentNode ||
	            (this.element.nativeElement.parentNode.nodeType !== Node.ELEMENT_NODE)) {
	            // don't move modals dom position
	            if (this.document && this.document.body) {
	                this.document.body.appendChild(this.element.nativeElement);
	            }
	        }
	        this.renderer.setElementAttribute(this.element.nativeElement, 'aria-hidden', 'false');
	        this.renderer.setElementStyle(this.element.nativeElement, 'display', 'block');
	        this.renderer.setElementProperty(this.element.nativeElement, 'scrollTop', 0);
	        if (this.isAnimated) {
	            utils_class_1.Utils.reflow(this.element.nativeElement);
	        }
	        // this._addClassIn = true;
	        this.renderer.setElementClass(this.element.nativeElement, modal_options_class_1.ClassName.IN, true);
	        this.onShown.emit(this);
	        var transitionComplete = function () {
	            if (_this._config.focus) {
	                _this.element.nativeElement.focus();
	            }
	            _this.onShown.emit(_this);
	        };
	        if (this.isAnimated) {
	            setTimeout(transitionComplete, TRANSITION_DURATION);
	        }
	        else {
	            transitionComplete();
	        }
	    };
	    ModalDirective.prototype.hideModal = function () {
	        var _this = this;
	        this.renderer.setElementAttribute(this.element.nativeElement, 'aria-hidden', 'true');
	        this.renderer.setElementStyle(this.element.nativeElement, 'display', 'none');
	        this.showBackdrop(function () {
	            if (_this.document && _this.document.body) {
	                _this.renderer.setElementClass(_this.document.body, modal_options_class_1.ClassName.OPEN, false);
	            }
	            _this.resetAdjustments();
	            _this.resetScrollbar();
	            _this.onHidden.emit(_this);
	        });
	    };
	    // todo: original show was calling a callback when done, but we can use promise
	    ModalDirective.prototype.showBackdrop = function (callback) {
	        var _this = this;
	        if (this._isShown && modal_options_class_1.modalConfigDefaults.backdrop) {
	            this.backdrop = this.componentsHelper
	                .appendNextToRoot(modal_backdrop_component_1.ModalBackdropComponent, modal_backdrop_component_1.ModalBackdropOptions, new modal_backdrop_component_1.ModalBackdropOptions({ animate: false }));
	            this.backdrop.then(function (backdrop) {
	                if (_this.isAnimated) {
	                    backdrop.instance.isAnimated = _this.isAnimated;
	                    utils_class_1.Utils.reflow(backdrop.instance.element.nativeElement);
	                }
	                backdrop.instance.isShown = true;
	                if (!callback) {
	                    return;
	                }
	                if (!_this.isAnimated) {
	                    callback();
	                    return;
	                }
	                setTimeout(callback, BACKDROP_TRANSITION_DURATION);
	            });
	        }
	        else if (!this._isShown && this.backdrop) {
	            this.backdrop.then(function (backdrop) {
	                backdrop.instance.isShown = false;
	                var callbackRemove = function () {
	                    _this.removeBackdrop();
	                    if (callback) {
	                        callback();
	                    }
	                };
	                if (backdrop.instance.isAnimated) {
	                    setTimeout(callbackRemove, BACKDROP_TRANSITION_DURATION);
	                }
	                else {
	                    callbackRemove();
	                }
	            });
	        }
	        else if (callback) {
	            callback();
	        }
	    };
	    ModalDirective.prototype.removeBackdrop = function () {
	        var _this = this;
	        if (this.backdrop) {
	            this.backdrop.then(function (backdrop) {
	                backdrop.destroy();
	                _this.backdrop = void 0;
	            });
	        }
	    };
	    /** Events tricks */
	    // no need for it
	    // private setEscapeEvent():void {
	    //   if (this._isShown && this._config.keyboard) {
	    //     $(this._element).on(Event.KEYDOWN_DISMISS, (event) => {
	    //       if (event.which === 27) {
	    //         this.hide()
	    //       }
	    //     })
	    //
	    //   } else if (!this._isShown) {
	    //     $(this._element).off(Event.KEYDOWN_DISMISS)
	    //   }
	    // }
	    // private setResizeEvent():void {
	    // console.log(this.renderer.listenGlobal('', Event.RESIZE));
	    // if (this._isShown) {
	    //   $(window).on(Event.RESIZE, $.proxy(this._handleUpdate, this))
	    // } else {
	    //   $(window).off(Event.RESIZE)
	    // }
	    // }
	    ModalDirective.prototype.resetAdjustments = function () {
	        this.renderer.setElementStyle(this.element.nativeElement, 'paddingLeft', '');
	        this.renderer.setElementStyle(this.element.nativeElement, 'paddingRight', '');
	    };
	    /** Scroll bar tricks */
	    ModalDirective.prototype.checkScrollbar = function () {
	        // this._isBodyOverflowing = document.body.clientWidth < window.innerWidth
	        this.isBodyOverflowing = this.document.body.clientWidth < lang_1.global.innerWidth;
	        this.scrollbarWidth = this.getScrollbarWidth();
	    };
	    ModalDirective.prototype.setScrollbar = function () {
	        if (!this.document) {
	            return;
	        }
	        var fixedEl = this.document.querySelector(modal_options_class_1.Selector.FIXED_CONTENT);
	        if (!fixedEl) {
	            return;
	        }
	        var bodyPadding = parseInt(utils_class_1.Utils.getStyles(fixedEl).paddingRight || 0, 10);
	        this.originalBodyPadding = parseInt(this.document.body.style.paddingRight || 0, 10);
	        if (this.isBodyOverflowing) {
	            this.document.body.style.paddingRight = (bodyPadding + this.scrollbarWidth) + "px";
	        }
	    };
	    ModalDirective.prototype.resetScrollbar = function () {
	        this.document.body.style.paddingRight = this.originalBodyPadding;
	    };
	    // thx d.walsh
	    ModalDirective.prototype.getScrollbarWidth = function () {
	        var scrollDiv = this.renderer.createElement(this.document.body, 'div', void 0);
	        scrollDiv.className = modal_options_class_1.ClassName.SCROLLBAR_MEASURER;
	        var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;
	        this.document.body.removeChild(scrollDiv);
	        return scrollbarWidth;
	    };
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Object), 
	        __metadata('design:paramtypes', [Object])
	    ], ModalDirective.prototype, "config", null);
	    __decorate([
	        core_1.Output(), 
	        __metadata('design:type', core_1.EventEmitter)
	    ], ModalDirective.prototype, "onShow", void 0);
	    __decorate([
	        core_1.Output(), 
	        __metadata('design:type', core_1.EventEmitter)
	    ], ModalDirective.prototype, "onShown", void 0);
	    __decorate([
	        core_1.Output(), 
	        __metadata('design:type', core_1.EventEmitter)
	    ], ModalDirective.prototype, "onHide", void 0);
	    __decorate([
	        core_1.Output(), 
	        __metadata('design:type', core_1.EventEmitter)
	    ], ModalDirective.prototype, "onHidden", void 0);
	    __decorate([
	        core_1.HostListener('click', ['$event']), 
	        __metadata('design:type', Function), 
	        __metadata('design:paramtypes', [Object]), 
	        __metadata('design:returntype', void 0)
	    ], ModalDirective.prototype, "onClick", null);
	    __decorate([
	        core_1.HostListener('keydown.esc'), 
	        __metadata('design:type', Function), 
	        __metadata('design:paramtypes', []), 
	        __metadata('design:returntype', void 0)
	    ], ModalDirective.prototype, "onEsc", null);
	    ModalDirective = __decorate([
	        core_1.Directive({
	            selector: '[bsModal]',
	            exportAs: 'bs-modal'
	        }),
	        __param(2, core_1.Inject(platform_browser_1.DOCUMENT)),
	        __param(3, core_1.Inject(components_helper_service_1.ComponentsHelper)), 
	        __metadata('design:paramtypes', [core_1.ElementRef, core_1.Renderer, Object, components_helper_service_1.ComponentsHelper])
	    ], ModalDirective);
	    return ModalDirective;
	}());
	exports.ModalDirective = ModalDirective;


/***/ }),
/* 480 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var __metadata = (this && this.__metadata) || function (k, v) {
	    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
	};
	var core_1 = __webpack_require__(2);
	/**
	 * Components helper class to easily work with
	 * allows to:
	 * - get application root view container ref
	 */
	var ComponentsHelper = (function () {
	    function ComponentsHelper(applicationRef, componentResolver, injector) {
	        this.applicationRef = applicationRef;
	        this.componentResolver = componentResolver;
	        this.injector = injector;
	    }
	    /**
	     * This is a name conventional class to get application root view component ref
	     * to made this method working you need to add:
	     * ```typescript
	     *  @Component({
	     *   selector: 'my-app',
	     *   ...
	     *   })
	     *  export class MyApp {
	     *    constructor(viewContainerRef: ViewContainerRef) {
	     *        // A Default view container ref, usually the app root container ref.
	     *        // Has to be set manually until we can find a way to get it automatically.
	     *        this.viewContainerRef = viewContainerRef;
	     *      }
	     *  }
	     * ```
	     * @returns {ViewContainerRef} - application root view component ref
	     */
	    ComponentsHelper.prototype.getRootViewContainerRef = function () {
	        // The only way for now (by @mhevery)
	        // https://github.com/angular/angular/issues/6446#issuecomment-173459525
	        // this is a class of application bootstrap component (like my-app)
	        var classOfRootComponent = this.applicationRef.componentTypes[0];
	        // this is an instance of application bootstrap component
	        var appInstance = this.injector.get(classOfRootComponent);
	        return appInstance.viewContainerRef;
	    };
	    /**
	     * Helper methods to add ComponentClass(like modal backdrop) with options
	     * of type ComponentOptionsClass to element next to application root
	     * or next to provided instance of view container
	     * @param ComponentClass - @Component class
	     * @param ComponentOptionsClass - options class
	     * @param options - instance of options
	     * @param _viewContainerRef - optional instance of ViewContainerRef
	     * @returns {Promise<ComponentRef<T>>} - returns a promise with ComponentRef<T>
	     */
	    ComponentsHelper.prototype.appendNextToRoot = function (ComponentClass, ComponentOptionsClass, options, _viewContainerRef) {
	        var _this = this;
	        return this.componentResolver
	            .resolveComponent(ComponentClass)
	            .then(function (componentFactory) {
	            var viewContainerRef = _viewContainerRef || _this.getRootViewContainerRef();
	            var bindings = core_1.ReflectiveInjector.resolve([
	                new core_1.Provider(ComponentOptionsClass, { useValue: options })
	            ]);
	            var ctxInjector = viewContainerRef.parentInjector;
	            var childInjector = Array.isArray(bindings) && bindings.length > 0 ?
	                core_1.ReflectiveInjector.fromResolvedProviders(bindings, ctxInjector) : ctxInjector;
	            return viewContainerRef.createComponent(componentFactory, viewContainerRef.length, childInjector);
	        });
	    };
	    ComponentsHelper = __decorate([
	        core_1.Injectable(), 
	        __metadata('design:paramtypes', [core_1.ApplicationRef, core_1.ComponentResolver, core_1.Injector])
	    ], ComponentsHelper);
	    return ComponentsHelper;
	}());
	exports.ComponentsHelper = ComponentsHelper;


/***/ }),
/* 481 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var lang_1 = __webpack_require__(5);
	var Utils = (function () {
	    function Utils() {
	    }
	    Utils.reflow = function (element) {
	        new Function('bs', 'return bs')(element.offsetHeight);
	    };
	    // source: https://github.com/jquery/jquery/blob/master/src/css/var/getStyles.js
	    Utils.getStyles = function (elem) {
	        // Support: IE <=11 only, Firefox <=30 (#15098, #14150)
	        // IE throws on elements created in popups
	        // FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
	        var view = elem.ownerDocument.defaultView;
	        if (!view || !view.opener) {
	            view = lang_1.global;
	        }
	        return view.getComputedStyle(elem);
	    };
	    return Utils;
	}());
	exports.Utils = Utils;


/***/ }),
/* 482 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var pagination_component_1 = __webpack_require__(483);
	var pager_component_1 = __webpack_require__(484);
	var pagination_component_2 = __webpack_require__(483);
	exports.PaginationComponent = pagination_component_2.PaginationComponent;
	var pager_component_2 = __webpack_require__(484);
	exports.PagerComponent = pager_component_2.PagerComponent;
	exports.PAGINATION_DIRECTIVES = [pagination_component_1.PaginationComponent, pager_component_1.PagerComponent];


/***/ }),
/* 483 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var __metadata = (this && this.__metadata) || function (k, v) {
	    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
	};
	var __param = (this && this.__param) || function (paramIndex, decorator) {
	    return function (target, key) { decorator(target, key, paramIndex); }
	};
	var core_1 = __webpack_require__(2);
	var common_1 = __webpack_require__(182);
	var paginationConfig = {
	    maxSize: void 0,
	    itemsPerPage: 10,
	    boundaryLinks: false,
	    directionLinks: true,
	    firstText: 'First',
	    previousText: 'Previous',
	    nextText: 'Next',
	    lastText: 'Last',
	    rotate: true
	};
	var PAGINATION_TEMPLATE = "\n  <ul class=\"pagination\" [ngClass]=\"classMap\">\n    <li class=\"pagination-first page-item\"\n        *ngIf=\"boundaryLinks\"\n        [class.disabled]=\"noPrevious()||disabled\">\n      <a class=\"page-link\" href (click)=\"selectPage(1, $event)\" [innerHTML]=\"getText('first')\"></a>\n    </li>\n\n    <li class=\"pagination-prev page-item\"\n        *ngIf=\"directionLinks\"\n        [class.disabled]=\"noPrevious()||disabled\">\n      <a class=\"page-link\" href (click)=\"selectPage(page - 1, $event)\" [innerHTML]=\"getText('previous')\"></a>\n      </li>\n\n    <li *ngFor=\"let pg of pages\"\n        [class.active]=\"pg.active\"\n        [class.disabled]=\"disabled&&!pg.active\"\n        class=\"pagination-page page-item\">\n      <a class=\"page-link\" href (click)=\"selectPage(pg.number, $event)\" [innerHTML]=\"pg.text\"></a>\n    </li>\n\n    <li class=\"pagination-next page-item\"\n        *ngIf=\"directionLinks\"\n        [class.disabled]=\"noNext()\">\n      <a class=\"page-link\" href (click)=\"selectPage(page + 1, $event)\" [innerHTML]=\"getText('next')\"></a></li>\n\n    <li class=\"pagination-last page-item\"\n        *ngIf=\"boundaryLinks\"\n        [class.disabled]=\"noNext()\">\n      <a class=\"page-link\" href (click)=\"selectPage(totalPages, $event)\" [innerHTML]=\"getText('last')\"></a></li>\n  </ul>\n  ";
	/* tslint:disable */
	var PaginationComponent = (function () {
	    function PaginationComponent(cd, renderer, elementRef) {
	        this.numPages = new core_1.EventEmitter(false);
	        this.pageChanged = new core_1.EventEmitter(false);
	        this.onChange = Function.prototype;
	        this.onTouched = Function.prototype;
	        this.inited = false;
	        this.cd = cd;
	        this.renderer = renderer;
	        this.elementRef = elementRef;
	        cd.valueAccessor = this;
	        this.config = this.config || paginationConfig;
	    }
	    Object.defineProperty(PaginationComponent.prototype, "itemsPerPage", {
	        get: function () {
	            return this._itemsPerPage;
	        },
	        set: function (v) {
	            this._itemsPerPage = v;
	            this.totalPages = this.calculateTotalPages();
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(PaginationComponent.prototype, "totalItems", {
	        get: function () {
	            return this._totalItems;
	        },
	        set: function (v) {
	            this._totalItems = v;
	            this.totalPages = this.calculateTotalPages();
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(PaginationComponent.prototype, "totalPages", {
	        get: function () {
	            return this._totalPages;
	        },
	        set: function (v) {
	            this._totalPages = v;
	            this.numPages.emit(v);
	            if (this.inited) {
	                this.selectPage(this.page);
	            }
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(PaginationComponent.prototype, "page", {
	        get: function () {
	            return this._page;
	        },
	        set: function (value) {
	            var _previous = this._page;
	            this._page = (value > this.totalPages) ? this.totalPages : (value || 1);
	            if (_previous === this._page || typeof _previous === 'undefined') {
	                return;
	            }
	            this.pageChanged.emit({
	                page: this._page,
	                itemsPerPage: this.itemsPerPage
	            });
	        },
	        enumerable: true,
	        configurable: true
	    });
	    PaginationComponent.prototype.ngOnInit = function () {
	        this.classMap = this.elementRef.nativeElement.getAttribute('class') || '';
	        // watch for maxSize
	        this.maxSize = typeof this.maxSize !== 'undefined'
	            ? this.maxSize
	            : paginationConfig.maxSize;
	        this.rotate = typeof this.rotate !== 'undefined'
	            ? this.rotate
	            : paginationConfig.rotate;
	        this.boundaryLinks = typeof this.boundaryLinks !== 'undefined'
	            ? this.boundaryLinks
	            : paginationConfig.boundaryLinks;
	        this.directionLinks = typeof this.directionLinks !== 'undefined'
	            ? this.directionLinks
	            : paginationConfig.directionLinks;
	        // base class
	        this.itemsPerPage = typeof this.itemsPerPage !== 'undefined'
	            ? this.itemsPerPage
	            : paginationConfig.itemsPerPage;
	        this.totalPages = this.calculateTotalPages();
	        // this class
	        this.pages = this.getPages(this.page, this.totalPages);
	        this.page = this.cd.value;
	        this.inited = true;
	    };
	    PaginationComponent.prototype.writeValue = function (value) {
	        this.page = value;
	        this.pages = this.getPages(this.page, this.totalPages);
	    };
	    PaginationComponent.prototype.getText = function (key) {
	        return this[key + 'Text'] || paginationConfig[key + 'Text'];
	    };
	    PaginationComponent.prototype.noPrevious = function () {
	        return this.page === 1;
	    };
	    PaginationComponent.prototype.noNext = function () {
	        return this.page === this.totalPages;
	    };
	    PaginationComponent.prototype.registerOnChange = function (fn) { this.onChange = fn; };
	    PaginationComponent.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };
	    PaginationComponent.prototype.selectPage = function (page, event) {
	        if (event) {
	            event.preventDefault();
	        }
	        if (!this.disabled) {
	            if (event && event.target) {
	                var target = event.target;
	                target.blur();
	            }
	            this.writeValue(page);
	            this.cd.viewToModelUpdate(this.page);
	        }
	    };
	    // Create page object used in template
	    PaginationComponent.prototype.makePage = function (num, text, isActive) {
	        return {
	            number: num,
	            text: text,
	            active: isActive
	        };
	    };
	    PaginationComponent.prototype.getPages = function (currentPage, totalPages) {
	        var pages = [];
	        // Default page limits
	        var startPage = 1;
	        var endPage = totalPages;
	        var isMaxSized = typeof this.maxSize !== 'undefined' && this.maxSize < totalPages;
	        // recompute if maxSize
	        if (isMaxSized) {
	            if (this.rotate) {
	                // Current page is displayed in the middle of the visible ones
	                startPage = Math.max(currentPage - Math.floor(this.maxSize / 2), 1);
	                endPage = startPage + this.maxSize - 1;
	                // Adjust if limit is exceeded
	                if (endPage > totalPages) {
	                    endPage = totalPages;
	                    startPage = endPage - this.maxSize + 1;
	                }
	            }
	            else {
	                // Visible pages are paginated with maxSize
	                startPage = ((Math.ceil(currentPage / this.maxSize) - 1) * this.maxSize) + 1;
	                // Adjust last page if limit is exceeded
	                endPage = Math.min(startPage + this.maxSize - 1, totalPages);
	            }
	        }
	        // Add page number links
	        for (var num = startPage; num <= endPage; num++) {
	            var page = this.makePage(num, num.toString(), num === currentPage);
	            pages.push(page);
	        }
	        // Add links to move between page sets
	        if (isMaxSized && !this.rotate) {
	            if (startPage > 1) {
	                var previousPageSet = this.makePage(startPage - 1, '...', false);
	                pages.unshift(previousPageSet);
	            }
	            if (endPage < totalPages) {
	                var nextPageSet = this.makePage(endPage + 1, '...', false);
	                pages.push(nextPageSet);
	            }
	        }
	        return pages;
	    };
	    // base class
	    PaginationComponent.prototype.calculateTotalPages = function () {
	        var totalPages = this.itemsPerPage < 1
	            ? 1
	            : Math.ceil(this.totalItems / this.itemsPerPage);
	        return Math.max(totalPages || 0, 1);
	    };
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Number)
	    ], PaginationComponent.prototype, "maxSize", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Boolean)
	    ], PaginationComponent.prototype, "boundaryLinks", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Boolean)
	    ], PaginationComponent.prototype, "directionLinks", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', String)
	    ], PaginationComponent.prototype, "firstText", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', String)
	    ], PaginationComponent.prototype, "previousText", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', String)
	    ], PaginationComponent.prototype, "nextText", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', String)
	    ], PaginationComponent.prototype, "lastText", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Boolean)
	    ], PaginationComponent.prototype, "rotate", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Boolean)
	    ], PaginationComponent.prototype, "disabled", void 0);
	    __decorate([
	        core_1.Output(), 
	        __metadata('design:type', core_1.EventEmitter)
	    ], PaginationComponent.prototype, "numPages", void 0);
	    __decorate([
	        core_1.Output(), 
	        __metadata('design:type', core_1.EventEmitter)
	    ], PaginationComponent.prototype, "pageChanged", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Number)
	    ], PaginationComponent.prototype, "itemsPerPage", null);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Number)
	    ], PaginationComponent.prototype, "totalItems", null);
	    PaginationComponent = __decorate([
	        core_1.Component({
	            selector: 'pagination[ngModel]',
	            template: PAGINATION_TEMPLATE,
	            directives: [common_1.NgFor, common_1.NgIf]
	        }),
	        __param(0, core_1.Self()), 
	        __metadata('design:paramtypes', [common_1.NgModel, core_1.Renderer, core_1.ElementRef])
	    ], PaginationComponent);
	    return PaginationComponent;
	}());
	exports.PaginationComponent = PaginationComponent;


/***/ }),
/* 484 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var __metadata = (this && this.__metadata) || function (k, v) {
	    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
	};
	var __param = (this && this.__param) || function (paramIndex, decorator) {
	    return function (target, key) { decorator(target, key, paramIndex); }
	};
	var core_1 = __webpack_require__(2);
	var common_1 = __webpack_require__(182);
	var pagination_component_1 = __webpack_require__(483);
	var pagerConfig = {
	    itemsPerPage: 10,
	    previousText: '« Previous',
	    nextText: 'Next »',
	    align: true
	};
	var PAGER_TEMPLATE = "\n    <ul class=\"pager\">\n      <li [class.disabled]=\"noPrevious()\" [class.previous]=\"align\" [ngClass]=\"{'pull-right': align}\">\n        <a href (click)=\"selectPage(page - 1, $event)\">{{getText('previous')}}</a>\n      </li>\n      <li [class.disabled]=\"noNext()\" [class.next]=\"align\" [ngClass]=\"{'pull-right': align}\">\n        <a href (click)=\"selectPage(page + 1, $event)\">{{getText('next')}}</a>\n      </li>\n  </ul>\n";
	/* tslint:disable */
	var PagerComponent = (function (_super) {
	    __extends(PagerComponent, _super);
	    function PagerComponent(cd, renderer, elementRef) {
	        _super.call(this, cd, renderer, elementRef);
	        this.config = pagerConfig;
	    }
	    PagerComponent = __decorate([
	        core_1.Component({
	            selector: 'pager[ngModel]',
	            template: PAGER_TEMPLATE,
	            directives: [common_1.NgClass],
	            inputs: [
	                'align',
	                'totalItems', 'itemsPerPage',
	                'previousText', 'nextText',
	            ]
	        }),
	        __param(0, core_1.Self()), 
	        __metadata('design:paramtypes', [common_1.NgModel, core_1.Renderer, core_1.ElementRef])
	    ], PagerComponent);
	    return PagerComponent;
	}(pagination_component_1.PaginationComponent));
	exports.PagerComponent = PagerComponent;


/***/ }),
/* 485 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var progress_directive_1 = __webpack_require__(486);
	var bar_component_1 = __webpack_require__(487);
	var progressbar_component_1 = __webpack_require__(488);
	var progress_directive_2 = __webpack_require__(486);
	exports.ProgressDirective = progress_directive_2.ProgressDirective;
	var bar_component_2 = __webpack_require__(487);
	exports.BarComponent = bar_component_2.BarComponent;
	var progressbar_component_2 = __webpack_require__(488);
	exports.ProgressbarComponent = progressbar_component_2.ProgressbarComponent;
	exports.PROGRESSBAR_DIRECTIVES = [progress_directive_1.ProgressDirective, bar_component_1.BarComponent, progressbar_component_1.ProgressbarComponent];


/***/ }),
/* 486 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var __metadata = (this && this.__metadata) || function (k, v) {
	    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
	};
	var core_1 = __webpack_require__(2);
	var progressConfig = {
	    animate: true,
	    max: 100
	};
	// todo: progress element conflict with bootstrap.css
	// todo: need hack: replace host element with div
	/* tslint:disable */
	var ProgressDirective = (function () {
	    function ProgressDirective() {
	        this.addClass = true;
	        this.bars = [];
	    }
	    Object.defineProperty(ProgressDirective.prototype, "max", {
	        get: function () {
	            return this._max;
	        },
	        set: function (v) {
	            this._max = v;
	            this.bars.forEach(function (bar) {
	                bar.recalculatePercentage();
	            });
	        },
	        enumerable: true,
	        configurable: true
	    });
	    ProgressDirective.prototype.ngOnInit = function () {
	        this.animate = this.animate !== false;
	        this.max = typeof this.max === 'number' ? this.max : progressConfig.max;
	    };
	    ProgressDirective.prototype.addBar = function (bar) {
	        if (!this.animate) {
	            bar.transition = 'none';
	        }
	        this.bars.push(bar);
	    };
	    ProgressDirective.prototype.removeBar = function (bar) {
	        this.bars.splice(this.bars.indexOf(bar), 1);
	    };
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Boolean)
	    ], ProgressDirective.prototype, "animate", void 0);
	    __decorate([
	        core_1.HostBinding('attr.max'),
	        core_1.Input(), 
	        __metadata('design:type', Number)
	    ], ProgressDirective.prototype, "max", null);
	    __decorate([
	        core_1.HostBinding('class.progress'), 
	        __metadata('design:type', Boolean)
	    ], ProgressDirective.prototype, "addClass", void 0);
	    ProgressDirective = __decorate([
	        core_1.Directive({ selector: 'bs-progress, [progress]' }), 
	        __metadata('design:paramtypes', [])
	    ], ProgressDirective);
	    return ProgressDirective;
	}());
	exports.ProgressDirective = ProgressDirective;


/***/ }),
/* 487 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var __metadata = (this && this.__metadata) || function (k, v) {
	    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
	};
	var __param = (this && this.__param) || function (paramIndex, decorator) {
	    return function (target, key) { decorator(target, key, paramIndex); }
	};
	var core_1 = __webpack_require__(2);
	var common_1 = __webpack_require__(182);
	var progress_directive_1 = __webpack_require__(486);
	// todo: number pipe
	// todo: use query from progress?
	var BarComponent = (function () {
	    function BarComponent(progress) {
	        this.percent = 0;
	        this.progress = progress;
	    }
	    Object.defineProperty(BarComponent.prototype, "value", {
	        get: function () {
	            return this._value;
	        },
	        set: function (v) {
	            if (!v && v !== 0) {
	                return;
	            }
	            this._value = v;
	            this.recalculatePercentage();
	        },
	        enumerable: true,
	        configurable: true
	    });
	    BarComponent.prototype.ngOnInit = function () {
	        this.progress.addBar(this);
	    };
	    BarComponent.prototype.ngOnDestroy = function () {
	        this.progress.removeBar(this);
	    };
	    BarComponent.prototype.recalculatePercentage = function () {
	        this.percent = +(100 * this.value / this.progress.max).toFixed(2);
	        var totalPercentage = this.progress.bars.reduce(function (total, bar) {
	            return total + bar.percent;
	        }, 0);
	        if (totalPercentage > 100) {
	            this.percent -= totalPercentage - 100;
	        }
	    };
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', String)
	    ], BarComponent.prototype, "type", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Number)
	    ], BarComponent.prototype, "value", null);
	    BarComponent = __decorate([
	        core_1.Component({
	            selector: 'bar',
	            directives: [common_1.NgClass, common_1.NgStyle],
	            template: "\n  <div class=\"progress-bar\"\n    style=\"min-width: 0;\"\n    role=\"progressbar\"\n    [ngClass]=\"type && 'progress-bar-' + type\"\n    [ngStyle]=\"{width: (percent < 100 ? percent : 100) + '%', transition: transition}\"\n    aria-valuemin=\"0\"\n    [attr.aria-valuenow]=\"value\"\n    [attr.aria-valuetext]=\"percent.toFixed(0) + '%'\"\n    [attr.aria-valuemax]=\"max\"><ng-content></ng-content></div>\n"
	        }),
	        __param(0, core_1.Host()), 
	        __metadata('design:paramtypes', [progress_directive_1.ProgressDirective])
	    ], BarComponent);
	    return BarComponent;
	}());
	exports.BarComponent = BarComponent;


/***/ }),
/* 488 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var __metadata = (this && this.__metadata) || function (k, v) {
	    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
	};
	var core_1 = __webpack_require__(2);
	var progress_directive_1 = __webpack_require__(486);
	var bar_component_1 = __webpack_require__(487);
	var ProgressbarComponent = (function () {
	    function ProgressbarComponent() {
	    }
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Boolean)
	    ], ProgressbarComponent.prototype, "animate", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Number)
	    ], ProgressbarComponent.prototype, "max", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', String)
	    ], ProgressbarComponent.prototype, "type", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Number)
	    ], ProgressbarComponent.prototype, "value", void 0);
	    ProgressbarComponent = __decorate([
	        core_1.Component({
	            selector: 'progressbar',
	            directives: [progress_directive_1.ProgressDirective, bar_component_1.BarComponent],
	            template: "\n    <div progress [animate]=\"animate\" [max]=\"max\">\n      <bar [type]=\"type\" [value]=\"value\">\n          <ng-content></ng-content>\n      </bar>\n    </div>\n  "
	        }), 
	        __metadata('design:paramtypes', [])
	    ], ProgressbarComponent);
	    return ProgressbarComponent;
	}());
	exports.ProgressbarComponent = ProgressbarComponent;


/***/ }),
/* 489 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var rating_component_1 = __webpack_require__(490);
	exports.RatingComponent = rating_component_1.RatingComponent;


/***/ }),
/* 490 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var __metadata = (this && this.__metadata) || function (k, v) {
	    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
	};
	var __param = (this && this.__param) || function (paramIndex, decorator) {
	    return function (target, key) { decorator(target, key, paramIndex); }
	};
	var core_1 = __webpack_require__(2);
	var common_1 = __webpack_require__(182);
	var lang_1 = __webpack_require__(5);
	/* tslint:disable */
	var KeyboardEvent = lang_1.global.KeyboardEvent;
	/* tslint:enable */
	var RatingComponent = (function () {
	    function RatingComponent(cd) {
	        this.onHover = new core_1.EventEmitter(false);
	        this.onLeave = new core_1.EventEmitter(false);
	        this.onChange = Function.prototype;
	        this.onTouched = Function.prototype;
	        this.cd = cd;
	        cd.valueAccessor = this;
	    }
	    RatingComponent.prototype.onKeydown = function (event) {
	        if ([37, 38, 39, 40].indexOf(event.which) === -1) {
	            return;
	        }
	        event.preventDefault();
	        event.stopPropagation();
	        var sign = event.which === 38 || event.which === 39 ? 1 : -1;
	        this.rate(this.value + sign);
	    };
	    RatingComponent.prototype.ngOnInit = function () {
	        this.max = typeof this.max !== 'undefined' ? this.max : 5;
	        this.readonly = this.readonly === true;
	        this.stateOn = typeof this.stateOn !== 'undefined'
	            ? this.stateOn
	            : 'glyphicon-star';
	        this.stateOff = typeof this.stateOff !== 'undefined'
	            ? this.stateOff
	            : 'glyphicon-star-empty';
	        this.titles = typeof this.titles !== 'undefined' && this.titles.length > 0
	            ? this.titles
	            : ['one', 'two', 'three', 'four', 'five'];
	        this.range = this.buildTemplateObjects(this.ratingStates, this.max);
	    };
	    // model -> view
	    RatingComponent.prototype.writeValue = function (value) {
	        if (value % 1 !== value) {
	            this.value = Math.round(value);
	            this.preValue = value;
	            return;
	        }
	        this.preValue = value;
	        this.value = value;
	    };
	    RatingComponent.prototype.enter = function (value) {
	        if (!this.readonly) {
	            this.value = value;
	            this.onHover.emit(value);
	        }
	    };
	    RatingComponent.prototype.reset = function () {
	        this.value = this.preValue;
	        this.onLeave.emit(this.value);
	    };
	    RatingComponent.prototype.registerOnChange = function (fn) { this.onChange = fn; };
	    RatingComponent.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };
	    RatingComponent.prototype.buildTemplateObjects = function (ratingStates, max) {
	        ratingStates = ratingStates || [];
	        var count = ratingStates.length || max;
	        var result = [];
	        for (var i = 0; i < count; i++) {
	            result.push(Object.assign({
	                index: i,
	                stateOn: this.stateOn,
	                stateOff: this.stateOff,
	                title: this.titles[i] || i + 1
	            }, ratingStates[i] || {}));
	        }
	        return result;
	    };
	    RatingComponent.prototype.rate = function (value) {
	        if (!this.readonly && value >= 0 && value <= this.range.length) {
	            this.writeValue(value);
	            this.cd.viewToModelUpdate(value);
	        }
	    };
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Number)
	    ], RatingComponent.prototype, "max", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', String)
	    ], RatingComponent.prototype, "stateOn", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', String)
	    ], RatingComponent.prototype, "stateOff", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Boolean)
	    ], RatingComponent.prototype, "readonly", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Array)
	    ], RatingComponent.prototype, "titles", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Array)
	    ], RatingComponent.prototype, "ratingStates", void 0);
	    __decorate([
	        core_1.Output(), 
	        __metadata('design:type', core_1.EventEmitter)
	    ], RatingComponent.prototype, "onHover", void 0);
	    __decorate([
	        core_1.Output(), 
	        __metadata('design:type', core_1.EventEmitter)
	    ], RatingComponent.prototype, "onLeave", void 0);
	    __decorate([
	        core_1.HostListener('keydown', ['$event']), 
	        __metadata('design:type', Function), 
	        __metadata('design:paramtypes', [Object]), 
	        __metadata('design:returntype', void 0)
	    ], RatingComponent.prototype, "onKeydown", null);
	    RatingComponent = __decorate([
	        core_1.Component({
	            /* tslint:disable */
	            selector: 'rating[ngModel]',
	            /* tslint:enable */
	            directives: [common_1.NgFor],
	            template: "\n    <span (mouseleave)=\"reset()\" (keydown)=\"onKeydown($event)\" tabindex=\"0\" role=\"slider\" aria-valuemin=\"0\" [attr.aria-valuemax]=\"range.length\" [attr.aria-valuenow]=\"value\">\n      <template ngFor let-r [ngForOf]=\"range\" let-index=\"index\">\n        <span class=\"sr-only\">({{ index < value ? '*' : ' ' }})</span>\n        <i (mouseenter)=\"enter(index + 1)\" (click)=\"rate(index + 1)\" class=\"glyphicon\" [ngClass]=\"index < value ? r.stateOn : r.stateOff\" [title]=\"r.title\" ></i>\n      </template>\n    </span>\n  "
	        }),
	        __param(0, core_1.Self()), 
	        __metadata('design:paramtypes', [common_1.NgModel])
	    ], RatingComponent);
	    return RatingComponent;
	}());
	exports.RatingComponent = RatingComponent;


/***/ }),
/* 491 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var tab_directive_1 = __webpack_require__(492);
	var tabset_component_1 = __webpack_require__(493);
	var tab_heading_directive_1 = __webpack_require__(495);
	var tab_directive_2 = __webpack_require__(492);
	exports.TabDirective = tab_directive_2.TabDirective;
	var tabset_component_2 = __webpack_require__(493);
	exports.TabsetComponent = tabset_component_2.TabsetComponent;
	var tab_heading_directive_2 = __webpack_require__(495);
	exports.TabHeadingDirective = tab_heading_directive_2.TabHeadingDirective;
	exports.TAB_DIRECTIVES = [tab_directive_1.TabDirective, tab_heading_directive_1.TabHeadingDirective, tabset_component_1.TabsetComponent];


/***/ }),
/* 492 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var __metadata = (this && this.__metadata) || function (k, v) {
	    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
	};
	var core_1 = __webpack_require__(2);
	var tabset_component_1 = __webpack_require__(493);
	/* tslint:disable */
	var TabDirective = (function () {
	    function TabDirective(tabset) {
	        this.select = new core_1.EventEmitter(false);
	        this.deselect = new core_1.EventEmitter(false);
	        this.removed = new core_1.EventEmitter(false);
	        this.addClass = true;
	        this.tabset = tabset;
	        this.tabset.addTab(this);
	    }
	    Object.defineProperty(TabDirective.prototype, "active", {
	        /** tab active state toggle */
	        get: function () {
	            return this._active;
	        },
	        set: function (active) {
	            var _this = this;
	            if (this.disabled && active || !active) {
	                if (!active) {
	                    this._active = active;
	                }
	                this.deselect.emit(this);
	                return;
	            }
	            this._active = active;
	            this.select.emit(this);
	            this.tabset.tabs.forEach(function (tab) {
	                if (tab !== _this) {
	                    tab.active = false;
	                }
	            });
	        },
	        enumerable: true,
	        configurable: true
	    });
	    TabDirective.prototype.ngOnInit = function () { this.removable = !!this.removable; };
	    TabDirective.prototype.ngOnDestroy = function () {
	        this.tabset.removeTab(this);
	    };
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', String)
	    ], TabDirective.prototype, "heading", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Boolean)
	    ], TabDirective.prototype, "disabled", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Boolean)
	    ], TabDirective.prototype, "removable", void 0);
	    __decorate([
	        core_1.HostBinding('class.active'),
	        core_1.Input(), 
	        __metadata('design:type', Boolean)
	    ], TabDirective.prototype, "active", null);
	    __decorate([
	        core_1.Output(), 
	        __metadata('design:type', core_1.EventEmitter)
	    ], TabDirective.prototype, "select", void 0);
	    __decorate([
	        core_1.Output(), 
	        __metadata('design:type', core_1.EventEmitter)
	    ], TabDirective.prototype, "deselect", void 0);
	    __decorate([
	        core_1.Output(), 
	        __metadata('design:type', core_1.EventEmitter)
	    ], TabDirective.prototype, "removed", void 0);
	    __decorate([
	        core_1.HostBinding('class.tab-pane'), 
	        __metadata('design:type', Boolean)
	    ], TabDirective.prototype, "addClass", void 0);
	    TabDirective = __decorate([
	        core_1.Directive({ selector: 'tab, [tab]' }), 
	        __metadata('design:paramtypes', [tabset_component_1.TabsetComponent])
	    ], TabDirective);
	    return TabDirective;
	}());
	exports.TabDirective = TabDirective;


/***/ }),
/* 493 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var __metadata = (this && this.__metadata) || function (k, v) {
	    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
	};
	var core_1 = __webpack_require__(2);
	var common_1 = __webpack_require__(182);
	var common_2 = __webpack_require__(494);
	// todo: add active event to tab
	// todo: fix? mixing static and dynamic tabs position tabs in order of creation
	var TabsetComponent = (function () {
	    function TabsetComponent() {
	        this.clazz = true;
	        this.tabs = [];
	        this.classMap = {};
	    }
	    Object.defineProperty(TabsetComponent.prototype, "vertical", {
	        get: function () { return this._vertical; },
	        set: function (value) {
	            this._vertical = value;
	            this.setClassMap();
	        },
	        enumerable: true,
	        configurable: true
	    });
	    ;
	    Object.defineProperty(TabsetComponent.prototype, "justified", {
	        get: function () { return this._justified; },
	        set: function (value) {
	            this._justified = value;
	            this.setClassMap();
	        },
	        enumerable: true,
	        configurable: true
	    });
	    ;
	    Object.defineProperty(TabsetComponent.prototype, "type", {
	        get: function () { return this._type; },
	        set: function (value) {
	            this._type = value;
	            this.setClassMap();
	        },
	        enumerable: true,
	        configurable: true
	    });
	    ;
	    TabsetComponent.prototype.ngOnInit = function () {
	        this.type = this.type !== 'undefined' ? this.type : 'tabs';
	    };
	    TabsetComponent.prototype.ngOnDestroy = function () {
	        this.isDestroyed = true;
	    };
	    TabsetComponent.prototype.addTab = function (tab) {
	        this.tabs.push(tab);
	        tab.active = this.tabs.length === 1 && tab.active !== false;
	    };
	    TabsetComponent.prototype.removeTab = function (tab) {
	        var index = this.tabs.indexOf(tab);
	        if (index === -1 || this.isDestroyed) {
	            return;
	        }
	        // Select a new tab if the tab to be removed is selected and not destroyed
	        if (tab.active && this.hasAvailableTabs(index)) {
	            var newActiveIndex = this.getClosestTabIndex(index);
	            this.tabs[newActiveIndex].active = true;
	        }
	        tab.removed.emit(tab);
	        this.tabs.splice(index, 1);
	    };
	    TabsetComponent.prototype.getClosestTabIndex = function (index) {
	        var tabsLength = this.tabs.length;
	        if (!tabsLength) {
	            return -1;
	        }
	        for (var step = 1; step <= tabsLength; step += 1) {
	            var prevIndex = index - step;
	            var nextIndex = index + step;
	            if (this.tabs[prevIndex] && !this.tabs[prevIndex].disabled) {
	                return prevIndex;
	            }
	            if (this.tabs[nextIndex] && !this.tabs[nextIndex].disabled) {
	                return nextIndex;
	            }
	        }
	        return -1;
	    };
	    TabsetComponent.prototype.hasAvailableTabs = function (index) {
	        var tabsLength = this.tabs.length;
	        if (!tabsLength) {
	            return false;
	        }
	        for (var i = 0; i < tabsLength; i += 1) {
	            if (!this.tabs[i].disabled && i !== index) {
	                return true;
	            }
	        }
	        return false;
	    };
	    TabsetComponent.prototype.setClassMap = function () {
	        this.classMap = (_a = {
	                'nav-stacked': this.vertical,
	                'nav-justified': this.justified
	            },
	            _a['nav-' + (this.type || 'tabs')] = true,
	            _a
	        );
	        var _a;
	    };
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Boolean)
	    ], TabsetComponent.prototype, "vertical", null);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Boolean)
	    ], TabsetComponent.prototype, "justified", null);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', String)
	    ], TabsetComponent.prototype, "type", null);
	    __decorate([
	        core_1.HostBinding('class.tab-container'), 
	        __metadata('design:type', Boolean)
	    ], TabsetComponent.prototype, "clazz", void 0);
	    TabsetComponent = __decorate([
	        core_1.Component({
	            selector: 'tabset',
	            directives: [common_1.NgClass, common_2.NgTranscludeDirective],
	            template: "\n    <ul class=\"nav\" [ngClass]=\"classMap\" (click)=\"$event.preventDefault()\">\n        <li *ngFor=\"let tabz of tabs\" class=\"nav-item\"\n          [class.active]=\"tabz.active\" [class.disabled]=\"tabz.disabled\">\n          <a href class=\"nav-link\"\n            [class.active]=\"tabz.active\" [class.disabled]=\"tabz.disabled\"\n            (click)=\"tabz.active = true\">\n            <span [ngTransclude]=\"tabz.headingRef\">{{tabz.heading}}</span>\n            <span *ngIf=\"tabz.removable\">\n              <span (click)=\"$event.preventDefault(); removeTab(tabz);\" class=\"glyphicon glyphicon-remove-circle\"></span>\n            </span>\n          </a>\n        </li>\n    </ul>\n    <div class=\"tab-content\">\n      <ng-content></ng-content>\n    </div>\n  "
	        }), 
	        __metadata('design:paramtypes', [])
	    ], TabsetComponent);
	    return TabsetComponent;
	}());
	exports.TabsetComponent = TabsetComponent;


/***/ }),
/* 494 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var __metadata = (this && this.__metadata) || function (k, v) {
	    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
	};
	var __param = (this && this.__param) || function (paramIndex, decorator) {
	    return function (target, key) { decorator(target, key, paramIndex); }
	};
	var core_1 = __webpack_require__(2);
	var NgTranscludeDirective = (function () {
	    function NgTranscludeDirective(_viewRef) {
	        this.viewRef = _viewRef;
	    }
	    Object.defineProperty(NgTranscludeDirective.prototype, "ngTransclude", {
	        get: function () {
	            return this._ngTransclude;
	        },
	        set: function (templateRef) {
	            this._ngTransclude = templateRef;
	            if (templateRef) {
	                this.viewRef.createEmbeddedView(templateRef);
	            }
	        },
	        enumerable: true,
	        configurable: true
	    });
	    NgTranscludeDirective = __decorate([
	        core_1.Directive({
	            selector: '[ngTransclude]',
	            properties: ['ngTransclude']
	        }),
	        __param(0, core_1.Inject(core_1.ViewContainerRef)), 
	        __metadata('design:paramtypes', [core_1.ViewContainerRef])
	    ], NgTranscludeDirective);
	    return NgTranscludeDirective;
	}());
	exports.NgTranscludeDirective = NgTranscludeDirective;


/***/ }),
/* 495 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var __metadata = (this && this.__metadata) || function (k, v) {
	    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
	};
	var core_1 = __webpack_require__(2);
	var tab_directive_1 = __webpack_require__(492);
	var TabHeadingDirective = (function () {
	    function TabHeadingDirective(templateRef, tab) {
	        tab.headingRef = templateRef;
	    }
	    TabHeadingDirective = __decorate([
	        core_1.Directive({ selector: '[tabHeading]' }), 
	        __metadata('design:paramtypes', [core_1.TemplateRef, tab_directive_1.TabDirective])
	    ], TabHeadingDirective);
	    return TabHeadingDirective;
	}());
	exports.TabHeadingDirective = TabHeadingDirective;


/***/ }),
/* 496 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var timepicker_component_1 = __webpack_require__(497);
	exports.TimepickerComponent = timepicker_component_1.TimepickerComponent;


/***/ }),
/* 497 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var __metadata = (this && this.__metadata) || function (k, v) {
	    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
	};
	var __param = (this && this.__param) || function (paramIndex, decorator) {
	    return function (target, key) { decorator(target, key, paramIndex); }
	};
	var core_1 = __webpack_require__(2);
	var common_1 = __webpack_require__(182);
	// todo: implement global configuration via DI
	// todo: refactor directive has to many functions! (extract to stateless helper)
	// todo: use moment js?
	// todo: implement `time` validator
	// todo: replace increment/decrement blockers with getters, or extract
	// todo: unify work with selected
	exports.timepickerConfig = {
	    hourStep: 1,
	    minuteStep: 1,
	    showMeridian: true,
	    meridians: void 0,
	    readonlyInput: false,
	    mousewheel: true,
	    arrowkeys: true,
	    showSpinners: true,
	    min: void 0,
	    max: void 0
	};
	function isDefined(value) {
	    return typeof value !== 'undefined';
	}
	function def(value, fn, defaultValue) {
	    return fn(value) ? value : defaultValue;
	}
	function addMinutes(date, minutes) {
	    var dt = new Date(date.getTime() + minutes * 60000);
	    var newDate = new Date(date);
	    newDate.setHours(dt.getHours(), dt.getMinutes());
	    return newDate;
	}
	var TimepickerComponent = (function () {
	    function TimepickerComponent(cd) {
	        this.meridians = ['AM', 'PM']; // ??
	        this.onChange = Function.prototype;
	        this.onTouched = Function.prototype;
	        // result value
	        this._selected = new Date();
	        this.cd = cd;
	        cd.valueAccessor = this;
	    }
	    Object.defineProperty(TimepickerComponent.prototype, "showMeridian", {
	        get: function () {
	            return this._showMeridian;
	        },
	        set: function (value) {
	            this._showMeridian = value;
	            // || !this.$error.time
	            // if (true) {
	            this.updateTemplate();
	            return;
	            // }
	            // Evaluate from template
	            /*let hours = this.getHoursFromTemplate();
	             let minutes = this.getMinutesFromTemplate();
	             if (isDefined(hours) && isDefined(minutes)) {
	             this.selected.setHours(hours);
	             this.refresh();
	             }*/
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(TimepickerComponent.prototype, "selected", {
	        get: function () {
	            return this._selected;
	        },
	        set: function (v) {
	            if (v) {
	                this._selected = v;
	                this.updateTemplate();
	                this.cd.viewToModelUpdate(this.selected);
	            }
	        },
	        enumerable: true,
	        configurable: true
	    });
	    // todo: add formatter value to Date object
	    TimepickerComponent.prototype.ngOnInit = function () {
	        // todo: take in account $locale.DATETIME_FORMATS.AMPMS;
	        this.meridians = def(this.meridians, isDefined, exports.timepickerConfig.meridians) || ['AM',
	            'PM'];
	        this.mousewheel = def(this.mousewheel, isDefined, exports.timepickerConfig.mousewheel);
	        if (this.mousewheel) {
	        }
	        this.arrowkeys = def(this.arrowkeys, isDefined, exports.timepickerConfig.arrowkeys);
	        if (this.arrowkeys) {
	        }
	        this.readonlyInput = def(this.readonlyInput, isDefined, exports.timepickerConfig.readonlyInput);
	        // this.setupInputEvents();
	        this.hourStep = def(this.hourStep, isDefined, exports.timepickerConfig.hourStep);
	        this.minuteStep = def(this.minuteStep, isDefined, exports.timepickerConfig.minuteStep);
	        this.min = def(this.min, isDefined, exports.timepickerConfig.min);
	        this.max = def(this.max, isDefined, exports.timepickerConfig.max);
	        // 12H / 24H mode
	        this.showMeridian = def(this.showMeridian, isDefined, exports.timepickerConfig.showMeridian);
	        this.showSpinners = def(this.showSpinners, isDefined, exports.timepickerConfig.showSpinners);
	    };
	    TimepickerComponent.prototype.writeValue = function (v) {
	        if (v === this.selected) {
	            return;
	        }
	        if (v && v instanceof Date) {
	            this.selected = v;
	            return;
	        }
	        this.selected = v ? new Date(v) : void 0;
	    };
	    TimepickerComponent.prototype.registerOnChange = function (fn) { this.onChange = fn; };
	    TimepickerComponent.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };
	    TimepickerComponent.prototype.updateHours = function () {
	        if (this.readonlyInput) {
	            return;
	        }
	        var hours = this.getHoursFromTemplate();
	        var minutes = this.getMinutesFromTemplate();
	        this.invalidHours = !isDefined(hours);
	        this.invalidMinutes = !isDefined(minutes);
	        if (this.invalidHours || this.invalidMinutes) {
	            // TODO: needed a validation functionality.
	            return;
	        }
	        this.selected.setHours(hours);
	        this.invalidHours = (this.selected < this.min || this.selected > this.max);
	        if (this.invalidHours) {
	            // todo: validation?
	            // invalidate(true);
	            return;
	        }
	        else {
	            this.refresh();
	        }
	    };
	    TimepickerComponent.prototype.hoursOnBlur = function () {
	        if (this.readonlyInput) {
	            return;
	        }
	        // todo: binded with validation
	        if (!this.invalidHours && parseInt(this.hours, 10) < 10) {
	            this.hours = this.pad(this.hours);
	        }
	    };
	    TimepickerComponent.prototype.updateMinutes = function () {
	        if (this.readonlyInput) {
	            return;
	        }
	        var minutes = this.getMinutesFromTemplate();
	        var hours = this.getHoursFromTemplate();
	        this.invalidMinutes = !isDefined(minutes);
	        this.invalidHours = !isDefined(hours);
	        if (this.invalidMinutes || this.invalidHours) {
	            // TODO: needed a validation functionality.
	            return;
	        }
	        this.selected.setMinutes(minutes);
	        this.invalidMinutes = (this.selected < this.min || this.selected > this.max);
	        if (this.invalidMinutes) {
	            // todo: validation
	            // invalidate(undefined, true);
	            return;
	        }
	        else {
	            this.refresh();
	        }
	    };
	    TimepickerComponent.prototype.minutesOnBlur = function () {
	        if (this.readonlyInput) {
	            return;
	        }
	        if (!this.invalidMinutes && parseInt(this.minutes, 10) < 10) {
	            this.minutes = this.pad(this.minutes);
	        }
	    };
	    TimepickerComponent.prototype.incrementHours = function () {
	        if (!this.noIncrementHours()) {
	            this.addMinutesToSelected(this.hourStep * 60);
	        }
	    };
	    TimepickerComponent.prototype.decrementHours = function () {
	        if (!this.noDecrementHours()) {
	            this.addMinutesToSelected(-this.hourStep * 60);
	        }
	    };
	    TimepickerComponent.prototype.incrementMinutes = function () {
	        if (!this.noIncrementMinutes()) {
	            this.addMinutesToSelected(this.minuteStep);
	        }
	    };
	    TimepickerComponent.prototype.decrementMinutes = function () {
	        if (!this.noDecrementMinutes()) {
	            this.addMinutesToSelected(-this.minuteStep);
	        }
	    };
	    TimepickerComponent.prototype.toggleMeridian = function () {
	        if (!this.noToggleMeridian()) {
	            var sign = this.selected.getHours() < 12 ? 1 : -1;
	            this.addMinutesToSelected(12 * 60 * sign);
	        }
	    };
	    TimepickerComponent.prototype.refresh = function () {
	        // this.makeValid();
	        this.updateTemplate();
	        this.cd.viewToModelUpdate(this.selected);
	    };
	    TimepickerComponent.prototype.updateTemplate = function () {
	        var hours = this.selected.getHours();
	        var minutes = this.selected.getMinutes();
	        if (this.showMeridian) {
	            // Convert 24 to 12 hour system
	            hours = (hours === 0 || hours === 12) ? 12 : hours % 12;
	        }
	        // this.hours = keyboardChange === 'h' ? hours : this.pad(hours);
	        // if (keyboardChange !== 'm') {
	        //  this.minutes = this.pad(minutes);
	        // }
	        this.hours = this.pad(hours);
	        this.minutes = this.pad(minutes);
	        this.meridian = this.selected.getHours() < 12
	            ? this.meridians[0]
	            : this.meridians[1];
	    };
	    TimepickerComponent.prototype.getHoursFromTemplate = function () {
	        var hours = parseInt(this.hours, 10);
	        var valid = this.showMeridian
	            ? (hours > 0 && hours < 13)
	            : (hours >= 0 && hours < 24);
	        if (!valid) {
	            return void 0;
	        }
	        if (this.showMeridian) {
	            if (hours === 12) {
	                hours = 0;
	            }
	            if (this.meridian === this.meridians[1]) {
	                hours = hours + 12;
	            }
	        }
	        return hours;
	    };
	    TimepickerComponent.prototype.getMinutesFromTemplate = function () {
	        var minutes = parseInt(this.minutes, 10);
	        return (minutes >= 0 && minutes < 60) ? minutes : undefined;
	    };
	    TimepickerComponent.prototype.pad = function (value) {
	        return (isDefined(value) && value.toString().length < 2)
	            ? '0' + value
	            : value.toString();
	    };
	    TimepickerComponent.prototype.noIncrementHours = function () {
	        var incrementedSelected = addMinutes(this.selected, this.hourStep * 60);
	        return incrementedSelected > this.max ||
	            (incrementedSelected < this.selected && incrementedSelected < this.min);
	    };
	    TimepickerComponent.prototype.noDecrementHours = function () {
	        var decrementedSelected = addMinutes(this.selected, -this.hourStep * 60);
	        return decrementedSelected < this.min ||
	            (decrementedSelected > this.selected && decrementedSelected > this.max);
	    };
	    TimepickerComponent.prototype.noIncrementMinutes = function () {
	        var incrementedSelected = addMinutes(this.selected, this.minuteStep);
	        return incrementedSelected > this.max ||
	            (incrementedSelected < this.selected && incrementedSelected < this.min);
	    };
	    TimepickerComponent.prototype.noDecrementMinutes = function () {
	        var decrementedSelected = addMinutes(this.selected, -this.minuteStep);
	        return decrementedSelected < this.min ||
	            (decrementedSelected > this.selected && decrementedSelected > this.max);
	    };
	    TimepickerComponent.prototype.addMinutesToSelected = function (minutes) {
	        this.selected = addMinutes(this.selected, minutes);
	        this.refresh();
	    };
	    TimepickerComponent.prototype.noToggleMeridian = function () {
	        if (this.selected.getHours() < 13) {
	            return addMinutes(this.selected, 12 * 60) > this.max;
	        }
	        else {
	            return addMinutes(this.selected, -12 * 60) < this.min;
	        }
	    };
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Number)
	    ], TimepickerComponent.prototype, "hourStep", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Number)
	    ], TimepickerComponent.prototype, "minuteStep", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Boolean)
	    ], TimepickerComponent.prototype, "readonlyInput", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Boolean)
	    ], TimepickerComponent.prototype, "mousewheel", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Boolean)
	    ], TimepickerComponent.prototype, "arrowkeys", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Boolean)
	    ], TimepickerComponent.prototype, "showSpinners", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Date)
	    ], TimepickerComponent.prototype, "min", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Date)
	    ], TimepickerComponent.prototype, "max", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Array)
	    ], TimepickerComponent.prototype, "meridians", void 0);
	    __decorate([
	        // ??
	        core_1.Input(), 
	        __metadata('design:type', Boolean)
	    ], TimepickerComponent.prototype, "showMeridian", null);
	    TimepickerComponent = __decorate([
	        core_1.Component({
	            /* tslint:disable */
	            selector: 'timepicker[ngModel]',
	            /* tslint:enable */
	            directives: [common_1.NgClass],
	            template: "\n    <table>\n      <tbody>\n        <tr class=\"text-center\" [ngClass]=\"{hidden: !showSpinners}\">\n          <td><a (click)=\"incrementHours()\" [ngClass]=\"{disabled: noIncrementHours()}\" class=\"btn btn-link\"><span class=\"glyphicon glyphicon-chevron-up\"></span></a></td>\n          <td>&nbsp;</td>\n          <td><a (click)=\"incrementMinutes()\" [ngClass]=\"{disabled: noIncrementMinutes()}\" class=\"btn btn-link\"><span class=\"glyphicon glyphicon-chevron-up\"></span></a></td>\n          <td [ngClass]=\"{hidden: !showMeridian}\" *ngIf=\"showMeridian\"></td>\n        </tr>\n        <tr>\n          <td class=\"form-group\" [ngClass]=\"{'has-error': invalidHours}\">\n            <input style=\"width:50px;\" type=\"text\" [(ngModel)]=\"hours\" (change)=\"updateHours()\" class=\"form-control text-center\" [readonly]=\"readonlyInput\" (blur)=\"hoursOnBlur($event)\" maxlength=\"2\">\n          </td>\n          <td>:</td>\n          <td class=\"form-group\" [ngClass]=\"{'has-error': invalidMinutes}\">\n            <input style=\"width:50px;\" type=\"text\" [(ngModel)]=\"minutes\" (change)=\"updateMinutes()\" class=\"form-control text-center\" [readonly]=\"readonlyInput\" (blur)=\"minutesOnBlur($event)\" maxlength=\"2\">\n          </td>\n          <td [ngClass]=\"{hidden: !showMeridian}\" *ngIf=\"showMeridian\"><button type=\"button\" [ngClass]=\"{disabled: noToggleMeridian()}\" class=\"btn btn-default text-center\" (click)=\"toggleMeridian()\">{{meridian}}</button></td>\n        </tr>\n        <tr class=\"text-center\" [ngClass]=\"{hidden: !showSpinners}\">\n          <td><a (click)=\"decrementHours()\" [ngClass]=\"{disabled: noDecrementHours()}\" class=\"btn btn-link\"><span class=\"glyphicon glyphicon-chevron-down\"></span></a></td>\n          <td>&nbsp;</td>\n          <td><a (click)=\"decrementMinutes()\" [ngClass]=\"{disabled: noDecrementMinutes()}\" class=\"btn btn-link\"><span class=\"glyphicon glyphicon-chevron-down\"></span></a></td>\n          <td [ngClass]=\"{hidden: !showMeridian}\" *ngIf=\"showMeridian\"></td>\n        </tr>\n      </tbody>\n    </table>\n  "
	        }),
	        __param(0, core_1.Self()), 
	        __metadata('design:paramtypes', [common_1.NgModel])
	    ], TimepickerComponent);
	    return TimepickerComponent;
	}());
	exports.TimepickerComponent = TimepickerComponent;


/***/ }),
/* 498 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var tooltip_directive_1 = __webpack_require__(499);
	var tooltip_container_component_1 = __webpack_require__(501);
	var tooltip_directive_2 = __webpack_require__(499);
	exports.TooltipDirective = tooltip_directive_2.TooltipDirective;
	var tooltip_container_component_2 = __webpack_require__(501);
	exports.TooltipContainerComponent = tooltip_container_component_2.TooltipContainerComponent;
	exports.TOOLTIP_DIRECTIVES = [tooltip_directive_1.TooltipDirective, tooltip_container_component_1.TooltipContainerComponent];


/***/ }),
/* 499 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var __metadata = (this && this.__metadata) || function (k, v) {
	    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
	};
	var core_1 = __webpack_require__(2);
	var tooltip_options_class_1 = __webpack_require__(500);
	var tooltip_container_component_1 = __webpack_require__(501);
	var TooltipDirective = (function () {
	    function TooltipDirective(viewContainerRef, loader) {
	        this.placement = 'top';
	        this.enable = true;
	        this.animation = true;
	        this.visible = false;
	        this.viewContainerRef = viewContainerRef;
	        this.loader = loader;
	    }
	    // todo: filter triggers
	    // params: event, target
	    TooltipDirective.prototype.show = function () {
	        if (this.visible || !this.enable) {
	            return;
	        }
	        this.visible = true;
	        var options = new tooltip_options_class_1.TooltipOptions({
	            content: this.content,
	            placement: this.placement,
	            animation: this.animation,
	            hostEl: this.viewContainerRef.element
	        });
	        var binding = core_1.ReflectiveInjector.resolve([
	            new core_1.Provider(tooltip_options_class_1.TooltipOptions, { useValue: options })
	        ]);
	        this.tooltip = this.loader
	            .loadNextToLocation(tooltip_container_component_1.TooltipContainerComponent, this.viewContainerRef, binding)
	            .then(function (componentRef) {
	            return componentRef;
	        });
	    };
	    // params event, target
	    TooltipDirective.prototype.hide = function () {
	        if (!this.visible) {
	            return;
	        }
	        this.visible = false;
	        this.tooltip.then(function (componentRef) {
	            componentRef.destroy();
	            return componentRef;
	        });
	    };
	    __decorate([
	        core_1.Input('tooltip'), 
	        __metadata('design:type', String)
	    ], TooltipDirective.prototype, "content", void 0);
	    __decorate([
	        core_1.Input('tooltipPlacement'), 
	        __metadata('design:type', String)
	    ], TooltipDirective.prototype, "placement", void 0);
	    __decorate([
	        core_1.Input('tooltipIsOpen'), 
	        __metadata('design:type', Boolean)
	    ], TooltipDirective.prototype, "isOpen", void 0);
	    __decorate([
	        core_1.Input('tooltipEnable'), 
	        __metadata('design:type', Boolean)
	    ], TooltipDirective.prototype, "enable", void 0);
	    __decorate([
	        core_1.Input('tooltipAnimation'), 
	        __metadata('design:type', Boolean)
	    ], TooltipDirective.prototype, "animation", void 0);
	    __decorate([
	        core_1.Input('tooltipAppendToBody'), 
	        __metadata('design:type', Boolean)
	    ], TooltipDirective.prototype, "appendToBody", void 0);
	    __decorate([
	        core_1.HostListener('focusin', ['$event', '$target']),
	        core_1.HostListener('mouseenter', ['$event', '$target']), 
	        __metadata('design:type', Function), 
	        __metadata('design:paramtypes', []), 
	        __metadata('design:returntype', void 0)
	    ], TooltipDirective.prototype, "show", null);
	    __decorate([
	        core_1.HostListener('focusout', ['$event', '$target']),
	        core_1.HostListener('mouseleave', ['$event', '$target']), 
	        __metadata('design:type', Function), 
	        __metadata('design:paramtypes', []), 
	        __metadata('design:returntype', void 0)
	    ], TooltipDirective.prototype, "hide", null);
	    TooltipDirective = __decorate([
	        core_1.Directive({ selector: '[tooltip]' }), 
	        __metadata('design:paramtypes', [core_1.ViewContainerRef, core_1.DynamicComponentLoader])
	    ], TooltipDirective);
	    return TooltipDirective;
	}());
	exports.TooltipDirective = TooltipDirective;


/***/ }),
/* 500 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var __metadata = (this && this.__metadata) || function (k, v) {
	    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
	};
	var core_1 = __webpack_require__(2);
	var TooltipOptions = (function () {
	    function TooltipOptions(options) {
	        Object.assign(this, options);
	    }
	    TooltipOptions = __decorate([
	        core_1.Injectable(), 
	        __metadata('design:paramtypes', [Object])
	    ], TooltipOptions);
	    return TooltipOptions;
	}());
	exports.TooltipOptions = TooltipOptions;


/***/ }),
/* 501 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var __metadata = (this && this.__metadata) || function (k, v) {
	    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
	};
	var __param = (this && this.__param) || function (paramIndex, decorator) {
	    return function (target, key) { decorator(target, key, paramIndex); }
	};
	var core_1 = __webpack_require__(2);
	var common_1 = __webpack_require__(182);
	var position_1 = __webpack_require__(362);
	var tooltip_options_class_1 = __webpack_require__(500);
	var TooltipContainerComponent = (function () {
	    function TooltipContainerComponent(element, cdr, options) {
	        this.top = '-1000px';
	        this.left = '-1000px';
	        this.display = 'block';
	        this.element = element;
	        this.cdr = cdr;
	        Object.assign(this, options);
	        this.classMap = { 'in': false, 'fade': false };
	        this.classMap[options.placement] = true;
	        this.classMap['tooltip-' + options.placement] = true;
	    }
	    TooltipContainerComponent.prototype.ngAfterViewInit = function () {
	        var p = position_1.positionService
	            .positionElements(this.hostEl.nativeElement, this.element.nativeElement.children[0], this.placement, this.appendToBody);
	        this.top = p.top + 'px';
	        this.left = p.left + 'px';
	        this.classMap.in = true;
	        if (this.animation) {
	            this.classMap.fade = true;
	        }
	        this.cdr.detectChanges();
	    };
	    TooltipContainerComponent = __decorate([
	        core_1.Component({
	            selector: 'tooltip-container',
	            directives: [common_1.NgClass, common_1.NgStyle],
	            // changeDetection: ChangeDetectionStrategy.OnPush,
	            template: "<div class=\"tooltip\" role=\"tooltip\"\n     [ngStyle]=\"{top: top, left: left, display: display}\"\n     [ngClass]=\"classMap\">\n      <div class=\"tooltip-arrow\"></div>\n      <div class=\"tooltip-inner\">\n        {{content}}\n      </div>\n    </div>"
	        }),
	        __param(2, core_1.Inject(tooltip_options_class_1.TooltipOptions)), 
	        __metadata('design:paramtypes', [core_1.ElementRef, core_1.ChangeDetectorRef, tooltip_options_class_1.TooltipOptions])
	    ], TooltipContainerComponent);
	    return TooltipContainerComponent;
	}());
	exports.TooltipContainerComponent = TooltipContainerComponent;


/***/ }),
/* 502 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var typeahead_directive_1 = __webpack_require__(503);
	var typeahead_container_component_1 = __webpack_require__(506);
	var typeahead_directive_2 = __webpack_require__(503);
	exports.TypeaheadDirective = typeahead_directive_2.TypeaheadDirective;
	var typeahead_container_component_2 = __webpack_require__(506);
	exports.TypeaheadContainerComponent = typeahead_container_component_2.TypeaheadContainerComponent;
	var typeahead_options_class_1 = __webpack_require__(507);
	exports.TypeaheadOptions = typeahead_options_class_1.TypeaheadOptions;
	exports.TYPEAHEAD_DIRECTIVES = [typeahead_directive_1.TypeaheadDirective, typeahead_container_component_1.TypeaheadContainerComponent];


/***/ }),
/* 503 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var __metadata = (this && this.__metadata) || function (k, v) {
	    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
	};
	var core_1 = __webpack_require__(2);
	var common_1 = __webpack_require__(182);
	var typeahead_utils_1 = __webpack_require__(504);
	var typeahead_container_component_1 = __webpack_require__(506);
	var typeahead_options_class_1 = __webpack_require__(507);
	var lang_1 = __webpack_require__(5);
	/* tslint:disable */
	var KeyboardEvent = lang_1.global.KeyboardEvent;
	/* tslint:enable */
	// https://github.com/angular/angular/blob/master/modules/@angular/src/core/forms/directives/shared.ts
	function setProperty(renderer, elementRef, propName, propValue) {
	    renderer.setElementProperty(elementRef.nativeElement, propName, propValue);
	}
	var TypeaheadDirective = (function () {
	    function TypeaheadDirective(cd, viewContainerRef, element, renderer, loader) {
	        this.typeaheadLoading = new core_1.EventEmitter(false);
	        this.typeaheadNoResults = new core_1.EventEmitter(false);
	        this.typeaheadOnSelect = new core_1.EventEmitter(false);
	        this.typeaheadMinLength = void 0;
	        this.typeaheadAsync = void 0;
	        this.typeaheadLatinize = true;
	        this.typeaheadSingleWords = true;
	        this.typeaheadWordDelimiters = ' ';
	        this.typeaheadPhraseDelimiters = '\'"';
	        this.isTypeaheadOptionsListActive = false;
	        this._matches = [];
	        this.placement = 'bottom-left';
	        this.element = element;
	        this.cd = cd;
	        this.viewContainerRef = viewContainerRef;
	        this.renderer = renderer;
	        this.loader = loader;
	    }
	    TypeaheadDirective.prototype.onChange = function (e) {
	        if (this.container) {
	            // esc
	            if (e.keyCode === 27) {
	                this.hide();
	                return;
	            }
	            // up
	            if (e.keyCode === 38) {
	                this.container.prevActiveMatch();
	                return;
	            }
	            // down
	            if (e.keyCode === 40) {
	                this.container.nextActiveMatch();
	                return;
	            }
	            // enter
	            if (e.keyCode === 13) {
	                this.container.selectActiveMatch();
	                return;
	            }
	        }
	        // Ensure that we have typed enough characters before triggering the
	        // matchers
	        if (this.cd.model.toString().length >= this.typeaheadMinLength) {
	            this.typeaheadLoading.emit(true);
	            if (this.typeaheadAsync === true) {
	                this.debouncer();
	            }
	            if (!this.typeaheadAsync) {
	                this.processMatches();
	                this.finalizeAsyncCall();
	            }
	        }
	        else {
	            // Not enough characters typed? Hide the popup.
	            this.hide();
	        }
	    };
	    TypeaheadDirective.prototype.onFocus = function () {
	        if (this.typeaheadMinLength === 0) {
	            this.typeaheadLoading.emit(true);
	            if (this.typeaheadAsync === true) {
	                this.debouncer();
	            }
	            if (!this.typeaheadAsync) {
	                this.processMatches();
	                this.finalizeAsyncCall();
	            }
	        }
	    };
	    TypeaheadDirective.prototype.onBlur = function () {
	        if (this.container && !this.container.isFocused) {
	            this.hide();
	        }
	    };
	    TypeaheadDirective.prototype.onKeydown = function (e) {
	        // no container - no problems
	        if (!this.container) {
	            return;
	        }
	        // if items is visible - prevent form submition
	        if (e.keyCode === 13) {
	            e.preventDefault();
	            return;
	        }
	        // if shift + tab, close items list
	        if (e.shiftKey && e.keyCode === 9) {
	            this.hide();
	            return;
	        }
	        // if tab select current item
	        if (!e.shiftKey && e.keyCode === 9) {
	            this.container.selectActiveMatch();
	            return;
	        }
	    };
	    TypeaheadDirective.prototype.ngOnInit = function () {
	        var _this = this;
	        this.typeaheadOptionsLimit = this.typeaheadOptionsLimit || 20;
	        this.typeaheadMinLength = this.typeaheadMinLength === void 0 ? 1 : this.typeaheadMinLength;
	        this.typeaheadWaitMs = this.typeaheadWaitMs || 0;
	        // async should be false in case of array
	        if (this.typeaheadAsync === void 0 && typeof this.typeahead !== 'function') {
	            this.typeaheadAsync = false;
	        }
	        // async should be true for any case of function
	        if (typeof this.typeahead === 'function') {
	            this.typeaheadAsync = true;
	        }
	        if (this.typeaheadAsync === true) {
	            this.debouncer = this.debounce(function () {
	                if (typeof _this.typeahead === 'function') {
	                    _this.typeahead()
	                        .then(function (matches) {
	                        _this._matches = [];
	                        for (var i = 0; i < matches.length; i++) {
	                            _this._matches.push(matches[i]);
	                            if (_this._matches.length > _this.typeaheadOptionsLimit - 1) {
	                                break;
	                            }
	                        }
	                        _this.finalizeAsyncCall();
	                    });
	                }
	                // source is array
	                if (typeof _this.typeahead === 'object' && _this.typeahead.length) {
	                    _this.processMatches();
	                    _this.finalizeAsyncCall();
	                }
	            }, 100);
	        }
	    };
	    TypeaheadDirective.prototype.show = function (matches) {
	        var _this = this;
	        var options = new typeahead_options_class_1.TypeaheadOptions({
	            typeaheadRef: this,
	            placement: this.placement,
	            animation: false
	        });
	        var binding = core_1.ReflectiveInjector.resolve([
	            core_1.provide(typeahead_options_class_1.TypeaheadOptions, { useValue: options })
	        ]);
	        this.popup = this.loader
	            .loadNextToLocation(typeahead_container_component_1.TypeaheadContainerComponent, this.viewContainerRef, binding)
	            .then(function (componentRef) {
	            componentRef.instance.position(_this.viewContainerRef.element);
	            _this.container = componentRef.instance;
	            _this.container.parent = _this;
	            // This improves the speedas it won't have to be done for each list item
	            var normalizedQuery = (_this.typeaheadLatinize
	                ? typeahead_utils_1.TypeaheadUtils.latinize(_this.cd.model)
	                : _this.cd.model).toString()
	                .toLowerCase();
	            _this.container.query = _this.typeaheadSingleWords
	                ? typeahead_utils_1.TypeaheadUtils.tokenize(normalizedQuery, _this.typeaheadWordDelimiters, _this.typeaheadPhraseDelimiters)
	                : normalizedQuery;
	            _this.container.matches = matches;
	            _this.container.field = _this.typeaheadOptionField;
	            _this.element.nativeElement.focus();
	            return componentRef;
	        });
	    };
	    TypeaheadDirective.prototype.hide = function () {
	        var _this = this;
	        if (this.container) {
	            this.popup.then(function (componentRef) {
	                componentRef.destroy();
	                _this.container = void 0;
	                return componentRef;
	            });
	        }
	    };
	    TypeaheadDirective.prototype.changeModel = function (value) {
	        var valueStr = ((typeof value === 'object' && this.typeaheadOptionField)
	            ? value[this.typeaheadOptionField]
	            : value).toString();
	        this.cd.viewToModelUpdate(valueStr);
	        setProperty(this.renderer, this.element, 'value', valueStr);
	        this.hide();
	    };
	    Object.defineProperty(TypeaheadDirective.prototype, "matches", {
	        get: function () {
	            return this._matches;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    TypeaheadDirective.prototype.debounce = function (func, wait) {
	        var timeout;
	        var args;
	        var timestamp;
	        var waitOriginal = wait;
	        return function () {
	            // save details of latest call
	            args = [].slice.call(arguments, 0);
	            timestamp = Date.now();
	            // this trick is about implementing of 'typeaheadWaitMs'
	            // in this case we have adaptive 'wait' parameter
	            // we should use standard 'wait'('waitOriginal') in case of
	            // popup is opened, otherwise - 'typeaheadWaitMs' parameter
	            wait = this.container ? waitOriginal : this.typeaheadWaitMs;
	            // this is where the magic happens
	            var later = function () {
	                // how long ago was the last call
	                var last = Date.now() - timestamp;
	                // if the latest call was less that the wait period ago
	                // then we reset the timeout to wait for the difference
	                if (last < wait) {
	                    timeout = setTimeout(later, wait - last);
	                }
	                else {
	                    timeout = void 0;
	                    func.apply(this, args);
	                }
	            };
	            // we only need to set the timer now if one isn't already running
	            if (!timeout) {
	                timeout = setTimeout(later, wait);
	            }
	        };
	    };
	    TypeaheadDirective.prototype.processMatches = function () {
	        this._matches = [];
	        if (!this.typeahead) {
	            return;
	        }
	        if (!this.cd.model) {
	            for (var i = 0; i < Math.min(this.typeaheadOptionsLimit, this.typeahead.length); i++) {
	                this._matches.push(this.typeahead[i]);
	            }
	            return;
	        }
	        // If singleWords, break model here to not be doing extra work on each
	        // iteration
	        var normalizedQuery = (this.typeaheadLatinize
	            ? typeahead_utils_1.TypeaheadUtils.latinize(this.cd.model)
	            : this.cd.model).toString()
	            .toLowerCase();
	        normalizedQuery = this.typeaheadSingleWords
	            ? typeahead_utils_1.TypeaheadUtils.tokenize(normalizedQuery, this.typeaheadWordDelimiters, this.typeaheadPhraseDelimiters)
	            : normalizedQuery;
	        for (var i = 0; i < this.typeahead.length; i++) {
	            var match = void 0;
	            if (typeof this.typeahead[i] === 'object' &&
	                this.typeahead[i][this.typeaheadOptionField]) {
	                match = this.typeaheadLatinize
	                    ? typeahead_utils_1.TypeaheadUtils.latinize(this.typeahead[i][this.typeaheadOptionField].toString())
	                    : this.typeahead[i][this.typeaheadOptionField].toString();
	            }
	            if (typeof this.typeahead[i] === 'string') {
	                match = this.typeaheadLatinize
	                    ? typeahead_utils_1.TypeaheadUtils.latinize(this.typeahead[i].toString())
	                    : this.typeahead[i].toString();
	            }
	            if (!match) {
	                console.log('Invalid match type', typeof this.typeahead[i], this.typeaheadOptionField);
	                continue;
	            }
	            if (this.testMatch(match.toLowerCase(), normalizedQuery)) {
	                this._matches.push(this.typeahead[i]);
	                if (this._matches.length > this.typeaheadOptionsLimit - 1) {
	                    break;
	                }
	            }
	        }
	    };
	    TypeaheadDirective.prototype.testMatch = function (match, test) {
	        var spaceLength;
	        if (typeof test === 'object') {
	            spaceLength = test.length;
	            for (var i = 0; i < spaceLength; i += 1) {
	                if (test[i].length > 0 && match.indexOf(test[i]) < 0) {
	                    return false;
	                }
	            }
	            return true;
	        }
	        else {
	            return match.indexOf(test) >= 0;
	        }
	    };
	    TypeaheadDirective.prototype.finalizeAsyncCall = function () {
	        this.typeaheadLoading.emit(false);
	        this.typeaheadNoResults.emit(this.cd.model.toString().length >=
	            this.typeaheadMinLength && this.matches.length <= 0);
	        if (this._matches.length <= 0) {
	            this.hide();
	            return;
	        }
	        if (this.container && this._matches.length > 0) {
	            // This improves the speedas it won't have to be done for each list item
	            var normalizedQuery = (this.typeaheadLatinize
	                ? typeahead_utils_1.TypeaheadUtils.latinize(this.cd.model)
	                : this.cd.model).toString()
	                .toLowerCase();
	            this.container.query = this.typeaheadSingleWords
	                ? typeahead_utils_1.TypeaheadUtils.tokenize(normalizedQuery, this.typeaheadWordDelimiters, this.typeaheadPhraseDelimiters)
	                : normalizedQuery;
	            this.container.matches = this._matches;
	        }
	        if (!this.container && this._matches.length > 0) {
	            this.show(this._matches);
	        }
	    };
	    __decorate([
	        core_1.Output(), 
	        __metadata('design:type', core_1.EventEmitter)
	    ], TypeaheadDirective.prototype, "typeaheadLoading", void 0);
	    __decorate([
	        core_1.Output(), 
	        __metadata('design:type', core_1.EventEmitter)
	    ], TypeaheadDirective.prototype, "typeaheadNoResults", void 0);
	    __decorate([
	        core_1.Output(), 
	        __metadata('design:type', core_1.EventEmitter)
	    ], TypeaheadDirective.prototype, "typeaheadOnSelect", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Object)
	    ], TypeaheadDirective.prototype, "typeahead", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Number)
	    ], TypeaheadDirective.prototype, "typeaheadMinLength", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Number)
	    ], TypeaheadDirective.prototype, "typeaheadWaitMs", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Number)
	    ], TypeaheadDirective.prototype, "typeaheadOptionsLimit", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', String)
	    ], TypeaheadDirective.prototype, "typeaheadOptionField", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Boolean)
	    ], TypeaheadDirective.prototype, "typeaheadAsync", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Boolean)
	    ], TypeaheadDirective.prototype, "typeaheadLatinize", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Boolean)
	    ], TypeaheadDirective.prototype, "typeaheadSingleWords", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', String)
	    ], TypeaheadDirective.prototype, "typeaheadWordDelimiters", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', String)
	    ], TypeaheadDirective.prototype, "typeaheadPhraseDelimiters", void 0);
	    __decorate([
	        core_1.HostListener('keyup', ['$event']), 
	        __metadata('design:type', Function), 
	        __metadata('design:paramtypes', [Object]), 
	        __metadata('design:returntype', void 0)
	    ], TypeaheadDirective.prototype, "onChange", null);
	    __decorate([
	        core_1.HostListener('focus', ['$event.target']), 
	        __metadata('design:type', Function), 
	        __metadata('design:paramtypes', []), 
	        __metadata('design:returntype', void 0)
	    ], TypeaheadDirective.prototype, "onFocus", null);
	    __decorate([
	        core_1.HostListener('blur', ['$event.target']), 
	        __metadata('design:type', Function), 
	        __metadata('design:paramtypes', []), 
	        __metadata('design:returntype', void 0)
	    ], TypeaheadDirective.prototype, "onBlur", null);
	    __decorate([
	        core_1.HostListener('keydown', ['$event']), 
	        __metadata('design:type', Function), 
	        __metadata('design:paramtypes', [Object]), 
	        __metadata('design:returntype', void 0)
	    ], TypeaheadDirective.prototype, "onKeydown", null);
	    TypeaheadDirective = __decorate([
	        core_1.Directive({
	            selector: '[typeahead][ngModel]'
	        }), 
	        __metadata('design:paramtypes', [common_1.NgModel, core_1.ViewContainerRef, core_1.ElementRef, core_1.Renderer, core_1.DynamicComponentLoader])
	    ], TypeaheadDirective);
	    return TypeaheadDirective;
	}());
	exports.TypeaheadDirective = TypeaheadDirective;


/***/ }),
/* 504 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var latin_map_1 = __webpack_require__(505);
	var TypeaheadUtils = (function () {
	    function TypeaheadUtils() {
	    }
	    TypeaheadUtils.latinize = function (str) {
	        return str.replace(/[^A-Za-z0-9\[\] ]/g, function (a) {
	            return TypeaheadUtils.latinMap[a] || a;
	        });
	    };
	    TypeaheadUtils.escapeRegexp = function (queryToEscape) {
	        // Regex: capture the whole query string and replace it with the string
	        // that will be used to match the results, for example if the capture is
	        // 'a' the result will be \a
	        return queryToEscape.replace(/([.?*+^$[\]\\(){}|-])/g, '\\$1');
	    };
	    /* tslint:disable */
	    TypeaheadUtils.tokenize = function (str, wordRegexDelimiters, phraseRegexDelimiters) {
	        if (wordRegexDelimiters === void 0) { wordRegexDelimiters = ' '; }
	        if (phraseRegexDelimiters === void 0) { phraseRegexDelimiters = ''; }
	        /* tslint:enable */
	        var regexStr = '(?:[' + phraseRegexDelimiters + '])([^' + phraseRegexDelimiters + ']+)(?:[' + phraseRegexDelimiters + '])|([^' + wordRegexDelimiters + ']+)';
	        var preTokenized = str.split(new RegExp(regexStr, 'g'));
	        var result = [];
	        var preTokenizedLength = preTokenized.length;
	        var token;
	        var replacePhraseDelimiters = new RegExp('[' + phraseRegexDelimiters + ']+', 'g');
	        for (var i = 0; i < preTokenizedLength; i += 1) {
	            token = preTokenized[i];
	            if (token && token.length && token !== wordRegexDelimiters) {
	                result.push(token.replace(replacePhraseDelimiters, ''));
	            }
	        }
	        return result;
	    };
	    TypeaheadUtils.latinMap = latin_map_1.latinMap;
	    return TypeaheadUtils;
	}());
	exports.TypeaheadUtils = TypeaheadUtils;


/***/ }),
/* 505 */
/***/ (function(module, exports) {

	"use strict";
	exports.latinMap = {
	    'Á': 'A',
	    'Ă': 'A',
	    'Ắ': 'A',
	    'Ặ': 'A',
	    'Ằ': 'A',
	    'Ẳ': 'A',
	    'Ẵ': 'A',
	    'Ǎ': 'A',
	    'Â': 'A',
	    'Ấ': 'A',
	    'Ậ': 'A',
	    'Ầ': 'A',
	    'Ẩ': 'A',
	    'Ẫ': 'A',
	    'Ä': 'A',
	    'Ǟ': 'A',
	    'Ȧ': 'A',
	    'Ǡ': 'A',
	    'Ạ': 'A',
	    'Ȁ': 'A',
	    'À': 'A',
	    'Ả': 'A',
	    'Ȃ': 'A',
	    'Ā': 'A',
	    'Ą': 'A',
	    'Å': 'A',
	    'Ǻ': 'A',
	    'Ḁ': 'A',
	    'Ⱥ': 'A',
	    'Ã': 'A',
	    'Ꜳ': 'AA',
	    'Æ': 'AE',
	    'Ǽ': 'AE',
	    'Ǣ': 'AE',
	    'Ꜵ': 'AO',
	    'Ꜷ': 'AU',
	    'Ꜹ': 'AV',
	    'Ꜻ': 'AV',
	    'Ꜽ': 'AY',
	    'Ḃ': 'B',
	    'Ḅ': 'B',
	    'Ɓ': 'B',
	    'Ḇ': 'B',
	    'Ƀ': 'B',
	    'Ƃ': 'B',
	    'Ć': 'C',
	    'Č': 'C',
	    'Ç': 'C',
	    'Ḉ': 'C',
	    'Ĉ': 'C',
	    'Ċ': 'C',
	    'Ƈ': 'C',
	    'Ȼ': 'C',
	    'Ď': 'D',
	    'Ḑ': 'D',
	    'Ḓ': 'D',
	    'Ḋ': 'D',
	    'Ḍ': 'D',
	    'Ɗ': 'D',
	    'Ḏ': 'D',
	    'ǲ': 'D',
	    'ǅ': 'D',
	    'Đ': 'D',
	    'Ƌ': 'D',
	    'Ǳ': 'DZ',
	    'Ǆ': 'DZ',
	    'É': 'E',
	    'Ĕ': 'E',
	    'Ě': 'E',
	    'Ȩ': 'E',
	    'Ḝ': 'E',
	    'Ê': 'E',
	    'Ế': 'E',
	    'Ệ': 'E',
	    'Ề': 'E',
	    'Ể': 'E',
	    'Ễ': 'E',
	    'Ḙ': 'E',
	    'Ë': 'E',
	    'Ė': 'E',
	    'Ẹ': 'E',
	    'Ȅ': 'E',
	    'È': 'E',
	    'Ẻ': 'E',
	    'Ȇ': 'E',
	    'Ē': 'E',
	    'Ḗ': 'E',
	    'Ḕ': 'E',
	    'Ę': 'E',
	    'Ɇ': 'E',
	    'Ẽ': 'E',
	    'Ḛ': 'E',
	    'Ꝫ': 'ET',
	    'Ḟ': 'F',
	    'Ƒ': 'F',
	    'Ǵ': 'G',
	    'Ğ': 'G',
	    'Ǧ': 'G',
	    'Ģ': 'G',
	    'Ĝ': 'G',
	    'Ġ': 'G',
	    'Ɠ': 'G',
	    'Ḡ': 'G',
	    'Ǥ': 'G',
	    'Ḫ': 'H',
	    'Ȟ': 'H',
	    'Ḩ': 'H',
	    'Ĥ': 'H',
	    'Ⱨ': 'H',
	    'Ḧ': 'H',
	    'Ḣ': 'H',
	    'Ḥ': 'H',
	    'Ħ': 'H',
	    'Í': 'I',
	    'Ĭ': 'I',
	    'Ǐ': 'I',
	    'Î': 'I',
	    'Ï': 'I',
	    'Ḯ': 'I',
	    'İ': 'I',
	    'Ị': 'I',
	    'Ȉ': 'I',
	    'Ì': 'I',
	    'Ỉ': 'I',
	    'Ȋ': 'I',
	    'Ī': 'I',
	    'Į': 'I',
	    'Ɨ': 'I',
	    'Ĩ': 'I',
	    'Ḭ': 'I',
	    'Ꝺ': 'D',
	    'Ꝼ': 'F',
	    'Ᵹ': 'G',
	    'Ꞃ': 'R',
	    'Ꞅ': 'S',
	    'Ꞇ': 'T',
	    'Ꝭ': 'IS',
	    'Ĵ': 'J',
	    'Ɉ': 'J',
	    'Ḱ': 'K',
	    'Ǩ': 'K',
	    'Ķ': 'K',
	    'Ⱪ': 'K',
	    'Ꝃ': 'K',
	    'Ḳ': 'K',
	    'Ƙ': 'K',
	    'Ḵ': 'K',
	    'Ꝁ': 'K',
	    'Ꝅ': 'K',
	    'Ĺ': 'L',
	    'Ƚ': 'L',
	    'Ľ': 'L',
	    'Ļ': 'L',
	    'Ḽ': 'L',
	    'Ḷ': 'L',
	    'Ḹ': 'L',
	    'Ⱡ': 'L',
	    'Ꝉ': 'L',
	    'Ḻ': 'L',
	    'Ŀ': 'L',
	    'Ɫ': 'L',
	    'ǈ': 'L',
	    'Ł': 'L',
	    'Ǉ': 'LJ',
	    'Ḿ': 'M',
	    'Ṁ': 'M',
	    'Ṃ': 'M',
	    'Ɱ': 'M',
	    'Ń': 'N',
	    'Ň': 'N',
	    'Ņ': 'N',
	    'Ṋ': 'N',
	    'Ṅ': 'N',
	    'Ṇ': 'N',
	    'Ǹ': 'N',
	    'Ɲ': 'N',
	    'Ṉ': 'N',
	    'Ƞ': 'N',
	    'ǋ': 'N',
	    'Ñ': 'N',
	    'Ǌ': 'NJ',
	    'Ó': 'O',
	    'Ŏ': 'O',
	    'Ǒ': 'O',
	    'Ô': 'O',
	    'Ố': 'O',
	    'Ộ': 'O',
	    'Ồ': 'O',
	    'Ổ': 'O',
	    'Ỗ': 'O',
	    'Ö': 'O',
	    'Ȫ': 'O',
	    'Ȯ': 'O',
	    'Ȱ': 'O',
	    'Ọ': 'O',
	    'Ő': 'O',
	    'Ȍ': 'O',
	    'Ò': 'O',
	    'Ỏ': 'O',
	    'Ơ': 'O',
	    'Ớ': 'O',
	    'Ợ': 'O',
	    'Ờ': 'O',
	    'Ở': 'O',
	    'Ỡ': 'O',
	    'Ȏ': 'O',
	    'Ꝋ': 'O',
	    'Ꝍ': 'O',
	    'Ō': 'O',
	    'Ṓ': 'O',
	    'Ṑ': 'O',
	    'Ɵ': 'O',
	    'Ǫ': 'O',
	    'Ǭ': 'O',
	    'Ø': 'O',
	    'Ǿ': 'O',
	    'Õ': 'O',
	    'Ṍ': 'O',
	    'Ṏ': 'O',
	    'Ȭ': 'O',
	    'Ƣ': 'OI',
	    'Ꝏ': 'OO',
	    'Ɛ': 'E',
	    'Ɔ': 'O',
	    'Ȣ': 'OU',
	    'Ṕ': 'P',
	    'Ṗ': 'P',
	    'Ꝓ': 'P',
	    'Ƥ': 'P',
	    'Ꝕ': 'P',
	    'Ᵽ': 'P',
	    'Ꝑ': 'P',
	    'Ꝙ': 'Q',
	    'Ꝗ': 'Q',
	    'Ŕ': 'R',
	    'Ř': 'R',
	    'Ŗ': 'R',
	    'Ṙ': 'R',
	    'Ṛ': 'R',
	    'Ṝ': 'R',
	    'Ȑ': 'R',
	    'Ȓ': 'R',
	    'Ṟ': 'R',
	    'Ɍ': 'R',
	    'Ɽ': 'R',
	    'Ꜿ': 'C',
	    'Ǝ': 'E',
	    'Ś': 'S',
	    'Ṥ': 'S',
	    'Š': 'S',
	    'Ṧ': 'S',
	    'Ş': 'S',
	    'Ŝ': 'S',
	    'Ș': 'S',
	    'Ṡ': 'S',
	    'Ṣ': 'S',
	    'Ṩ': 'S',
	    'Ť': 'T',
	    'Ţ': 'T',
	    'Ṱ': 'T',
	    'Ț': 'T',
	    'Ⱦ': 'T',
	    'Ṫ': 'T',
	    'Ṭ': 'T',
	    'Ƭ': 'T',
	    'Ṯ': 'T',
	    'Ʈ': 'T',
	    'Ŧ': 'T',
	    'Ɐ': 'A',
	    'Ꞁ': 'L',
	    'Ɯ': 'M',
	    'Ʌ': 'V',
	    'Ꜩ': 'TZ',
	    'Ú': 'U',
	    'Ŭ': 'U',
	    'Ǔ': 'U',
	    'Û': 'U',
	    'Ṷ': 'U',
	    'Ü': 'U',
	    'Ǘ': 'U',
	    'Ǚ': 'U',
	    'Ǜ': 'U',
	    'Ǖ': 'U',
	    'Ṳ': 'U',
	    'Ụ': 'U',
	    'Ű': 'U',
	    'Ȕ': 'U',
	    'Ù': 'U',
	    'Ủ': 'U',
	    'Ư': 'U',
	    'Ứ': 'U',
	    'Ự': 'U',
	    'Ừ': 'U',
	    'Ử': 'U',
	    'Ữ': 'U',
	    'Ȗ': 'U',
	    'Ū': 'U',
	    'Ṻ': 'U',
	    'Ų': 'U',
	    'Ů': 'U',
	    'Ũ': 'U',
	    'Ṹ': 'U',
	    'Ṵ': 'U',
	    'Ꝟ': 'V',
	    'Ṿ': 'V',
	    'Ʋ': 'V',
	    'Ṽ': 'V',
	    'Ꝡ': 'VY',
	    'Ẃ': 'W',
	    'Ŵ': 'W',
	    'Ẅ': 'W',
	    'Ẇ': 'W',
	    'Ẉ': 'W',
	    'Ẁ': 'W',
	    'Ⱳ': 'W',
	    'Ẍ': 'X',
	    'Ẋ': 'X',
	    'Ý': 'Y',
	    'Ŷ': 'Y',
	    'Ÿ': 'Y',
	    'Ẏ': 'Y',
	    'Ỵ': 'Y',
	    'Ỳ': 'Y',
	    'Ƴ': 'Y',
	    'Ỷ': 'Y',
	    'Ỿ': 'Y',
	    'Ȳ': 'Y',
	    'Ɏ': 'Y',
	    'Ỹ': 'Y',
	    'Ź': 'Z',
	    'Ž': 'Z',
	    'Ẑ': 'Z',
	    'Ⱬ': 'Z',
	    'Ż': 'Z',
	    'Ẓ': 'Z',
	    'Ȥ': 'Z',
	    'Ẕ': 'Z',
	    'Ƶ': 'Z',
	    'Ĳ': 'IJ',
	    'Œ': 'OE',
	    'ᴀ': 'A',
	    'ᴁ': 'AE',
	    'ʙ': 'B',
	    'ᴃ': 'B',
	    'ᴄ': 'C',
	    'ᴅ': 'D',
	    'ᴇ': 'E',
	    'ꜰ': 'F',
	    'ɢ': 'G',
	    'ʛ': 'G',
	    'ʜ': 'H',
	    'ɪ': 'I',
	    'ʁ': 'R',
	    'ᴊ': 'J',
	    'ᴋ': 'K',
	    'ʟ': 'L',
	    'ᴌ': 'L',
	    'ᴍ': 'M',
	    'ɴ': 'N',
	    'ᴏ': 'O',
	    'ɶ': 'OE',
	    'ᴐ': 'O',
	    'ᴕ': 'OU',
	    'ᴘ': 'P',
	    'ʀ': 'R',
	    'ᴎ': 'N',
	    'ᴙ': 'R',
	    'ꜱ': 'S',
	    'ᴛ': 'T',
	    'ⱻ': 'E',
	    'ᴚ': 'R',
	    'ᴜ': 'U',
	    'ᴠ': 'V',
	    'ᴡ': 'W',
	    'ʏ': 'Y',
	    'ᴢ': 'Z',
	    'á': 'a',
	    'ă': 'a',
	    'ắ': 'a',
	    'ặ': 'a',
	    'ằ': 'a',
	    'ẳ': 'a',
	    'ẵ': 'a',
	    'ǎ': 'a',
	    'â': 'a',
	    'ấ': 'a',
	    'ậ': 'a',
	    'ầ': 'a',
	    'ẩ': 'a',
	    'ẫ': 'a',
	    'ä': 'a',
	    'ǟ': 'a',
	    'ȧ': 'a',
	    'ǡ': 'a',
	    'ạ': 'a',
	    'ȁ': 'a',
	    'à': 'a',
	    'ả': 'a',
	    'ȃ': 'a',
	    'ā': 'a',
	    'ą': 'a',
	    'ᶏ': 'a',
	    'ẚ': 'a',
	    'å': 'a',
	    'ǻ': 'a',
	    'ḁ': 'a',
	    'ⱥ': 'a',
	    'ã': 'a',
	    'ꜳ': 'aa',
	    'æ': 'ae',
	    'ǽ': 'ae',
	    'ǣ': 'ae',
	    'ꜵ': 'ao',
	    'ꜷ': 'au',
	    'ꜹ': 'av',
	    'ꜻ': 'av',
	    'ꜽ': 'ay',
	    'ḃ': 'b',
	    'ḅ': 'b',
	    'ɓ': 'b',
	    'ḇ': 'b',
	    'ᵬ': 'b',
	    'ᶀ': 'b',
	    'ƀ': 'b',
	    'ƃ': 'b',
	    'ɵ': 'o',
	    'ć': 'c',
	    'č': 'c',
	    'ç': 'c',
	    'ḉ': 'c',
	    'ĉ': 'c',
	    'ɕ': 'c',
	    'ċ': 'c',
	    'ƈ': 'c',
	    'ȼ': 'c',
	    'ď': 'd',
	    'ḑ': 'd',
	    'ḓ': 'd',
	    'ȡ': 'd',
	    'ḋ': 'd',
	    'ḍ': 'd',
	    'ɗ': 'd',
	    'ᶑ': 'd',
	    'ḏ': 'd',
	    'ᵭ': 'd',
	    'ᶁ': 'd',
	    'đ': 'd',
	    'ɖ': 'd',
	    'ƌ': 'd',
	    'ı': 'i',
	    'ȷ': 'j',
	    'ɟ': 'j',
	    'ʄ': 'j',
	    'ǳ': 'dz',
	    'ǆ': 'dz',
	    'é': 'e',
	    'ĕ': 'e',
	    'ě': 'e',
	    'ȩ': 'e',
	    'ḝ': 'e',
	    'ê': 'e',
	    'ế': 'e',
	    'ệ': 'e',
	    'ề': 'e',
	    'ể': 'e',
	    'ễ': 'e',
	    'ḙ': 'e',
	    'ë': 'e',
	    'ė': 'e',
	    'ẹ': 'e',
	    'ȅ': 'e',
	    'è': 'e',
	    'ẻ': 'e',
	    'ȇ': 'e',
	    'ē': 'e',
	    'ḗ': 'e',
	    'ḕ': 'e',
	    'ⱸ': 'e',
	    'ę': 'e',
	    'ᶒ': 'e',
	    'ɇ': 'e',
	    'ẽ': 'e',
	    'ḛ': 'e',
	    'ꝫ': 'et',
	    'ḟ': 'f',
	    'ƒ': 'f',
	    'ᵮ': 'f',
	    'ᶂ': 'f',
	    'ǵ': 'g',
	    'ğ': 'g',
	    'ǧ': 'g',
	    'ģ': 'g',
	    'ĝ': 'g',
	    'ġ': 'g',
	    'ɠ': 'g',
	    'ḡ': 'g',
	    'ᶃ': 'g',
	    'ǥ': 'g',
	    'ḫ': 'h',
	    'ȟ': 'h',
	    'ḩ': 'h',
	    'ĥ': 'h',
	    'ⱨ': 'h',
	    'ḧ': 'h',
	    'ḣ': 'h',
	    'ḥ': 'h',
	    'ɦ': 'h',
	    'ẖ': 'h',
	    'ħ': 'h',
	    'ƕ': 'hv',
	    'í': 'i',
	    'ĭ': 'i',
	    'ǐ': 'i',
	    'î': 'i',
	    'ï': 'i',
	    'ḯ': 'i',
	    'ị': 'i',
	    'ȉ': 'i',
	    'ì': 'i',
	    'ỉ': 'i',
	    'ȋ': 'i',
	    'ī': 'i',
	    'į': 'i',
	    'ᶖ': 'i',
	    'ɨ': 'i',
	    'ĩ': 'i',
	    'ḭ': 'i',
	    'ꝺ': 'd',
	    'ꝼ': 'f',
	    'ᵹ': 'g',
	    'ꞃ': 'r',
	    'ꞅ': 's',
	    'ꞇ': 't',
	    'ꝭ': 'is',
	    'ǰ': 'j',
	    'ĵ': 'j',
	    'ʝ': 'j',
	    'ɉ': 'j',
	    'ḱ': 'k',
	    'ǩ': 'k',
	    'ķ': 'k',
	    'ⱪ': 'k',
	    'ꝃ': 'k',
	    'ḳ': 'k',
	    'ƙ': 'k',
	    'ḵ': 'k',
	    'ᶄ': 'k',
	    'ꝁ': 'k',
	    'ꝅ': 'k',
	    'ĺ': 'l',
	    'ƚ': 'l',
	    'ɬ': 'l',
	    'ľ': 'l',
	    'ļ': 'l',
	    'ḽ': 'l',
	    'ȴ': 'l',
	    'ḷ': 'l',
	    'ḹ': 'l',
	    'ⱡ': 'l',
	    'ꝉ': 'l',
	    'ḻ': 'l',
	    'ŀ': 'l',
	    'ɫ': 'l',
	    'ᶅ': 'l',
	    'ɭ': 'l',
	    'ł': 'l',
	    'ǉ': 'lj',
	    'ſ': 's',
	    'ẜ': 's',
	    'ẛ': 's',
	    'ẝ': 's',
	    'ḿ': 'm',
	    'ṁ': 'm',
	    'ṃ': 'm',
	    'ɱ': 'm',
	    'ᵯ': 'm',
	    'ᶆ': 'm',
	    'ń': 'n',
	    'ň': 'n',
	    'ņ': 'n',
	    'ṋ': 'n',
	    'ȵ': 'n',
	    'ṅ': 'n',
	    'ṇ': 'n',
	    'ǹ': 'n',
	    'ɲ': 'n',
	    'ṉ': 'n',
	    'ƞ': 'n',
	    'ᵰ': 'n',
	    'ᶇ': 'n',
	    'ɳ': 'n',
	    'ñ': 'n',
	    'ǌ': 'nj',
	    'ó': 'o',
	    'ŏ': 'o',
	    'ǒ': 'o',
	    'ô': 'o',
	    'ố': 'o',
	    'ộ': 'o',
	    'ồ': 'o',
	    'ổ': 'o',
	    'ỗ': 'o',
	    'ö': 'o',
	    'ȫ': 'o',
	    'ȯ': 'o',
	    'ȱ': 'o',
	    'ọ': 'o',
	    'ő': 'o',
	    'ȍ': 'o',
	    'ò': 'o',
	    'ỏ': 'o',
	    'ơ': 'o',
	    'ớ': 'o',
	    'ợ': 'o',
	    'ờ': 'o',
	    'ở': 'o',
	    'ỡ': 'o',
	    'ȏ': 'o',
	    'ꝋ': 'o',
	    'ꝍ': 'o',
	    'ⱺ': 'o',
	    'ō': 'o',
	    'ṓ': 'o',
	    'ṑ': 'o',
	    'ǫ': 'o',
	    'ǭ': 'o',
	    'ø': 'o',
	    'ǿ': 'o',
	    'õ': 'o',
	    'ṍ': 'o',
	    'ṏ': 'o',
	    'ȭ': 'o',
	    'ƣ': 'oi',
	    'ꝏ': 'oo',
	    'ɛ': 'e',
	    'ᶓ': 'e',
	    'ɔ': 'o',
	    'ᶗ': 'o',
	    'ȣ': 'ou',
	    'ṕ': 'p',
	    'ṗ': 'p',
	    'ꝓ': 'p',
	    'ƥ': 'p',
	    'ᵱ': 'p',
	    'ᶈ': 'p',
	    'ꝕ': 'p',
	    'ᵽ': 'p',
	    'ꝑ': 'p',
	    'ꝙ': 'q',
	    'ʠ': 'q',
	    'ɋ': 'q',
	    'ꝗ': 'q',
	    'ŕ': 'r',
	    'ř': 'r',
	    'ŗ': 'r',
	    'ṙ': 'r',
	    'ṛ': 'r',
	    'ṝ': 'r',
	    'ȑ': 'r',
	    'ɾ': 'r',
	    'ᵳ': 'r',
	    'ȓ': 'r',
	    'ṟ': 'r',
	    'ɼ': 'r',
	    'ᵲ': 'r',
	    'ᶉ': 'r',
	    'ɍ': 'r',
	    'ɽ': 'r',
	    'ↄ': 'c',
	    'ꜿ': 'c',
	    'ɘ': 'e',
	    'ɿ': 'r',
	    'ś': 's',
	    'ṥ': 's',
	    'š': 's',
	    'ṧ': 's',
	    'ş': 's',
	    'ŝ': 's',
	    'ș': 's',
	    'ṡ': 's',
	    'ṣ': 's',
	    'ṩ': 's',
	    'ʂ': 's',
	    'ᵴ': 's',
	    'ᶊ': 's',
	    'ȿ': 's',
	    'ɡ': 'g',
	    'ᴑ': 'o',
	    'ᴓ': 'o',
	    'ᴝ': 'u',
	    'ť': 't',
	    'ţ': 't',
	    'ṱ': 't',
	    'ț': 't',
	    'ȶ': 't',
	    'ẗ': 't',
	    'ⱦ': 't',
	    'ṫ': 't',
	    'ṭ': 't',
	    'ƭ': 't',
	    'ṯ': 't',
	    'ᵵ': 't',
	    'ƫ': 't',
	    'ʈ': 't',
	    'ŧ': 't',
	    'ᵺ': 'th',
	    'ɐ': 'a',
	    'ᴂ': 'ae',
	    'ǝ': 'e',
	    'ᵷ': 'g',
	    'ɥ': 'h',
	    'ʮ': 'h',
	    'ʯ': 'h',
	    'ᴉ': 'i',
	    'ʞ': 'k',
	    'ꞁ': 'l',
	    'ɯ': 'm',
	    'ɰ': 'm',
	    'ᴔ': 'oe',
	    'ɹ': 'r',
	    'ɻ': 'r',
	    'ɺ': 'r',
	    'ⱹ': 'r',
	    'ʇ': 't',
	    'ʌ': 'v',
	    'ʍ': 'w',
	    'ʎ': 'y',
	    'ꜩ': 'tz',
	    'ú': 'u',
	    'ŭ': 'u',
	    'ǔ': 'u',
	    'û': 'u',
	    'ṷ': 'u',
	    'ü': 'u',
	    'ǘ': 'u',
	    'ǚ': 'u',
	    'ǜ': 'u',
	    'ǖ': 'u',
	    'ṳ': 'u',
	    'ụ': 'u',
	    'ű': 'u',
	    'ȕ': 'u',
	    'ù': 'u',
	    'ủ': 'u',
	    'ư': 'u',
	    'ứ': 'u',
	    'ự': 'u',
	    'ừ': 'u',
	    'ử': 'u',
	    'ữ': 'u',
	    'ȗ': 'u',
	    'ū': 'u',
	    'ṻ': 'u',
	    'ų': 'u',
	    'ᶙ': 'u',
	    'ů': 'u',
	    'ũ': 'u',
	    'ṹ': 'u',
	    'ṵ': 'u',
	    'ᵫ': 'ue',
	    'ꝸ': 'um',
	    'ⱴ': 'v',
	    'ꝟ': 'v',
	    'ṿ': 'v',
	    'ʋ': 'v',
	    'ᶌ': 'v',
	    'ⱱ': 'v',
	    'ṽ': 'v',
	    'ꝡ': 'vy',
	    'ẃ': 'w',
	    'ŵ': 'w',
	    'ẅ': 'w',
	    'ẇ': 'w',
	    'ẉ': 'w',
	    'ẁ': 'w',
	    'ⱳ': 'w',
	    'ẘ': 'w',
	    'ẍ': 'x',
	    'ẋ': 'x',
	    'ᶍ': 'x',
	    'ý': 'y',
	    'ŷ': 'y',
	    'ÿ': 'y',
	    'ẏ': 'y',
	    'ỵ': 'y',
	    'ỳ': 'y',
	    'ƴ': 'y',
	    'ỷ': 'y',
	    'ỿ': 'y',
	    'ȳ': 'y',
	    'ẙ': 'y',
	    'ɏ': 'y',
	    'ỹ': 'y',
	    'ź': 'z',
	    'ž': 'z',
	    'ẑ': 'z',
	    'ʑ': 'z',
	    'ⱬ': 'z',
	    'ż': 'z',
	    'ẓ': 'z',
	    'ȥ': 'z',
	    'ẕ': 'z',
	    'ᵶ': 'z',
	    'ᶎ': 'z',
	    'ʐ': 'z',
	    'ƶ': 'z',
	    'ɀ': 'z',
	    'ﬀ': 'ff',
	    'ﬃ': 'ffi',
	    'ﬄ': 'ffl',
	    'ﬁ': 'fi',
	    'ﬂ': 'fl',
	    'ĳ': 'ij',
	    'œ': 'oe',
	    'ﬆ': 'st',
	    'ₐ': 'a',
	    'ₑ': 'e',
	    'ᵢ': 'i',
	    'ⱼ': 'j',
	    'ₒ': 'o',
	    'ᵣ': 'r',
	    'ᵤ': 'u',
	    'ᵥ': 'v',
	    'ₓ': 'x'
	};


/***/ }),
/* 506 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var __metadata = (this && this.__metadata) || function (k, v) {
	    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
	};
	var core_1 = __webpack_require__(2);
	var common_1 = __webpack_require__(182);
	var typeahead_utils_1 = __webpack_require__(504);
	var typeahead_options_class_1 = __webpack_require__(507);
	var position_1 = __webpack_require__(362);
	var ng2_bootstrap_config_1 = __webpack_require__(359);
	var TEMPLATE = (_a = {},
	    _a[ng2_bootstrap_config_1.Ng2BootstrapTheme.BS4] = "\n  <div class=\"dropdown-menu\"\n       style=\"display: block\"\n      [ngStyle]=\"{top: top, left: left, display: display}\"\n      (mouseleave)=\"focusLost()\">\n      <a href=\"#\"\n         *ngFor=\"let match of matches\"\n         class=\"dropdown-item\"\n         (click)=\"selectMatch(match, $event)\"\n         (mouseenter)=\"selectActive(match)\"\n         [class.active]=\"isActive(match)\"\n         [innerHtml]=\"hightlight(match, query)\"></a>\n  </div>\n  ",
	    _a[ng2_bootstrap_config_1.Ng2BootstrapTheme.BS3] = "\n  <ul class=\"dropdown-menu\"\n      style=\"display: block\"\n      [ngStyle]=\"{top: top, left: left, display: display}\"\n      (mouseleave)=\"focusLost()\">\n    <li *ngFor=\"let match of matches\"\n        [class.active]=\"isActive(match)\"\n        (mouseenter)=\"selectActive(match)\">\n        <a href=\"#\" (click)=\"selectMatch(match, $event)\" tabindex=\"-1\" [innerHtml]=\"hightlight(match, query)\"></a>\n    </li>\n  </ul>\n  ",
	    _a
	);
	var TypeaheadContainerComponent = (function () {
	    function TypeaheadContainerComponent(element, options) {
	        this.isFocused = false;
	        this._matches = [];
	        this.element = element;
	        Object.assign(this, options);
	    }
	    Object.defineProperty(TypeaheadContainerComponent.prototype, "matches", {
	        get: function () {
	            return this._matches;
	        },
	        set: function (value) {
	            this._matches = value;
	            if (this._matches.length > 0) {
	                this._active = this._matches[0];
	            }
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(TypeaheadContainerComponent.prototype, "field", {
	        set: function (value) {
	            this._field = value;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    TypeaheadContainerComponent.prototype.position = function (hostEl) {
	        this.display = 'block';
	        this.top = '0px';
	        this.left = '0px';
	        var p = position_1.positionService
	            .positionElements(hostEl.nativeElement, this.element.nativeElement.children[0], this.placement, false);
	        this.top = p.top + 'px';
	        this.left = p.left + 'px';
	    };
	    TypeaheadContainerComponent.prototype.selectActiveMatch = function () {
	        this.selectMatch(this._active);
	    };
	    TypeaheadContainerComponent.prototype.prevActiveMatch = function () {
	        var index = this.matches.indexOf(this._active);
	        this._active = this.matches[index - 1 < 0
	            ? this.matches.length - 1
	            : index - 1];
	    };
	    TypeaheadContainerComponent.prototype.nextActiveMatch = function () {
	        var index = this.matches.indexOf(this._active);
	        this._active = this.matches[index + 1 > this.matches.length - 1
	            ? 0
	            : index + 1];
	    };
	    TypeaheadContainerComponent.prototype.selectActive = function (value) {
	        this.isFocused = true;
	        this._active = value;
	    };
	    TypeaheadContainerComponent.prototype.hightlight = function (item, query) {
	        var itemStr = (typeof item === 'object' && this._field
	            ? item[this._field]
	            : item).toString();
	        var itemStrHelper = (this.parent.typeaheadLatinize
	            ? typeahead_utils_1.TypeaheadUtils.latinize(itemStr)
	            : itemStr).toLowerCase();
	        var startIdx;
	        var tokenLen;
	        // Replaces the capture string with the same string inside of a "strong" tag
	        if (typeof query === 'object') {
	            var queryLen = query.length;
	            for (var i = 0; i < queryLen; i += 1) {
	                // query[i] is already latinized and lower case
	                startIdx = itemStrHelper.indexOf(query[i]);
	                tokenLen = query[i].length;
	                if (startIdx >= 0 && tokenLen > 0) {
	                    itemStr = itemStr.substring(0, startIdx) + '<strong>' + itemStr.substring(startIdx, startIdx + tokenLen) + '</strong>' + itemStr.substring(startIdx + tokenLen);
	                    itemStrHelper = itemStrHelper.substring(0, startIdx) + '        ' + ' '.repeat(tokenLen) + '         ' + itemStrHelper.substring(startIdx + tokenLen);
	                }
	            }
	        }
	        else if (query) {
	            // query is already latinized and lower case
	            startIdx = itemStrHelper.indexOf(query);
	            tokenLen = query.length;
	            if (startIdx >= 0 && tokenLen > 0) {
	                itemStr = itemStr.substring(0, startIdx) + '<strong>' + itemStr.substring(startIdx, startIdx + tokenLen) + '</strong>' + itemStr.substring(startIdx + tokenLen);
	            }
	        }
	        return itemStr;
	    };
	    TypeaheadContainerComponent.prototype.focusLost = function () {
	        this.isFocused = false;
	    };
	    TypeaheadContainerComponent.prototype.isActive = function (value) {
	        return this._active === value;
	    };
	    TypeaheadContainerComponent.prototype.selectMatch = function (value, e) {
	        if (e === void 0) { e = void 0; }
	        if (e) {
	            e.stopPropagation();
	            e.preventDefault();
	        }
	        this.parent.changeModel(value);
	        this.parent.typeaheadOnSelect.emit({
	            item: value
	        });
	        return false;
	    };
	    TypeaheadContainerComponent = __decorate([
	        core_1.Component({
	            selector: 'typeahead-container',
	            directives: [common_1.CORE_DIRECTIVES],
	            template: TEMPLATE[ng2_bootstrap_config_1.Ng2BootstrapConfig.theme],
	            encapsulation: core_1.ViewEncapsulation.None
	        }), 
	        __metadata('design:paramtypes', [core_1.ElementRef, typeahead_options_class_1.TypeaheadOptions])
	    ], TypeaheadContainerComponent);
	    return TypeaheadContainerComponent;
	}());
	exports.TypeaheadContainerComponent = TypeaheadContainerComponent;
	var _a;


/***/ }),
/* 507 */
/***/ (function(module, exports) {

	"use strict";
	var TypeaheadOptions = (function () {
	    function TypeaheadOptions(options) {
	        Object.assign(this, options);
	    }
	    return TypeaheadOptions;
	}());
	exports.TypeaheadOptions = TypeaheadOptions;


/***/ }),
/* 508 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	function __export(m) {
	    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
	}
	__export(__webpack_require__(509));
	__export(__webpack_require__(524));
	__export(__webpack_require__(525));
	__export(__webpack_require__(526));
	__export(__webpack_require__(527));
	__export(__webpack_require__(510));
	__export(__webpack_require__(521));
	__export(__webpack_require__(519));
	

/***/ }),
/* 509 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var core_1 = __webpack_require__(2);
	var router_deprecated_1 = __webpack_require__(281);
	var http_1 = __webpack_require__(313);
	var http_service_1 = __webpack_require__(510);
	var user_model_1 = __webpack_require__(516);
	var popover_service_service_1 = __webpack_require__(519);
	var base_service_1 = __webpack_require__(520);
	var localstorage_service_1 = __webpack_require__(521);
	var config_1 = __webpack_require__(511);
	var BrokerSettings_model_1 = __webpack_require__(522);
	__webpack_require__(523);
	var UserService = (function (_super) {
	    __extends(UserService, _super);
	    function UserService(http, httpService, popoverService, router, localStorageService) {
	        _super.call(this, popoverService, router, localStorageService);
	        this.http = http;
	        this.httpService = httpService;
	        this.popoverService = popoverService;
	        this.router = router;
	        this.localStorageService = localStorageService;
	        this.signInUrl = 'auth/signin';
	        this.signOutUrl = 'auth/signout';
	        this.brokerSettingsUrl = 'divisions/{0}/brokers';
	        this.updateCarrierBrokerSettingsUrl = 'divisions/updatecarrierbrokersettings';
	        this.updatePasswordUrl = 'auth/resetpassword';
	        this.registerUrl = 'register/carrier';
	        this.carriersUploadSampleUrl = 'register/carriers/sample';
	        this.carriersUploadUrl = 'register/{brokerId}/carriers';
	        this.getUserUrl = 'auth';
	        this.functions = [];
	        this.isSignInPage = true;
	        this.dontAskForAuthUrls = ['signin', 'restore', 'share', 'resetpassword', 'register'];
	    }
	    ;
	    UserService.prototype.handleError = function (error) {
	        this.requestBrokerSettingsPending = false;
	        this.error.bind(error);
	    };
	    ;
	    UserService.prototype.responseParser = function (res) {
	        var user = res.json();
	        this.httpService.token = this.extractSecurityToken(res);
	        this.user = new user_model_1.User(user);
	        var lastRoute = JSON.parse(this.localStorageService.getItem('lastUrl'));
	        if (lastRoute != null && lastRoute.params.divId) {
	            this.router.navigate([lastRoute.route, lastRoute.params]);
	            this.localStorageService.clearItem('lastUrl');
	        }
	        else {
	            this.router.navigate(['Home', { divId: this.user.divisions[0].id }]);
	        }
	        ;
	    };
	    ;
	    UserService.prototype.extractSecurityToken = function (res) {
	        var body = res.json();
	        return body.securityToken;
	    };
	    ;
	    UserService.prototype.getUserEmail = function () {
	        return this.user.email;
	    };
	    ;
	    UserService.prototype.extractUser = function (jsonResults) {
	        var body = jsonResults.json();
	        this.requestPending = false;
	        return this.user = new user_model_1.User(body);
	    };
	    ;
	    UserService.prototype.extractBrokerSettings = function (jsonResults) {
	        var body = jsonResults.json();
	        this.requestBrokerSettingsPending = false;
	        this.user.brokerSettings.length = 0;
	        this.user.brokerSettings = body.brokers.map(function (bs) { return new BrokerSettings_model_1.BrokerSettings(bs); });
	    };
	    ;
	    UserService.prototype.getUser = function (callback) {
	        var _this = this;
	        this.functions.push(callback);
	        if (this.user) {
	            for (var _i = 0, _a = this.functions; _i < _a.length; _i++) {
	                var callback_1 = _a[_i];
	                callback_1(this.user);
	            }
	            ;
	            this.functions = [];
	        }
	        else {
	            if (!this.requestPending) {
	                this.requestPending = true;
	                this.httpService
	                    .get(this.getUserUrl)
	                    .toPromise()
	                    .then(function (res) {
	                    _this.extractUser(res);
	                    for (var _i = 0, _a = _this.functions; _i < _a.length; _i++) {
	                        var callback_2 = _a[_i];
	                        callback_2(_this.user);
	                    }
	                    ;
	                    _this.functions = [];
	                })
	                    .catch(this.error.bind(this));
	            }
	            ;
	        }
	        ;
	    };
	    ;
	    UserService.prototype.getBrokerSettings = function (divisionId) {
	        var _this = this;
	        if (!this.requestBrokerSettingsPending) {
	            this.requestBrokerSettingsPending = true;
	            this.httpService
	                .get(this.brokerSettingsUrl.format(divisionId))
	                .toPromise()
	                .then(function (result) {
	                _this.extractBrokerSettings(result);
	                _this.functions = [];
	            })
	                .catch(this.handleError.bind(this));
	        }
	        ;
	    };
	    ;
	    UserService.prototype.logout = function () {
	        var _this = this;
	        this.user = null;
	        return this.httpService
	            .get(this.signOutUrl)
	            .toPromise()
	            .then((function (result) {
	            _this.httpService.token = '';
	            _this.router.navigate(['Signin']);
	        }).bind(this))
	            .catch(this.error.bind(this));
	    };
	    ;
	    UserService.prototype.restore = function (email) {
	        var body = JSON.stringify({
	            email: email
	        });
	        return this.httpService
	            .post(this.updatePasswordUrl, body)
	            .toPromise();
	    };
	    ;
	    UserService.prototype.resetPassword = function (password, passtoken) {
	        var body = JSON.stringify({
	            password: password,
	            passToken: passtoken
	        });
	        return this.httpService
	            .put(this.updatePasswordUrl, body)
	            .toPromise()
	            .then(this.responseParser.bind(this));
	    };
	    ;
	    UserService.prototype.signIn = function (login, password) {
	        var body = JSON.stringify({
	            login: login,
	            password: password
	        });
	        return this.httpService
	            .post(this.signInUrl, body)
	            .toPromise();
	    };
	    ;
	    UserService.prototype.register = function (usdot, brokerID, zip, email, userName, password, firstName, lastName) {
	        var body = JSON.stringify({
	            usdot: usdot,
	            brokerID: brokerID,
	            zip: zip,
	            email: email,
	            userName: userName,
	            password: password,
	            firstName: firstName,
	            lastName: lastName
	        });
	        return this.httpService
	            .post(this.registerUrl, body)
	            .toPromise();
	    };
	    ;
	    UserService.prototype.getCarriersUpoadSampleUrl = function () {
	        return config_1.Config.baseUrl + this.carriersUploadSampleUrl;
	    };
	    ;
	    UserService.prototype.carriersUpoad = function (brokerId, file) {
	        return this.httpService.fileUpload(this.carriersUploadUrl.replace('{brokerId}', brokerId), file);
	    };
	    ;
	    UserService.prototype.updateCarrierBrokerSettings = function (brokerSettings) {
	        var body = JSON.stringify({
	            brokerSettingsId: brokerSettings.carrierBrokerSettingsId,
	            scanningEnabled: brokerSettings.scanningEnabled,
	            autoInvoicingEnabled: brokerSettings.autoInvoicingEnabled
	        });
	        this.httpService
	            .post(this.updateCarrierBrokerSettingsUrl, body)
	            .toPromise();
	    };
	    ;
	    UserService = __decorate([
	        core_1.Injectable(), 
	        __metadata('design:paramtypes', [http_1.Http, http_service_1.HttpService, popover_service_service_1.PopoverService, router_deprecated_1.Router, localstorage_service_1.LocalStorageService])
	    ], UserService);
	    return UserService;
	}(base_service_1.BaseService));
	exports.UserService = UserService;
	;
	

/***/ }),
/* 510 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var core_1 = __webpack_require__(2);
	var http_1 = __webpack_require__(313);
	var config_1 = __webpack_require__(511);
	__webpack_require__(512);
	var HttpService = (function () {
	    function HttpService(http) {
	        this.http = http;
	        this.progress = 0;
	        this.baseUrl = config_1.Config.baseUrl;
	        var headers = new http_1.Headers({ 'Content-Type': 'application/json' });
	        var options = new http_1.RequestOptions({ headers: headers });
	        headers.append('X-Security-Token', this.token);
	        this.options = options;
	    }
	    ;
	    Object.defineProperty(HttpService.prototype, "token", {
	        get: function () {
	            return localStorage.getItem('securityToken');
	        },
	        set: function (token) {
	            localStorage.setItem('securityToken', token);
	            var headers = new http_1.Headers({ 'Content-Type': 'application/json' });
	            var options = new http_1.RequestOptions({ headers: headers });
	            headers.append('X-Security-Token', this.token);
	            this.options = options;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    ;
	    ;
	    HttpService.prototype.get = function (url, options) {
	        return this.http.get(this.baseUrl + url, this.options);
	    };
	    ;
	    HttpService.prototype.post = function (url, body, options) {
	        return this.http.post(this.baseUrl + url, body, this.options);
	    };
	    ;
	    HttpService.prototype.put = function (url, body, options) {
	        return this.http.put(this.baseUrl + url, body, this.options);
	    };
	    ;
	    HttpService.prototype.delete = function (url, options) {
	        return this.http.delete(this.baseUrl + url, this.options);
	    };
	    ;
	    HttpService.prototype.fileUpload = function (url, file) {
	        var _this = this;
	        url = this.baseUrl + url;
	        return new Promise(function (resolve, reject) {
	            var formData = new FormData(), xhr = new XMLHttpRequest();
	            formData.append('uploadFile', file, file.name);
	            xhr.onreadystatechange = function () {
	                if (xhr.readyState === 4) {
	                    if (xhr.status === 200) {
	                        resolve('Upload succeeded. ' + xhr.response);
	                    }
	                    else {
	                        reject(xhr.response);
	                    }
	                }
	            };
	            HttpService.setUploadUpdateInterval(500);
	            xhr.upload.onprogress = function (event) {
	                _this.progress = Math.round(event.loaded / event.total * 100);
	            };
	            xhr.open('POST', url, true);
	            xhr.send(formData);
	        });
	    };
	    HttpService.setUploadUpdateInterval = function (interval) {
	        setInterval(function () { }, interval);
	    };
	    HttpService = __decorate([
	        core_1.Injectable(), 
	        __metadata('design:paramtypes', [http_1.Http])
	    ], HttpService);
	    return HttpService;
	}());
	exports.HttpService = HttpService;
	

/***/ }),
/* 511 */
/***/ (function(module, exports) {

	"use strict";
	exports.Config = {
	    //baseUrl: 'http://12.171.193.112/CommandCenter.WebService/',
	    baseUrl: 'http://localhost:27858/',
	    appLink: 'transflomobileplus://',
	    mobileAppLink: 'transflomobileplus://scan',
	    appVersion: '<APPVERSION>',
	    downloadLink: {
	        Android: 'https://play.google.com/store/apps/details?id=com.pegasustranstech.transflonowplus&hl=en',
	        iOS: 'https://itunes.apple.com/us/app/transflo-mobile+/id888852656',
	        Windows: 'http://transflovelocity.pegasustranstech.com/install/TFV.exe'
	    }
	};
	

/***/ }),
/* 512 */,
/* 513 */,
/* 514 */,
/* 515 */,
/* 516 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var division_model_1 = __webpack_require__(517);
	var User = (function () {
	    function User(object) {
	        this.menu = [];
	        this.brokerSettings = [];
	        this.email = object.email;
	        this.firstname = object.firstName;
	        this.lastname = object.lastName;
	        this.id = object.id;
	        this.menu = object.menu;
	        this.isVelocity = object.isVelocity;
	        this.brokerSettings = [];
	        if (object.divisions && object.divisions.length) {
	            this.divisions = object.divisions.map(function (div) { return new division_model_1.Division(div); });
	        }
	    }
	    ;
	    return User;
	}());
	exports.User = User;
	

/***/ }),
/* 517 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var remittance_model_1 = __webpack_require__(518);
	var Division = (function () {
	    function Division(object) {
	        this.id = object.id;
	        this.code = object.code;
	        this.type = object.type;
	        this.name = object.name;
	        this.menu = object.menu;
	        this.isCarrier = this.type ? object.type.toLowerCase() === 'carrier' : false;
	        this.isCommonCarrier = object.isCommonCarrier;
	        this.isFavorite = object.isFavorite;
	        if (object.remittanceData)
	            this.remittance = new remittance_model_1.Remittance(object.remittanceData);
	    }
	    ;
	    return Division;
	}());
	exports.Division = Division;
	

/***/ }),
/* 518 */
/***/ (function(module, exports) {

	"use strict";
	var Remittance = (function () {
	    function Remittance(object) {
	        this.id = object.id;
	        this.carrierId = object.carrierId;
	        this.carrierName = object.carrierName;
	        this.contactName = object.contactName;
	        this.contactPhone = object.contactPhoneNumber;
	        this.name = object.name;
	        this.address1 = object.addressLine1;
	        this.address2 = object.addressLine2;
	        this.city = object.city;
	        this.state = object.state;
	        this.zipCode = object.zipCode;
	        this.noticeOfAssignmentLanguage = object.noticeOfAssignmentLanguage;
	    }
	    ;
	    return Remittance;
	}());
	exports.Remittance = Remittance;
	

/***/ }),
/* 519 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var core_1 = __webpack_require__(2);
	var PopoverService = (function () {
	    function PopoverService() {
	        this.eventShown = new core_1.EventEmitter();
	        this.eventHidden = new core_1.EventEmitter();
	    }
	    ;
	    PopoverService.prototype.showPopover = function (type, divisionId, driverId, additional) {
	        this.eventShown.emit({ divisionId: divisionId, driverId: driverId, type: type, additional: additional });
	    };
	    ;
	    PopoverService.prototype.hidePopovers = function (type) {
	        this.eventHidden.emit(type);
	    };
	    ;
	    PopoverService.prototype.showErrorBox = function (errorsList) {
	        this.eventShown.emit({
	            type: 'errors_list',
	            errors: errorsList
	        });
	    };
	    ;
	    __decorate([
	        core_1.Output(), 
	        __metadata('design:type', Object)
	    ], PopoverService.prototype, "eventShown", void 0);
	    __decorate([
	        core_1.Output(), 
	        __metadata('design:type', Object)
	    ], PopoverService.prototype, "eventHidden", void 0);
	    PopoverService = __decorate([
	        core_1.Injectable(), 
	        __metadata('design:paramtypes', [])
	    ], PopoverService);
	    return PopoverService;
	}());
	exports.PopoverService = PopoverService;
	

/***/ }),
/* 520 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var core_1 = __webpack_require__(2);
	var router_deprecated_1 = __webpack_require__(281);
	var popover_service_service_1 = __webpack_require__(519);
	var index_1 = __webpack_require__(508);
	var BaseService = (function () {
	    function BaseService(popoverService, router, localStorageService) {
	        this.popoverService = popoverService;
	        this.router = router;
	        this.localStorageService = localStorageService;
	    }
	    ;
	    BaseService.prototype.showErrorBox = function (body) {
	        if (body === void 0) { body = { details: null }; }
	        if (body.details && body.details.length) {
	            this.popoverService.showErrorBox(body.details.map(function (instance) { return instance.error; }));
	        }
	        else {
	            this.popoverService.showErrorBox([]);
	        }
	    };
	    BaseService.prototype.error = function (error) {
	        var errorStatus = error && error.status;
	        var body = error && error.text() && error.json(); // 
	        switch (errorStatus) {
	            case 500:
	                // Unexpected server error
	                this.showErrorBox();
	                break;
	            case 401:
	                // Unautorized
	                if (this.router.root.currentInstruction && !this.localStorageService.getItem('lastUrl')) {
	                    this.localStorageService.setItem('lastUrl', JSON.stringify({
	                        route: this.router.root.currentInstruction.component.routeName,
	                        params: this.router.root.currentInstruction.component.params
	                    }));
	                }
	                this.popoverService.hidePopovers('all');
	                this.router.navigate(['Signin']);
	                break;
	            case 400:
	                // validation error in create load page
	                if (this.router.root.currentInstruction.component.routeName == 'NewLoad') {
	                    throw error;
	                }
	                else {
	                    // Other cases with 400 error
	                    this.showErrorBox(body);
	                }
	                break;
	            default:
	                // other cases, FE App will expect array of error messages in details field.
	                // otherwise it will show popup with text: `An unexpected error has occurred. If the problem persists please contact your system administrator`
	                if (error.status > 400 && error.status < 500) {
	                    this.showErrorBox(body);
	                }
	                break;
	        }
	        ;
	    };
	    ;
	    BaseService = __decorate([
	        core_1.Injectable(), 
	        __metadata('design:paramtypes', [popover_service_service_1.PopoverService, router_deprecated_1.Router, index_1.LocalStorageService])
	    ], BaseService);
	    return BaseService;
	}());
	exports.BaseService = BaseService;
	

/***/ }),
/* 521 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var core_1 = __webpack_require__(2);
	var LocalStorageService = (function () {
	    function LocalStorageService() {
	    }
	    ;
	    LocalStorageService.prototype.setItem = function (key, value) {
	        return localStorage.setItem(key, value);
	    };
	    ;
	    LocalStorageService.prototype.getItem = function (key) {
	        return localStorage.getItem(key);
	    };
	    ;
	    LocalStorageService.prototype.clearItem = function (key) {
	        localStorage.removeItem(key);
	    };
	    ;
	    LocalStorageService = __decorate([
	        core_1.Injectable(), 
	        __metadata('design:paramtypes', [])
	    ], LocalStorageService);
	    return LocalStorageService;
	}());
	exports.LocalStorageService = LocalStorageService;
	

/***/ }),
/* 522 */
/***/ (function(module, exports) {

	"use strict";
	var BrokerSettings = (function () {
	    function BrokerSettings(object) {
	        this.id = object.id;
	        this.name = object.name;
	        this.scanningEnabled = object.scanningEnabled;
	        this.autoInvoicingEnabled = object.autoInvoicingEnabled;
	        this.type = object.type;
	        this.fleetId = object.fleetId;
	        this.code = object.code;
	        this.isFavorite = object.isFavorite;
	        this.commandCarrierId = object.commandCarrierId;
	        this.carrierBrokerSettingsId = object.carrierBrokerSettingsId;
	    }
	    ;
	    return BrokerSettings;
	}());
	exports.BrokerSettings = BrokerSettings;
	

/***/ }),
/* 523 */
/***/ (function(module, exports) {

	"use strict";
	String.prototype.format = function () {
	    var args = arguments;
	    return this.replace(/{(\d+)}/g, function (match, number) {
	        return typeof args[number] != 'undefined'
	            ? args[number]
	            : match;
	    });
	};
	

/***/ }),
/* 524 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var core_1 = __webpack_require__(2);
	var ValidationService = (function () {
	    function ValidationService() {
	    }
	    ;
	    ValidationService.prototype.emailValidator = function (email) {
	        var emailValid = true;
	        if (email) {
	            var EMAIL_REGEXP = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
	            if (!EMAIL_REGEXP.test(email)) {
	                emailValid = false;
	            }
	        }
	        else {
	            emailValid = false;
	        }
	        return emailValid;
	    };
	    ;
	    ValidationService = __decorate([
	        core_1.Injectable(), 
	        __metadata('design:paramtypes', [])
	    ], ValidationService);
	    return ValidationService;
	}());
	exports.ValidationService = ValidationService;
	

/***/ }),
/* 525 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var core_1 = __webpack_require__(2);
	var base_service_1 = __webpack_require__(520);
	var http_service_1 = __webpack_require__(510);
	var popover_service_service_1 = __webpack_require__(519);
	var router_deprecated_1 = __webpack_require__(281);
	var localstorage_service_1 = __webpack_require__(521);
	var DivisionService = (function (_super) {
	    __extends(DivisionService, _super);
	    function DivisionService(httpService, popoverService, router, localStorageService) {
	        _super.call(this, popoverService, router, localStorageService);
	        this.httpService = httpService;
	        this.popoverService = popoverService;
	        this.router = router;
	        this.localStorageService = localStorageService;
	        this.divisionUrl = 'divisions';
	        this.attributesUrl = 'loadattributes';
	    }
	    ;
	    DivisionService.prototype.getBrokers = function (divisionId) {
	        return this.httpService
	            .get(this.divisionUrl + '/' + divisionId + '/brokers/')
	            .toPromise()
	            .catch(this.error);
	    };
	    ;
	    DivisionService.prototype.getMessages = function (divisionId) {
	        return this.httpService
	            .get(this.divisionUrl + '/' + divisionId + '/messages/summary/')
	            .toPromise()
	            .catch(this.error.bind(this));
	    };
	    ;
	    DivisionService.prototype.sendNotifications = function (divisionId, driversIds, message) {
	        var body = JSON.stringify({
	            toIds: driversIds,
	            message: message.message,
	            title: message.title,
	            type: message.type,
	            random: +(Math.random() * 1000)
	        });
	        return this.httpService
	            .post(this.divisionUrl + '/' + divisionId + '/notifications/', body)
	            .toPromise()
	            .catch(this.error.bind(this));
	    };
	    DivisionService.prototype.sendMessages = function (divisionId, driverIds, message) {
	        var body = JSON.stringify({
	            toIds: driverIds,
	            message: message,
	            random: +(Math.random() * 1000)
	        });
	        return this.httpService
	            .post(this.divisionUrl + '/' + divisionId + '/messages/', body)
	            .toPromise()
	            .catch(this.error.bind(this));
	    };
	    ;
	    DivisionService.prototype.getNotifications = function (divisionId, driverId) {
	        return this.httpService
	            .get(this.divisionUrl + '/' + divisionId + '/notifications?driver=' + driverId)
	            .toPromise()
	            .catch(this.error.bind(this));
	    };
	    ;
	    DivisionService.prototype.getMessagesDriver = function (divisionId, driverId, quantity, lastId, firstId) {
	        var url;
	        if (firstId) {
	            url = this.divisionUrl + '/' + divisionId + '/messages/forward?driver=' + driverId + '&quantity=' + quantity;
	            url += '&messageId=' + firstId;
	        }
	        else {
	            url = this.divisionUrl + '/' + divisionId + '/messages/backward?driver=' + driverId + '&quantity=' + quantity;
	        }
	        if (lastId) {
	            url += '&messageId=' + lastId;
	        }
	        ;
	        return this.httpService
	            .get(url)
	            .toPromise()
	            .catch(this.error.bind(this));
	    };
	    ;
	    DivisionService.prototype.getAttributes = function (divisionId) {
	        return this.httpService
	            .get(this.attributesUrl)
	            .toPromise()
	            .catch(this.error.bind(this));
	    };
	    ;
	    DivisionService.prototype.getCarriers = function (divisionId) {
	        return this.httpService
	            .get(this.divisionUrl + '/' + divisionId + '/carriers/')
	            .toPromise()
	            .catch(this.error.bind(this));
	    };
	    ;
	    DivisionService.prototype.getDrivers = function (divisionId, filters) {
	        return this.httpService
	            .get(this.divisionUrl + '/' + divisionId + '/drivers/')
	            .toPromise()
	            .catch(this.error.bind(this));
	    };
	    ;
	    DivisionService.prototype.getDriver = function (divisionId, driverId) {
	        return this.httpService
	            .get(this.divisionUrl + '/' + divisionId + '/drivers/' + driverId)
	            .toPromise()
	            .catch(this.error.bind(this));
	    };
	    ;
	    DivisionService.prototype.setAsFavorite = function (divisionId, relationId, isFavorite) {
	        var body = JSON.stringify({
	            relationId: relationId,
	            isFavorite: isFavorite
	        });
	        return this.httpService
	            .put(this.divisionUrl + '/' + divisionId + '/favorites', body)
	            .toPromise()
	            .catch(this.error.bind(this));
	    };
	    ;
	    DivisionService.prototype.getAddresses = function (divisionId, searchString, lastId) {
	        var addition = '';
	        if (lastId !== null) {
	            addition = '&lastId=' + lastId;
	        }
	        if (searchString) {
	            addition += '&address_entry=' + searchString;
	        }
	        ;
	        return this.httpService
	            .get(this.divisionUrl + '/' + divisionId + '/addresses?quantity=10' + addition)
	            .toPromise()
	            .catch(this.error.bind(this));
	    };
	    ;
	    DivisionService = __decorate([
	        core_1.Injectable(), 
	        __metadata('design:paramtypes', [http_service_1.HttpService, popover_service_service_1.PopoverService, router_deprecated_1.Router, localstorage_service_1.LocalStorageService])
	    ], DivisionService);
	    return DivisionService;
	}(base_service_1.BaseService));
	exports.DivisionService = DivisionService;
	

/***/ }),
/* 526 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var core_1 = __webpack_require__(2);
	var http_service_1 = __webpack_require__(510);
	var popover_service_service_1 = __webpack_require__(519);
	var router_deprecated_1 = __webpack_require__(281);
	var base_service_1 = __webpack_require__(520);
	var localstorage_service_1 = __webpack_require__(521);
	var DashboardService = (function (_super) {
	    __extends(DashboardService, _super);
	    function DashboardService(httpService, popoverService, router, localStorageService) {
	        //this.popoverService = popoverService;
	        _super.call(this, popoverService, router, localStorageService);
	        this.httpService = httpService;
	        this.popoverService = popoverService;
	        this.router = router;
	        this.localStorageService = localStorageService;
	        this.statisticsUrl = 'statistics';
	        this.mappointsUrl = 'mappoints';
	    }
	    ;
	    DashboardService.prototype.getLocations = function (filters) {
	        var filtersStr = '?division=' + filters.divisionId;
	        if (filters.status) {
	            filtersStr += '&status=' + filters.status;
	        }
	        if (filters.shippingDatesRange) {
	            filtersStr += '&shippingDatesRange=' + filters.shippingDatesRange;
	        }
	        if (filters.deliveryDatesRange) {
	            filtersStr += '&deliveryDatesRange=' + filters.deliveryDatesRange;
	        }
	        return this.httpService.get(this.mappointsUrl + filtersStr)
	            .toPromise()
	            .catch(this.error.bind(this));
	    };
	    ;
	    DashboardService.prototype.getStatistics = function (divisionId) {
	        return this.httpService.get(this.statisticsUrl + '?division=' + divisionId)
	            .toPromise()
	            .catch(this.error.bind(this));
	    };
	    ;
	    DashboardService = __decorate([
	        core_1.Injectable(), 
	        __metadata('design:paramtypes', [http_service_1.HttpService, popover_service_service_1.PopoverService, router_deprecated_1.Router, localstorage_service_1.LocalStorageService])
	    ], DashboardService);
	    return DashboardService;
	}(base_service_1.BaseService));
	exports.DashboardService = DashboardService;
	

/***/ }),
/* 527 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var core_1 = __webpack_require__(2);
	var http_service_1 = __webpack_require__(510);
	var filter_model_1 = __webpack_require__(528);
	var popover_service_service_1 = __webpack_require__(519);
	var router_deprecated_1 = __webpack_require__(281);
	var localstorage_service_1 = __webpack_require__(521);
	var base_service_1 = __webpack_require__(520);
	var LoadsService = (function (_super) {
	    __extends(LoadsService, _super);
	    function LoadsService(httpService, popoverService, router, localStorageService) {
	        _super.call(this, popoverService, router, localStorageService);
	        this.httpService = httpService;
	        this.popoverService = popoverService;
	        this.router = router;
	        this.localStorageService = localStorageService;
	        this.loadsUrl = 'loads';
	        this.loadUrl = function (loadId) { return 'loads/' + loadId; };
	        this.cloneUrl = 'loads/clone';
	        this.getNotificationsUrl = function (loadId) { return 'loads/' + loadId + '/notifications'; };
	        this.getMessagesUrl = function (loadId) { return 'loads/' + loadId + '/messages'; };
	        this.changeOwnerShipUrl = function (loadId) { return 'loads/' + loadId + '/changeownership'; };
	        this.getShareLinkUrl = function (loadId) { return 'loads/' + loadId + '/share'; };
	        this.getBreadcrumbsUrl = function (loadId) { return 'loads/' + loadId + '/breadcrumbs'; };
	        this.getTenderingCarriersUrl = function (loadId) { return 'loads/' + loadId + '/carriertendering'; };
	        this.getTenderingBrokersUrl = function (loadId) { return 'loads/' + loadId + '/brokertendering'; };
	        this.loadSummaryUrl = function (loadId) { return 'loads/' + loadId + '/summary'; };
	    }
	    ;
	    LoadsService.prototype.updateTenderingBroker = function (carriers, loadId) {
	        var body = JSON.stringify(carriers.map(function (carrier) { return ({
	            id: carrier.id,
	            carrierCode: carrier.code,
	            assignmentStatus: carrier.assignmentStatus
	        }); }));
	        return this.httpService
	            .put(this.getTenderingBrokersUrl(loadId), body)
	            .toPromise()
	            .catch(this.error.bind(this));
	    };
	    LoadsService.prototype.updateTenderingCarrier = function (drivers, loadId) {
	        var body = JSON.stringify(drivers.map(function (driver) { return ({
	            id: driver.id,
	            assignmentStatus: driver.assignmentStatus
	        }); }));
	        return this.httpService
	            .put(this.getTenderingCarriersUrl(loadId), body)
	            .toPromise()
	            .catch(this.error.bind(this));
	    };
	    ;
	    LoadsService.prototype.getBreadcrumbs = function (loadId) {
	        return this.httpService
	            .get(this.getBreadcrumbsUrl(loadId))
	            .toPromise()
	            .catch(this.error.bind(this));
	    };
	    ;
	    LoadsService.prototype.getMessages = function (loadId) {
	        return this.httpService
	            .get(this.getMessagesUrl(loadId))
	            .toPromise()
	            .catch(this.error.bind(this));
	    };
	    ;
	    LoadsService.prototype.saveNotifications = function (loadId, notifications) {
	        var body = JSON.stringify(notifications);
	        return this.httpService
	            .put(this.getNotificationsUrl(loadId), body)
	            .toPromise()
	            .catch(this.error.bind(this));
	    };
	    ;
	    LoadsService.prototype.shareLink = function (loadId, info) {
	        var body = JSON.stringify(info);
	        return this.httpService
	            .put(this.getShareLinkUrl(loadId), body)
	            .toPromise()
	            .catch(this.error.bind(this));
	    };
	    ;
	    LoadsService.prototype.getNotifications = function (loadId) {
	        return this.httpService
	            .get(this.getNotificationsUrl(loadId))
	            .toPromise()
	            .catch(this.error.bind(this));
	    };
	    LoadsService.prototype.getShareLink = function (loadId) {
	        return this.httpService
	            .get(this.getShareLinkUrl(loadId))
	            .toPromise()
	            .catch(this.error.bind(this));
	    };
	    ;
	    LoadsService.prototype.deleteLoad = function (loadId) {
	        return this.httpService
	            .delete(this.loadUrl(loadId))
	            .toPromise()
	            .catch(this.error.bind(this));
	    };
	    ;
	    LoadsService.prototype.getLoad = function (loadId, divisionId) {
	        return this.httpService
	            .get(this.loadUrl(loadId) + '?division=' + divisionId)
	            .toPromise()
	            .catch(this.error.bind(this));
	    };
	    ;
	    LoadsService.prototype.getLoadSummary = function (loadId, divisionId) {
	        return this.httpService
	            .get(this.loadSummaryUrl(loadId) + '?division=' + divisionId)
	            .toPromise()
	            .catch(this.error.bind(this));
	    };
	    ;
	    LoadsService.prototype.createLoad = function (load) {
	        var body = JSON.stringify(load);
	        return this.httpService
	            .post(this.loadsUrl, body)
	            .toPromise()
	            .catch(this.error.bind(this));
	    };
	    LoadsService.prototype.clone = function (load) {
	        var id = load.id;
	        var body = JSON.stringify({
	            load_id: id
	        });
	        return this.httpService
	            .post(this.cloneUrl, body)
	            .toPromise()
	            .catch(this.error.bind(this));
	    };
	    ;
	    LoadsService.prototype.saveLoad = function (load) {
	        var id = load.id;
	        var body = JSON.stringify(load);
	        return this.httpService
	            .put(this.loadUrl(id), body)
	            .toPromise()
	            .catch(this.error.bind(this));
	    };
	    ;
	    LoadsService.prototype.moveLoad = function (divId, loadId) {
	        var body = JSON.stringify({
	            divisionId: divId
	        });
	        var id = loadId;
	        return this.httpService
	            .put(this.changeOwnerShipUrl(loadId), body)
	            .toPromise()
	            .catch(this.error.bind(this));
	    };
	    ;
	    LoadsService.prototype.get = function (divisionId, filters) {
	        var filter = new filter_model_1.Filter(filters);
	        var body = JSON.stringify({
	            division: divisionId
	        });
	        return this.httpService
	            .get(this.loadsUrl + '?division=' + divisionId + filter.serialize())
	            .toPromise()
	            .catch(this.error.bind(this));
	    };
	    ;
	    LoadsService = __decorate([
	        core_1.Injectable(), 
	        __metadata('design:paramtypes', [http_service_1.HttpService, popover_service_service_1.PopoverService, router_deprecated_1.Router, localstorage_service_1.LocalStorageService])
	    ], LoadsService);
	    return LoadsService;
	}(base_service_1.BaseService));
	exports.LoadsService = LoadsService;
	

/***/ }),
/* 528 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var moment = __webpack_require__(529);
	var Filter = (function () {
	    function Filter(filterParams) {
	        this.dateShipping = filterParams.dateShipping;
	        this.dateDelivery = filterParams.dateDelivery;
	        this.stateShipping = filterParams.stateShipping;
	        this.stateDelivery = filterParams.stateDelivery;
	        this.status = filterParams.status;
	        this.broker = filterParams.division;
	        this.cityShipping = filterParams.cityShipping;
	        this.cityDelivery = filterParams.cityDelivery;
	        this.params = filterParams.params;
	        this.offeredDrivers = filterParams.offeredDrivers;
	        this.assignedDrivers = filterParams.assignedDrivers;
	        this.assignedCarriers = filterParams.assignedCarriers;
	        this.sortingField = filterParams.sortingField;
	        this.sortingType = filterParams.sortingType;
	    }
	    Filter.prototype.serialize = function () {
	        // I bet it can be done much better
	        var serialized = '';
	        if (this.status && this.status.length) {
	            serialized += '&status=' + this.status.map(function (status) { return status.text; }).join(',');
	        }
	        if (this.params) {
	            serialized += '&attributes=' + this.params;
	        }
	        if (this.broker && this.broker.length) {
	            serialized += '&broker=' + this.broker.map(function (broker) { return broker.id; }).join(',');
	        }
	        if (this.stateShipping) {
	            serialized += '&originState=' + this.stateShipping;
	        }
	        if (this.stateDelivery) {
	            serialized += '&destinationState=' + this.stateDelivery;
	        }
	        if (this.cityShipping) {
	            serialized += '&originCity=' + this.cityShipping;
	        }
	        if (this.cityDelivery) {
	            serialized += '&destinationCity=' + this.cityDelivery;
	        }
	        if (this.dateShipping && this.dateShipping.startDate && this.dateShipping.endDate) {
	            serialized += '&shippingDates=' + moment(this.dateShipping.startDate).format('MM/DD/YYYY') + '-' + moment(this.dateShipping.endDate).format('MM/DD/YYYY');
	        }
	        if (this.dateDelivery && this.dateDelivery.startDate && this.dateDelivery.endDate) {
	            serialized += '&deliveryDates=' + moment(this.dateDelivery.startDate).format('MM/DD/YYYY') + '-' + moment(this.dateDelivery.endDate).format('MM/DD/YYYY');
	        }
	        if (this.assignedCarriers && this.assignedCarriers.length) {
	            serialized += '&carrierAssignee=' + this.assignedCarriers.map(function (carrier) { return carrier.id; }).join(',');
	        }
	        if (this.assignedDrivers && this.assignedDrivers.length) {
	            serialized += '&driverAssignee=' + this.assignedDrivers.map(function (driver) { return driver.id; }).join(',');
	        }
	        if (this.offeredDrivers && this.offeredDrivers.length) {
	            serialized += '&driverOffered=' + this.offeredDrivers.map(function (driver) { return driver.id; }).join(',');
	        }
	        if (this.sortingField && this.sortingType) {
	            serialized += '&sortBy=' + this.sortingField + '&sortType=' + this.sortingType;
	        }
	        return serialized;
	    };
	    return Filter;
	}());
	exports.Filter = Filter;
	

/***/ }),
/* 529 */,
/* 530 */,
/* 531 */,
/* 532 */,
/* 533 */,
/* 534 */,
/* 535 */,
/* 536 */,
/* 537 */,
/* 538 */,
/* 539 */,
/* 540 */,
/* 541 */,
/* 542 */,
/* 543 */,
/* 544 */,
/* 545 */,
/* 546 */,
/* 547 */,
/* 548 */,
/* 549 */,
/* 550 */,
/* 551 */,
/* 552 */,
/* 553 */,
/* 554 */,
/* 555 */,
/* 556 */,
/* 557 */,
/* 558 */,
/* 559 */,
/* 560 */,
/* 561 */,
/* 562 */,
/* 563 */,
/* 564 */,
/* 565 */,
/* 566 */,
/* 567 */,
/* 568 */,
/* 569 */,
/* 570 */,
/* 571 */,
/* 572 */,
/* 573 */,
/* 574 */,
/* 575 */,
/* 576 */,
/* 577 */,
/* 578 */,
/* 579 */,
/* 580 */,
/* 581 */,
/* 582 */,
/* 583 */,
/* 584 */,
/* 585 */,
/* 586 */,
/* 587 */,
/* 588 */,
/* 589 */,
/* 590 */,
/* 591 */,
/* 592 */,
/* 593 */,
/* 594 */,
/* 595 */,
/* 596 */,
/* 597 */,
/* 598 */,
/* 599 */,
/* 600 */,
/* 601 */,
/* 602 */,
/* 603 */,
/* 604 */,
/* 605 */,
/* 606 */,
/* 607 */,
/* 608 */,
/* 609 */,
/* 610 */,
/* 611 */,
/* 612 */,
/* 613 */,
/* 614 */,
/* 615 */,
/* 616 */,
/* 617 */,
/* 618 */,
/* 619 */,
/* 620 */,
/* 621 */,
/* 622 */,
/* 623 */,
/* 624 */,
/* 625 */,
/* 626 */,
/* 627 */,
/* 628 */,
/* 629 */,
/* 630 */,
/* 631 */,
/* 632 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	function __export(m) {
	    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
	}
	__export(__webpack_require__(633));
	__export(__webpack_require__(650));
	__export(__webpack_require__(653));
	__export(__webpack_require__(656));
	__export(__webpack_require__(659));
	__export(__webpack_require__(662));
	__export(__webpack_require__(665));
	__export(__webpack_require__(668));
	__export(__webpack_require__(674));
	__export(__webpack_require__(677));
	__export(__webpack_require__(680));
	__export(__webpack_require__(683));
	__export(__webpack_require__(643));
	//export * from './datepicker/index';
	

/***/ }),
/* 633 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	function __export(m) {
	    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
	}
	__export(__webpack_require__(634));
	

/***/ }),
/* 634 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {"use strict";
	var core_1 = __webpack_require__(2);
	var ng2_bootstrap_1 = __webpack_require__(345);
	var index_1 = __webpack_require__(508);
	var user_model_1 = __webpack_require__(516);
	var division_model_1 = __webpack_require__(517);
	var directives_1 = __webpack_require__(635);
	var index_2 = __webpack_require__(643);
	var index_3 = __webpack_require__(646);
	var localstorage_service_1 = __webpack_require__(521);
	var router_deprecated_1 = __webpack_require__(281);
	var config_1 = __webpack_require__(511);
	var moment = __webpack_require__(529);
	var HeaderComponent = (function () {
	    function HeaderComponent(userService, router, localStorageService) {
	        var _this = this;
	        this.userService = userService;
	        this.router = router;
	        this.localStorageService = localStorageService;
	        this.isSignInPage = true;
	        this.partUrl = '';
	        this.dontShowHeaderUrl = ['signin', 'restore', 'share', 'resetpassword', 'register'];
	        this.loading = false;
	        this.sub = router.subscribe(function (url) { return _this.checkPage(url); });
	        this.selectedDivision = new division_model_1.Division({});
	        this.user = new user_model_1.User({});
	    }
	    ;
	    HeaderComponent.prototype.ngOnDestroy = function () {
	        this.sub.unsubscribe();
	    };
	    ;
	    HeaderComponent.prototype.logout = function () {
	        var _this = this;
	        this.loading = true;
	        this.userService.logout()
	            .then((function (res) {
	            _this.loading = false;
	        }).bind(this))
	            .catch(function () {
	            _this.loading = false;
	        });
	    };
	    ;
	    HeaderComponent.prototype.search = function (str) {
	        str = str.toUpperCase();
	        if (str != '') {
	            this.filteredDivisions = this.user.divisions.filter(function (div) {
	                var name = div.name.toUpperCase();
	                var code = div.code.toUpperCase();
	                return (name.indexOf(str) != -1 || code.indexOf(str) != -1);
	            });
	        }
	        else {
	            this.filteredDivisions = this.user.divisions;
	        }
	    };
	    ;
	    HeaderComponent.prototype.checkPage = function (url) {
	        this.isSignInPage = !!(this.dontShowHeaderUrl.findIndex(function (link) { return url.split('/')[0].split('?')[0] == link; }) + 1);
	        this.partUrl = url.split('/')[0];
	        this.initialize();
	    };
	    ;
	    HeaderComponent.prototype.setSelectedDivision = function (division, routeHome) {
	        if (routeHome)
	            this.router.navigate(['Home', { divId: division.id }]);
	        this.searchString = '';
	        var selectedDivisionTemp = JSON.parse(this.localStorageService.getItem('selectedDivision'));
	        if (selectedDivisionTemp) {
	            this.selectedDivision = (selectedDivisionTemp.id === division.id) ? selectedDivisionTemp : division;
	        }
	        else {
	            this.selectedDivision = division;
	        }
	        ;
	        this.localStorageService.setItem('selectedDivision', JSON.stringify(this.selectedDivision));
	        if (this.selectedDivision.isCarrier) {
	            var httpService = this.userService.getBrokerSettings(this.selectedDivision.id);
	        }
	        ;
	    };
	    ;
	    HeaderComponent.prototype.useUser = function (user) {
	        // Investigate, why RouteParams wont work.
	        var routeParams = this.router.currentInstruction.component.params;
	        this.user = user;
	        this.filteredDivisions = this.user.divisions;
	        if (routeParams['divId']) {
	            this.setSelectedDivision(this.user.divisions.find(function (div) { return parseInt(routeParams['divId']) == div.id; }), false);
	        }
	        else {
	            if (this.user.divisions)
	                this.setSelectedDivision(this.user.divisions[0], false);
	        }
	        ;
	    };
	    ;
	    HeaderComponent.prototype.getDate = function () {
	        return moment().format('MM/DD/YYYY') + '--' + moment().add(1, 'w').format('MM/DD/YYYY');
	    };
	    ;
	    HeaderComponent.prototype.initialize = function () {
	        if (!this.isSignInPage && this.isSignInPage !== undefined) {
	            $('.wrapper').removeClass('-hidden-header');
	            $('.wrapper').removeClass('-white');
	            this.userService.getUser(this.useUser.bind(this));
	        }
	        else {
	            $('.wrapper').addClass('-hidden-header');
	            if (this.partUrl == 'share') {
	                $('.wrapper').addClass('-white');
	            }
	        }
	        ;
	    };
	    ;
	    HeaderComponent.prototype.ngOnInit = function () {
	        this.initialize();
	    };
	    ;
	    HeaderComponent.prototype.showHelp = function () {
	        this.helpComp.showModal();
	    };
	    ;
	    HeaderComponent.prototype.showAbout = function () {
	        this.aboutComp.showModal(config_1.Config.appVersion);
	    };
	    ;
	    __decorate([
	        core_1.ViewChild(index_2.HelpComponent), 
	        __metadata('design:type', index_2.HelpComponent)
	    ], HeaderComponent.prototype, "helpComp", void 0);
	    __decorate([
	        core_1.ViewChild(index_3.AboutComponent), 
	        __metadata('design:type', index_3.AboutComponent)
	    ], HeaderComponent.prototype, "aboutComp", void 0);
	    HeaderComponent = __decorate([
	        core_1.Component({
	            selector: 'transflo-header',
	            template: __webpack_require__(649),
	            directives: [ng2_bootstrap_1.DROPDOWN_DIRECTIVES, router_deprecated_1.ROUTER_DIRECTIVES, directives_1.MessagesDirective, index_2.HelpComponent, index_3.AboutComponent]
	        }), 
	        __metadata('design:paramtypes', [index_1.UserService, router_deprecated_1.Router, localstorage_service_1.LocalStorageService])
	    ], HeaderComponent);
	    return HeaderComponent;
	}());
	exports.HeaderComponent = HeaderComponent;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(337)))

/***/ }),
/* 635 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	function __export(m) {
	    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
	}
	__export(__webpack_require__(636));
	__export(__webpack_require__(637));
	__export(__webpack_require__(638));
	__export(__webpack_require__(639));
	__export(__webpack_require__(640));
	__export(__webpack_require__(641));
	

/***/ }),
/* 636 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {"use strict";
	var core_1 = __webpack_require__(2);
	var moment = __webpack_require__(529);
	var RangePickerDirective = (function () {
	    function RangePickerDirective(el) {
	        this.daterangechanged = new core_1.EventEmitter();
	        this.el = el.nativeElement;
	    }
	    RangePickerDirective.prototype.ngOnInit = function () {
	        var options = {
	            //autoUpdateInput: false,
	            autoApply: true,
	            autoUpdateInput: false,
	            locale: {
	                separator: ' – ',
	                format: 'M/D/YYYY',
	                weekLabel: 'W',
	                daysOfWeek: [
	                    'Sun',
	                    'Mon',
	                    'Tue',
	                    'Wed',
	                    'Thu',
	                    'Fri',
	                    'Sat'
	                ],
	                monthNames: [
	                    'January',
	                    'February',
	                    'March',
	                    'April',
	                    'May',
	                    'June',
	                    'July',
	                    'August',
	                    'September',
	                    'October',
	                    'November',
	                    'December'
	                ]
	            }
	        };
	        if (this.daterange && this.daterange.startDate && this.daterange.endDate) {
	            options['startDate'] = new Date(this.daterange.startDate);
	            options['endDate'] = new Date(this.daterange.endDate);
	        } /*else {
	            //options['startDate'] = moment().toDate();
	            //options['endDate'] = moment().add(1, 'w').toDate();

	            //this.setDate(moment(),  moment().add(1, 'w'), '');
	        }*/
	        $(this.el).daterangepicker(options, this.setDate.bind(this));
	        $(this.el).on('change.datepicker', this.changeDate.bind(this));
	    };
	    ;
	    RangePickerDirective.prototype.changeDate = function (event) {
	        var value = event.currentTarget.value;
	        if (value) {
	            value = value.split(' – ');
	            this.setDate(value[0], value[1], '');
	        }
	        else {
	            this.setDate(value, value, '');
	        }
	    };
	    ;
	    RangePickerDirective.prototype.ngOnChanges = function (changes) {
	        if (changes.daterange) {
	            if (this.daterange && this.daterange.startDate && this.daterange.endDate) {
	                //$(this.el).val(this.date);
	                $(this.el).val(moment(new Date(this.daterange.startDate)).format('M/D/YYYY') + ' – ' + moment(new Date(this.daterange.endDate)).format('M/D/YYYY'));
	            }
	        }
	    };
	    ;
	    RangePickerDirective.prototype.setDate = function (start, end, label) {
	        this.daterange = {
	            startDate: start && start.toDate(),
	            endDate: end && end.toDate()
	        };
	        this.daterangechanged.emit(this.daterange);
	    };
	    ;
	    RangePickerDirective.prototype.ngOnDestroy = function () {
	    };
	    ;
	    __decorate([
	        core_1.Output(), 
	        __metadata('design:type', Object)
	    ], RangePickerDirective.prototype, "daterangechanged", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Object)
	    ], RangePickerDirective.prototype, "daterange", void 0);
	    RangePickerDirective = __decorate([
	        core_1.Directive({
	            selector: '[range-picker]'
	        }), 
	        __metadata('design:paramtypes', [core_1.ElementRef])
	    ], RangePickerDirective);
	    return RangePickerDirective;
	}());
	exports.RangePickerDirective = RangePickerDirective;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(337)))

/***/ }),
/* 637 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {"use strict";
	var core_1 = __webpack_require__(2);
	var DatePickerDirective = (function () {
	    function DatePickerDirective(el) {
	        this.datechanged = new core_1.EventEmitter();
	        this.id = Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);
	        this.el = el.nativeElement;
	    }
	    DatePickerDirective.prototype.ngOnInit = function () {
	        var options = {
	            parentEl: $(this.el).parent(),
	            singleDatePicker: true,
	            autoApply: true,
	            autoUpdateInput: false,
	            locale: {
	                separator: '–',
	                format: 'M/D/YYYY',
	                weekLabel: 'W',
	                daysOfWeek: [
	                    'Sun',
	                    'Mon',
	                    'Tue',
	                    'Wed',
	                    'Thu',
	                    'Fri',
	                    'Sat'
	                ],
	                monthNames: [
	                    'January',
	                    'February',
	                    'March',
	                    'April',
	                    'May',
	                    'June',
	                    'July',
	                    'August',
	                    'September',
	                    'October',
	                    'November',
	                    'December'
	                ]
	            }
	        };
	        $(this.el).daterangepicker(options, this.setDate.bind(this));
	        $(this.el).on('change.datepicker', this.changeDate.bind(this));
	        $(this.el).on('apply.daterangepicker', this.updateInput.bind(this));
	    };
	    ;
	    DatePickerDirective.prototype.updateInput = function (event, picker) {
	        this.date = picker.startDate.format('M/D/YYYY');
	        this.setDate(this.date, '', '');
	    };
	    ;
	    DatePickerDirective.prototype.changeDate = function (event) {
	        this.date = event.currentTarget.value;
	        this.setDate(this.date, '', '');
	    };
	    ;
	    DatePickerDirective.prototype.ngOnChanges = function (changes) {
	        if (changes.date) {
	            $(this.el).val(this.date);
	        }
	    };
	    ;
	    DatePickerDirective.prototype.setDate = function (start, end, label) {
	        this.datechanged.emit(start);
	    };
	    ;
	    __decorate([
	        core_1.Output(), 
	        __metadata('design:type', Object)
	    ], DatePickerDirective.prototype, "datechanged", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Object)
	    ], DatePickerDirective.prototype, "date", void 0);
	    DatePickerDirective = __decorate([
	        core_1.Directive({
	            selector: '[date-picker]'
	        }), 
	        __metadata('design:paramtypes', [core_1.ElementRef])
	    ], DatePickerDirective);
	    return DatePickerDirective;
	}());
	exports.DatePickerDirective = DatePickerDirective;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(337)))

/***/ }),
/* 638 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var core_1 = __webpack_require__(2);
	var AutosizeDirective = (function () {
	    function AutosizeDirective(element) {
	        this.element = element;
	    }
	    AutosizeDirective.prototype.onInput = function (textArea) {
	        this.adjust();
	    };
	    //    ngOnInit(): void{
	    //        this.adjust();
	    //    }
	    AutosizeDirective.prototype.adjust = function () {
	        //        this.element.nativeElement.style.overflow = 'hidden';
	        this.element.nativeElement.style.height = 'auto';
	        this.element.nativeElement.style.height = this.element.nativeElement.scrollHeight + "px";
	    };
	    __decorate([
	        core_1.HostListener('input', ['$event.target']), 
	        __metadata('design:type', Function), 
	        __metadata('design:paramtypes', [HTMLTextAreaElement]), 
	        __metadata('design:returntype', void 0)
	    ], AutosizeDirective.prototype, "onInput", null);
	    AutosizeDirective = __decorate([
	        core_1.Directive({
	            selector: 'textarea[autosize]'
	        }), 
	        __metadata('design:paramtypes', [core_1.ElementRef])
	    ], AutosizeDirective);
	    return AutosizeDirective;
	}());
	exports.AutosizeDirective = AutosizeDirective;
	

/***/ }),
/* 639 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var core_1 = __webpack_require__(2);
	var moment = __webpack_require__(529);
	var MapDirective = (function () {
	    function MapDirective(el) {
	        this.breadcrumbs = [];
	        this.stops = [];
	        this.nextStop = {};
	        this.show = false;
	        this.truck = {};
	        this.id = Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);
	        this.el = el.nativeElement;
	        this.el.id = 'el' + this.id;
	    }
	    MapDirective.prototype.ngOnInit = function () {
	    };
	    ;
	    MapDirective.prototype.ngAfterViewChecked = function () {
	        this.drawMap();
	    };
	    ;
	    MapDirective.prototype.drawMap = function () {
	        if (typeof MQ == 'undefined') {
	            return;
	        }
	        if (!this.map) {
	            var southWest = L.latLng(-89.98155760646617, -180);
	            var northEast = L.latLng(89.99346179538875, 180);
	            var bounds = L.latLngBounds(southWest, northEast);
	            var mapLayer = MQ.mapLayer({
	                continuousWorld: false,
	                noWrap: true //
	            });
	            this.map = L.map('el' + this.id, {
	                layers: mapLayer,
	                center: [39.828175, -98.5795],
	                zoom: 4,
	                minZoom: 3,
	                maxBoundsViscosity: 1.0
	            });
	            this.map.setMaxBounds(bounds);
	            this.map.scrollWheelZoom.disable();
	        }
	        else {
	            this.map.invalidateSize();
	        }
	    };
	    ;
	    MapDirective.prototype.ngOnDestroy = function () {
	    };
	    ;
	    MapDirective.prototype.drawPolyline = function () {
	        if (typeof MQ == 'undefined') {
	            return;
	        }
	        var breadcrumbs = this.breadcrumbs.map(function (b) { return b.coordinates; });
	        L.polyline(breadcrumbs, {
	            color: '#fcf7f7',
	            weight: 11,
	            opacity: 1,
	            lineJoin: 'round'
	        })
	            .addTo(this.map);
	        L.polyline((breadcrumbs), {
	            color: '#0D578E',
	            weight: 5,
	            opacity: 1,
	            lineJoin: 'round',
	            clickable: true
	        })
	            .addTo(this.map);
	        var polyline = L.polyline((breadcrumbs), {
	            color: '#000000',
	            weight: 20,
	            opacity: 0,
	            lineJoin: 'round',
	            clickable: true
	        })
	            .addTo(this.map);
	        polyline.on('mouseover', this.mouseOverPolyline.bind(this));
	        polyline.on('mousemove', this.mouseOverPolyline.bind(this));
	        polyline.on('mouseout', this.mouseLeavePolyline.bind(this));
	        this.map.fitBounds(breadcrumbs);
	    };
	    ;
	    MapDirective.prototype.mouseLeavePolyline = function (event) {
	        this.map.closePopup(this.popup);
	        this.popup = null;
	    };
	    ;
	    MapDirective.prototype.mouseOverPolyline = function (event) {
	        var breadcrumb = this.breadcrumbs[0];
	        var min = Math.pow(this.breadcrumbs[0].coordinates[0] - event.latlng.lat, 2) + Math.pow(this.breadcrumbs[0].coordinates[1] - event.latlng.lng, 2);
	        for (var i = 1, length_1 = this.breadcrumbs.length; i < length_1; i++) {
	            var value = Math.pow(this.breadcrumbs[i].coordinates[0] - event.latlng.lat, 2) + Math.pow(this.breadcrumbs[i].coordinates[1] - event.latlng.lng, 2);
	            if (min > value) {
	                min = value;
	                breadcrumb = this.breadcrumbs[i];
	            }
	        }
	        if (this.popup) {
	            this.popup
	                .setLatLng(breadcrumb.coordinates)
	                .setContent('<div class="flex nowrap">' +
	                //'<div class="medium leaflet-popup-col">' + breadcrumb.speed + ' mph</div>' +
	                '<div class="medium leaflet-popup-col">' + moment(breadcrumb.timestamp).format('HH:mm:A') + '</div>' +
	                '<div class="leaflet-popup-col">' + moment(breadcrumb.timestamp).format('MMM DD') + '</div>' +
	                '</div>');
	        }
	        else {
	            this.popup = L.popup()
	                .setLatLng(breadcrumb.coordinates)
	                .setContent('<div class="flex nowrap">' +
	                //'<div class="medium leaflet-popup-col">' + breadcrumb.speed + ' mph</div>' +
	                '<div class="medium leaflet-popup-col">' + moment(breadcrumb.timestamp).format('HH:mm:A') + '</div>' +
	                '<div class="leaflet-popup-col">' + moment(breadcrumb.timestamp).format('MMM DD') + '</div>' +
	                '</div>')
	                .openOn(this.map);
	        }
	    };
	    ;
	    MapDirective.prototype.drawStops = function () {
	        if (typeof MQ == 'undefined') {
	            return;
	        }
	        for (var i = 0, length_2 = this.stops.length; i < length_2; i++) {
	            var stop = this.stops[i];
	            var date = moment(stop.date).format('MMM DD');
	            if (stop.latitude && stop.longitude) {
	                L.marker([stop.latitude, stop.longitude], {
	                    icon: L.divIcon({
	                        iconSize: L.point(50, 58),
	                        className: stop.id == this.nextStop ? 'icon-next' : 'icon-number',
	                        html: i + 1,
	                        iconAnchor: L.point(23, 55)
	                    })
	                })
	                    .addTo(this.map)
	                    .bindPopup('' +
	                    '<div class="flex pt1 pb1">' +
	                    '<div class="pr3">' +
	                    '<div class="medium">' + date +
	                    '</div>' +
	                    '<div>' + stop.time +
	                    '</div>' +
	                    '</div>' +
	                    '<div>' +
	                    '<div class="medium">' + stop.addressLines.join(', ') + '</div>' +
	                    '<div>' + [stop.city, stop.state, stop.postalCode].join(', ') + '</div>' +
	                    '<div class="leaflet-popup-hline"></div>' +
	                    '<div>' + stop.contactName + '</div>' +
	                    '<div class="medium">' + stop.phoneNumber + '</div>' +
	                    '<div>' + stop.company + '</div>' +
	                    '</div>' +
	                    '</div>');
	            }
	        }
	        this.map.fitBounds(this.stops.filter(function (stop) { return stop.latitude && stop.longitude; }).map(function (stop) { return [stop.latitude, stop.longitude]; }));
	    };
	    ;
	    MapDirective.prototype.drawTruck = function () {
	        if (typeof MQ == 'undefined') {
	            return;
	        }
	        if (this.truck && this.truck.latitude && this.truck.longitude) {
	            L.marker([this.truck.latitude, this.truck.longitude], {
	                icon: L.divIcon({
	                    iconSize: L.point(50, 58),
	                    className: 'icon-driver',
	                    html: '',
	                    iconAnchor: L.point(23, 55)
	                })
	            })
	                .addTo(this.map)
	                .bindPopup('' +
	                '<div class="flex pt1 pb1">' +
	                '<div class="pr3">' +
	                '<div class="medium">' + moment(this.truck.timestamp).format('MMM DD') +
	                '</div>' +
	                '<div>' + moment(this.truck.timestamp).format('HH:mm:A') +
	                '</div>' +
	                '</div>' +
	                '<div>' +
	                '<div class="medium">' + this.truck.addressLines.join(', ') + '</div>' +
	                '<div>' + [this.truck.city, this.truck.state, this.truck.postalCode].join(', ') + '</div>' +
	                '</div>' +
	                '</div>');
	        }
	    };
	    ;
	    MapDirective.prototype.ngOnChanges = function (changes) {
	        if (changes.breadcrumbs) {
	            if (this.breadcrumbs && this.breadcrumbs.length && this.map) {
	                this.drawPolyline();
	            }
	            ;
	        }
	        ;
	        if (changes.stops) {
	            if (this.stops && this.stops.length && this.map) {
	                this.drawStops();
	            }
	            ;
	        }
	        ;
	        if (changes.truck) {
	            if (this.truck && this.map) {
	                this.drawTruck();
	            }
	        }
	        if (changes.show) {
	            if (this.show) {
	                this.drawMap();
	                if (this.stops && this.stops.length) {
	                    this.drawStops();
	                }
	                ;
	                if (this.breadcrumbs && this.breadcrumbs.length) {
	                    this.drawPolyline();
	                }
	                ;
	                if (this.truck) {
	                    this.drawTruck();
	                }
	            }
	        }
	    };
	    ;
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Object)
	    ], MapDirective.prototype, "breadcrumbs", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Object)
	    ], MapDirective.prototype, "stops", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Object)
	    ], MapDirective.prototype, "nextStop", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Boolean)
	    ], MapDirective.prototype, "show", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Object)
	    ], MapDirective.prototype, "truck", void 0);
	    MapDirective = __decorate([
	        core_1.Directive({
	            selector: '[map]'
	        }), 
	        __metadata('design:paramtypes', [core_1.ElementRef])
	    ], MapDirective);
	    return MapDirective;
	}());
	exports.MapDirective = MapDirective;
	

/***/ }),
/* 640 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {"use strict";
	var core_1 = __webpack_require__(2);
	var index_1 = __webpack_require__(508);
	var MessagesDirective = (function () {
	    function MessagesDirective(el, popoverService) {
	        this.popoverService = popoverService;
	        this.id = Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);
	        this.el = el.nativeElement;
	        this.el.id = 'el' + this.id;
	        $(this.el).on('click.' + this.id, this.showPopup.bind(this));
	    }
	    MessagesDirective.prototype.showPopup = function (event) {
	        this.popoverService.showPopover('messages', this.divisionId, this.driverId, {});
	        event.stopPropagation();
	        event.preventDefault();
	    };
	    ;
	    MessagesDirective.prototype.ngOnDestroy = function () {
	        $(this.el).off('click.' + this.id);
	    };
	    ;
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Object)
	    ], MessagesDirective.prototype, "driverId", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Object)
	    ], MessagesDirective.prototype, "divisionId", void 0);
	    MessagesDirective = __decorate([
	        core_1.Directive({
	            selector: '[messages]'
	        }), 
	        __metadata('design:paramtypes', [core_1.ElementRef, index_1.PopoverService])
	    ], MessagesDirective);
	    return MessagesDirective;
	}());
	exports.MessagesDirective = MessagesDirective;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(337)))

/***/ }),
/* 641 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {"use strict";
	var core_1 = __webpack_require__(2);
	var _ = __webpack_require__(642);
	var ScrollDirective = (function () {
	    function ScrollDirective(el) {
	        this.onScroll = new core_1.EventEmitter();
	        this.id = Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);
	        this.el = el.nativeElement;
	        this.el.id = 'el' + this.id;
	        $(this.el).on('scroll.' + this.id, _.throttle(this.scroll.bind(this), 500));
	        this.onScroll.emit(event);
	    }
	    ScrollDirective.prototype.ngOnChanges = function (changes) {
	        if (changes.scrollEmitter) {
	            if (this.scrollEmitter) {
	                this.scrollEmitter.subscribe(this.scrollBottom.bind(this));
	            }
	        }
	    };
	    ;
	    ScrollDirective.prototype.scrollBottom = function (event) {
	        var el = $(this.el);
	        var height;
	        if (event && event.height == 0) {
	            height = event.height;
	        }
	        else {
	            height = el.children().height();
	        }
	        el.scrollTop(height);
	    };
	    ;
	    ScrollDirective.prototype.ngOnDestroy = function () {
	        $(this.el).off('scroll.' + this.id);
	    };
	    ;
	    ScrollDirective.prototype.scroll = function (event) {
	        this.onScroll.emit(event);
	    };
	    ;
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Object)
	    ], ScrollDirective.prototype, "scrollEmitter", void 0);
	    __decorate([
	        core_1.Output(), 
	        __metadata('design:type', Object)
	    ], ScrollDirective.prototype, "onScroll", void 0);
	    ScrollDirective = __decorate([
	        core_1.Directive({
	            selector: '[scroll]'
	        }), 
	        __metadata('design:paramtypes', [core_1.ElementRef])
	    ], ScrollDirective);
	    return ScrollDirective;
	}());
	exports.ScrollDirective = ScrollDirective;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(337)))

/***/ }),
/* 642 */
/***/ (function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(global, module) {/**
	 * @license
	 * Lodash <https://lodash.com/>
	 * Copyright JS Foundation and other contributors <https://js.foundation/>
	 * Released under MIT license <https://lodash.com/license>
	 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
	 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
	 */
	;(function() {

	  /** Used as a safe reference for `undefined` in pre-ES5 environments. */
	  var undefined;

	  /** Used as the semantic version number. */
	  var VERSION = '4.17.4';

	  /** Used as the size to enable large array optimizations. */
	  var LARGE_ARRAY_SIZE = 200;

	  /** Error message constants. */
	  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',
	      FUNC_ERROR_TEXT = 'Expected a function';

	  /** Used to stand-in for `undefined` hash values. */
	  var HASH_UNDEFINED = '__lodash_hash_undefined__';

	  /** Used as the maximum memoize cache size. */
	  var MAX_MEMOIZE_SIZE = 500;

	  /** Used as the internal argument placeholder. */
	  var PLACEHOLDER = '__lodash_placeholder__';

	  /** Used to compose bitmasks for cloning. */
	  var CLONE_DEEP_FLAG = 1,
	      CLONE_FLAT_FLAG = 2,
	      CLONE_SYMBOLS_FLAG = 4;

	  /** Used to compose bitmasks for value comparisons. */
	  var COMPARE_PARTIAL_FLAG = 1,
	      COMPARE_UNORDERED_FLAG = 2;

	  /** Used to compose bitmasks for function metadata. */
	  var WRAP_BIND_FLAG = 1,
	      WRAP_BIND_KEY_FLAG = 2,
	      WRAP_CURRY_BOUND_FLAG = 4,
	      WRAP_CURRY_FLAG = 8,
	      WRAP_CURRY_RIGHT_FLAG = 16,
	      WRAP_PARTIAL_FLAG = 32,
	      WRAP_PARTIAL_RIGHT_FLAG = 64,
	      WRAP_ARY_FLAG = 128,
	      WRAP_REARG_FLAG = 256,
	      WRAP_FLIP_FLAG = 512;

	  /** Used as default options for `_.truncate`. */
	  var DEFAULT_TRUNC_LENGTH = 30,
	      DEFAULT_TRUNC_OMISSION = '...';

	  /** Used to detect hot functions by number of calls within a span of milliseconds. */
	  var HOT_COUNT = 800,
	      HOT_SPAN = 16;

	  /** Used to indicate the type of lazy iteratees. */
	  var LAZY_FILTER_FLAG = 1,
	      LAZY_MAP_FLAG = 2,
	      LAZY_WHILE_FLAG = 3;

	  /** Used as references for various `Number` constants. */
	  var INFINITY = 1 / 0,
	      MAX_SAFE_INTEGER = 9007199254740991,
	      MAX_INTEGER = 1.7976931348623157e+308,
	      NAN = 0 / 0;

	  /** Used as references for the maximum length and index of an array. */
	  var MAX_ARRAY_LENGTH = 4294967295,
	      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,
	      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;

	  /** Used to associate wrap methods with their bit flags. */
	  var wrapFlags = [
	    ['ary', WRAP_ARY_FLAG],
	    ['bind', WRAP_BIND_FLAG],
	    ['bindKey', WRAP_BIND_KEY_FLAG],
	    ['curry', WRAP_CURRY_FLAG],
	    ['curryRight', WRAP_CURRY_RIGHT_FLAG],
	    ['flip', WRAP_FLIP_FLAG],
	    ['partial', WRAP_PARTIAL_FLAG],
	    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],
	    ['rearg', WRAP_REARG_FLAG]
	  ];

	  /** `Object#toString` result references. */
	  var argsTag = '[object Arguments]',
	      arrayTag = '[object Array]',
	      asyncTag = '[object AsyncFunction]',
	      boolTag = '[object Boolean]',
	      dateTag = '[object Date]',
	      domExcTag = '[object DOMException]',
	      errorTag = '[object Error]',
	      funcTag = '[object Function]',
	      genTag = '[object GeneratorFunction]',
	      mapTag = '[object Map]',
	      numberTag = '[object Number]',
	      nullTag = '[object Null]',
	      objectTag = '[object Object]',
	      promiseTag = '[object Promise]',
	      proxyTag = '[object Proxy]',
	      regexpTag = '[object RegExp]',
	      setTag = '[object Set]',
	      stringTag = '[object String]',
	      symbolTag = '[object Symbol]',
	      undefinedTag = '[object Undefined]',
	      weakMapTag = '[object WeakMap]',
	      weakSetTag = '[object WeakSet]';

	  var arrayBufferTag = '[object ArrayBuffer]',
	      dataViewTag = '[object DataView]',
	      float32Tag = '[object Float32Array]',
	      float64Tag = '[object Float64Array]',
	      int8Tag = '[object Int8Array]',
	      int16Tag = '[object Int16Array]',
	      int32Tag = '[object Int32Array]',
	      uint8Tag = '[object Uint8Array]',
	      uint8ClampedTag = '[object Uint8ClampedArray]',
	      uint16Tag = '[object Uint16Array]',
	      uint32Tag = '[object Uint32Array]';

	  /** Used to match empty string literals in compiled template source. */
	  var reEmptyStringLeading = /\b__p \+= '';/g,
	      reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
	      reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;

	  /** Used to match HTML entities and HTML characters. */
	  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,
	      reUnescapedHtml = /[&<>"']/g,
	      reHasEscapedHtml = RegExp(reEscapedHtml.source),
	      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);

	  /** Used to match template delimiters. */
	  var reEscape = /<%-([\s\S]+?)%>/g,
	      reEvaluate = /<%([\s\S]+?)%>/g,
	      reInterpolate = /<%=([\s\S]+?)%>/g;

	  /** Used to match property names within property paths. */
	  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
	      reIsPlainProp = /^\w*$/,
	      reLeadingDot = /^\./,
	      rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

	  /**
	   * Used to match `RegExp`
	   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
	   */
	  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
	      reHasRegExpChar = RegExp(reRegExpChar.source);

	  /** Used to match leading and trailing whitespace. */
	  var reTrim = /^\s+|\s+$/g,
	      reTrimStart = /^\s+/,
	      reTrimEnd = /\s+$/;

	  /** Used to match wrap detail comments. */
	  var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
	      reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
	      reSplitDetails = /,? & /;

	  /** Used to match words composed of alphanumeric characters. */
	  var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;

	  /** Used to match backslashes in property paths. */
	  var reEscapeChar = /\\(\\)?/g;

	  /**
	   * Used to match
	   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).
	   */
	  var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;

	  /** Used to match `RegExp` flags from their coerced string values. */
	  var reFlags = /\w*$/;

	  /** Used to detect bad signed hexadecimal string values. */
	  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

	  /** Used to detect binary string values. */
	  var reIsBinary = /^0b[01]+$/i;

	  /** Used to detect host constructors (Safari). */
	  var reIsHostCtor = /^\[object .+?Constructor\]$/;

	  /** Used to detect octal string values. */
	  var reIsOctal = /^0o[0-7]+$/i;

	  /** Used to detect unsigned integer values. */
	  var reIsUint = /^(?:0|[1-9]\d*)$/;

	  /** Used to match Latin Unicode letters (excluding mathematical operators). */
	  var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;

	  /** Used to ensure capturing order of template delimiters. */
	  var reNoMatch = /($^)/;

	  /** Used to match unescaped characters in compiled string literals. */
	  var reUnescapedString = /['\n\r\u2028\u2029\\]/g;

	  /** Used to compose unicode character classes. */
	  var rsAstralRange = '\\ud800-\\udfff',
	      rsComboMarksRange = '\\u0300-\\u036f',
	      reComboHalfMarksRange = '\\ufe20-\\ufe2f',
	      rsComboSymbolsRange = '\\u20d0-\\u20ff',
	      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
	      rsDingbatRange = '\\u2700-\\u27bf',
	      rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
	      rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
	      rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
	      rsPunctuationRange = '\\u2000-\\u206f',
	      rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
	      rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
	      rsVarRange = '\\ufe0e\\ufe0f',
	      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;

	  /** Used to compose unicode capture groups. */
	  var rsApos = "['\u2019]",
	      rsAstral = '[' + rsAstralRange + ']',
	      rsBreak = '[' + rsBreakRange + ']',
	      rsCombo = '[' + rsComboRange + ']',
	      rsDigits = '\\d+',
	      rsDingbat = '[' + rsDingbatRange + ']',
	      rsLower = '[' + rsLowerRange + ']',
	      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
	      rsFitz = '\\ud83c[\\udffb-\\udfff]',
	      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
	      rsNonAstral = '[^' + rsAstralRange + ']',
	      rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
	      rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
	      rsUpper = '[' + rsUpperRange + ']',
	      rsZWJ = '\\u200d';

	  /** Used to compose unicode regexes. */
	  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',
	      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',
	      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
	      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
	      reOptMod = rsModifier + '?',
	      rsOptVar = '[' + rsVarRange + ']?',
	      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
	      rsOrdLower = '\\d*(?:(?:1st|2nd|3rd|(?![123])\\dth)\\b)',
	      rsOrdUpper = '\\d*(?:(?:1ST|2ND|3RD|(?![123])\\dTH)\\b)',
	      rsSeq = rsOptVar + reOptMod + rsOptJoin,
	      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,
	      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

	  /** Used to match apostrophes. */
	  var reApos = RegExp(rsApos, 'g');

	  /**
	   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
	   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
	   */
	  var reComboMark = RegExp(rsCombo, 'g');

	  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
	  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

	  /** Used to match complex or compound words. */
	  var reUnicodeWord = RegExp([
	    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',
	    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',
	    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,
	    rsUpper + '+' + rsOptContrUpper,
	    rsOrdUpper,
	    rsOrdLower,
	    rsDigits,
	    rsEmoji
	  ].join('|'), 'g');

	  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
	  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');

	  /** Used to detect strings that need a more robust regexp to match words. */
	  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;

	  /** Used to assign default `context` object properties. */
	  var contextProps = [
	    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',
	    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',
	    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',
	    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',
	    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'
	  ];

	  /** Used to make template sourceURLs easier to identify. */
	  var templateCounter = -1;

	  /** Used to identify `toStringTag` values of typed arrays. */
	  var typedArrayTags = {};
	  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
	  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
	  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
	  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
	  typedArrayTags[uint32Tag] = true;
	  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
	  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
	  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
	  typedArrayTags[errorTag] = typedArrayTags[funcTag] =
	  typedArrayTags[mapTag] = typedArrayTags[numberTag] =
	  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
	  typedArrayTags[setTag] = typedArrayTags[stringTag] =
	  typedArrayTags[weakMapTag] = false;

	  /** Used to identify `toStringTag` values supported by `_.clone`. */
	  var cloneableTags = {};
	  cloneableTags[argsTag] = cloneableTags[arrayTag] =
	  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
	  cloneableTags[boolTag] = cloneableTags[dateTag] =
	  cloneableTags[float32Tag] = cloneableTags[float64Tag] =
	  cloneableTags[int8Tag] = cloneableTags[int16Tag] =
	  cloneableTags[int32Tag] = cloneableTags[mapTag] =
	  cloneableTags[numberTag] = cloneableTags[objectTag] =
	  cloneableTags[regexpTag] = cloneableTags[setTag] =
	  cloneableTags[stringTag] = cloneableTags[symbolTag] =
	  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
	  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
	  cloneableTags[errorTag] = cloneableTags[funcTag] =
	  cloneableTags[weakMapTag] = false;

	  /** Used to map Latin Unicode letters to basic Latin letters. */
	  var deburredLetters = {
	    // Latin-1 Supplement block.
	    '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
	    '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
	    '\xc7': 'C',  '\xe7': 'c',
	    '\xd0': 'D',  '\xf0': 'd',
	    '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
	    '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
	    '\xcc': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
	    '\xec': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
	    '\xd1': 'N',  '\xf1': 'n',
	    '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
	    '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
	    '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
	    '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
	    '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
	    '\xc6': 'Ae', '\xe6': 'ae',
	    '\xde': 'Th', '\xfe': 'th',
	    '\xdf': 'ss',
	    // Latin Extended-A block.
	    '\u0100': 'A',  '\u0102': 'A', '\u0104': 'A',
	    '\u0101': 'a',  '\u0103': 'a', '\u0105': 'a',
	    '\u0106': 'C',  '\u0108': 'C', '\u010a': 'C', '\u010c': 'C',
	    '\u0107': 'c',  '\u0109': 'c', '\u010b': 'c', '\u010d': 'c',
	    '\u010e': 'D',  '\u0110': 'D', '\u010f': 'd', '\u0111': 'd',
	    '\u0112': 'E',  '\u0114': 'E', '\u0116': 'E', '\u0118': 'E', '\u011a': 'E',
	    '\u0113': 'e',  '\u0115': 'e', '\u0117': 'e', '\u0119': 'e', '\u011b': 'e',
	    '\u011c': 'G',  '\u011e': 'G', '\u0120': 'G', '\u0122': 'G',
	    '\u011d': 'g',  '\u011f': 'g', '\u0121': 'g', '\u0123': 'g',
	    '\u0124': 'H',  '\u0126': 'H', '\u0125': 'h', '\u0127': 'h',
	    '\u0128': 'I',  '\u012a': 'I', '\u012c': 'I', '\u012e': 'I', '\u0130': 'I',
	    '\u0129': 'i',  '\u012b': 'i', '\u012d': 'i', '\u012f': 'i', '\u0131': 'i',
	    '\u0134': 'J',  '\u0135': 'j',
	    '\u0136': 'K',  '\u0137': 'k', '\u0138': 'k',
	    '\u0139': 'L',  '\u013b': 'L', '\u013d': 'L', '\u013f': 'L', '\u0141': 'L',
	    '\u013a': 'l',  '\u013c': 'l', '\u013e': 'l', '\u0140': 'l', '\u0142': 'l',
	    '\u0143': 'N',  '\u0145': 'N', '\u0147': 'N', '\u014a': 'N',
	    '\u0144': 'n',  '\u0146': 'n', '\u0148': 'n', '\u014b': 'n',
	    '\u014c': 'O',  '\u014e': 'O', '\u0150': 'O',
	    '\u014d': 'o',  '\u014f': 'o', '\u0151': 'o',
	    '\u0154': 'R',  '\u0156': 'R', '\u0158': 'R',
	    '\u0155': 'r',  '\u0157': 'r', '\u0159': 'r',
	    '\u015a': 'S',  '\u015c': 'S', '\u015e': 'S', '\u0160': 'S',
	    '\u015b': 's',  '\u015d': 's', '\u015f': 's', '\u0161': 's',
	    '\u0162': 'T',  '\u0164': 'T', '\u0166': 'T',
	    '\u0163': 't',  '\u0165': 't', '\u0167': 't',
	    '\u0168': 'U',  '\u016a': 'U', '\u016c': 'U', '\u016e': 'U', '\u0170': 'U', '\u0172': 'U',
	    '\u0169': 'u',  '\u016b': 'u', '\u016d': 'u', '\u016f': 'u', '\u0171': 'u', '\u0173': 'u',
	    '\u0174': 'W',  '\u0175': 'w',
	    '\u0176': 'Y',  '\u0177': 'y', '\u0178': 'Y',
	    '\u0179': 'Z',  '\u017b': 'Z', '\u017d': 'Z',
	    '\u017a': 'z',  '\u017c': 'z', '\u017e': 'z',
	    '\u0132': 'IJ', '\u0133': 'ij',
	    '\u0152': 'Oe', '\u0153': 'oe',
	    '\u0149': "'n", '\u017f': 's'
	  };

	  /** Used to map characters to HTML entities. */
	  var htmlEscapes = {
	    '&': '&amp;',
	    '<': '&lt;',
	    '>': '&gt;',
	    '"': '&quot;',
	    "'": '&#39;'
	  };

	  /** Used to map HTML entities to characters. */
	  var htmlUnescapes = {
	    '&amp;': '&',
	    '&lt;': '<',
	    '&gt;': '>',
	    '&quot;': '"',
	    '&#39;': "'"
	  };

	  /** Used to escape characters for inclusion in compiled string literals. */
	  var stringEscapes = {
	    '\\': '\\',
	    "'": "'",
	    '\n': 'n',
	    '\r': 'r',
	    '\u2028': 'u2028',
	    '\u2029': 'u2029'
	  };

	  /** Built-in method references without a dependency on `root`. */
	  var freeParseFloat = parseFloat,
	      freeParseInt = parseInt;

	  /** Detect free variable `global` from Node.js. */
	  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

	  /** Detect free variable `self`. */
	  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

	  /** Used as a reference to the global object. */
	  var root = freeGlobal || freeSelf || Function('return this')();

	  /** Detect free variable `exports`. */
	  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

	  /** Detect free variable `module`. */
	  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

	  /** Detect the popular CommonJS extension `module.exports`. */
	  var moduleExports = freeModule && freeModule.exports === freeExports;

	  /** Detect free variable `process` from Node.js. */
	  var freeProcess = moduleExports && freeGlobal.process;

	  /** Used to access faster Node.js helpers. */
	  var nodeUtil = (function() {
	    try {
	      return freeProcess && freeProcess.binding && freeProcess.binding('util');
	    } catch (e) {}
	  }());

	  /* Node.js helper references. */
	  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,
	      nodeIsDate = nodeUtil && nodeUtil.isDate,
	      nodeIsMap = nodeUtil && nodeUtil.isMap,
	      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,
	      nodeIsSet = nodeUtil && nodeUtil.isSet,
	      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

	  /*--------------------------------------------------------------------------*/

	  /**
	   * Adds the key-value `pair` to `map`.
	   *
	   * @private
	   * @param {Object} map The map to modify.
	   * @param {Array} pair The key-value pair to add.
	   * @returns {Object} Returns `map`.
	   */
	  function addMapEntry(map, pair) {
	    // Don't return `map.set` because it's not chainable in IE 11.
	    map.set(pair[0], pair[1]);
	    return map;
	  }

	  /**
	   * Adds `value` to `set`.
	   *
	   * @private
	   * @param {Object} set The set to modify.
	   * @param {*} value The value to add.
	   * @returns {Object} Returns `set`.
	   */
	  function addSetEntry(set, value) {
	    // Don't return `set.add` because it's not chainable in IE 11.
	    set.add(value);
	    return set;
	  }

	  /**
	   * A faster alternative to `Function#apply`, this function invokes `func`
	   * with the `this` binding of `thisArg` and the arguments of `args`.
	   *
	   * @private
	   * @param {Function} func The function to invoke.
	   * @param {*} thisArg The `this` binding of `func`.
	   * @param {Array} args The arguments to invoke `func` with.
	   * @returns {*} Returns the result of `func`.
	   */
	  function apply(func, thisArg, args) {
	    switch (args.length) {
	      case 0: return func.call(thisArg);
	      case 1: return func.call(thisArg, args[0]);
	      case 2: return func.call(thisArg, args[0], args[1]);
	      case 3: return func.call(thisArg, args[0], args[1], args[2]);
	    }
	    return func.apply(thisArg, args);
	  }

	  /**
	   * A specialized version of `baseAggregator` for arrays.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} setter The function to set `accumulator` values.
	   * @param {Function} iteratee The iteratee to transform keys.
	   * @param {Object} accumulator The initial aggregated object.
	   * @returns {Function} Returns `accumulator`.
	   */
	  function arrayAggregator(array, setter, iteratee, accumulator) {
	    var index = -1,
	        length = array == null ? 0 : array.length;

	    while (++index < length) {
	      var value = array[index];
	      setter(accumulator, value, iteratee(value), array);
	    }
	    return accumulator;
	  }

	  /**
	   * A specialized version of `_.forEach` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {Array} Returns `array`.
	   */
	  function arrayEach(array, iteratee) {
	    var index = -1,
	        length = array == null ? 0 : array.length;

	    while (++index < length) {
	      if (iteratee(array[index], index, array) === false) {
	        break;
	      }
	    }
	    return array;
	  }

	  /**
	   * A specialized version of `_.forEachRight` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {Array} Returns `array`.
	   */
	  function arrayEachRight(array, iteratee) {
	    var length = array == null ? 0 : array.length;

	    while (length--) {
	      if (iteratee(array[length], length, array) === false) {
	        break;
	      }
	    }
	    return array;
	  }

	  /**
	   * A specialized version of `_.every` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} predicate The function invoked per iteration.
	   * @returns {boolean} Returns `true` if all elements pass the predicate check,
	   *  else `false`.
	   */
	  function arrayEvery(array, predicate) {
	    var index = -1,
	        length = array == null ? 0 : array.length;

	    while (++index < length) {
	      if (!predicate(array[index], index, array)) {
	        return false;
	      }
	    }
	    return true;
	  }

	  /**
	   * A specialized version of `_.filter` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} predicate The function invoked per iteration.
	   * @returns {Array} Returns the new filtered array.
	   */
	  function arrayFilter(array, predicate) {
	    var index = -1,
	        length = array == null ? 0 : array.length,
	        resIndex = 0,
	        result = [];

	    while (++index < length) {
	      var value = array[index];
	      if (predicate(value, index, array)) {
	        result[resIndex++] = value;
	      }
	    }
	    return result;
	  }

	  /**
	   * A specialized version of `_.includes` for arrays without support for
	   * specifying an index to search from.
	   *
	   * @private
	   * @param {Array} [array] The array to inspect.
	   * @param {*} target The value to search for.
	   * @returns {boolean} Returns `true` if `target` is found, else `false`.
	   */
	  function arrayIncludes(array, value) {
	    var length = array == null ? 0 : array.length;
	    return !!length && baseIndexOf(array, value, 0) > -1;
	  }

	  /**
	   * This function is like `arrayIncludes` except that it accepts a comparator.
	   *
	   * @private
	   * @param {Array} [array] The array to inspect.
	   * @param {*} target The value to search for.
	   * @param {Function} comparator The comparator invoked per element.
	   * @returns {boolean} Returns `true` if `target` is found, else `false`.
	   */
	  function arrayIncludesWith(array, value, comparator) {
	    var index = -1,
	        length = array == null ? 0 : array.length;

	    while (++index < length) {
	      if (comparator(value, array[index])) {
	        return true;
	      }
	    }
	    return false;
	  }

	  /**
	   * A specialized version of `_.map` for arrays without support for iteratee
	   * shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {Array} Returns the new mapped array.
	   */
	  function arrayMap(array, iteratee) {
	    var index = -1,
	        length = array == null ? 0 : array.length,
	        result = Array(length);

	    while (++index < length) {
	      result[index] = iteratee(array[index], index, array);
	    }
	    return result;
	  }

	  /**
	   * Appends the elements of `values` to `array`.
	   *
	   * @private
	   * @param {Array} array The array to modify.
	   * @param {Array} values The values to append.
	   * @returns {Array} Returns `array`.
	   */
	  function arrayPush(array, values) {
	    var index = -1,
	        length = values.length,
	        offset = array.length;

	    while (++index < length) {
	      array[offset + index] = values[index];
	    }
	    return array;
	  }

	  /**
	   * A specialized version of `_.reduce` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @param {*} [accumulator] The initial value.
	   * @param {boolean} [initAccum] Specify using the first element of `array` as
	   *  the initial value.
	   * @returns {*} Returns the accumulated value.
	   */
	  function arrayReduce(array, iteratee, accumulator, initAccum) {
	    var index = -1,
	        length = array == null ? 0 : array.length;

	    if (initAccum && length) {
	      accumulator = array[++index];
	    }
	    while (++index < length) {
	      accumulator = iteratee(accumulator, array[index], index, array);
	    }
	    return accumulator;
	  }

	  /**
	   * A specialized version of `_.reduceRight` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @param {*} [accumulator] The initial value.
	   * @param {boolean} [initAccum] Specify using the last element of `array` as
	   *  the initial value.
	   * @returns {*} Returns the accumulated value.
	   */
	  function arrayReduceRight(array, iteratee, accumulator, initAccum) {
	    var length = array == null ? 0 : array.length;
	    if (initAccum && length) {
	      accumulator = array[--length];
	    }
	    while (length--) {
	      accumulator = iteratee(accumulator, array[length], length, array);
	    }
	    return accumulator;
	  }

	  /**
	   * A specialized version of `_.some` for arrays without support for iteratee
	   * shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} predicate The function invoked per iteration.
	   * @returns {boolean} Returns `true` if any element passes the predicate check,
	   *  else `false`.
	   */
	  function arraySome(array, predicate) {
	    var index = -1,
	        length = array == null ? 0 : array.length;

	    while (++index < length) {
	      if (predicate(array[index], index, array)) {
	        return true;
	      }
	    }
	    return false;
	  }

	  /**
	   * Gets the size of an ASCII `string`.
	   *
	   * @private
	   * @param {string} string The string inspect.
	   * @returns {number} Returns the string size.
	   */
	  var asciiSize = baseProperty('length');

	  /**
	   * Converts an ASCII `string` to an array.
	   *
	   * @private
	   * @param {string} string The string to convert.
	   * @returns {Array} Returns the converted array.
	   */
	  function asciiToArray(string) {
	    return string.split('');
	  }

	  /**
	   * Splits an ASCII `string` into an array of its words.
	   *
	   * @private
	   * @param {string} The string to inspect.
	   * @returns {Array} Returns the words of `string`.
	   */
	  function asciiWords(string) {
	    return string.match(reAsciiWord) || [];
	  }

	  /**
	   * The base implementation of methods like `_.findKey` and `_.findLastKey`,
	   * without support for iteratee shorthands, which iterates over `collection`
	   * using `eachFunc`.
	   *
	   * @private
	   * @param {Array|Object} collection The collection to inspect.
	   * @param {Function} predicate The function invoked per iteration.
	   * @param {Function} eachFunc The function to iterate over `collection`.
	   * @returns {*} Returns the found element or its key, else `undefined`.
	   */
	  function baseFindKey(collection, predicate, eachFunc) {
	    var result;
	    eachFunc(collection, function(value, key, collection) {
	      if (predicate(value, key, collection)) {
	        result = key;
	        return false;
	      }
	    });
	    return result;
	  }

	  /**
	   * The base implementation of `_.findIndex` and `_.findLastIndex` without
	   * support for iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to inspect.
	   * @param {Function} predicate The function invoked per iteration.
	   * @param {number} fromIndex The index to search from.
	   * @param {boolean} [fromRight] Specify iterating from right to left.
	   * @returns {number} Returns the index of the matched value, else `-1`.
	   */
	  function baseFindIndex(array, predicate, fromIndex, fromRight) {
	    var length = array.length,
	        index = fromIndex + (fromRight ? 1 : -1);

	    while ((fromRight ? index-- : ++index < length)) {
	      if (predicate(array[index], index, array)) {
	        return index;
	      }
	    }
	    return -1;
	  }

	  /**
	   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
	   *
	   * @private
	   * @param {Array} array The array to inspect.
	   * @param {*} value The value to search for.
	   * @param {number} fromIndex The index to search from.
	   * @returns {number} Returns the index of the matched value, else `-1`.
	   */
	  function baseIndexOf(array, value, fromIndex) {
	    return value === value
	      ? strictIndexOf(array, value, fromIndex)
	      : baseFindIndex(array, baseIsNaN, fromIndex);
	  }

	  /**
	   * This function is like `baseIndexOf` except that it accepts a comparator.
	   *
	   * @private
	   * @param {Array} array The array to inspect.
	   * @param {*} value The value to search for.
	   * @param {number} fromIndex The index to search from.
	   * @param {Function} comparator The comparator invoked per element.
	   * @returns {number} Returns the index of the matched value, else `-1`.
	   */
	  function baseIndexOfWith(array, value, fromIndex, comparator) {
	    var index = fromIndex - 1,
	        length = array.length;

	    while (++index < length) {
	      if (comparator(array[index], value)) {
	        return index;
	      }
	    }
	    return -1;
	  }

	  /**
	   * The base implementation of `_.isNaN` without support for number objects.
	   *
	   * @private
	   * @param {*} value The value to check.
	   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
	   */
	  function baseIsNaN(value) {
	    return value !== value;
	  }

	  /**
	   * The base implementation of `_.mean` and `_.meanBy` without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {number} Returns the mean.
	   */
	  function baseMean(array, iteratee) {
	    var length = array == null ? 0 : array.length;
	    return length ? (baseSum(array, iteratee) / length) : NAN;
	  }

	  /**
	   * The base implementation of `_.property` without support for deep paths.
	   *
	   * @private
	   * @param {string} key The key of the property to get.
	   * @returns {Function} Returns the new accessor function.
	   */
	  function baseProperty(key) {
	    return function(object) {
	      return object == null ? undefined : object[key];
	    };
	  }

	  /**
	   * The base implementation of `_.propertyOf` without support for deep paths.
	   *
	   * @private
	   * @param {Object} object The object to query.
	   * @returns {Function} Returns the new accessor function.
	   */
	  function basePropertyOf(object) {
	    return function(key) {
	      return object == null ? undefined : object[key];
	    };
	  }

	  /**
	   * The base implementation of `_.reduce` and `_.reduceRight`, without support
	   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
	   *
	   * @private
	   * @param {Array|Object} collection The collection to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @param {*} accumulator The initial value.
	   * @param {boolean} initAccum Specify using the first or last element of
	   *  `collection` as the initial value.
	   * @param {Function} eachFunc The function to iterate over `collection`.
	   * @returns {*} Returns the accumulated value.
	   */
	  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
	    eachFunc(collection, function(value, index, collection) {
	      accumulator = initAccum
	        ? (initAccum = false, value)
	        : iteratee(accumulator, value, index, collection);
	    });
	    return accumulator;
	  }

	  /**
	   * The base implementation of `_.sortBy` which uses `comparer` to define the
	   * sort order of `array` and replaces criteria objects with their corresponding
	   * values.
	   *
	   * @private
	   * @param {Array} array The array to sort.
	   * @param {Function} comparer The function to define sort order.
	   * @returns {Array} Returns `array`.
	   */
	  function baseSortBy(array, comparer) {
	    var length = array.length;

	    array.sort(comparer);
	    while (length--) {
	      array[length] = array[length].value;
	    }
	    return array;
	  }

	  /**
	   * The base implementation of `_.sum` and `_.sumBy` without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {number} Returns the sum.
	   */
	  function baseSum(array, iteratee) {
	    var result,
	        index = -1,
	        length = array.length;

	    while (++index < length) {
	      var current = iteratee(array[index]);
	      if (current !== undefined) {
	        result = result === undefined ? current : (result + current);
	      }
	    }
	    return result;
	  }

	  /**
	   * The base implementation of `_.times` without support for iteratee shorthands
	   * or max array length checks.
	   *
	   * @private
	   * @param {number} n The number of times to invoke `iteratee`.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {Array} Returns the array of results.
	   */
	  function baseTimes(n, iteratee) {
	    var index = -1,
	        result = Array(n);

	    while (++index < n) {
	      result[index] = iteratee(index);
	    }
	    return result;
	  }

	  /**
	   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
	   * of key-value pairs for `object` corresponding to the property names of `props`.
	   *
	   * @private
	   * @param {Object} object The object to query.
	   * @param {Array} props The property names to get values for.
	   * @returns {Object} Returns the key-value pairs.
	   */
	  function baseToPairs(object, props) {
	    return arrayMap(props, function(key) {
	      return [key, object[key]];
	    });
	  }

	  /**
	   * The base implementation of `_.unary` without support for storing metadata.
	   *
	   * @private
	   * @param {Function} func The function to cap arguments for.
	   * @returns {Function} Returns the new capped function.
	   */
	  function baseUnary(func) {
	    return function(value) {
	      return func(value);
	    };
	  }

	  /**
	   * The base implementation of `_.values` and `_.valuesIn` which creates an
	   * array of `object` property values corresponding to the property names
	   * of `props`.
	   *
	   * @private
	   * @param {Object} object The object to query.
	   * @param {Array} props The property names to get values for.
	   * @returns {Object} Returns the array of property values.
	   */
	  function baseValues(object, props) {
	    return arrayMap(props, function(key) {
	      return object[key];
	    });
	  }

	  /**
	   * Checks if a `cache` value for `key` exists.
	   *
	   * @private
	   * @param {Object} cache The cache to query.
	   * @param {string} key The key of the entry to check.
	   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	   */
	  function cacheHas(cache, key) {
	    return cache.has(key);
	  }

	  /**
	   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
	   * that is not found in the character symbols.
	   *
	   * @private
	   * @param {Array} strSymbols The string symbols to inspect.
	   * @param {Array} chrSymbols The character symbols to find.
	   * @returns {number} Returns the index of the first unmatched string symbol.
	   */
	  function charsStartIndex(strSymbols, chrSymbols) {
	    var index = -1,
	        length = strSymbols.length;

	    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
	    return index;
	  }

	  /**
	   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
	   * that is not found in the character symbols.
	   *
	   * @private
	   * @param {Array} strSymbols The string symbols to inspect.
	   * @param {Array} chrSymbols The character symbols to find.
	   * @returns {number} Returns the index of the last unmatched string symbol.
	   */
	  function charsEndIndex(strSymbols, chrSymbols) {
	    var index = strSymbols.length;

	    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
	    return index;
	  }

	  /**
	   * Gets the number of `placeholder` occurrences in `array`.
	   *
	   * @private
	   * @param {Array} array The array to inspect.
	   * @param {*} placeholder The placeholder to search for.
	   * @returns {number} Returns the placeholder count.
	   */
	  function countHolders(array, placeholder) {
	    var length = array.length,
	        result = 0;

	    while (length--) {
	      if (array[length] === placeholder) {
	        ++result;
	      }
	    }
	    return result;
	  }

	  /**
	   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
	   * letters to basic Latin letters.
	   *
	   * @private
	   * @param {string} letter The matched letter to deburr.
	   * @returns {string} Returns the deburred letter.
	   */
	  var deburrLetter = basePropertyOf(deburredLetters);

	  /**
	   * Used by `_.escape` to convert characters to HTML entities.
	   *
	   * @private
	   * @param {string} chr The matched character to escape.
	   * @returns {string} Returns the escaped character.
	   */
	  var escapeHtmlChar = basePropertyOf(htmlEscapes);

	  /**
	   * Used by `_.template` to escape characters for inclusion in compiled string literals.
	   *
	   * @private
	   * @param {string} chr The matched character to escape.
	   * @returns {string} Returns the escaped character.
	   */
	  function escapeStringChar(chr) {
	    return '\\' + stringEscapes[chr];
	  }

	  /**
	   * Gets the value at `key` of `object`.
	   *
	   * @private
	   * @param {Object} [object] The object to query.
	   * @param {string} key The key of the property to get.
	   * @returns {*} Returns the property value.
	   */
	  function getValue(object, key) {
	    return object == null ? undefined : object[key];
	  }

	  /**
	   * Checks if `string` contains Unicode symbols.
	   *
	   * @private
	   * @param {string} string The string to inspect.
	   * @returns {boolean} Returns `true` if a symbol is found, else `false`.
	   */
	  function hasUnicode(string) {
	    return reHasUnicode.test(string);
	  }

	  /**
	   * Checks if `string` contains a word composed of Unicode symbols.
	   *
	   * @private
	   * @param {string} string The string to inspect.
	   * @returns {boolean} Returns `true` if a word is found, else `false`.
	   */
	  function hasUnicodeWord(string) {
	    return reHasUnicodeWord.test(string);
	  }

	  /**
	   * Converts `iterator` to an array.
	   *
	   * @private
	   * @param {Object} iterator The iterator to convert.
	   * @returns {Array} Returns the converted array.
	   */
	  function iteratorToArray(iterator) {
	    var data,
	        result = [];

	    while (!(data = iterator.next()).done) {
	      result.push(data.value);
	    }
	    return result;
	  }

	  /**
	   * Converts `map` to its key-value pairs.
	   *
	   * @private
	   * @param {Object} map The map to convert.
	   * @returns {Array} Returns the key-value pairs.
	   */
	  function mapToArray(map) {
	    var index = -1,
	        result = Array(map.size);

	    map.forEach(function(value, key) {
	      result[++index] = [key, value];
	    });
	    return result;
	  }

	  /**
	   * Creates a unary function that invokes `func` with its argument transformed.
	   *
	   * @private
	   * @param {Function} func The function to wrap.
	   * @param {Function} transform The argument transform.
	   * @returns {Function} Returns the new function.
	   */
	  function overArg(func, transform) {
	    return function(arg) {
	      return func(transform(arg));
	    };
	  }

	  /**
	   * Replaces all `placeholder` elements in `array` with an internal placeholder
	   * and returns an array of their indexes.
	   *
	   * @private
	   * @param {Array} array The array to modify.
	   * @param {*} placeholder The placeholder to replace.
	   * @returns {Array} Returns the new array of placeholder indexes.
	   */
	  function replaceHolders(array, placeholder) {
	    var index = -1,
	        length = array.length,
	        resIndex = 0,
	        result = [];

	    while (++index < length) {
	      var value = array[index];
	      if (value === placeholder || value === PLACEHOLDER) {
	        array[index] = PLACEHOLDER;
	        result[resIndex++] = index;
	      }
	    }
	    return result;
	  }

	  /**
	   * Converts `set` to an array of its values.
	   *
	   * @private
	   * @param {Object} set The set to convert.
	   * @returns {Array} Returns the values.
	   */
	  function setToArray(set) {
	    var index = -1,
	        result = Array(set.size);

	    set.forEach(function(value) {
	      result[++index] = value;
	    });
	    return result;
	  }

	  /**
	   * Converts `set` to its value-value pairs.
	   *
	   * @private
	   * @param {Object} set The set to convert.
	   * @returns {Array} Returns the value-value pairs.
	   */
	  function setToPairs(set) {
	    var index = -1,
	        result = Array(set.size);

	    set.forEach(function(value) {
	      result[++index] = [value, value];
	    });
	    return result;
	  }

	  /**
	   * A specialized version of `_.indexOf` which performs strict equality
	   * comparisons of values, i.e. `===`.
	   *
	   * @private
	   * @param {Array} array The array to inspect.
	   * @param {*} value The value to search for.
	   * @param {number} fromIndex The index to search from.
	   * @returns {number} Returns the index of the matched value, else `-1`.
	   */
	  function strictIndexOf(array, value, fromIndex) {
	    var index = fromIndex - 1,
	        length = array.length;

	    while (++index < length) {
	      if (array[index] === value) {
	        return index;
	      }
	    }
	    return -1;
	  }

	  /**
	   * A specialized version of `_.lastIndexOf` which performs strict equality
	   * comparisons of values, i.e. `===`.
	   *
	   * @private
	   * @param {Array} array The array to inspect.
	   * @param {*} value The value to search for.
	   * @param {number} fromIndex The index to search from.
	   * @returns {number} Returns the index of the matched value, else `-1`.
	   */
	  function strictLastIndexOf(array, value, fromIndex) {
	    var index = fromIndex + 1;
	    while (index--) {
	      if (array[index] === value) {
	        return index;
	      }
	    }
	    return index;
	  }

	  /**
	   * Gets the number of symbols in `string`.
	   *
	   * @private
	   * @param {string} string The string to inspect.
	   * @returns {number} Returns the string size.
	   */
	  function stringSize(string) {
	    return hasUnicode(string)
	      ? unicodeSize(string)
	      : asciiSize(string);
	  }

	  /**
	   * Converts `string` to an array.
	   *
	   * @private
	   * @param {string} string The string to convert.
	   * @returns {Array} Returns the converted array.
	   */
	  function stringToArray(string) {
	    return hasUnicode(string)
	      ? unicodeToArray(string)
	      : asciiToArray(string);
	  }

	  /**
	   * Used by `_.unescape` to convert HTML entities to characters.
	   *
	   * @private
	   * @param {string} chr The matched character to unescape.
	   * @returns {string} Returns the unescaped character.
	   */
	  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);

	  /**
	   * Gets the size of a Unicode `string`.
	   *
	   * @private
	   * @param {string} string The string inspect.
	   * @returns {number} Returns the string size.
	   */
	  function unicodeSize(string) {
	    var result = reUnicode.lastIndex = 0;
	    while (reUnicode.test(string)) {
	      ++result;
	    }
	    return result;
	  }

	  /**
	   * Converts a Unicode `string` to an array.
	   *
	   * @private
	   * @param {string} string The string to convert.
	   * @returns {Array} Returns the converted array.
	   */
	  function unicodeToArray(string) {
	    return string.match(reUnicode) || [];
	  }

	  /**
	   * Splits a Unicode `string` into an array of its words.
	   *
	   * @private
	   * @param {string} The string to inspect.
	   * @returns {Array} Returns the words of `string`.
	   */
	  function unicodeWords(string) {
	    return string.match(reUnicodeWord) || [];
	  }

	  /*--------------------------------------------------------------------------*/

	  /**
	   * Create a new pristine `lodash` function using the `context` object.
	   *
	   * @static
	   * @memberOf _
	   * @since 1.1.0
	   * @category Util
	   * @param {Object} [context=root] The context object.
	   * @returns {Function} Returns a new `lodash` function.
	   * @example
	   *
	   * _.mixin({ 'foo': _.constant('foo') });
	   *
	   * var lodash = _.runInContext();
	   * lodash.mixin({ 'bar': lodash.constant('bar') });
	   *
	   * _.isFunction(_.foo);
	   * // => true
	   * _.isFunction(_.bar);
	   * // => false
	   *
	   * lodash.isFunction(lodash.foo);
	   * // => false
	   * lodash.isFunction(lodash.bar);
	   * // => true
	   *
	   * // Create a suped-up `defer` in Node.js.
	   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;
	   */
	  var runInContext = (function runInContext(context) {
	    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));

	    /** Built-in constructor references. */
	    var Array = context.Array,
	        Date = context.Date,
	        Error = context.Error,
	        Function = context.Function,
	        Math = context.Math,
	        Object = context.Object,
	        RegExp = context.RegExp,
	        String = context.String,
	        TypeError = context.TypeError;

	    /** Used for built-in method references. */
	    var arrayProto = Array.prototype,
	        funcProto = Function.prototype,
	        objectProto = Object.prototype;

	    /** Used to detect overreaching core-js shims. */
	    var coreJsData = context['__core-js_shared__'];

	    /** Used to resolve the decompiled source of functions. */
	    var funcToString = funcProto.toString;

	    /** Used to check objects for own properties. */
	    var hasOwnProperty = objectProto.hasOwnProperty;

	    /** Used to generate unique IDs. */
	    var idCounter = 0;

	    /** Used to detect methods masquerading as native. */
	    var maskSrcKey = (function() {
	      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
	      return uid ? ('Symbol(src)_1.' + uid) : '';
	    }());

	    /**
	     * Used to resolve the
	     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	     * of values.
	     */
	    var nativeObjectToString = objectProto.toString;

	    /** Used to infer the `Object` constructor. */
	    var objectCtorString = funcToString.call(Object);

	    /** Used to restore the original `_` reference in `_.noConflict`. */
	    var oldDash = root._;

	    /** Used to detect if a method is native. */
	    var reIsNative = RegExp('^' +
	      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
	      .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
	    );

	    /** Built-in value references. */
	    var Buffer = moduleExports ? context.Buffer : undefined,
	        Symbol = context.Symbol,
	        Uint8Array = context.Uint8Array,
	        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,
	        getPrototype = overArg(Object.getPrototypeOf, Object),
	        objectCreate = Object.create,
	        propertyIsEnumerable = objectProto.propertyIsEnumerable,
	        splice = arrayProto.splice,
	        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,
	        symIterator = Symbol ? Symbol.iterator : undefined,
	        symToStringTag = Symbol ? Symbol.toStringTag : undefined;

	    var defineProperty = (function() {
	      try {
	        var func = getNative(Object, 'defineProperty');
	        func({}, '', {});
	        return func;
	      } catch (e) {}
	    }());

	    /** Mocked built-ins. */
	    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,
	        ctxNow = Date && Date.now !== root.Date.now && Date.now,
	        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;

	    /* Built-in method references for those with the same name as other `lodash` methods. */
	    var nativeCeil = Math.ceil,
	        nativeFloor = Math.floor,
	        nativeGetSymbols = Object.getOwnPropertySymbols,
	        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
	        nativeIsFinite = context.isFinite,
	        nativeJoin = arrayProto.join,
	        nativeKeys = overArg(Object.keys, Object),
	        nativeMax = Math.max,
	        nativeMin = Math.min,
	        nativeNow = Date.now,
	        nativeParseInt = context.parseInt,
	        nativeRandom = Math.random,
	        nativeReverse = arrayProto.reverse;

	    /* Built-in method references that are verified to be native. */
	    var DataView = getNative(context, 'DataView'),
	        Map = getNative(context, 'Map'),
	        Promise = getNative(context, 'Promise'),
	        Set = getNative(context, 'Set'),
	        WeakMap = getNative(context, 'WeakMap'),
	        nativeCreate = getNative(Object, 'create');

	    /** Used to store function metadata. */
	    var metaMap = WeakMap && new WeakMap;

	    /** Used to lookup unminified function names. */
	    var realNames = {};

	    /** Used to detect maps, sets, and weakmaps. */
	    var dataViewCtorString = toSource(DataView),
	        mapCtorString = toSource(Map),
	        promiseCtorString = toSource(Promise),
	        setCtorString = toSource(Set),
	        weakMapCtorString = toSource(WeakMap);

	    /** Used to convert symbols to primitives and strings. */
	    var symbolProto = Symbol ? Symbol.prototype : undefined,
	        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,
	        symbolToString = symbolProto ? symbolProto.toString : undefined;

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates a `lodash` object which wraps `value` to enable implicit method
	     * chain sequences. Methods that operate on and return arrays, collections,
	     * and functions can be chained together. Methods that retrieve a single value
	     * or may return a primitive value will automatically end the chain sequence
	     * and return the unwrapped value. Otherwise, the value must be unwrapped
	     * with `_#value`.
	     *
	     * Explicit chain sequences, which must be unwrapped with `_#value`, may be
	     * enabled using `_.chain`.
	     *
	     * The execution of chained methods is lazy, that is, it's deferred until
	     * `_#value` is implicitly or explicitly called.
	     *
	     * Lazy evaluation allows several methods to support shortcut fusion.
	     * Shortcut fusion is an optimization to merge iteratee calls; this avoids
	     * the creation of intermediate arrays and can greatly reduce the number of
	     * iteratee executions. Sections of a chain sequence qualify for shortcut
	     * fusion if the section is applied to an array and iteratees accept only
	     * one argument. The heuristic for whether a section qualifies for shortcut
	     * fusion is subject to change.
	     *
	     * Chaining is supported in custom builds as long as the `_#value` method is
	     * directly or indirectly included in the build.
	     *
	     * In addition to lodash methods, wrappers have `Array` and `String` methods.
	     *
	     * The wrapper `Array` methods are:
	     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
	     *
	     * The wrapper `String` methods are:
	     * `replace` and `split`
	     *
	     * The wrapper methods that support shortcut fusion are:
	     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
	     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
	     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
	     *
	     * The chainable wrapper methods are:
	     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
	     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
	     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
	     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
	     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
	     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
	     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
	     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
	     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
	     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
	     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
	     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
	     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
	     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
	     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
	     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
	     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
	     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
	     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
	     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
	     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
	     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
	     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
	     * `zipObject`, `zipObjectDeep`, and `zipWith`
	     *
	     * The wrapper methods that are **not** chainable by default are:
	     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
	     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
	     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
	     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
	     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
	     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
	     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
	     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
	     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
	     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
	     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
	     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
	     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
	     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
	     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
	     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
	     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
	     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
	     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
	     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
	     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
	     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
	     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
	     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
	     * `upperFirst`, `value`, and `words`
	     *
	     * @name _
	     * @constructor
	     * @category Seq
	     * @param {*} value The value to wrap in a `lodash` instance.
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var wrapped = _([1, 2, 3]);
	     *
	     * // Returns an unwrapped value.
	     * wrapped.reduce(_.add);
	     * // => 6
	     *
	     * // Returns a wrapped value.
	     * var squares = wrapped.map(square);
	     *
	     * _.isArray(squares);
	     * // => false
	     *
	     * _.isArray(squares.value());
	     * // => true
	     */
	    function lodash(value) {
	      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
	        if (value instanceof LodashWrapper) {
	          return value;
	        }
	        if (hasOwnProperty.call(value, '__wrapped__')) {
	          return wrapperClone(value);
	        }
	      }
	      return new LodashWrapper(value);
	    }

	    /**
	     * The base implementation of `_.create` without support for assigning
	     * properties to the created object.
	     *
	     * @private
	     * @param {Object} proto The object to inherit from.
	     * @returns {Object} Returns the new object.
	     */
	    var baseCreate = (function() {
	      function object() {}
	      return function(proto) {
	        if (!isObject(proto)) {
	          return {};
	        }
	        if (objectCreate) {
	          return objectCreate(proto);
	        }
	        object.prototype = proto;
	        var result = new object;
	        object.prototype = undefined;
	        return result;
	      };
	    }());

	    /**
	     * The function whose prototype chain sequence wrappers inherit from.
	     *
	     * @private
	     */
	    function baseLodash() {
	      // No operation performed.
	    }

	    /**
	     * The base constructor for creating `lodash` wrapper objects.
	     *
	     * @private
	     * @param {*} value The value to wrap.
	     * @param {boolean} [chainAll] Enable explicit method chain sequences.
	     */
	    function LodashWrapper(value, chainAll) {
	      this.__wrapped__ = value;
	      this.__actions__ = [];
	      this.__chain__ = !!chainAll;
	      this.__index__ = 0;
	      this.__values__ = undefined;
	    }

	    /**
	     * By default, the template delimiters used by lodash are like those in
	     * embedded Ruby (ERB) as well as ES2015 template strings. Change the
	     * following template settings to use alternative delimiters.
	     *
	     * @static
	     * @memberOf _
	     * @type {Object}
	     */
	    lodash.templateSettings = {

	      /**
	       * Used to detect `data` property values to be HTML-escaped.
	       *
	       * @memberOf _.templateSettings
	       * @type {RegExp}
	       */
	      'escape': reEscape,

	      /**
	       * Used to detect code to be evaluated.
	       *
	       * @memberOf _.templateSettings
	       * @type {RegExp}
	       */
	      'evaluate': reEvaluate,

	      /**
	       * Used to detect `data` property values to inject.
	       *
	       * @memberOf _.templateSettings
	       * @type {RegExp}
	       */
	      'interpolate': reInterpolate,

	      /**
	       * Used to reference the data object in the template text.
	       *
	       * @memberOf _.templateSettings
	       * @type {string}
	       */
	      'variable': '',

	      /**
	       * Used to import variables into the compiled template.
	       *
	       * @memberOf _.templateSettings
	       * @type {Object}
	       */
	      'imports': {

	        /**
	         * A reference to the `lodash` function.
	         *
	         * @memberOf _.templateSettings.imports
	         * @type {Function}
	         */
	        '_': lodash
	      }
	    };

	    // Ensure wrappers are instances of `baseLodash`.
	    lodash.prototype = baseLodash.prototype;
	    lodash.prototype.constructor = lodash;

	    LodashWrapper.prototype = baseCreate(baseLodash.prototype);
	    LodashWrapper.prototype.constructor = LodashWrapper;

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
	     *
	     * @private
	     * @constructor
	     * @param {*} value The value to wrap.
	     */
	    function LazyWrapper(value) {
	      this.__wrapped__ = value;
	      this.__actions__ = [];
	      this.__dir__ = 1;
	      this.__filtered__ = false;
	      this.__iteratees__ = [];
	      this.__takeCount__ = MAX_ARRAY_LENGTH;
	      this.__views__ = [];
	    }

	    /**
	     * Creates a clone of the lazy wrapper object.
	     *
	     * @private
	     * @name clone
	     * @memberOf LazyWrapper
	     * @returns {Object} Returns the cloned `LazyWrapper` object.
	     */
	    function lazyClone() {
	      var result = new LazyWrapper(this.__wrapped__);
	      result.__actions__ = copyArray(this.__actions__);
	      result.__dir__ = this.__dir__;
	      result.__filtered__ = this.__filtered__;
	      result.__iteratees__ = copyArray(this.__iteratees__);
	      result.__takeCount__ = this.__takeCount__;
	      result.__views__ = copyArray(this.__views__);
	      return result;
	    }

	    /**
	     * Reverses the direction of lazy iteration.
	     *
	     * @private
	     * @name reverse
	     * @memberOf LazyWrapper
	     * @returns {Object} Returns the new reversed `LazyWrapper` object.
	     */
	    function lazyReverse() {
	      if (this.__filtered__) {
	        var result = new LazyWrapper(this);
	        result.__dir__ = -1;
	        result.__filtered__ = true;
	      } else {
	        result = this.clone();
	        result.__dir__ *= -1;
	      }
	      return result;
	    }

	    /**
	     * Extracts the unwrapped value from its lazy wrapper.
	     *
	     * @private
	     * @name value
	     * @memberOf LazyWrapper
	     * @returns {*} Returns the unwrapped value.
	     */
	    function lazyValue() {
	      var array = this.__wrapped__.value(),
	          dir = this.__dir__,
	          isArr = isArray(array),
	          isRight = dir < 0,
	          arrLength = isArr ? array.length : 0,
	          view = getView(0, arrLength, this.__views__),
	          start = view.start,
	          end = view.end,
	          length = end - start,
	          index = isRight ? end : (start - 1),
	          iteratees = this.__iteratees__,
	          iterLength = iteratees.length,
	          resIndex = 0,
	          takeCount = nativeMin(length, this.__takeCount__);

	      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {
	        return baseWrapperValue(array, this.__actions__);
	      }
	      var result = [];

	      outer:
	      while (length-- && resIndex < takeCount) {
	        index += dir;

	        var iterIndex = -1,
	            value = array[index];

	        while (++iterIndex < iterLength) {
	          var data = iteratees[iterIndex],
	              iteratee = data.iteratee,
	              type = data.type,
	              computed = iteratee(value);

	          if (type == LAZY_MAP_FLAG) {
	            value = computed;
	          } else if (!computed) {
	            if (type == LAZY_FILTER_FLAG) {
	              continue outer;
	            } else {
	              break outer;
	            }
	          }
	        }
	        result[resIndex++] = value;
	      }
	      return result;
	    }

	    // Ensure `LazyWrapper` is an instance of `baseLodash`.
	    LazyWrapper.prototype = baseCreate(baseLodash.prototype);
	    LazyWrapper.prototype.constructor = LazyWrapper;

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates a hash object.
	     *
	     * @private
	     * @constructor
	     * @param {Array} [entries] The key-value pairs to cache.
	     */
	    function Hash(entries) {
	      var index = -1,
	          length = entries == null ? 0 : entries.length;

	      this.clear();
	      while (++index < length) {
	        var entry = entries[index];
	        this.set(entry[0], entry[1]);
	      }
	    }

	    /**
	     * Removes all key-value entries from the hash.
	     *
	     * @private
	     * @name clear
	     * @memberOf Hash
	     */
	    function hashClear() {
	      this.__data__ = nativeCreate ? nativeCreate(null) : {};
	      this.size = 0;
	    }

	    /**
	     * Removes `key` and its value from the hash.
	     *
	     * @private
	     * @name delete
	     * @memberOf Hash
	     * @param {Object} hash The hash to modify.
	     * @param {string} key The key of the value to remove.
	     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	     */
	    function hashDelete(key) {
	      var result = this.has(key) && delete this.__data__[key];
	      this.size -= result ? 1 : 0;
	      return result;
	    }

	    /**
	     * Gets the hash value for `key`.
	     *
	     * @private
	     * @name get
	     * @memberOf Hash
	     * @param {string} key The key of the value to get.
	     * @returns {*} Returns the entry value.
	     */
	    function hashGet(key) {
	      var data = this.__data__;
	      if (nativeCreate) {
	        var result = data[key];
	        return result === HASH_UNDEFINED ? undefined : result;
	      }
	      return hasOwnProperty.call(data, key) ? data[key] : undefined;
	    }

	    /**
	     * Checks if a hash value for `key` exists.
	     *
	     * @private
	     * @name has
	     * @memberOf Hash
	     * @param {string} key The key of the entry to check.
	     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	     */
	    function hashHas(key) {
	      var data = this.__data__;
	      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
	    }

	    /**
	     * Sets the hash `key` to `value`.
	     *
	     * @private
	     * @name set
	     * @memberOf Hash
	     * @param {string} key The key of the value to set.
	     * @param {*} value The value to set.
	     * @returns {Object} Returns the hash instance.
	     */
	    function hashSet(key, value) {
	      var data = this.__data__;
	      this.size += this.has(key) ? 0 : 1;
	      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
	      return this;
	    }

	    // Add methods to `Hash`.
	    Hash.prototype.clear = hashClear;
	    Hash.prototype['delete'] = hashDelete;
	    Hash.prototype.get = hashGet;
	    Hash.prototype.has = hashHas;
	    Hash.prototype.set = hashSet;

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates an list cache object.
	     *
	     * @private
	     * @constructor
	     * @param {Array} [entries] The key-value pairs to cache.
	     */
	    function ListCache(entries) {
	      var index = -1,
	          length = entries == null ? 0 : entries.length;

	      this.clear();
	      while (++index < length) {
	        var entry = entries[index];
	        this.set(entry[0], entry[1]);
	      }
	    }

	    /**
	     * Removes all key-value entries from the list cache.
	     *
	     * @private
	     * @name clear
	     * @memberOf ListCache
	     */
	    function listCacheClear() {
	      this.__data__ = [];
	      this.size = 0;
	    }

	    /**
	     * Removes `key` and its value from the list cache.
	     *
	     * @private
	     * @name delete
	     * @memberOf ListCache
	     * @param {string} key The key of the value to remove.
	     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	     */
	    function listCacheDelete(key) {
	      var data = this.__data__,
	          index = assocIndexOf(data, key);

	      if (index < 0) {
	        return false;
	      }
	      var lastIndex = data.length - 1;
	      if (index == lastIndex) {
	        data.pop();
	      } else {
	        splice.call(data, index, 1);
	      }
	      --this.size;
	      return true;
	    }

	    /**
	     * Gets the list cache value for `key`.
	     *
	     * @private
	     * @name get
	     * @memberOf ListCache
	     * @param {string} key The key of the value to get.
	     * @returns {*} Returns the entry value.
	     */
	    function listCacheGet(key) {
	      var data = this.__data__,
	          index = assocIndexOf(data, key);

	      return index < 0 ? undefined : data[index][1];
	    }

	    /**
	     * Checks if a list cache value for `key` exists.
	     *
	     * @private
	     * @name has
	     * @memberOf ListCache
	     * @param {string} key The key of the entry to check.
	     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	     */
	    function listCacheHas(key) {
	      return assocIndexOf(this.__data__, key) > -1;
	    }

	    /**
	     * Sets the list cache `key` to `value`.
	     *
	     * @private
	     * @name set
	     * @memberOf ListCache
	     * @param {string} key The key of the value to set.
	     * @param {*} value The value to set.
	     * @returns {Object} Returns the list cache instance.
	     */
	    function listCacheSet(key, value) {
	      var data = this.__data__,
	          index = assocIndexOf(data, key);

	      if (index < 0) {
	        ++this.size;
	        data.push([key, value]);
	      } else {
	        data[index][1] = value;
	      }
	      return this;
	    }

	    // Add methods to `ListCache`.
	    ListCache.prototype.clear = listCacheClear;
	    ListCache.prototype['delete'] = listCacheDelete;
	    ListCache.prototype.get = listCacheGet;
	    ListCache.prototype.has = listCacheHas;
	    ListCache.prototype.set = listCacheSet;

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates a map cache object to store key-value pairs.
	     *
	     * @private
	     * @constructor
	     * @param {Array} [entries] The key-value pairs to cache.
	     */
	    function MapCache(entries) {
	      var index = -1,
	          length = entries == null ? 0 : entries.length;

	      this.clear();
	      while (++index < length) {
	        var entry = entries[index];
	        this.set(entry[0], entry[1]);
	      }
	    }

	    /**
	     * Removes all key-value entries from the map.
	     *
	     * @private
	     * @name clear
	     * @memberOf MapCache
	     */
	    function mapCacheClear() {
	      this.size = 0;
	      this.__data__ = {
	        'hash': new Hash,
	        'map': new (Map || ListCache),
	        'string': new Hash
	      };
	    }

	    /**
	     * Removes `key` and its value from the map.
	     *
	     * @private
	     * @name delete
	     * @memberOf MapCache
	     * @param {string} key The key of the value to remove.
	     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	     */
	    function mapCacheDelete(key) {
	      var result = getMapData(this, key)['delete'](key);
	      this.size -= result ? 1 : 0;
	      return result;
	    }

	    /**
	     * Gets the map value for `key`.
	     *
	     * @private
	     * @name get
	     * @memberOf MapCache
	     * @param {string} key The key of the value to get.
	     * @returns {*} Returns the entry value.
	     */
	    function mapCacheGet(key) {
	      return getMapData(this, key).get(key);
	    }

	    /**
	     * Checks if a map value for `key` exists.
	     *
	     * @private
	     * @name has
	     * @memberOf MapCache
	     * @param {string} key The key of the entry to check.
	     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	     */
	    function mapCacheHas(key) {
	      return getMapData(this, key).has(key);
	    }

	    /**
	     * Sets the map `key` to `value`.
	     *
	     * @private
	     * @name set
	     * @memberOf MapCache
	     * @param {string} key The key of the value to set.
	     * @param {*} value The value to set.
	     * @returns {Object} Returns the map cache instance.
	     */
	    function mapCacheSet(key, value) {
	      var data = getMapData(this, key),
	          size = data.size;

	      data.set(key, value);
	      this.size += data.size == size ? 0 : 1;
	      return this;
	    }

	    // Add methods to `MapCache`.
	    MapCache.prototype.clear = mapCacheClear;
	    MapCache.prototype['delete'] = mapCacheDelete;
	    MapCache.prototype.get = mapCacheGet;
	    MapCache.prototype.has = mapCacheHas;
	    MapCache.prototype.set = mapCacheSet;

	    /*------------------------------------------------------------------------*/

	    /**
	     *
	     * Creates an array cache object to store unique values.
	     *
	     * @private
	     * @constructor
	     * @param {Array} [values] The values to cache.
	     */
	    function SetCache(values) {
	      var index = -1,
	          length = values == null ? 0 : values.length;

	      this.__data__ = new MapCache;
	      while (++index < length) {
	        this.add(values[index]);
	      }
	    }

	    /**
	     * Adds `value` to the array cache.
	     *
	     * @private
	     * @name add
	     * @memberOf SetCache
	     * @alias push
	     * @param {*} value The value to cache.
	     * @returns {Object} Returns the cache instance.
	     */
	    function setCacheAdd(value) {
	      this.__data__.set(value, HASH_UNDEFINED);
	      return this;
	    }

	    /**
	     * Checks if `value` is in the array cache.
	     *
	     * @private
	     * @name has
	     * @memberOf SetCache
	     * @param {*} value The value to search for.
	     * @returns {number} Returns `true` if `value` is found, else `false`.
	     */
	    function setCacheHas(value) {
	      return this.__data__.has(value);
	    }

	    // Add methods to `SetCache`.
	    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
	    SetCache.prototype.has = setCacheHas;

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates a stack cache object to store key-value pairs.
	     *
	     * @private
	     * @constructor
	     * @param {Array} [entries] The key-value pairs to cache.
	     */
	    function Stack(entries) {
	      var data = this.__data__ = new ListCache(entries);
	      this.size = data.size;
	    }

	    /**
	     * Removes all key-value entries from the stack.
	     *
	     * @private
	     * @name clear
	     * @memberOf Stack
	     */
	    function stackClear() {
	      this.__data__ = new ListCache;
	      this.size = 0;
	    }

	    /**
	     * Removes `key` and its value from the stack.
	     *
	     * @private
	     * @name delete
	     * @memberOf Stack
	     * @param {string} key The key of the value to remove.
	     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	     */
	    function stackDelete(key) {
	      var data = this.__data__,
	          result = data['delete'](key);

	      this.size = data.size;
	      return result;
	    }

	    /**
	     * Gets the stack value for `key`.
	     *
	     * @private
	     * @name get
	     * @memberOf Stack
	     * @param {string} key The key of the value to get.
	     * @returns {*} Returns the entry value.
	     */
	    function stackGet(key) {
	      return this.__data__.get(key);
	    }

	    /**
	     * Checks if a stack value for `key` exists.
	     *
	     * @private
	     * @name has
	     * @memberOf Stack
	     * @param {string} key The key of the entry to check.
	     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	     */
	    function stackHas(key) {
	      return this.__data__.has(key);
	    }

	    /**
	     * Sets the stack `key` to `value`.
	     *
	     * @private
	     * @name set
	     * @memberOf Stack
	     * @param {string} key The key of the value to set.
	     * @param {*} value The value to set.
	     * @returns {Object} Returns the stack cache instance.
	     */
	    function stackSet(key, value) {
	      var data = this.__data__;
	      if (data instanceof ListCache) {
	        var pairs = data.__data__;
	        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
	          pairs.push([key, value]);
	          this.size = ++data.size;
	          return this;
	        }
	        data = this.__data__ = new MapCache(pairs);
	      }
	      data.set(key, value);
	      this.size = data.size;
	      return this;
	    }

	    // Add methods to `Stack`.
	    Stack.prototype.clear = stackClear;
	    Stack.prototype['delete'] = stackDelete;
	    Stack.prototype.get = stackGet;
	    Stack.prototype.has = stackHas;
	    Stack.prototype.set = stackSet;

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates an array of the enumerable property names of the array-like `value`.
	     *
	     * @private
	     * @param {*} value The value to query.
	     * @param {boolean} inherited Specify returning inherited property names.
	     * @returns {Array} Returns the array of property names.
	     */
	    function arrayLikeKeys(value, inherited) {
	      var isArr = isArray(value),
	          isArg = !isArr && isArguments(value),
	          isBuff = !isArr && !isArg && isBuffer(value),
	          isType = !isArr && !isArg && !isBuff && isTypedArray(value),
	          skipIndexes = isArr || isArg || isBuff || isType,
	          result = skipIndexes ? baseTimes(value.length, String) : [],
	          length = result.length;

	      for (var key in value) {
	        if ((inherited || hasOwnProperty.call(value, key)) &&
	            !(skipIndexes && (
	               // Safari 9 has enumerable `arguments.length` in strict mode.
	               key == 'length' ||
	               // Node.js 0.10 has enumerable non-index properties on buffers.
	               (isBuff && (key == 'offset' || key == 'parent')) ||
	               // PhantomJS 2 has enumerable non-index properties on typed arrays.
	               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
	               // Skip index properties.
	               isIndex(key, length)
	            ))) {
	          result.push(key);
	        }
	      }
	      return result;
	    }

	    /**
	     * A specialized version of `_.sample` for arrays.
	     *
	     * @private
	     * @param {Array} array The array to sample.
	     * @returns {*} Returns the random element.
	     */
	    function arraySample(array) {
	      var length = array.length;
	      return length ? array[baseRandom(0, length - 1)] : undefined;
	    }

	    /**
	     * A specialized version of `_.sampleSize` for arrays.
	     *
	     * @private
	     * @param {Array} array The array to sample.
	     * @param {number} n The number of elements to sample.
	     * @returns {Array} Returns the random elements.
	     */
	    function arraySampleSize(array, n) {
	      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
	    }

	    /**
	     * A specialized version of `_.shuffle` for arrays.
	     *
	     * @private
	     * @param {Array} array The array to shuffle.
	     * @returns {Array} Returns the new shuffled array.
	     */
	    function arrayShuffle(array) {
	      return shuffleSelf(copyArray(array));
	    }

	    /**
	     * This function is like `assignValue` except that it doesn't assign
	     * `undefined` values.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {string} key The key of the property to assign.
	     * @param {*} value The value to assign.
	     */
	    function assignMergeValue(object, key, value) {
	      if ((value !== undefined && !eq(object[key], value)) ||
	          (value === undefined && !(key in object))) {
	        baseAssignValue(object, key, value);
	      }
	    }

	    /**
	     * Assigns `value` to `key` of `object` if the existing value is not equivalent
	     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {string} key The key of the property to assign.
	     * @param {*} value The value to assign.
	     */
	    function assignValue(object, key, value) {
	      var objValue = object[key];
	      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
	          (value === undefined && !(key in object))) {
	        baseAssignValue(object, key, value);
	      }
	    }

	    /**
	     * Gets the index at which the `key` is found in `array` of key-value pairs.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {*} key The key to search for.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     */
	    function assocIndexOf(array, key) {
	      var length = array.length;
	      while (length--) {
	        if (eq(array[length][0], key)) {
	          return length;
	        }
	      }
	      return -1;
	    }

	    /**
	     * Aggregates elements of `collection` on `accumulator` with keys transformed
	     * by `iteratee` and values set by `setter`.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} setter The function to set `accumulator` values.
	     * @param {Function} iteratee The iteratee to transform keys.
	     * @param {Object} accumulator The initial aggregated object.
	     * @returns {Function} Returns `accumulator`.
	     */
	    function baseAggregator(collection, setter, iteratee, accumulator) {
	      baseEach(collection, function(value, key, collection) {
	        setter(accumulator, value, iteratee(value), collection);
	      });
	      return accumulator;
	    }

	    /**
	     * The base implementation of `_.assign` without support for multiple sources
	     * or `customizer` functions.
	     *
	     * @private
	     * @param {Object} object The destination object.
	     * @param {Object} source The source object.
	     * @returns {Object} Returns `object`.
	     */
	    function baseAssign(object, source) {
	      return object && copyObject(source, keys(source), object);
	    }

	    /**
	     * The base implementation of `_.assignIn` without support for multiple sources
	     * or `customizer` functions.
	     *
	     * @private
	     * @param {Object} object The destination object.
	     * @param {Object} source The source object.
	     * @returns {Object} Returns `object`.
	     */
	    function baseAssignIn(object, source) {
	      return object && copyObject(source, keysIn(source), object);
	    }

	    /**
	     * The base implementation of `assignValue` and `assignMergeValue` without
	     * value checks.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {string} key The key of the property to assign.
	     * @param {*} value The value to assign.
	     */
	    function baseAssignValue(object, key, value) {
	      if (key == '__proto__' && defineProperty) {
	        defineProperty(object, key, {
	          'configurable': true,
	          'enumerable': true,
	          'value': value,
	          'writable': true
	        });
	      } else {
	        object[key] = value;
	      }
	    }

	    /**
	     * The base implementation of `_.at` without support for individual paths.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {string[]} paths The property paths to pick.
	     * @returns {Array} Returns the picked elements.
	     */
	    function baseAt(object, paths) {
	      var index = -1,
	          length = paths.length,
	          result = Array(length),
	          skip = object == null;

	      while (++index < length) {
	        result[index] = skip ? undefined : get(object, paths[index]);
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.clamp` which doesn't coerce arguments.
	     *
	     * @private
	     * @param {number} number The number to clamp.
	     * @param {number} [lower] The lower bound.
	     * @param {number} upper The upper bound.
	     * @returns {number} Returns the clamped number.
	     */
	    function baseClamp(number, lower, upper) {
	      if (number === number) {
	        if (upper !== undefined) {
	          number = number <= upper ? number : upper;
	        }
	        if (lower !== undefined) {
	          number = number >= lower ? number : lower;
	        }
	      }
	      return number;
	    }

	    /**
	     * The base implementation of `_.clone` and `_.cloneDeep` which tracks
	     * traversed objects.
	     *
	     * @private
	     * @param {*} value The value to clone.
	     * @param {boolean} bitmask The bitmask flags.
	     *  1 - Deep clone
	     *  2 - Flatten inherited properties
	     *  4 - Clone symbols
	     * @param {Function} [customizer] The function to customize cloning.
	     * @param {string} [key] The key of `value`.
	     * @param {Object} [object] The parent object of `value`.
	     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
	     * @returns {*} Returns the cloned value.
	     */
	    function baseClone(value, bitmask, customizer, key, object, stack) {
	      var result,
	          isDeep = bitmask & CLONE_DEEP_FLAG,
	          isFlat = bitmask & CLONE_FLAT_FLAG,
	          isFull = bitmask & CLONE_SYMBOLS_FLAG;

	      if (customizer) {
	        result = object ? customizer(value, key, object, stack) : customizer(value);
	      }
	      if (result !== undefined) {
	        return result;
	      }
	      if (!isObject(value)) {
	        return value;
	      }
	      var isArr = isArray(value);
	      if (isArr) {
	        result = initCloneArray(value);
	        if (!isDeep) {
	          return copyArray(value, result);
	        }
	      } else {
	        var tag = getTag(value),
	            isFunc = tag == funcTag || tag == genTag;

	        if (isBuffer(value)) {
	          return cloneBuffer(value, isDeep);
	        }
	        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
	          result = (isFlat || isFunc) ? {} : initCloneObject(value);
	          if (!isDeep) {
	            return isFlat
	              ? copySymbolsIn(value, baseAssignIn(result, value))
	              : copySymbols(value, baseAssign(result, value));
	          }
	        } else {
	          if (!cloneableTags[tag]) {
	            return object ? value : {};
	          }
	          result = initCloneByTag(value, tag, baseClone, isDeep);
	        }
	      }
	      // Check for circular references and return its corresponding clone.
	      stack || (stack = new Stack);
	      var stacked = stack.get(value);
	      if (stacked) {
	        return stacked;
	      }
	      stack.set(value, result);

	      var keysFunc = isFull
	        ? (isFlat ? getAllKeysIn : getAllKeys)
	        : (isFlat ? keysIn : keys);

	      var props = isArr ? undefined : keysFunc(value);
	      arrayEach(props || value, function(subValue, key) {
	        if (props) {
	          key = subValue;
	          subValue = value[key];
	        }
	        // Recursively populate clone (susceptible to call stack limits).
	        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
	      });
	      return result;
	    }

	    /**
	     * The base implementation of `_.conforms` which doesn't clone `source`.
	     *
	     * @private
	     * @param {Object} source The object of property predicates to conform to.
	     * @returns {Function} Returns the new spec function.
	     */
	    function baseConforms(source) {
	      var props = keys(source);
	      return function(object) {
	        return baseConformsTo(object, source, props);
	      };
	    }

	    /**
	     * The base implementation of `_.conformsTo` which accepts `props` to check.
	     *
	     * @private
	     * @param {Object} object The object to inspect.
	     * @param {Object} source The object of property predicates to conform to.
	     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
	     */
	    function baseConformsTo(object, source, props) {
	      var length = props.length;
	      if (object == null) {
	        return !length;
	      }
	      object = Object(object);
	      while (length--) {
	        var key = props[length],
	            predicate = source[key],
	            value = object[key];

	        if ((value === undefined && !(key in object)) || !predicate(value)) {
	          return false;
	        }
	      }
	      return true;
	    }

	    /**
	     * The base implementation of `_.delay` and `_.defer` which accepts `args`
	     * to provide to `func`.
	     *
	     * @private
	     * @param {Function} func The function to delay.
	     * @param {number} wait The number of milliseconds to delay invocation.
	     * @param {Array} args The arguments to provide to `func`.
	     * @returns {number|Object} Returns the timer id or timeout object.
	     */
	    function baseDelay(func, wait, args) {
	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      return setTimeout(function() { func.apply(undefined, args); }, wait);
	    }

	    /**
	     * The base implementation of methods like `_.difference` without support
	     * for excluding multiple arrays or iteratee shorthands.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {Array} values The values to exclude.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of filtered values.
	     */
	    function baseDifference(array, values, iteratee, comparator) {
	      var index = -1,
	          includes = arrayIncludes,
	          isCommon = true,
	          length = array.length,
	          result = [],
	          valuesLength = values.length;

	      if (!length) {
	        return result;
	      }
	      if (iteratee) {
	        values = arrayMap(values, baseUnary(iteratee));
	      }
	      if (comparator) {
	        includes = arrayIncludesWith;
	        isCommon = false;
	      }
	      else if (values.length >= LARGE_ARRAY_SIZE) {
	        includes = cacheHas;
	        isCommon = false;
	        values = new SetCache(values);
	      }
	      outer:
	      while (++index < length) {
	        var value = array[index],
	            computed = iteratee == null ? value : iteratee(value);

	        value = (comparator || value !== 0) ? value : 0;
	        if (isCommon && computed === computed) {
	          var valuesIndex = valuesLength;
	          while (valuesIndex--) {
	            if (values[valuesIndex] === computed) {
	              continue outer;
	            }
	          }
	          result.push(value);
	        }
	        else if (!includes(values, computed, comparator)) {
	          result.push(value);
	        }
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.forEach` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Array|Object} Returns `collection`.
	     */
	    var baseEach = createBaseEach(baseForOwn);

	    /**
	     * The base implementation of `_.forEachRight` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Array|Object} Returns `collection`.
	     */
	    var baseEachRight = createBaseEach(baseForOwnRight, true);

	    /**
	     * The base implementation of `_.every` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} predicate The function invoked per iteration.
	     * @returns {boolean} Returns `true` if all elements pass the predicate check,
	     *  else `false`
	     */
	    function baseEvery(collection, predicate) {
	      var result = true;
	      baseEach(collection, function(value, index, collection) {
	        result = !!predicate(value, index, collection);
	        return result;
	      });
	      return result;
	    }

	    /**
	     * The base implementation of methods like `_.max` and `_.min` which accepts a
	     * `comparator` to determine the extremum value.
	     *
	     * @private
	     * @param {Array} array The array to iterate over.
	     * @param {Function} iteratee The iteratee invoked per iteration.
	     * @param {Function} comparator The comparator used to compare values.
	     * @returns {*} Returns the extremum value.
	     */
	    function baseExtremum(array, iteratee, comparator) {
	      var index = -1,
	          length = array.length;

	      while (++index < length) {
	        var value = array[index],
	            current = iteratee(value);

	        if (current != null && (computed === undefined
	              ? (current === current && !isSymbol(current))
	              : comparator(current, computed)
	            )) {
	          var computed = current,
	              result = value;
	        }
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.fill` without an iteratee call guard.
	     *
	     * @private
	     * @param {Array} array The array to fill.
	     * @param {*} value The value to fill `array` with.
	     * @param {number} [start=0] The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns `array`.
	     */
	    function baseFill(array, value, start, end) {
	      var length = array.length;

	      start = toInteger(start);
	      if (start < 0) {
	        start = -start > length ? 0 : (length + start);
	      }
	      end = (end === undefined || end > length) ? length : toInteger(end);
	      if (end < 0) {
	        end += length;
	      }
	      end = start > end ? 0 : toLength(end);
	      while (start < end) {
	        array[start++] = value;
	      }
	      return array;
	    }

	    /**
	     * The base implementation of `_.filter` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} predicate The function invoked per iteration.
	     * @returns {Array} Returns the new filtered array.
	     */
	    function baseFilter(collection, predicate) {
	      var result = [];
	      baseEach(collection, function(value, index, collection) {
	        if (predicate(value, index, collection)) {
	          result.push(value);
	        }
	      });
	      return result;
	    }

	    /**
	     * The base implementation of `_.flatten` with support for restricting flattening.
	     *
	     * @private
	     * @param {Array} array The array to flatten.
	     * @param {number} depth The maximum recursion depth.
	     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
	     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
	     * @param {Array} [result=[]] The initial result value.
	     * @returns {Array} Returns the new flattened array.
	     */
	    function baseFlatten(array, depth, predicate, isStrict, result) {
	      var index = -1,
	          length = array.length;

	      predicate || (predicate = isFlattenable);
	      result || (result = []);

	      while (++index < length) {
	        var value = array[index];
	        if (depth > 0 && predicate(value)) {
	          if (depth > 1) {
	            // Recursively flatten arrays (susceptible to call stack limits).
	            baseFlatten(value, depth - 1, predicate, isStrict, result);
	          } else {
	            arrayPush(result, value);
	          }
	        } else if (!isStrict) {
	          result[result.length] = value;
	        }
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `baseForOwn` which iterates over `object`
	     * properties returned by `keysFunc` and invokes `iteratee` for each property.
	     * Iteratee functions may exit iteration early by explicitly returning `false`.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @param {Function} keysFunc The function to get the keys of `object`.
	     * @returns {Object} Returns `object`.
	     */
	    var baseFor = createBaseFor();

	    /**
	     * This function is like `baseFor` except that it iterates over properties
	     * in the opposite order.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @param {Function} keysFunc The function to get the keys of `object`.
	     * @returns {Object} Returns `object`.
	     */
	    var baseForRight = createBaseFor(true);

	    /**
	     * The base implementation of `_.forOwn` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     */
	    function baseForOwn(object, iteratee) {
	      return object && baseFor(object, iteratee, keys);
	    }

	    /**
	     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     */
	    function baseForOwnRight(object, iteratee) {
	      return object && baseForRight(object, iteratee, keys);
	    }

	    /**
	     * The base implementation of `_.functions` which creates an array of
	     * `object` function property names filtered from `props`.
	     *
	     * @private
	     * @param {Object} object The object to inspect.
	     * @param {Array} props The property names to filter.
	     * @returns {Array} Returns the function names.
	     */
	    function baseFunctions(object, props) {
	      return arrayFilter(props, function(key) {
	        return isFunction(object[key]);
	      });
	    }

	    /**
	     * The base implementation of `_.get` without support for default values.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the property to get.
	     * @returns {*} Returns the resolved value.
	     */
	    function baseGet(object, path) {
	      path = castPath(path, object);

	      var index = 0,
	          length = path.length;

	      while (object != null && index < length) {
	        object = object[toKey(path[index++])];
	      }
	      return (index && index == length) ? object : undefined;
	    }

	    /**
	     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
	     * `keysFunc` and `symbolsFunc` to get the enumerable property names and
	     * symbols of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Function} keysFunc The function to get the keys of `object`.
	     * @param {Function} symbolsFunc The function to get the symbols of `object`.
	     * @returns {Array} Returns the array of property names and symbols.
	     */
	    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
	      var result = keysFunc(object);
	      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
	    }

	    /**
	     * The base implementation of `getTag` without fallbacks for buggy environments.
	     *
	     * @private
	     * @param {*} value The value to query.
	     * @returns {string} Returns the `toStringTag`.
	     */
	    function baseGetTag(value) {
	      if (value == null) {
	        return value === undefined ? undefinedTag : nullTag;
	      }
	      return (symToStringTag && symToStringTag in Object(value))
	        ? getRawTag(value)
	        : objectToString(value);
	    }

	    /**
	     * The base implementation of `_.gt` which doesn't coerce arguments.
	     *
	     * @private
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is greater than `other`,
	     *  else `false`.
	     */
	    function baseGt(value, other) {
	      return value > other;
	    }

	    /**
	     * The base implementation of `_.has` without support for deep paths.
	     *
	     * @private
	     * @param {Object} [object] The object to query.
	     * @param {Array|string} key The key to check.
	     * @returns {boolean} Returns `true` if `key` exists, else `false`.
	     */
	    function baseHas(object, key) {
	      return object != null && hasOwnProperty.call(object, key);
	    }

	    /**
	     * The base implementation of `_.hasIn` without support for deep paths.
	     *
	     * @private
	     * @param {Object} [object] The object to query.
	     * @param {Array|string} key The key to check.
	     * @returns {boolean} Returns `true` if `key` exists, else `false`.
	     */
	    function baseHasIn(object, key) {
	      return object != null && key in Object(object);
	    }

	    /**
	     * The base implementation of `_.inRange` which doesn't coerce arguments.
	     *
	     * @private
	     * @param {number} number The number to check.
	     * @param {number} start The start of the range.
	     * @param {number} end The end of the range.
	     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
	     */
	    function baseInRange(number, start, end) {
	      return number >= nativeMin(start, end) && number < nativeMax(start, end);
	    }

	    /**
	     * The base implementation of methods like `_.intersection`, without support
	     * for iteratee shorthands, that accepts an array of arrays to inspect.
	     *
	     * @private
	     * @param {Array} arrays The arrays to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of shared values.
	     */
	    function baseIntersection(arrays, iteratee, comparator) {
	      var includes = comparator ? arrayIncludesWith : arrayIncludes,
	          length = arrays[0].length,
	          othLength = arrays.length,
	          othIndex = othLength,
	          caches = Array(othLength),
	          maxLength = Infinity,
	          result = [];

	      while (othIndex--) {
	        var array = arrays[othIndex];
	        if (othIndex && iteratee) {
	          array = arrayMap(array, baseUnary(iteratee));
	        }
	        maxLength = nativeMin(array.length, maxLength);
	        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))
	          ? new SetCache(othIndex && array)
	          : undefined;
	      }
	      array = arrays[0];

	      var index = -1,
	          seen = caches[0];

	      outer:
	      while (++index < length && result.length < maxLength) {
	        var value = array[index],
	            computed = iteratee ? iteratee(value) : value;

	        value = (comparator || value !== 0) ? value : 0;
	        if (!(seen
	              ? cacheHas(seen, computed)
	              : includes(result, computed, comparator)
	            )) {
	          othIndex = othLength;
	          while (--othIndex) {
	            var cache = caches[othIndex];
	            if (!(cache
	                  ? cacheHas(cache, computed)
	                  : includes(arrays[othIndex], computed, comparator))
	                ) {
	              continue outer;
	            }
	          }
	          if (seen) {
	            seen.push(computed);
	          }
	          result.push(value);
	        }
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.invert` and `_.invertBy` which inverts
	     * `object` with values transformed by `iteratee` and set by `setter`.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} setter The function to set `accumulator` values.
	     * @param {Function} iteratee The iteratee to transform values.
	     * @param {Object} accumulator The initial inverted object.
	     * @returns {Function} Returns `accumulator`.
	     */
	    function baseInverter(object, setter, iteratee, accumulator) {
	      baseForOwn(object, function(value, key, object) {
	        setter(accumulator, iteratee(value), key, object);
	      });
	      return accumulator;
	    }

	    /**
	     * The base implementation of `_.invoke` without support for individual
	     * method arguments.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the method to invoke.
	     * @param {Array} args The arguments to invoke the method with.
	     * @returns {*} Returns the result of the invoked method.
	     */
	    function baseInvoke(object, path, args) {
	      path = castPath(path, object);
	      object = parent(object, path);
	      var func = object == null ? object : object[toKey(last(path))];
	      return func == null ? undefined : apply(func, object, args);
	    }

	    /**
	     * The base implementation of `_.isArguments`.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
	     */
	    function baseIsArguments(value) {
	      return isObjectLike(value) && baseGetTag(value) == argsTag;
	    }

	    /**
	     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
	     */
	    function baseIsArrayBuffer(value) {
	      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;
	    }

	    /**
	     * The base implementation of `_.isDate` without Node.js optimizations.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
	     */
	    function baseIsDate(value) {
	      return isObjectLike(value) && baseGetTag(value) == dateTag;
	    }

	    /**
	     * The base implementation of `_.isEqual` which supports partial comparisons
	     * and tracks traversed objects.
	     *
	     * @private
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @param {boolean} bitmask The bitmask flags.
	     *  1 - Unordered comparison
	     *  2 - Partial comparison
	     * @param {Function} [customizer] The function to customize comparisons.
	     * @param {Object} [stack] Tracks traversed `value` and `other` objects.
	     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	     */
	    function baseIsEqual(value, other, bitmask, customizer, stack) {
	      if (value === other) {
	        return true;
	      }
	      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
	        return value !== value && other !== other;
	      }
	      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
	    }

	    /**
	     * A specialized version of `baseIsEqual` for arrays and objects which performs
	     * deep comparisons and tracks traversed objects enabling objects with circular
	     * references to be compared.
	     *
	     * @private
	     * @param {Object} object The object to compare.
	     * @param {Object} other The other object to compare.
	     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	     * @param {Function} customizer The function to customize comparisons.
	     * @param {Function} equalFunc The function to determine equivalents of values.
	     * @param {Object} [stack] Tracks traversed `object` and `other` objects.
	     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	     */
	    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
	      var objIsArr = isArray(object),
	          othIsArr = isArray(other),
	          objTag = objIsArr ? arrayTag : getTag(object),
	          othTag = othIsArr ? arrayTag : getTag(other);

	      objTag = objTag == argsTag ? objectTag : objTag;
	      othTag = othTag == argsTag ? objectTag : othTag;

	      var objIsObj = objTag == objectTag,
	          othIsObj = othTag == objectTag,
	          isSameTag = objTag == othTag;

	      if (isSameTag && isBuffer(object)) {
	        if (!isBuffer(other)) {
	          return false;
	        }
	        objIsArr = true;
	        objIsObj = false;
	      }
	      if (isSameTag && !objIsObj) {
	        stack || (stack = new Stack);
	        return (objIsArr || isTypedArray(object))
	          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
	          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
	      }
	      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
	        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
	            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

	        if (objIsWrapped || othIsWrapped) {
	          var objUnwrapped = objIsWrapped ? object.value() : object,
	              othUnwrapped = othIsWrapped ? other.value() : other;

	          stack || (stack = new Stack);
	          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
	        }
	      }
	      if (!isSameTag) {
	        return false;
	      }
	      stack || (stack = new Stack);
	      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
	    }

	    /**
	     * The base implementation of `_.isMap` without Node.js optimizations.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
	     */
	    function baseIsMap(value) {
	      return isObjectLike(value) && getTag(value) == mapTag;
	    }

	    /**
	     * The base implementation of `_.isMatch` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Object} object The object to inspect.
	     * @param {Object} source The object of property values to match.
	     * @param {Array} matchData The property names, values, and compare flags to match.
	     * @param {Function} [customizer] The function to customize comparisons.
	     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
	     */
	    function baseIsMatch(object, source, matchData, customizer) {
	      var index = matchData.length,
	          length = index,
	          noCustomizer = !customizer;

	      if (object == null) {
	        return !length;
	      }
	      object = Object(object);
	      while (index--) {
	        var data = matchData[index];
	        if ((noCustomizer && data[2])
	              ? data[1] !== object[data[0]]
	              : !(data[0] in object)
	            ) {
	          return false;
	        }
	      }
	      while (++index < length) {
	        data = matchData[index];
	        var key = data[0],
	            objValue = object[key],
	            srcValue = data[1];

	        if (noCustomizer && data[2]) {
	          if (objValue === undefined && !(key in object)) {
	            return false;
	          }
	        } else {
	          var stack = new Stack;
	          if (customizer) {
	            var result = customizer(objValue, srcValue, key, object, source, stack);
	          }
	          if (!(result === undefined
	                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
	                : result
	              )) {
	            return false;
	          }
	        }
	      }
	      return true;
	    }

	    /**
	     * The base implementation of `_.isNative` without bad shim checks.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a native function,
	     *  else `false`.
	     */
	    function baseIsNative(value) {
	      if (!isObject(value) || isMasked(value)) {
	        return false;
	      }
	      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
	      return pattern.test(toSource(value));
	    }

	    /**
	     * The base implementation of `_.isRegExp` without Node.js optimizations.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
	     */
	    function baseIsRegExp(value) {
	      return isObjectLike(value) && baseGetTag(value) == regexpTag;
	    }

	    /**
	     * The base implementation of `_.isSet` without Node.js optimizations.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
	     */
	    function baseIsSet(value) {
	      return isObjectLike(value) && getTag(value) == setTag;
	    }

	    /**
	     * The base implementation of `_.isTypedArray` without Node.js optimizations.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
	     */
	    function baseIsTypedArray(value) {
	      return isObjectLike(value) &&
	        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
	    }

	    /**
	     * The base implementation of `_.iteratee`.
	     *
	     * @private
	     * @param {*} [value=_.identity] The value to convert to an iteratee.
	     * @returns {Function} Returns the iteratee.
	     */
	    function baseIteratee(value) {
	      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
	      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
	      if (typeof value == 'function') {
	        return value;
	      }
	      if (value == null) {
	        return identity;
	      }
	      if (typeof value == 'object') {
	        return isArray(value)
	          ? baseMatchesProperty(value[0], value[1])
	          : baseMatches(value);
	      }
	      return property(value);
	    }

	    /**
	     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     */
	    function baseKeys(object) {
	      if (!isPrototype(object)) {
	        return nativeKeys(object);
	      }
	      var result = [];
	      for (var key in Object(object)) {
	        if (hasOwnProperty.call(object, key) && key != 'constructor') {
	          result.push(key);
	        }
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     */
	    function baseKeysIn(object) {
	      if (!isObject(object)) {
	        return nativeKeysIn(object);
	      }
	      var isProto = isPrototype(object),
	          result = [];

	      for (var key in object) {
	        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
	          result.push(key);
	        }
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.lt` which doesn't coerce arguments.
	     *
	     * @private
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is less than `other`,
	     *  else `false`.
	     */
	    function baseLt(value, other) {
	      return value < other;
	    }

	    /**
	     * The base implementation of `_.map` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Array} Returns the new mapped array.
	     */
	    function baseMap(collection, iteratee) {
	      var index = -1,
	          result = isArrayLike(collection) ? Array(collection.length) : [];

	      baseEach(collection, function(value, key, collection) {
	        result[++index] = iteratee(value, key, collection);
	      });
	      return result;
	    }

	    /**
	     * The base implementation of `_.matches` which doesn't clone `source`.
	     *
	     * @private
	     * @param {Object} source The object of property values to match.
	     * @returns {Function} Returns the new spec function.
	     */
	    function baseMatches(source) {
	      var matchData = getMatchData(source);
	      if (matchData.length == 1 && matchData[0][2]) {
	        return matchesStrictComparable(matchData[0][0], matchData[0][1]);
	      }
	      return function(object) {
	        return object === source || baseIsMatch(object, source, matchData);
	      };
	    }

	    /**
	     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
	     *
	     * @private
	     * @param {string} path The path of the property to get.
	     * @param {*} srcValue The value to match.
	     * @returns {Function} Returns the new spec function.
	     */
	    function baseMatchesProperty(path, srcValue) {
	      if (isKey(path) && isStrictComparable(srcValue)) {
	        return matchesStrictComparable(toKey(path), srcValue);
	      }
	      return function(object) {
	        var objValue = get(object, path);
	        return (objValue === undefined && objValue === srcValue)
	          ? hasIn(object, path)
	          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
	      };
	    }

	    /**
	     * The base implementation of `_.merge` without support for multiple sources.
	     *
	     * @private
	     * @param {Object} object The destination object.
	     * @param {Object} source The source object.
	     * @param {number} srcIndex The index of `source`.
	     * @param {Function} [customizer] The function to customize merged values.
	     * @param {Object} [stack] Tracks traversed source values and their merged
	     *  counterparts.
	     */
	    function baseMerge(object, source, srcIndex, customizer, stack) {
	      if (object === source) {
	        return;
	      }
	      baseFor(source, function(srcValue, key) {
	        if (isObject(srcValue)) {
	          stack || (stack = new Stack);
	          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
	        }
	        else {
	          var newValue = customizer
	            ? customizer(object[key], srcValue, (key + ''), object, source, stack)
	            : undefined;

	          if (newValue === undefined) {
	            newValue = srcValue;
	          }
	          assignMergeValue(object, key, newValue);
	        }
	      }, keysIn);
	    }

	    /**
	     * A specialized version of `baseMerge` for arrays and objects which performs
	     * deep merges and tracks traversed objects enabling objects with circular
	     * references to be merged.
	     *
	     * @private
	     * @param {Object} object The destination object.
	     * @param {Object} source The source object.
	     * @param {string} key The key of the value to merge.
	     * @param {number} srcIndex The index of `source`.
	     * @param {Function} mergeFunc The function to merge values.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @param {Object} [stack] Tracks traversed source values and their merged
	     *  counterparts.
	     */
	    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
	      var objValue = object[key],
	          srcValue = source[key],
	          stacked = stack.get(srcValue);

	      if (stacked) {
	        assignMergeValue(object, key, stacked);
	        return;
	      }
	      var newValue = customizer
	        ? customizer(objValue, srcValue, (key + ''), object, source, stack)
	        : undefined;

	      var isCommon = newValue === undefined;

	      if (isCommon) {
	        var isArr = isArray(srcValue),
	            isBuff = !isArr && isBuffer(srcValue),
	            isTyped = !isArr && !isBuff && isTypedArray(srcValue);

	        newValue = srcValue;
	        if (isArr || isBuff || isTyped) {
	          if (isArray(objValue)) {
	            newValue = objValue;
	          }
	          else if (isArrayLikeObject(objValue)) {
	            newValue = copyArray(objValue);
	          }
	          else if (isBuff) {
	            isCommon = false;
	            newValue = cloneBuffer(srcValue, true);
	          }
	          else if (isTyped) {
	            isCommon = false;
	            newValue = cloneTypedArray(srcValue, true);
	          }
	          else {
	            newValue = [];
	          }
	        }
	        else if (isPlainObject(srcValue) || isArguments(srcValue)) {
	          newValue = objValue;
	          if (isArguments(objValue)) {
	            newValue = toPlainObject(objValue);
	          }
	          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {
	            newValue = initCloneObject(srcValue);
	          }
	        }
	        else {
	          isCommon = false;
	        }
	      }
	      if (isCommon) {
	        // Recursively merge objects and arrays (susceptible to call stack limits).
	        stack.set(srcValue, newValue);
	        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
	        stack['delete'](srcValue);
	      }
	      assignMergeValue(object, key, newValue);
	    }

	    /**
	     * The base implementation of `_.nth` which doesn't coerce arguments.
	     *
	     * @private
	     * @param {Array} array The array to query.
	     * @param {number} n The index of the element to return.
	     * @returns {*} Returns the nth element of `array`.
	     */
	    function baseNth(array, n) {
	      var length = array.length;
	      if (!length) {
	        return;
	      }
	      n += n < 0 ? length : 0;
	      return isIndex(n, length) ? array[n] : undefined;
	    }

	    /**
	     * The base implementation of `_.orderBy` without param guards.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
	     * @param {string[]} orders The sort orders of `iteratees`.
	     * @returns {Array} Returns the new sorted array.
	     */
	    function baseOrderBy(collection, iteratees, orders) {
	      var index = -1;
	      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));

	      var result = baseMap(collection, function(value, key, collection) {
	        var criteria = arrayMap(iteratees, function(iteratee) {
	          return iteratee(value);
	        });
	        return { 'criteria': criteria, 'index': ++index, 'value': value };
	      });

	      return baseSortBy(result, function(object, other) {
	        return compareMultiple(object, other, orders);
	      });
	    }

	    /**
	     * The base implementation of `_.pick` without support for individual
	     * property identifiers.
	     *
	     * @private
	     * @param {Object} object The source object.
	     * @param {string[]} paths The property paths to pick.
	     * @returns {Object} Returns the new object.
	     */
	    function basePick(object, paths) {
	      return basePickBy(object, paths, function(value, path) {
	        return hasIn(object, path);
	      });
	    }

	    /**
	     * The base implementation of  `_.pickBy` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Object} object The source object.
	     * @param {string[]} paths The property paths to pick.
	     * @param {Function} predicate The function invoked per property.
	     * @returns {Object} Returns the new object.
	     */
	    function basePickBy(object, paths, predicate) {
	      var index = -1,
	          length = paths.length,
	          result = {};

	      while (++index < length) {
	        var path = paths[index],
	            value = baseGet(object, path);

	        if (predicate(value, path)) {
	          baseSet(result, castPath(path, object), value);
	        }
	      }
	      return result;
	    }

	    /**
	     * A specialized version of `baseProperty` which supports deep paths.
	     *
	     * @private
	     * @param {Array|string} path The path of the property to get.
	     * @returns {Function} Returns the new accessor function.
	     */
	    function basePropertyDeep(path) {
	      return function(object) {
	        return baseGet(object, path);
	      };
	    }

	    /**
	     * The base implementation of `_.pullAllBy` without support for iteratee
	     * shorthands.
	     *
	     * @private
	     * @param {Array} array The array to modify.
	     * @param {Array} values The values to remove.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns `array`.
	     */
	    function basePullAll(array, values, iteratee, comparator) {
	      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,
	          index = -1,
	          length = values.length,
	          seen = array;

	      if (array === values) {
	        values = copyArray(values);
	      }
	      if (iteratee) {
	        seen = arrayMap(array, baseUnary(iteratee));
	      }
	      while (++index < length) {
	        var fromIndex = 0,
	            value = values[index],
	            computed = iteratee ? iteratee(value) : value;

	        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
	          if (seen !== array) {
	            splice.call(seen, fromIndex, 1);
	          }
	          splice.call(array, fromIndex, 1);
	        }
	      }
	      return array;
	    }

	    /**
	     * The base implementation of `_.pullAt` without support for individual
	     * indexes or capturing the removed elements.
	     *
	     * @private
	     * @param {Array} array The array to modify.
	     * @param {number[]} indexes The indexes of elements to remove.
	     * @returns {Array} Returns `array`.
	     */
	    function basePullAt(array, indexes) {
	      var length = array ? indexes.length : 0,
	          lastIndex = length - 1;

	      while (length--) {
	        var index = indexes[length];
	        if (length == lastIndex || index !== previous) {
	          var previous = index;
	          if (isIndex(index)) {
	            splice.call(array, index, 1);
	          } else {
	            baseUnset(array, index);
	          }
	        }
	      }
	      return array;
	    }

	    /**
	     * The base implementation of `_.random` without support for returning
	     * floating-point numbers.
	     *
	     * @private
	     * @param {number} lower The lower bound.
	     * @param {number} upper The upper bound.
	     * @returns {number} Returns the random number.
	     */
	    function baseRandom(lower, upper) {
	      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
	    }

	    /**
	     * The base implementation of `_.range` and `_.rangeRight` which doesn't
	     * coerce arguments.
	     *
	     * @private
	     * @param {number} start The start of the range.
	     * @param {number} end The end of the range.
	     * @param {number} step The value to increment or decrement by.
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Array} Returns the range of numbers.
	     */
	    function baseRange(start, end, step, fromRight) {
	      var index = -1,
	          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
	          result = Array(length);

	      while (length--) {
	        result[fromRight ? length : ++index] = start;
	        start += step;
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.repeat` which doesn't coerce arguments.
	     *
	     * @private
	     * @param {string} string The string to repeat.
	     * @param {number} n The number of times to repeat the string.
	     * @returns {string} Returns the repeated string.
	     */
	    function baseRepeat(string, n) {
	      var result = '';
	      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
	        return result;
	      }
	      // Leverage the exponentiation by squaring algorithm for a faster repeat.
	      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
	      do {
	        if (n % 2) {
	          result += string;
	        }
	        n = nativeFloor(n / 2);
	        if (n) {
	          string += string;
	        }
	      } while (n);

	      return result;
	    }

	    /**
	     * The base implementation of `_.rest` which doesn't validate or coerce arguments.
	     *
	     * @private
	     * @param {Function} func The function to apply a rest parameter to.
	     * @param {number} [start=func.length-1] The start position of the rest parameter.
	     * @returns {Function} Returns the new function.
	     */
	    function baseRest(func, start) {
	      return setToString(overRest(func, start, identity), func + '');
	    }

	    /**
	     * The base implementation of `_.sample`.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to sample.
	     * @returns {*} Returns the random element.
	     */
	    function baseSample(collection) {
	      return arraySample(values(collection));
	    }

	    /**
	     * The base implementation of `_.sampleSize` without param guards.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to sample.
	     * @param {number} n The number of elements to sample.
	     * @returns {Array} Returns the random elements.
	     */
	    function baseSampleSize(collection, n) {
	      var array = values(collection);
	      return shuffleSelf(array, baseClamp(n, 0, array.length));
	    }

	    /**
	     * The base implementation of `_.set`.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to set.
	     * @param {*} value The value to set.
	     * @param {Function} [customizer] The function to customize path creation.
	     * @returns {Object} Returns `object`.
	     */
	    function baseSet(object, path, value, customizer) {
	      if (!isObject(object)) {
	        return object;
	      }
	      path = castPath(path, object);

	      var index = -1,
	          length = path.length,
	          lastIndex = length - 1,
	          nested = object;

	      while (nested != null && ++index < length) {
	        var key = toKey(path[index]),
	            newValue = value;

	        if (index != lastIndex) {
	          var objValue = nested[key];
	          newValue = customizer ? customizer(objValue, key, nested) : undefined;
	          if (newValue === undefined) {
	            newValue = isObject(objValue)
	              ? objValue
	              : (isIndex(path[index + 1]) ? [] : {});
	          }
	        }
	        assignValue(nested, key, newValue);
	        nested = nested[key];
	      }
	      return object;
	    }

	    /**
	     * The base implementation of `setData` without support for hot loop shorting.
	     *
	     * @private
	     * @param {Function} func The function to associate metadata with.
	     * @param {*} data The metadata.
	     * @returns {Function} Returns `func`.
	     */
	    var baseSetData = !metaMap ? identity : function(func, data) {
	      metaMap.set(func, data);
	      return func;
	    };

	    /**
	     * The base implementation of `setToString` without support for hot loop shorting.
	     *
	     * @private
	     * @param {Function} func The function to modify.
	     * @param {Function} string The `toString` result.
	     * @returns {Function} Returns `func`.
	     */
	    var baseSetToString = !defineProperty ? identity : function(func, string) {
	      return defineProperty(func, 'toString', {
	        'configurable': true,
	        'enumerable': false,
	        'value': constant(string),
	        'writable': true
	      });
	    };

	    /**
	     * The base implementation of `_.shuffle`.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to shuffle.
	     * @returns {Array} Returns the new shuffled array.
	     */
	    function baseShuffle(collection) {
	      return shuffleSelf(values(collection));
	    }

	    /**
	     * The base implementation of `_.slice` without an iteratee call guard.
	     *
	     * @private
	     * @param {Array} array The array to slice.
	     * @param {number} [start=0] The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns the slice of `array`.
	     */
	    function baseSlice(array, start, end) {
	      var index = -1,
	          length = array.length;

	      if (start < 0) {
	        start = -start > length ? 0 : (length + start);
	      }
	      end = end > length ? length : end;
	      if (end < 0) {
	        end += length;
	      }
	      length = start > end ? 0 : ((end - start) >>> 0);
	      start >>>= 0;

	      var result = Array(length);
	      while (++index < length) {
	        result[index] = array[index + start];
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.some` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} predicate The function invoked per iteration.
	     * @returns {boolean} Returns `true` if any element passes the predicate check,
	     *  else `false`.
	     */
	    function baseSome(collection, predicate) {
	      var result;

	      baseEach(collection, function(value, index, collection) {
	        result = predicate(value, index, collection);
	        return !result;
	      });
	      return !!result;
	    }

	    /**
	     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which
	     * performs a binary search of `array` to determine the index at which `value`
	     * should be inserted into `array` in order to maintain its sort order.
	     *
	     * @private
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @param {boolean} [retHighest] Specify returning the highest qualified index.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     */
	    function baseSortedIndex(array, value, retHighest) {
	      var low = 0,
	          high = array == null ? low : array.length;

	      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
	        while (low < high) {
	          var mid = (low + high) >>> 1,
	              computed = array[mid];

	          if (computed !== null && !isSymbol(computed) &&
	              (retHighest ? (computed <= value) : (computed < value))) {
	            low = mid + 1;
	          } else {
	            high = mid;
	          }
	        }
	        return high;
	      }
	      return baseSortedIndexBy(array, value, identity, retHighest);
	    }

	    /**
	     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`
	     * which invokes `iteratee` for `value` and each element of `array` to compute
	     * their sort ranking. The iteratee is invoked with one argument; (value).
	     *
	     * @private
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @param {Function} iteratee The iteratee invoked per element.
	     * @param {boolean} [retHighest] Specify returning the highest qualified index.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     */
	    function baseSortedIndexBy(array, value, iteratee, retHighest) {
	      value = iteratee(value);

	      var low = 0,
	          high = array == null ? 0 : array.length,
	          valIsNaN = value !== value,
	          valIsNull = value === null,
	          valIsSymbol = isSymbol(value),
	          valIsUndefined = value === undefined;

	      while (low < high) {
	        var mid = nativeFloor((low + high) / 2),
	            computed = iteratee(array[mid]),
	            othIsDefined = computed !== undefined,
	            othIsNull = computed === null,
	            othIsReflexive = computed === computed,
	            othIsSymbol = isSymbol(computed);

	        if (valIsNaN) {
	          var setLow = retHighest || othIsReflexive;
	        } else if (valIsUndefined) {
	          setLow = othIsReflexive && (retHighest || othIsDefined);
	        } else if (valIsNull) {
	          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
	        } else if (valIsSymbol) {
	          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
	        } else if (othIsNull || othIsSymbol) {
	          setLow = false;
	        } else {
	          setLow = retHighest ? (computed <= value) : (computed < value);
	        }
	        if (setLow) {
	          low = mid + 1;
	        } else {
	          high = mid;
	        }
	      }
	      return nativeMin(high, MAX_ARRAY_INDEX);
	    }

	    /**
	     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without
	     * support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     */
	    function baseSortedUniq(array, iteratee) {
	      var index = -1,
	          length = array.length,
	          resIndex = 0,
	          result = [];

	      while (++index < length) {
	        var value = array[index],
	            computed = iteratee ? iteratee(value) : value;

	        if (!index || !eq(computed, seen)) {
	          var seen = computed;
	          result[resIndex++] = value === 0 ? 0 : value;
	        }
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.toNumber` which doesn't ensure correct
	     * conversions of binary, hexadecimal, or octal string values.
	     *
	     * @private
	     * @param {*} value The value to process.
	     * @returns {number} Returns the number.
	     */
	    function baseToNumber(value) {
	      if (typeof value == 'number') {
	        return value;
	      }
	      if (isSymbol(value)) {
	        return NAN;
	      }
	      return +value;
	    }

	    /**
	     * The base implementation of `_.toString` which doesn't convert nullish
	     * values to empty strings.
	     *
	     * @private
	     * @param {*} value The value to process.
	     * @returns {string} Returns the string.
	     */
	    function baseToString(value) {
	      // Exit early for strings to avoid a performance hit in some environments.
	      if (typeof value == 'string') {
	        return value;
	      }
	      if (isArray(value)) {
	        // Recursively convert values (susceptible to call stack limits).
	        return arrayMap(value, baseToString) + '';
	      }
	      if (isSymbol(value)) {
	        return symbolToString ? symbolToString.call(value) : '';
	      }
	      var result = (value + '');
	      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
	    }

	    /**
	     * The base implementation of `_.uniqBy` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     */
	    function baseUniq(array, iteratee, comparator) {
	      var index = -1,
	          includes = arrayIncludes,
	          length = array.length,
	          isCommon = true,
	          result = [],
	          seen = result;

	      if (comparator) {
	        isCommon = false;
	        includes = arrayIncludesWith;
	      }
	      else if (length >= LARGE_ARRAY_SIZE) {
	        var set = iteratee ? null : createSet(array);
	        if (set) {
	          return setToArray(set);
	        }
	        isCommon = false;
	        includes = cacheHas;
	        seen = new SetCache;
	      }
	      else {
	        seen = iteratee ? [] : result;
	      }
	      outer:
	      while (++index < length) {
	        var value = array[index],
	            computed = iteratee ? iteratee(value) : value;

	        value = (comparator || value !== 0) ? value : 0;
	        if (isCommon && computed === computed) {
	          var seenIndex = seen.length;
	          while (seenIndex--) {
	            if (seen[seenIndex] === computed) {
	              continue outer;
	            }
	          }
	          if (iteratee) {
	            seen.push(computed);
	          }
	          result.push(value);
	        }
	        else if (!includes(seen, computed, comparator)) {
	          if (seen !== result) {
	            seen.push(computed);
	          }
	          result.push(value);
	        }
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.unset`.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The property path to unset.
	     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
	     */
	    function baseUnset(object, path) {
	      path = castPath(path, object);
	      object = parent(object, path);
	      return object == null || delete object[toKey(last(path))];
	    }

	    /**
	     * The base implementation of `_.update`.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to update.
	     * @param {Function} updater The function to produce the updated value.
	     * @param {Function} [customizer] The function to customize path creation.
	     * @returns {Object} Returns `object`.
	     */
	    function baseUpdate(object, path, updater, customizer) {
	      return baseSet(object, path, updater(baseGet(object, path)), customizer);
	    }

	    /**
	     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`
	     * without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array} array The array to query.
	     * @param {Function} predicate The function invoked per iteration.
	     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Array} Returns the slice of `array`.
	     */
	    function baseWhile(array, predicate, isDrop, fromRight) {
	      var length = array.length,
	          index = fromRight ? length : -1;

	      while ((fromRight ? index-- : ++index < length) &&
	        predicate(array[index], index, array)) {}

	      return isDrop
	        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))
	        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));
	    }

	    /**
	     * The base implementation of `wrapperValue` which returns the result of
	     * performing a sequence of actions on the unwrapped `value`, where each
	     * successive action is supplied the return value of the previous.
	     *
	     * @private
	     * @param {*} value The unwrapped value.
	     * @param {Array} actions Actions to perform to resolve the unwrapped value.
	     * @returns {*} Returns the resolved value.
	     */
	    function baseWrapperValue(value, actions) {
	      var result = value;
	      if (result instanceof LazyWrapper) {
	        result = result.value();
	      }
	      return arrayReduce(actions, function(result, action) {
	        return action.func.apply(action.thisArg, arrayPush([result], action.args));
	      }, result);
	    }

	    /**
	     * The base implementation of methods like `_.xor`, without support for
	     * iteratee shorthands, that accepts an array of arrays to inspect.
	     *
	     * @private
	     * @param {Array} arrays The arrays to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of values.
	     */
	    function baseXor(arrays, iteratee, comparator) {
	      var length = arrays.length;
	      if (length < 2) {
	        return length ? baseUniq(arrays[0]) : [];
	      }
	      var index = -1,
	          result = Array(length);

	      while (++index < length) {
	        var array = arrays[index],
	            othIndex = -1;

	        while (++othIndex < length) {
	          if (othIndex != index) {
	            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);
	          }
	        }
	      }
	      return baseUniq(baseFlatten(result, 1), iteratee, comparator);
	    }

	    /**
	     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
	     *
	     * @private
	     * @param {Array} props The property identifiers.
	     * @param {Array} values The property values.
	     * @param {Function} assignFunc The function to assign values.
	     * @returns {Object} Returns the new object.
	     */
	    function baseZipObject(props, values, assignFunc) {
	      var index = -1,
	          length = props.length,
	          valsLength = values.length,
	          result = {};

	      while (++index < length) {
	        var value = index < valsLength ? values[index] : undefined;
	        assignFunc(result, props[index], value);
	      }
	      return result;
	    }

	    /**
	     * Casts `value` to an empty array if it's not an array like object.
	     *
	     * @private
	     * @param {*} value The value to inspect.
	     * @returns {Array|Object} Returns the cast array-like object.
	     */
	    function castArrayLikeObject(value) {
	      return isArrayLikeObject(value) ? value : [];
	    }

	    /**
	     * Casts `value` to `identity` if it's not a function.
	     *
	     * @private
	     * @param {*} value The value to inspect.
	     * @returns {Function} Returns cast function.
	     */
	    function castFunction(value) {
	      return typeof value == 'function' ? value : identity;
	    }

	    /**
	     * Casts `value` to a path array if it's not one.
	     *
	     * @private
	     * @param {*} value The value to inspect.
	     * @param {Object} [object] The object to query keys on.
	     * @returns {Array} Returns the cast property path array.
	     */
	    function castPath(value, object) {
	      if (isArray(value)) {
	        return value;
	      }
	      return isKey(value, object) ? [value] : stringToPath(toString(value));
	    }

	    /**
	     * A `baseRest` alias which can be replaced with `identity` by module
	     * replacement plugins.
	     *
	     * @private
	     * @type {Function}
	     * @param {Function} func The function to apply a rest parameter to.
	     * @returns {Function} Returns the new function.
	     */
	    var castRest = baseRest;

	    /**
	     * Casts `array` to a slice if it's needed.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {number} start The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns the cast slice.
	     */
	    function castSlice(array, start, end) {
	      var length = array.length;
	      end = end === undefined ? length : end;
	      return (!start && end >= length) ? array : baseSlice(array, start, end);
	    }

	    /**
	     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).
	     *
	     * @private
	     * @param {number|Object} id The timer id or timeout object of the timer to clear.
	     */
	    var clearTimeout = ctxClearTimeout || function(id) {
	      return root.clearTimeout(id);
	    };

	    /**
	     * Creates a clone of  `buffer`.
	     *
	     * @private
	     * @param {Buffer} buffer The buffer to clone.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Buffer} Returns the cloned buffer.
	     */
	    function cloneBuffer(buffer, isDeep) {
	      if (isDeep) {
	        return buffer.slice();
	      }
	      var length = buffer.length,
	          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

	      buffer.copy(result);
	      return result;
	    }

	    /**
	     * Creates a clone of `arrayBuffer`.
	     *
	     * @private
	     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
	     * @returns {ArrayBuffer} Returns the cloned array buffer.
	     */
	    function cloneArrayBuffer(arrayBuffer) {
	      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
	      new Uint8Array(result).set(new Uint8Array(arrayBuffer));
	      return result;
	    }

	    /**
	     * Creates a clone of `dataView`.
	     *
	     * @private
	     * @param {Object} dataView The data view to clone.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Object} Returns the cloned data view.
	     */
	    function cloneDataView(dataView, isDeep) {
	      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
	      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
	    }

	    /**
	     * Creates a clone of `map`.
	     *
	     * @private
	     * @param {Object} map The map to clone.
	     * @param {Function} cloneFunc The function to clone values.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Object} Returns the cloned map.
	     */
	    function cloneMap(map, isDeep, cloneFunc) {
	      var array = isDeep ? cloneFunc(mapToArray(map), CLONE_DEEP_FLAG) : mapToArray(map);
	      return arrayReduce(array, addMapEntry, new map.constructor);
	    }

	    /**
	     * Creates a clone of `regexp`.
	     *
	     * @private
	     * @param {Object} regexp The regexp to clone.
	     * @returns {Object} Returns the cloned regexp.
	     */
	    function cloneRegExp(regexp) {
	      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
	      result.lastIndex = regexp.lastIndex;
	      return result;
	    }

	    /**
	     * Creates a clone of `set`.
	     *
	     * @private
	     * @param {Object} set The set to clone.
	     * @param {Function} cloneFunc The function to clone values.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Object} Returns the cloned set.
	     */
	    function cloneSet(set, isDeep, cloneFunc) {
	      var array = isDeep ? cloneFunc(setToArray(set), CLONE_DEEP_FLAG) : setToArray(set);
	      return arrayReduce(array, addSetEntry, new set.constructor);
	    }

	    /**
	     * Creates a clone of the `symbol` object.
	     *
	     * @private
	     * @param {Object} symbol The symbol object to clone.
	     * @returns {Object} Returns the cloned symbol object.
	     */
	    function cloneSymbol(symbol) {
	      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
	    }

	    /**
	     * Creates a clone of `typedArray`.
	     *
	     * @private
	     * @param {Object} typedArray The typed array to clone.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Object} Returns the cloned typed array.
	     */
	    function cloneTypedArray(typedArray, isDeep) {
	      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
	      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
	    }

	    /**
	     * Compares values to sort them in ascending order.
	     *
	     * @private
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {number} Returns the sort order indicator for `value`.
	     */
	    function compareAscending(value, other) {
	      if (value !== other) {
	        var valIsDefined = value !== undefined,
	            valIsNull = value === null,
	            valIsReflexive = value === value,
	            valIsSymbol = isSymbol(value);

	        var othIsDefined = other !== undefined,
	            othIsNull = other === null,
	            othIsReflexive = other === other,
	            othIsSymbol = isSymbol(other);

	        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||
	            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||
	            (valIsNull && othIsDefined && othIsReflexive) ||
	            (!valIsDefined && othIsReflexive) ||
	            !valIsReflexive) {
	          return 1;
	        }
	        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||
	            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||
	            (othIsNull && valIsDefined && valIsReflexive) ||
	            (!othIsDefined && valIsReflexive) ||
	            !othIsReflexive) {
	          return -1;
	        }
	      }
	      return 0;
	    }

	    /**
	     * Used by `_.orderBy` to compare multiple properties of a value to another
	     * and stable sort them.
	     *
	     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
	     * specify an order of "desc" for descending or "asc" for ascending sort order
	     * of corresponding values.
	     *
	     * @private
	     * @param {Object} object The object to compare.
	     * @param {Object} other The other object to compare.
	     * @param {boolean[]|string[]} orders The order to sort by for each property.
	     * @returns {number} Returns the sort order indicator for `object`.
	     */
	    function compareMultiple(object, other, orders) {
	      var index = -1,
	          objCriteria = object.criteria,
	          othCriteria = other.criteria,
	          length = objCriteria.length,
	          ordersLength = orders.length;

	      while (++index < length) {
	        var result = compareAscending(objCriteria[index], othCriteria[index]);
	        if (result) {
	          if (index >= ordersLength) {
	            return result;
	          }
	          var order = orders[index];
	          return result * (order == 'desc' ? -1 : 1);
	        }
	      }
	      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
	      // that causes it, under certain circumstances, to provide the same value for
	      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
	      // for more details.
	      //
	      // This also ensures a stable sort in V8 and other engines.
	      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
	      return object.index - other.index;
	    }

	    /**
	     * Creates an array that is the composition of partially applied arguments,
	     * placeholders, and provided arguments into a single array of arguments.
	     *
	     * @private
	     * @param {Array} args The provided arguments.
	     * @param {Array} partials The arguments to prepend to those provided.
	     * @param {Array} holders The `partials` placeholder indexes.
	     * @params {boolean} [isCurried] Specify composing for a curried function.
	     * @returns {Array} Returns the new array of composed arguments.
	     */
	    function composeArgs(args, partials, holders, isCurried) {
	      var argsIndex = -1,
	          argsLength = args.length,
	          holdersLength = holders.length,
	          leftIndex = -1,
	          leftLength = partials.length,
	          rangeLength = nativeMax(argsLength - holdersLength, 0),
	          result = Array(leftLength + rangeLength),
	          isUncurried = !isCurried;

	      while (++leftIndex < leftLength) {
	        result[leftIndex] = partials[leftIndex];
	      }
	      while (++argsIndex < holdersLength) {
	        if (isUncurried || argsIndex < argsLength) {
	          result[holders[argsIndex]] = args[argsIndex];
	        }
	      }
	      while (rangeLength--) {
	        result[leftIndex++] = args[argsIndex++];
	      }
	      return result;
	    }

	    /**
	     * This function is like `composeArgs` except that the arguments composition
	     * is tailored for `_.partialRight`.
	     *
	     * @private
	     * @param {Array} args The provided arguments.
	     * @param {Array} partials The arguments to append to those provided.
	     * @param {Array} holders The `partials` placeholder indexes.
	     * @params {boolean} [isCurried] Specify composing for a curried function.
	     * @returns {Array} Returns the new array of composed arguments.
	     */
	    function composeArgsRight(args, partials, holders, isCurried) {
	      var argsIndex = -1,
	          argsLength = args.length,
	          holdersIndex = -1,
	          holdersLength = holders.length,
	          rightIndex = -1,
	          rightLength = partials.length,
	          rangeLength = nativeMax(argsLength - holdersLength, 0),
	          result = Array(rangeLength + rightLength),
	          isUncurried = !isCurried;

	      while (++argsIndex < rangeLength) {
	        result[argsIndex] = args[argsIndex];
	      }
	      var offset = argsIndex;
	      while (++rightIndex < rightLength) {
	        result[offset + rightIndex] = partials[rightIndex];
	      }
	      while (++holdersIndex < holdersLength) {
	        if (isUncurried || argsIndex < argsLength) {
	          result[offset + holders[holdersIndex]] = args[argsIndex++];
	        }
	      }
	      return result;
	    }

	    /**
	     * Copies the values of `source` to `array`.
	     *
	     * @private
	     * @param {Array} source The array to copy values from.
	     * @param {Array} [array=[]] The array to copy values to.
	     * @returns {Array} Returns `array`.
	     */
	    function copyArray(source, array) {
	      var index = -1,
	          length = source.length;

	      array || (array = Array(length));
	      while (++index < length) {
	        array[index] = source[index];
	      }
	      return array;
	    }

	    /**
	     * Copies properties of `source` to `object`.
	     *
	     * @private
	     * @param {Object} source The object to copy properties from.
	     * @param {Array} props The property identifiers to copy.
	     * @param {Object} [object={}] The object to copy properties to.
	     * @param {Function} [customizer] The function to customize copied values.
	     * @returns {Object} Returns `object`.
	     */
	    function copyObject(source, props, object, customizer) {
	      var isNew = !object;
	      object || (object = {});

	      var index = -1,
	          length = props.length;

	      while (++index < length) {
	        var key = props[index];

	        var newValue = customizer
	          ? customizer(object[key], source[key], key, object, source)
	          : undefined;

	        if (newValue === undefined) {
	          newValue = source[key];
	        }
	        if (isNew) {
	          baseAssignValue(object, key, newValue);
	        } else {
	          assignValue(object, key, newValue);
	        }
	      }
	      return object;
	    }

	    /**
	     * Copies own symbols of `source` to `object`.
	     *
	     * @private
	     * @param {Object} source The object to copy symbols from.
	     * @param {Object} [object={}] The object to copy symbols to.
	     * @returns {Object} Returns `object`.
	     */
	    function copySymbols(source, object) {
	      return copyObject(source, getSymbols(source), object);
	    }

	    /**
	     * Copies own and inherited symbols of `source` to `object`.
	     *
	     * @private
	     * @param {Object} source The object to copy symbols from.
	     * @param {Object} [object={}] The object to copy symbols to.
	     * @returns {Object} Returns `object`.
	     */
	    function copySymbolsIn(source, object) {
	      return copyObject(source, getSymbolsIn(source), object);
	    }

	    /**
	     * Creates a function like `_.groupBy`.
	     *
	     * @private
	     * @param {Function} setter The function to set accumulator values.
	     * @param {Function} [initializer] The accumulator object initializer.
	     * @returns {Function} Returns the new aggregator function.
	     */
	    function createAggregator(setter, initializer) {
	      return function(collection, iteratee) {
	        var func = isArray(collection) ? arrayAggregator : baseAggregator,
	            accumulator = initializer ? initializer() : {};

	        return func(collection, setter, getIteratee(iteratee, 2), accumulator);
	      };
	    }

	    /**
	     * Creates a function like `_.assign`.
	     *
	     * @private
	     * @param {Function} assigner The function to assign values.
	     * @returns {Function} Returns the new assigner function.
	     */
	    function createAssigner(assigner) {
	      return baseRest(function(object, sources) {
	        var index = -1,
	            length = sources.length,
	            customizer = length > 1 ? sources[length - 1] : undefined,
	            guard = length > 2 ? sources[2] : undefined;

	        customizer = (assigner.length > 3 && typeof customizer == 'function')
	          ? (length--, customizer)
	          : undefined;

	        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
	          customizer = length < 3 ? undefined : customizer;
	          length = 1;
	        }
	        object = Object(object);
	        while (++index < length) {
	          var source = sources[index];
	          if (source) {
	            assigner(object, source, index, customizer);
	          }
	        }
	        return object;
	      });
	    }

	    /**
	     * Creates a `baseEach` or `baseEachRight` function.
	     *
	     * @private
	     * @param {Function} eachFunc The function to iterate over a collection.
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Function} Returns the new base function.
	     */
	    function createBaseEach(eachFunc, fromRight) {
	      return function(collection, iteratee) {
	        if (collection == null) {
	          return collection;
	        }
	        if (!isArrayLike(collection)) {
	          return eachFunc(collection, iteratee);
	        }
	        var length = collection.length,
	            index = fromRight ? length : -1,
	            iterable = Object(collection);

	        while ((fromRight ? index-- : ++index < length)) {
	          if (iteratee(iterable[index], index, iterable) === false) {
	            break;
	          }
	        }
	        return collection;
	      };
	    }

	    /**
	     * Creates a base function for methods like `_.forIn` and `_.forOwn`.
	     *
	     * @private
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Function} Returns the new base function.
	     */
	    function createBaseFor(fromRight) {
	      return function(object, iteratee, keysFunc) {
	        var index = -1,
	            iterable = Object(object),
	            props = keysFunc(object),
	            length = props.length;

	        while (length--) {
	          var key = props[fromRight ? length : ++index];
	          if (iteratee(iterable[key], key, iterable) === false) {
	            break;
	          }
	        }
	        return object;
	      };
	    }

	    /**
	     * Creates a function that wraps `func` to invoke it with the optional `this`
	     * binding of `thisArg`.
	     *
	     * @private
	     * @param {Function} func The function to wrap.
	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	     * @param {*} [thisArg] The `this` binding of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createBind(func, bitmask, thisArg) {
	      var isBind = bitmask & WRAP_BIND_FLAG,
	          Ctor = createCtor(func);

	      function wrapper() {
	        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
	        return fn.apply(isBind ? thisArg : this, arguments);
	      }
	      return wrapper;
	    }

	    /**
	     * Creates a function like `_.lowerFirst`.
	     *
	     * @private
	     * @param {string} methodName The name of the `String` case method to use.
	     * @returns {Function} Returns the new case function.
	     */
	    function createCaseFirst(methodName) {
	      return function(string) {
	        string = toString(string);

	        var strSymbols = hasUnicode(string)
	          ? stringToArray(string)
	          : undefined;

	        var chr = strSymbols
	          ? strSymbols[0]
	          : string.charAt(0);

	        var trailing = strSymbols
	          ? castSlice(strSymbols, 1).join('')
	          : string.slice(1);

	        return chr[methodName]() + trailing;
	      };
	    }

	    /**
	     * Creates a function like `_.camelCase`.
	     *
	     * @private
	     * @param {Function} callback The function to combine each word.
	     * @returns {Function} Returns the new compounder function.
	     */
	    function createCompounder(callback) {
	      return function(string) {
	        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
	      };
	    }

	    /**
	     * Creates a function that produces an instance of `Ctor` regardless of
	     * whether it was invoked as part of a `new` expression or by `call` or `apply`.
	     *
	     * @private
	     * @param {Function} Ctor The constructor to wrap.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createCtor(Ctor) {
	      return function() {
	        // Use a `switch` statement to work with class constructors. See
	        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
	        // for more details.
	        var args = arguments;
	        switch (args.length) {
	          case 0: return new Ctor;
	          case 1: return new Ctor(args[0]);
	          case 2: return new Ctor(args[0], args[1]);
	          case 3: return new Ctor(args[0], args[1], args[2]);
	          case 4: return new Ctor(args[0], args[1], args[2], args[3]);
	          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
	          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
	          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
	        }
	        var thisBinding = baseCreate(Ctor.prototype),
	            result = Ctor.apply(thisBinding, args);

	        // Mimic the constructor's `return` behavior.
	        // See https://es5.github.io/#x13.2.2 for more details.
	        return isObject(result) ? result : thisBinding;
	      };
	    }

	    /**
	     * Creates a function that wraps `func` to enable currying.
	     *
	     * @private
	     * @param {Function} func The function to wrap.
	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	     * @param {number} arity The arity of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createCurry(func, bitmask, arity) {
	      var Ctor = createCtor(func);

	      function wrapper() {
	        var length = arguments.length,
	            args = Array(length),
	            index = length,
	            placeholder = getHolder(wrapper);

	        while (index--) {
	          args[index] = arguments[index];
	        }
	        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)
	          ? []
	          : replaceHolders(args, placeholder);

	        length -= holders.length;
	        if (length < arity) {
	          return createRecurry(
	            func, bitmask, createHybrid, wrapper.placeholder, undefined,
	            args, holders, undefined, undefined, arity - length);
	        }
	        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
	        return apply(fn, this, args);
	      }
	      return wrapper;
	    }

	    /**
	     * Creates a `_.find` or `_.findLast` function.
	     *
	     * @private
	     * @param {Function} findIndexFunc The function to find the collection index.
	     * @returns {Function} Returns the new find function.
	     */
	    function createFind(findIndexFunc) {
	      return function(collection, predicate, fromIndex) {
	        var iterable = Object(collection);
	        if (!isArrayLike(collection)) {
	          var iteratee = getIteratee(predicate, 3);
	          collection = keys(collection);
	          predicate = function(key) { return iteratee(iterable[key], key, iterable); };
	        }
	        var index = findIndexFunc(collection, predicate, fromIndex);
	        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
	      };
	    }

	    /**
	     * Creates a `_.flow` or `_.flowRight` function.
	     *
	     * @private
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Function} Returns the new flow function.
	     */
	    function createFlow(fromRight) {
	      return flatRest(function(funcs) {
	        var length = funcs.length,
	            index = length,
	            prereq = LodashWrapper.prototype.thru;

	        if (fromRight) {
	          funcs.reverse();
	        }
	        while (index--) {
	          var func = funcs[index];
	          if (typeof func != 'function') {
	            throw new TypeError(FUNC_ERROR_TEXT);
	          }
	          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
	            var wrapper = new LodashWrapper([], true);
	          }
	        }
	        index = wrapper ? index : length;
	        while (++index < length) {
	          func = funcs[index];

	          var funcName = getFuncName(func),
	              data = funcName == 'wrapper' ? getData(func) : undefined;

	          if (data && isLaziable(data[0]) &&
	                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&
	                !data[4].length && data[9] == 1
	              ) {
	            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
	          } else {
	            wrapper = (func.length == 1 && isLaziable(func))
	              ? wrapper[funcName]()
	              : wrapper.thru(func);
	          }
	        }
	        return function() {
	          var args = arguments,
	              value = args[0];

	          if (wrapper && args.length == 1 && isArray(value)) {
	            return wrapper.plant(value).value();
	          }
	          var index = 0,
	              result = length ? funcs[index].apply(this, args) : value;

	          while (++index < length) {
	            result = funcs[index].call(this, result);
	          }
	          return result;
	        };
	      });
	    }

	    /**
	     * Creates a function that wraps `func` to invoke it with optional `this`
	     * binding of `thisArg`, partial application, and currying.
	     *
	     * @private
	     * @param {Function|string} func The function or method name to wrap.
	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	     * @param {*} [thisArg] The `this` binding of `func`.
	     * @param {Array} [partials] The arguments to prepend to those provided to
	     *  the new function.
	     * @param {Array} [holders] The `partials` placeholder indexes.
	     * @param {Array} [partialsRight] The arguments to append to those provided
	     *  to the new function.
	     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
	     * @param {Array} [argPos] The argument positions of the new function.
	     * @param {number} [ary] The arity cap of `func`.
	     * @param {number} [arity] The arity of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
	      var isAry = bitmask & WRAP_ARY_FLAG,
	          isBind = bitmask & WRAP_BIND_FLAG,
	          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,
	          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),
	          isFlip = bitmask & WRAP_FLIP_FLAG,
	          Ctor = isBindKey ? undefined : createCtor(func);

	      function wrapper() {
	        var length = arguments.length,
	            args = Array(length),
	            index = length;

	        while (index--) {
	          args[index] = arguments[index];
	        }
	        if (isCurried) {
	          var placeholder = getHolder(wrapper),
	              holdersCount = countHolders(args, placeholder);
	        }
	        if (partials) {
	          args = composeArgs(args, partials, holders, isCurried);
	        }
	        if (partialsRight) {
	          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
	        }
	        length -= holdersCount;
	        if (isCurried && length < arity) {
	          var newHolders = replaceHolders(args, placeholder);
	          return createRecurry(
	            func, bitmask, createHybrid, wrapper.placeholder, thisArg,
	            args, newHolders, argPos, ary, arity - length
	          );
	        }
	        var thisBinding = isBind ? thisArg : this,
	            fn = isBindKey ? thisBinding[func] : func;

	        length = args.length;
	        if (argPos) {
	          args = reorder(args, argPos);
	        } else if (isFlip && length > 1) {
	          args.reverse();
	        }
	        if (isAry && ary < length) {
	          args.length = ary;
	        }
	        if (this && this !== root && this instanceof wrapper) {
	          fn = Ctor || createCtor(fn);
	        }
	        return fn.apply(thisBinding, args);
	      }
	      return wrapper;
	    }

	    /**
	     * Creates a function like `_.invertBy`.
	     *
	     * @private
	     * @param {Function} setter The function to set accumulator values.
	     * @param {Function} toIteratee The function to resolve iteratees.
	     * @returns {Function} Returns the new inverter function.
	     */
	    function createInverter(setter, toIteratee) {
	      return function(object, iteratee) {
	        return baseInverter(object, setter, toIteratee(iteratee), {});
	      };
	    }

	    /**
	     * Creates a function that performs a mathematical operation on two values.
	     *
	     * @private
	     * @param {Function} operator The function to perform the operation.
	     * @param {number} [defaultValue] The value used for `undefined` arguments.
	     * @returns {Function} Returns the new mathematical operation function.
	     */
	    function createMathOperation(operator, defaultValue) {
	      return function(value, other) {
	        var result;
	        if (value === undefined && other === undefined) {
	          return defaultValue;
	        }
	        if (value !== undefined) {
	          result = value;
	        }
	        if (other !== undefined) {
	          if (result === undefined) {
	            return other;
	          }
	          if (typeof value == 'string' || typeof other == 'string') {
	            value = baseToString(value);
	            other = baseToString(other);
	          } else {
	            value = baseToNumber(value);
	            other = baseToNumber(other);
	          }
	          result = operator(value, other);
	        }
	        return result;
	      };
	    }

	    /**
	     * Creates a function like `_.over`.
	     *
	     * @private
	     * @param {Function} arrayFunc The function to iterate over iteratees.
	     * @returns {Function} Returns the new over function.
	     */
	    function createOver(arrayFunc) {
	      return flatRest(function(iteratees) {
	        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
	        return baseRest(function(args) {
	          var thisArg = this;
	          return arrayFunc(iteratees, function(iteratee) {
	            return apply(iteratee, thisArg, args);
	          });
	        });
	      });
	    }

	    /**
	     * Creates the padding for `string` based on `length`. The `chars` string
	     * is truncated if the number of characters exceeds `length`.
	     *
	     * @private
	     * @param {number} length The padding length.
	     * @param {string} [chars=' '] The string used as padding.
	     * @returns {string} Returns the padding for `string`.
	     */
	    function createPadding(length, chars) {
	      chars = chars === undefined ? ' ' : baseToString(chars);

	      var charsLength = chars.length;
	      if (charsLength < 2) {
	        return charsLength ? baseRepeat(chars, length) : chars;
	      }
	      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
	      return hasUnicode(chars)
	        ? castSlice(stringToArray(result), 0, length).join('')
	        : result.slice(0, length);
	    }

	    /**
	     * Creates a function that wraps `func` to invoke it with the `this` binding
	     * of `thisArg` and `partials` prepended to the arguments it receives.
	     *
	     * @private
	     * @param {Function} func The function to wrap.
	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	     * @param {*} thisArg The `this` binding of `func`.
	     * @param {Array} partials The arguments to prepend to those provided to
	     *  the new function.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createPartial(func, bitmask, thisArg, partials) {
	      var isBind = bitmask & WRAP_BIND_FLAG,
	          Ctor = createCtor(func);

	      function wrapper() {
	        var argsIndex = -1,
	            argsLength = arguments.length,
	            leftIndex = -1,
	            leftLength = partials.length,
	            args = Array(leftLength + argsLength),
	            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;

	        while (++leftIndex < leftLength) {
	          args[leftIndex] = partials[leftIndex];
	        }
	        while (argsLength--) {
	          args[leftIndex++] = arguments[++argsIndex];
	        }
	        return apply(fn, isBind ? thisArg : this, args);
	      }
	      return wrapper;
	    }

	    /**
	     * Creates a `_.range` or `_.rangeRight` function.
	     *
	     * @private
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Function} Returns the new range function.
	     */
	    function createRange(fromRight) {
	      return function(start, end, step) {
	        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
	          end = step = undefined;
	        }
	        // Ensure the sign of `-0` is preserved.
	        start = toFinite(start);
	        if (end === undefined) {
	          end = start;
	          start = 0;
	        } else {
	          end = toFinite(end);
	        }
	        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);
	        return baseRange(start, end, step, fromRight);
	      };
	    }

	    /**
	     * Creates a function that performs a relational operation on two values.
	     *
	     * @private
	     * @param {Function} operator The function to perform the operation.
	     * @returns {Function} Returns the new relational operation function.
	     */
	    function createRelationalOperation(operator) {
	      return function(value, other) {
	        if (!(typeof value == 'string' && typeof other == 'string')) {
	          value = toNumber(value);
	          other = toNumber(other);
	        }
	        return operator(value, other);
	      };
	    }

	    /**
	     * Creates a function that wraps `func` to continue currying.
	     *
	     * @private
	     * @param {Function} func The function to wrap.
	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	     * @param {Function} wrapFunc The function to create the `func` wrapper.
	     * @param {*} placeholder The placeholder value.
	     * @param {*} [thisArg] The `this` binding of `func`.
	     * @param {Array} [partials] The arguments to prepend to those provided to
	     *  the new function.
	     * @param {Array} [holders] The `partials` placeholder indexes.
	     * @param {Array} [argPos] The argument positions of the new function.
	     * @param {number} [ary] The arity cap of `func`.
	     * @param {number} [arity] The arity of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
	      var isCurry = bitmask & WRAP_CURRY_FLAG,
	          newHolders = isCurry ? holders : undefined,
	          newHoldersRight = isCurry ? undefined : holders,
	          newPartials = isCurry ? partials : undefined,
	          newPartialsRight = isCurry ? undefined : partials;

	      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);
	      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);

	      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
	        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
	      }
	      var newData = [
	        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,
	        newHoldersRight, argPos, ary, arity
	      ];

	      var result = wrapFunc.apply(undefined, newData);
	      if (isLaziable(func)) {
	        setData(result, newData);
	      }
	      result.placeholder = placeholder;
	      return setWrapToString(result, func, bitmask);
	    }

	    /**
	     * Creates a function like `_.round`.
	     *
	     * @private
	     * @param {string} methodName The name of the `Math` method to use when rounding.
	     * @returns {Function} Returns the new round function.
	     */
	    function createRound(methodName) {
	      var func = Math[methodName];
	      return function(number, precision) {
	        number = toNumber(number);
	        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);
	        if (precision) {
	          // Shift with exponential notation to avoid floating-point issues.
	          // See [MDN](https://mdn.io/round#Examples) for more details.
	          var pair = (toString(number) + 'e').split('e'),
	              value = func(pair[0] + 'e' + (+pair[1] + precision));

	          pair = (toString(value) + 'e').split('e');
	          return +(pair[0] + 'e' + (+pair[1] - precision));
	        }
	        return func(number);
	      };
	    }

	    /**
	     * Creates a set object of `values`.
	     *
	     * @private
	     * @param {Array} values The values to add to the set.
	     * @returns {Object} Returns the new set.
	     */
	    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {
	      return new Set(values);
	    };

	    /**
	     * Creates a `_.toPairs` or `_.toPairsIn` function.
	     *
	     * @private
	     * @param {Function} keysFunc The function to get the keys of a given object.
	     * @returns {Function} Returns the new pairs function.
	     */
	    function createToPairs(keysFunc) {
	      return function(object) {
	        var tag = getTag(object);
	        if (tag == mapTag) {
	          return mapToArray(object);
	        }
	        if (tag == setTag) {
	          return setToPairs(object);
	        }
	        return baseToPairs(object, keysFunc(object));
	      };
	    }

	    /**
	     * Creates a function that either curries or invokes `func` with optional
	     * `this` binding and partially applied arguments.
	     *
	     * @private
	     * @param {Function|string} func The function or method name to wrap.
	     * @param {number} bitmask The bitmask flags.
	     *    1 - `_.bind`
	     *    2 - `_.bindKey`
	     *    4 - `_.curry` or `_.curryRight` of a bound function
	     *    8 - `_.curry`
	     *   16 - `_.curryRight`
	     *   32 - `_.partial`
	     *   64 - `_.partialRight`
	     *  128 - `_.rearg`
	     *  256 - `_.ary`
	     *  512 - `_.flip`
	     * @param {*} [thisArg] The `this` binding of `func`.
	     * @param {Array} [partials] The arguments to be partially applied.
	     * @param {Array} [holders] The `partials` placeholder indexes.
	     * @param {Array} [argPos] The argument positions of the new function.
	     * @param {number} [ary] The arity cap of `func`.
	     * @param {number} [arity] The arity of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
	      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
	      if (!isBindKey && typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      var length = partials ? partials.length : 0;
	      if (!length) {
	        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
	        partials = holders = undefined;
	      }
	      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
	      arity = arity === undefined ? arity : toInteger(arity);
	      length -= holders ? holders.length : 0;

	      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
	        var partialsRight = partials,
	            holdersRight = holders;

	        partials = holders = undefined;
	      }
	      var data = isBindKey ? undefined : getData(func);

	      var newData = [
	        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,
	        argPos, ary, arity
	      ];

	      if (data) {
	        mergeData(newData, data);
	      }
	      func = newData[0];
	      bitmask = newData[1];
	      thisArg = newData[2];
	      partials = newData[3];
	      holders = newData[4];
	      arity = newData[9] = newData[9] === undefined
	        ? (isBindKey ? 0 : func.length)
	        : nativeMax(newData[9] - length, 0);

	      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
	        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
	      }
	      if (!bitmask || bitmask == WRAP_BIND_FLAG) {
	        var result = createBind(func, bitmask, thisArg);
	      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
	        result = createCurry(func, bitmask, arity);
	      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
	        result = createPartial(func, bitmask, thisArg, partials);
	      } else {
	        result = createHybrid.apply(undefined, newData);
	      }
	      var setter = data ? baseSetData : setData;
	      return setWrapToString(setter(result, newData), func, bitmask);
	    }

	    /**
	     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties
	     * of source objects to the destination object for all destination properties
	     * that resolve to `undefined`.
	     *
	     * @private
	     * @param {*} objValue The destination value.
	     * @param {*} srcValue The source value.
	     * @param {string} key The key of the property to assign.
	     * @param {Object} object The parent object of `objValue`.
	     * @returns {*} Returns the value to assign.
	     */
	    function customDefaultsAssignIn(objValue, srcValue, key, object) {
	      if (objValue === undefined ||
	          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {
	        return srcValue;
	      }
	      return objValue;
	    }

	    /**
	     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source
	     * objects into destination objects that are passed thru.
	     *
	     * @private
	     * @param {*} objValue The destination value.
	     * @param {*} srcValue The source value.
	     * @param {string} key The key of the property to merge.
	     * @param {Object} object The parent object of `objValue`.
	     * @param {Object} source The parent object of `srcValue`.
	     * @param {Object} [stack] Tracks traversed source values and their merged
	     *  counterparts.
	     * @returns {*} Returns the value to assign.
	     */
	    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
	      if (isObject(objValue) && isObject(srcValue)) {
	        // Recursively merge objects and arrays (susceptible to call stack limits).
	        stack.set(srcValue, objValue);
	        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);
	        stack['delete'](srcValue);
	      }
	      return objValue;
	    }

	    /**
	     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
	     * objects.
	     *
	     * @private
	     * @param {*} value The value to inspect.
	     * @param {string} key The key of the property to inspect.
	     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
	     */
	    function customOmitClone(value) {
	      return isPlainObject(value) ? undefined : value;
	    }

	    /**
	     * A specialized version of `baseIsEqualDeep` for arrays with support for
	     * partial deep comparisons.
	     *
	     * @private
	     * @param {Array} array The array to compare.
	     * @param {Array} other The other array to compare.
	     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	     * @param {Function} customizer The function to customize comparisons.
	     * @param {Function} equalFunc The function to determine equivalents of values.
	     * @param {Object} stack Tracks traversed `array` and `other` objects.
	     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
	     */
	    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
	      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
	          arrLength = array.length,
	          othLength = other.length;

	      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
	        return false;
	      }
	      // Assume cyclic values are equal.
	      var stacked = stack.get(array);
	      if (stacked && stack.get(other)) {
	        return stacked == other;
	      }
	      var index = -1,
	          result = true,
	          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;

	      stack.set(array, other);
	      stack.set(other, array);

	      // Ignore non-index properties.
	      while (++index < arrLength) {
	        var arrValue = array[index],
	            othValue = other[index];

	        if (customizer) {
	          var compared = isPartial
	            ? customizer(othValue, arrValue, index, other, array, stack)
	            : customizer(arrValue, othValue, index, array, other, stack);
	        }
	        if (compared !== undefined) {
	          if (compared) {
	            continue;
	          }
	          result = false;
	          break;
	        }
	        // Recursively compare arrays (susceptible to call stack limits).
	        if (seen) {
	          if (!arraySome(other, function(othValue, othIndex) {
	                if (!cacheHas(seen, othIndex) &&
	                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
	                  return seen.push(othIndex);
	                }
	              })) {
	            result = false;
	            break;
	          }
	        } else if (!(
	              arrValue === othValue ||
	                equalFunc(arrValue, othValue, bitmask, customizer, stack)
	            )) {
	          result = false;
	          break;
	        }
	      }
	      stack['delete'](array);
	      stack['delete'](other);
	      return result;
	    }

	    /**
	     * A specialized version of `baseIsEqualDeep` for comparing objects of
	     * the same `toStringTag`.
	     *
	     * **Note:** This function only supports comparing values with tags of
	     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
	     *
	     * @private
	     * @param {Object} object The object to compare.
	     * @param {Object} other The other object to compare.
	     * @param {string} tag The `toStringTag` of the objects to compare.
	     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	     * @param {Function} customizer The function to customize comparisons.
	     * @param {Function} equalFunc The function to determine equivalents of values.
	     * @param {Object} stack Tracks traversed `object` and `other` objects.
	     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	     */
	    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
	      switch (tag) {
	        case dataViewTag:
	          if ((object.byteLength != other.byteLength) ||
	              (object.byteOffset != other.byteOffset)) {
	            return false;
	          }
	          object = object.buffer;
	          other = other.buffer;

	        case arrayBufferTag:
	          if ((object.byteLength != other.byteLength) ||
	              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
	            return false;
	          }
	          return true;

	        case boolTag:
	        case dateTag:
	        case numberTag:
	          // Coerce booleans to `1` or `0` and dates to milliseconds.
	          // Invalid dates are coerced to `NaN`.
	          return eq(+object, +other);

	        case errorTag:
	          return object.name == other.name && object.message == other.message;

	        case regexpTag:
	        case stringTag:
	          // Coerce regexes to strings and treat strings, primitives and objects,
	          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
	          // for more details.
	          return object == (other + '');

	        case mapTag:
	          var convert = mapToArray;

	        case setTag:
	          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
	          convert || (convert = setToArray);

	          if (object.size != other.size && !isPartial) {
	            return false;
	          }
	          // Assume cyclic values are equal.
	          var stacked = stack.get(object);
	          if (stacked) {
	            return stacked == other;
	          }
	          bitmask |= COMPARE_UNORDERED_FLAG;

	          // Recursively compare objects (susceptible to call stack limits).
	          stack.set(object, other);
	          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
	          stack['delete'](object);
	          return result;

	        case symbolTag:
	          if (symbolValueOf) {
	            return symbolValueOf.call(object) == symbolValueOf.call(other);
	          }
	      }
	      return false;
	    }

	    /**
	     * A specialized version of `baseIsEqualDeep` for objects with support for
	     * partial deep comparisons.
	     *
	     * @private
	     * @param {Object} object The object to compare.
	     * @param {Object} other The other object to compare.
	     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	     * @param {Function} customizer The function to customize comparisons.
	     * @param {Function} equalFunc The function to determine equivalents of values.
	     * @param {Object} stack Tracks traversed `object` and `other` objects.
	     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	     */
	    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
	      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
	          objProps = getAllKeys(object),
	          objLength = objProps.length,
	          othProps = getAllKeys(other),
	          othLength = othProps.length;

	      if (objLength != othLength && !isPartial) {
	        return false;
	      }
	      var index = objLength;
	      while (index--) {
	        var key = objProps[index];
	        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
	          return false;
	        }
	      }
	      // Assume cyclic values are equal.
	      var stacked = stack.get(object);
	      if (stacked && stack.get(other)) {
	        return stacked == other;
	      }
	      var result = true;
	      stack.set(object, other);
	      stack.set(other, object);

	      var skipCtor = isPartial;
	      while (++index < objLength) {
	        key = objProps[index];
	        var objValue = object[key],
	            othValue = other[key];

	        if (customizer) {
	          var compared = isPartial
	            ? customizer(othValue, objValue, key, other, object, stack)
	            : customizer(objValue, othValue, key, object, other, stack);
	        }
	        // Recursively compare objects (susceptible to call stack limits).
	        if (!(compared === undefined
	              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
	              : compared
	            )) {
	          result = false;
	          break;
	        }
	        skipCtor || (skipCtor = key == 'constructor');
	      }
	      if (result && !skipCtor) {
	        var objCtor = object.constructor,
	            othCtor = other.constructor;

	        // Non `Object` object instances with different constructors are not equal.
	        if (objCtor != othCtor &&
	            ('constructor' in object && 'constructor' in other) &&
	            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
	              typeof othCtor == 'function' && othCtor instanceof othCtor)) {
	          result = false;
	        }
	      }
	      stack['delete'](object);
	      stack['delete'](other);
	      return result;
	    }

	    /**
	     * A specialized version of `baseRest` which flattens the rest array.
	     *
	     * @private
	     * @param {Function} func The function to apply a rest parameter to.
	     * @returns {Function} Returns the new function.
	     */
	    function flatRest(func) {
	      return setToString(overRest(func, undefined, flatten), func + '');
	    }

	    /**
	     * Creates an array of own enumerable property names and symbols of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names and symbols.
	     */
	    function getAllKeys(object) {
	      return baseGetAllKeys(object, keys, getSymbols);
	    }

	    /**
	     * Creates an array of own and inherited enumerable property names and
	     * symbols of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names and symbols.
	     */
	    function getAllKeysIn(object) {
	      return baseGetAllKeys(object, keysIn, getSymbolsIn);
	    }

	    /**
	     * Gets metadata for `func`.
	     *
	     * @private
	     * @param {Function} func The function to query.
	     * @returns {*} Returns the metadata for `func`.
	     */
	    var getData = !metaMap ? noop : function(func) {
	      return metaMap.get(func);
	    };

	    /**
	     * Gets the name of `func`.
	     *
	     * @private
	     * @param {Function} func The function to query.
	     * @returns {string} Returns the function name.
	     */
	    function getFuncName(func) {
	      var result = (func.name + ''),
	          array = realNames[result],
	          length = hasOwnProperty.call(realNames, result) ? array.length : 0;

	      while (length--) {
	        var data = array[length],
	            otherFunc = data.func;
	        if (otherFunc == null || otherFunc == func) {
	          return data.name;
	        }
	      }
	      return result;
	    }

	    /**
	     * Gets the argument placeholder value for `func`.
	     *
	     * @private
	     * @param {Function} func The function to inspect.
	     * @returns {*} Returns the placeholder value.
	     */
	    function getHolder(func) {
	      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;
	      return object.placeholder;
	    }

	    /**
	     * Gets the appropriate "iteratee" function. If `_.iteratee` is customized,
	     * this function returns the custom method, otherwise it returns `baseIteratee`.
	     * If arguments are provided, the chosen function is invoked with them and
	     * its result is returned.
	     *
	     * @private
	     * @param {*} [value] The value to convert to an iteratee.
	     * @param {number} [arity] The arity of the created iteratee.
	     * @returns {Function} Returns the chosen function or its result.
	     */
	    function getIteratee() {
	      var result = lodash.iteratee || iteratee;
	      result = result === iteratee ? baseIteratee : result;
	      return arguments.length ? result(arguments[0], arguments[1]) : result;
	    }

	    /**
	     * Gets the data for `map`.
	     *
	     * @private
	     * @param {Object} map The map to query.
	     * @param {string} key The reference key.
	     * @returns {*} Returns the map data.
	     */
	    function getMapData(map, key) {
	      var data = map.__data__;
	      return isKeyable(key)
	        ? data[typeof key == 'string' ? 'string' : 'hash']
	        : data.map;
	    }

	    /**
	     * Gets the property names, values, and compare flags of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the match data of `object`.
	     */
	    function getMatchData(object) {
	      var result = keys(object),
	          length = result.length;

	      while (length--) {
	        var key = result[length],
	            value = object[key];

	        result[length] = [key, value, isStrictComparable(value)];
	      }
	      return result;
	    }

	    /**
	     * Gets the native function at `key` of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {string} key The key of the method to get.
	     * @returns {*} Returns the function if it's native, else `undefined`.
	     */
	    function getNative(object, key) {
	      var value = getValue(object, key);
	      return baseIsNative(value) ? value : undefined;
	    }

	    /**
	     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
	     *
	     * @private
	     * @param {*} value The value to query.
	     * @returns {string} Returns the raw `toStringTag`.
	     */
	    function getRawTag(value) {
	      var isOwn = hasOwnProperty.call(value, symToStringTag),
	          tag = value[symToStringTag];

	      try {
	        value[symToStringTag] = undefined;
	        var unmasked = true;
	      } catch (e) {}

	      var result = nativeObjectToString.call(value);
	      if (unmasked) {
	        if (isOwn) {
	          value[symToStringTag] = tag;
	        } else {
	          delete value[symToStringTag];
	        }
	      }
	      return result;
	    }

	    /**
	     * Creates an array of the own enumerable symbols of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of symbols.
	     */
	    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
	      if (object == null) {
	        return [];
	      }
	      object = Object(object);
	      return arrayFilter(nativeGetSymbols(object), function(symbol) {
	        return propertyIsEnumerable.call(object, symbol);
	      });
	    };

	    /**
	     * Creates an array of the own and inherited enumerable symbols of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of symbols.
	     */
	    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
	      var result = [];
	      while (object) {
	        arrayPush(result, getSymbols(object));
	        object = getPrototype(object);
	      }
	      return result;
	    };

	    /**
	     * Gets the `toStringTag` of `value`.
	     *
	     * @private
	     * @param {*} value The value to query.
	     * @returns {string} Returns the `toStringTag`.
	     */
	    var getTag = baseGetTag;

	    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
	    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
	        (Map && getTag(new Map) != mapTag) ||
	        (Promise && getTag(Promise.resolve()) != promiseTag) ||
	        (Set && getTag(new Set) != setTag) ||
	        (WeakMap && getTag(new WeakMap) != weakMapTag)) {
	      getTag = function(value) {
	        var result = baseGetTag(value),
	            Ctor = result == objectTag ? value.constructor : undefined,
	            ctorString = Ctor ? toSource(Ctor) : '';

	        if (ctorString) {
	          switch (ctorString) {
	            case dataViewCtorString: return dataViewTag;
	            case mapCtorString: return mapTag;
	            case promiseCtorString: return promiseTag;
	            case setCtorString: return setTag;
	            case weakMapCtorString: return weakMapTag;
	          }
	        }
	        return result;
	      };
	    }

	    /**
	     * Gets the view, applying any `transforms` to the `start` and `end` positions.
	     *
	     * @private
	     * @param {number} start The start of the view.
	     * @param {number} end The end of the view.
	     * @param {Array} transforms The transformations to apply to the view.
	     * @returns {Object} Returns an object containing the `start` and `end`
	     *  positions of the view.
	     */
	    function getView(start, end, transforms) {
	      var index = -1,
	          length = transforms.length;

	      while (++index < length) {
	        var data = transforms[index],
	            size = data.size;

	        switch (data.type) {
	          case 'drop':      start += size; break;
	          case 'dropRight': end -= size; break;
	          case 'take':      end = nativeMin(end, start + size); break;
	          case 'takeRight': start = nativeMax(start, end - size); break;
	        }
	      }
	      return { 'start': start, 'end': end };
	    }

	    /**
	     * Extracts wrapper details from the `source` body comment.
	     *
	     * @private
	     * @param {string} source The source to inspect.
	     * @returns {Array} Returns the wrapper details.
	     */
	    function getWrapDetails(source) {
	      var match = source.match(reWrapDetails);
	      return match ? match[1].split(reSplitDetails) : [];
	    }

	    /**
	     * Checks if `path` exists on `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path to check.
	     * @param {Function} hasFunc The function to check properties.
	     * @returns {boolean} Returns `true` if `path` exists, else `false`.
	     */
	    function hasPath(object, path, hasFunc) {
	      path = castPath(path, object);

	      var index = -1,
	          length = path.length,
	          result = false;

	      while (++index < length) {
	        var key = toKey(path[index]);
	        if (!(result = object != null && hasFunc(object, key))) {
	          break;
	        }
	        object = object[key];
	      }
	      if (result || ++index != length) {
	        return result;
	      }
	      length = object == null ? 0 : object.length;
	      return !!length && isLength(length) && isIndex(key, length) &&
	        (isArray(object) || isArguments(object));
	    }

	    /**
	     * Initializes an array clone.
	     *
	     * @private
	     * @param {Array} array The array to clone.
	     * @returns {Array} Returns the initialized clone.
	     */
	    function initCloneArray(array) {
	      var length = array.length,
	          result = array.constructor(length);

	      // Add properties assigned by `RegExp#exec`.
	      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
	        result.index = array.index;
	        result.input = array.input;
	      }
	      return result;
	    }

	    /**
	     * Initializes an object clone.
	     *
	     * @private
	     * @param {Object} object The object to clone.
	     * @returns {Object} Returns the initialized clone.
	     */
	    function initCloneObject(object) {
	      return (typeof object.constructor == 'function' && !isPrototype(object))
	        ? baseCreate(getPrototype(object))
	        : {};
	    }

	    /**
	     * Initializes an object clone based on its `toStringTag`.
	     *
	     * **Note:** This function only supports cloning values with tags of
	     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
	     *
	     * @private
	     * @param {Object} object The object to clone.
	     * @param {string} tag The `toStringTag` of the object to clone.
	     * @param {Function} cloneFunc The function to clone values.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Object} Returns the initialized clone.
	     */
	    function initCloneByTag(object, tag, cloneFunc, isDeep) {
	      var Ctor = object.constructor;
	      switch (tag) {
	        case arrayBufferTag:
	          return cloneArrayBuffer(object);

	        case boolTag:
	        case dateTag:
	          return new Ctor(+object);

	        case dataViewTag:
	          return cloneDataView(object, isDeep);

	        case float32Tag: case float64Tag:
	        case int8Tag: case int16Tag: case int32Tag:
	        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
	          return cloneTypedArray(object, isDeep);

	        case mapTag:
	          return cloneMap(object, isDeep, cloneFunc);

	        case numberTag:
	        case stringTag:
	          return new Ctor(object);

	        case regexpTag:
	          return cloneRegExp(object);

	        case setTag:
	          return cloneSet(object, isDeep, cloneFunc);

	        case symbolTag:
	          return cloneSymbol(object);
	      }
	    }

	    /**
	     * Inserts wrapper `details` in a comment at the top of the `source` body.
	     *
	     * @private
	     * @param {string} source The source to modify.
	     * @returns {Array} details The details to insert.
	     * @returns {string} Returns the modified source.
	     */
	    function insertWrapDetails(source, details) {
	      var length = details.length;
	      if (!length) {
	        return source;
	      }
	      var lastIndex = length - 1;
	      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
	      details = details.join(length > 2 ? ', ' : ' ');
	      return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
	    }

	    /**
	     * Checks if `value` is a flattenable `arguments` object or array.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
	     */
	    function isFlattenable(value) {
	      return isArray(value) || isArguments(value) ||
	        !!(spreadableSymbol && value && value[spreadableSymbol]);
	    }

	    /**
	     * Checks if `value` is a valid array-like index.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
	     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
	     */
	    function isIndex(value, length) {
	      length = length == null ? MAX_SAFE_INTEGER : length;
	      return !!length &&
	        (typeof value == 'number' || reIsUint.test(value)) &&
	        (value > -1 && value % 1 == 0 && value < length);
	    }

	    /**
	     * Checks if the given arguments are from an iteratee call.
	     *
	     * @private
	     * @param {*} value The potential iteratee value argument.
	     * @param {*} index The potential iteratee index or key argument.
	     * @param {*} object The potential iteratee object argument.
	     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
	     *  else `false`.
	     */
	    function isIterateeCall(value, index, object) {
	      if (!isObject(object)) {
	        return false;
	      }
	      var type = typeof index;
	      if (type == 'number'
	            ? (isArrayLike(object) && isIndex(index, object.length))
	            : (type == 'string' && index in object)
	          ) {
	        return eq(object[index], value);
	      }
	      return false;
	    }

	    /**
	     * Checks if `value` is a property name and not a property path.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @param {Object} [object] The object to query keys on.
	     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
	     */
	    function isKey(value, object) {
	      if (isArray(value)) {
	        return false;
	      }
	      var type = typeof value;
	      if (type == 'number' || type == 'symbol' || type == 'boolean' ||
	          value == null || isSymbol(value)) {
	        return true;
	      }
	      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
	        (object != null && value in Object(object));
	    }

	    /**
	     * Checks if `value` is suitable for use as unique object key.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
	     */
	    function isKeyable(value) {
	      var type = typeof value;
	      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
	        ? (value !== '__proto__')
	        : (value === null);
	    }

	    /**
	     * Checks if `func` has a lazy counterpart.
	     *
	     * @private
	     * @param {Function} func The function to check.
	     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
	     *  else `false`.
	     */
	    function isLaziable(func) {
	      var funcName = getFuncName(func),
	          other = lodash[funcName];

	      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
	        return false;
	      }
	      if (func === other) {
	        return true;
	      }
	      var data = getData(other);
	      return !!data && func === data[0];
	    }

	    /**
	     * Checks if `func` has its source masked.
	     *
	     * @private
	     * @param {Function} func The function to check.
	     * @returns {boolean} Returns `true` if `func` is masked, else `false`.
	     */
	    function isMasked(func) {
	      return !!maskSrcKey && (maskSrcKey in func);
	    }

	    /**
	     * Checks if `func` is capable of being masked.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.
	     */
	    var isMaskable = coreJsData ? isFunction : stubFalse;

	    /**
	     * Checks if `value` is likely a prototype object.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
	     */
	    function isPrototype(value) {
	      var Ctor = value && value.constructor,
	          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

	      return value === proto;
	    }

	    /**
	     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` if suitable for strict
	     *  equality comparisons, else `false`.
	     */
	    function isStrictComparable(value) {
	      return value === value && !isObject(value);
	    }

	    /**
	     * A specialized version of `matchesProperty` for source values suitable
	     * for strict equality comparisons, i.e. `===`.
	     *
	     * @private
	     * @param {string} key The key of the property to get.
	     * @param {*} srcValue The value to match.
	     * @returns {Function} Returns the new spec function.
	     */
	    function matchesStrictComparable(key, srcValue) {
	      return function(object) {
	        if (object == null) {
	          return false;
	        }
	        return object[key] === srcValue &&
	          (srcValue !== undefined || (key in Object(object)));
	      };
	    }

	    /**
	     * A specialized version of `_.memoize` which clears the memoized function's
	     * cache when it exceeds `MAX_MEMOIZE_SIZE`.
	     *
	     * @private
	     * @param {Function} func The function to have its output memoized.
	     * @returns {Function} Returns the new memoized function.
	     */
	    function memoizeCapped(func) {
	      var result = memoize(func, function(key) {
	        if (cache.size === MAX_MEMOIZE_SIZE) {
	          cache.clear();
	        }
	        return key;
	      });

	      var cache = result.cache;
	      return result;
	    }

	    /**
	     * Merges the function metadata of `source` into `data`.
	     *
	     * Merging metadata reduces the number of wrappers used to invoke a function.
	     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
	     * may be applied regardless of execution order. Methods like `_.ary` and
	     * `_.rearg` modify function arguments, making the order in which they are
	     * executed important, preventing the merging of metadata. However, we make
	     * an exception for a safe combined case where curried functions have `_.ary`
	     * and or `_.rearg` applied.
	     *
	     * @private
	     * @param {Array} data The destination metadata.
	     * @param {Array} source The source metadata.
	     * @returns {Array} Returns `data`.
	     */
	    function mergeData(data, source) {
	      var bitmask = data[1],
	          srcBitmask = source[1],
	          newBitmask = bitmask | srcBitmask,
	          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);

	      var isCombo =
	        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||
	        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||
	        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));

	      // Exit early if metadata can't be merged.
	      if (!(isCommon || isCombo)) {
	        return data;
	      }
	      // Use source `thisArg` if available.
	      if (srcBitmask & WRAP_BIND_FLAG) {
	        data[2] = source[2];
	        // Set when currying a bound function.
	        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
	      }
	      // Compose partial arguments.
	      var value = source[3];
	      if (value) {
	        var partials = data[3];
	        data[3] = partials ? composeArgs(partials, value, source[4]) : value;
	        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
	      }
	      // Compose partial right arguments.
	      value = source[5];
	      if (value) {
	        partials = data[5];
	        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
	        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
	      }
	      // Use source `argPos` if available.
	      value = source[7];
	      if (value) {
	        data[7] = value;
	      }
	      // Use source `ary` if it's smaller.
	      if (srcBitmask & WRAP_ARY_FLAG) {
	        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
	      }
	      // Use source `arity` if one is not provided.
	      if (data[9] == null) {
	        data[9] = source[9];
	      }
	      // Use source `func` and merge bitmasks.
	      data[0] = source[0];
	      data[1] = newBitmask;

	      return data;
	    }

	    /**
	     * This function is like
	     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
	     * except that it includes inherited enumerable properties.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     */
	    function nativeKeysIn(object) {
	      var result = [];
	      if (object != null) {
	        for (var key in Object(object)) {
	          result.push(key);
	        }
	      }
	      return result;
	    }

	    /**
	     * Converts `value` to a string using `Object.prototype.toString`.
	     *
	     * @private
	     * @param {*} value The value to convert.
	     * @returns {string} Returns the converted string.
	     */
	    function objectToString(value) {
	      return nativeObjectToString.call(value);
	    }

	    /**
	     * A specialized version of `baseRest` which transforms the rest array.
	     *
	     * @private
	     * @param {Function} func The function to apply a rest parameter to.
	     * @param {number} [start=func.length-1] The start position of the rest parameter.
	     * @param {Function} transform The rest array transform.
	     * @returns {Function} Returns the new function.
	     */
	    function overRest(func, start, transform) {
	      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
	      return function() {
	        var args = arguments,
	            index = -1,
	            length = nativeMax(args.length - start, 0),
	            array = Array(length);

	        while (++index < length) {
	          array[index] = args[start + index];
	        }
	        index = -1;
	        var otherArgs = Array(start + 1);
	        while (++index < start) {
	          otherArgs[index] = args[index];
	        }
	        otherArgs[start] = transform(array);
	        return apply(func, this, otherArgs);
	      };
	    }

	    /**
	     * Gets the parent value at `path` of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array} path The path to get the parent value of.
	     * @returns {*} Returns the parent value.
	     */
	    function parent(object, path) {
	      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
	    }

	    /**
	     * Reorder `array` according to the specified indexes where the element at
	     * the first index is assigned as the first element, the element at
	     * the second index is assigned as the second element, and so on.
	     *
	     * @private
	     * @param {Array} array The array to reorder.
	     * @param {Array} indexes The arranged array indexes.
	     * @returns {Array} Returns `array`.
	     */
	    function reorder(array, indexes) {
	      var arrLength = array.length,
	          length = nativeMin(indexes.length, arrLength),
	          oldArray = copyArray(array);

	      while (length--) {
	        var index = indexes[length];
	        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
	      }
	      return array;
	    }

	    /**
	     * Sets metadata for `func`.
	     *
	     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
	     * period of time, it will trip its breaker and transition to an identity
	     * function to avoid garbage collection pauses in V8. See
	     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
	     * for more details.
	     *
	     * @private
	     * @param {Function} func The function to associate metadata with.
	     * @param {*} data The metadata.
	     * @returns {Function} Returns `func`.
	     */
	    var setData = shortOut(baseSetData);

	    /**
	     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).
	     *
	     * @private
	     * @param {Function} func The function to delay.
	     * @param {number} wait The number of milliseconds to delay invocation.
	     * @returns {number|Object} Returns the timer id or timeout object.
	     */
	    var setTimeout = ctxSetTimeout || function(func, wait) {
	      return root.setTimeout(func, wait);
	    };

	    /**
	     * Sets the `toString` method of `func` to return `string`.
	     *
	     * @private
	     * @param {Function} func The function to modify.
	     * @param {Function} string The `toString` result.
	     * @returns {Function} Returns `func`.
	     */
	    var setToString = shortOut(baseSetToString);

	    /**
	     * Sets the `toString` method of `wrapper` to mimic the source of `reference`
	     * with wrapper details in a comment at the top of the source body.
	     *
	     * @private
	     * @param {Function} wrapper The function to modify.
	     * @param {Function} reference The reference function.
	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	     * @returns {Function} Returns `wrapper`.
	     */
	    function setWrapToString(wrapper, reference, bitmask) {
	      var source = (reference + '');
	      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
	    }

	    /**
	     * Creates a function that'll short out and invoke `identity` instead
	     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
	     * milliseconds.
	     *
	     * @private
	     * @param {Function} func The function to restrict.
	     * @returns {Function} Returns the new shortable function.
	     */
	    function shortOut(func) {
	      var count = 0,
	          lastCalled = 0;

	      return function() {
	        var stamp = nativeNow(),
	            remaining = HOT_SPAN - (stamp - lastCalled);

	        lastCalled = stamp;
	        if (remaining > 0) {
	          if (++count >= HOT_COUNT) {
	            return arguments[0];
	          }
	        } else {
	          count = 0;
	        }
	        return func.apply(undefined, arguments);
	      };
	    }

	    /**
	     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.
	     *
	     * @private
	     * @param {Array} array The array to shuffle.
	     * @param {number} [size=array.length] The size of `array`.
	     * @returns {Array} Returns `array`.
	     */
	    function shuffleSelf(array, size) {
	      var index = -1,
	          length = array.length,
	          lastIndex = length - 1;

	      size = size === undefined ? length : size;
	      while (++index < size) {
	        var rand = baseRandom(index, lastIndex),
	            value = array[rand];

	        array[rand] = array[index];
	        array[index] = value;
	      }
	      array.length = size;
	      return array;
	    }

	    /**
	     * Converts `string` to a property path array.
	     *
	     * @private
	     * @param {string} string The string to convert.
	     * @returns {Array} Returns the property path array.
	     */
	    var stringToPath = memoizeCapped(function(string) {
	      var result = [];
	      if (reLeadingDot.test(string)) {
	        result.push('');
	      }
	      string.replace(rePropName, function(match, number, quote, string) {
	        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));
	      });
	      return result;
	    });

	    /**
	     * Converts `value` to a string key if it's not a string or symbol.
	     *
	     * @private
	     * @param {*} value The value to inspect.
	     * @returns {string|symbol} Returns the key.
	     */
	    function toKey(value) {
	      if (typeof value == 'string' || isSymbol(value)) {
	        return value;
	      }
	      var result = (value + '');
	      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
	    }

	    /**
	     * Converts `func` to its source code.
	     *
	     * @private
	     * @param {Function} func The function to convert.
	     * @returns {string} Returns the source code.
	     */
	    function toSource(func) {
	      if (func != null) {
	        try {
	          return funcToString.call(func);
	        } catch (e) {}
	        try {
	          return (func + '');
	        } catch (e) {}
	      }
	      return '';
	    }

	    /**
	     * Updates wrapper `details` based on `bitmask` flags.
	     *
	     * @private
	     * @returns {Array} details The details to modify.
	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	     * @returns {Array} Returns `details`.
	     */
	    function updateWrapDetails(details, bitmask) {
	      arrayEach(wrapFlags, function(pair) {
	        var value = '_.' + pair[0];
	        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {
	          details.push(value);
	        }
	      });
	      return details.sort();
	    }

	    /**
	     * Creates a clone of `wrapper`.
	     *
	     * @private
	     * @param {Object} wrapper The wrapper to clone.
	     * @returns {Object} Returns the cloned wrapper.
	     */
	    function wrapperClone(wrapper) {
	      if (wrapper instanceof LazyWrapper) {
	        return wrapper.clone();
	      }
	      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
	      result.__actions__ = copyArray(wrapper.__actions__);
	      result.__index__  = wrapper.__index__;
	      result.__values__ = wrapper.__values__;
	      return result;
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates an array of elements split into groups the length of `size`.
	     * If `array` can't be split evenly, the final chunk will be the remaining
	     * elements.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to process.
	     * @param {number} [size=1] The length of each chunk
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the new array of chunks.
	     * @example
	     *
	     * _.chunk(['a', 'b', 'c', 'd'], 2);
	     * // => [['a', 'b'], ['c', 'd']]
	     *
	     * _.chunk(['a', 'b', 'c', 'd'], 3);
	     * // => [['a', 'b', 'c'], ['d']]
	     */
	    function chunk(array, size, guard) {
	      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {
	        size = 1;
	      } else {
	        size = nativeMax(toInteger(size), 0);
	      }
	      var length = array == null ? 0 : array.length;
	      if (!length || size < 1) {
	        return [];
	      }
	      var index = 0,
	          resIndex = 0,
	          result = Array(nativeCeil(length / size));

	      while (index < length) {
	        result[resIndex++] = baseSlice(array, index, (index += size));
	      }
	      return result;
	    }

	    /**
	     * Creates an array with all falsey values removed. The values `false`, `null`,
	     * `0`, `""`, `undefined`, and `NaN` are falsey.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to compact.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * _.compact([0, 1, false, 2, '', 3]);
	     * // => [1, 2, 3]
	     */
	    function compact(array) {
	      var index = -1,
	          length = array == null ? 0 : array.length,
	          resIndex = 0,
	          result = [];

	      while (++index < length) {
	        var value = array[index];
	        if (value) {
	          result[resIndex++] = value;
	        }
	      }
	      return result;
	    }

	    /**
	     * Creates a new array concatenating `array` with any additional arrays
	     * and/or values.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to concatenate.
	     * @param {...*} [values] The values to concatenate.
	     * @returns {Array} Returns the new concatenated array.
	     * @example
	     *
	     * var array = [1];
	     * var other = _.concat(array, 2, [3], [[4]]);
	     *
	     * console.log(other);
	     * // => [1, 2, 3, [4]]
	     *
	     * console.log(array);
	     * // => [1]
	     */
	    function concat() {
	      var length = arguments.length;
	      if (!length) {
	        return [];
	      }
	      var args = Array(length - 1),
	          array = arguments[0],
	          index = length;

	      while (index--) {
	        args[index - 1] = arguments[index];
	      }
	      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));
	    }

	    /**
	     * Creates an array of `array` values not included in the other given arrays
	     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons. The order and references of result values are
	     * determined by the first array.
	     *
	     * **Note:** Unlike `_.pullAll`, this method returns a new array.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {...Array} [values] The values to exclude.
	     * @returns {Array} Returns the new array of filtered values.
	     * @see _.without, _.xor
	     * @example
	     *
	     * _.difference([2, 1], [2, 3]);
	     * // => [1]
	     */
	    var difference = baseRest(function(array, values) {
	      return isArrayLikeObject(array)
	        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))
	        : [];
	    });

	    /**
	     * This method is like `_.difference` except that it accepts `iteratee` which
	     * is invoked for each element of `array` and `values` to generate the criterion
	     * by which they're compared. The order and references of result values are
	     * determined by the first array. The iteratee is invoked with one argument:
	     * (value).
	     *
	     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {...Array} [values] The values to exclude.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);
	     * // => [1.2]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');
	     * // => [{ 'x': 2 }]
	     */
	    var differenceBy = baseRest(function(array, values) {
	      var iteratee = last(values);
	      if (isArrayLikeObject(iteratee)) {
	        iteratee = undefined;
	      }
	      return isArrayLikeObject(array)
	        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))
	        : [];
	    });

	    /**
	     * This method is like `_.difference` except that it accepts `comparator`
	     * which is invoked to compare elements of `array` to `values`. The order and
	     * references of result values are determined by the first array. The comparator
	     * is invoked with two arguments: (arrVal, othVal).
	     *
	     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {...Array} [values] The values to exclude.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
	     *
	     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);
	     * // => [{ 'x': 2, 'y': 1 }]
	     */
	    var differenceWith = baseRest(function(array, values) {
	      var comparator = last(values);
	      if (isArrayLikeObject(comparator)) {
	        comparator = undefined;
	      }
	      return isArrayLikeObject(array)
	        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)
	        : [];
	    });

	    /**
	     * Creates a slice of `array` with `n` elements dropped from the beginning.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.5.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=1] The number of elements to drop.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.drop([1, 2, 3]);
	     * // => [2, 3]
	     *
	     * _.drop([1, 2, 3], 2);
	     * // => [3]
	     *
	     * _.drop([1, 2, 3], 5);
	     * // => []
	     *
	     * _.drop([1, 2, 3], 0);
	     * // => [1, 2, 3]
	     */
	    function drop(array, n, guard) {
	      var length = array == null ? 0 : array.length;
	      if (!length) {
	        return [];
	      }
	      n = (guard || n === undefined) ? 1 : toInteger(n);
	      return baseSlice(array, n < 0 ? 0 : n, length);
	    }

	    /**
	     * Creates a slice of `array` with `n` elements dropped from the end.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=1] The number of elements to drop.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.dropRight([1, 2, 3]);
	     * // => [1, 2]
	     *
	     * _.dropRight([1, 2, 3], 2);
	     * // => [1]
	     *
	     * _.dropRight([1, 2, 3], 5);
	     * // => []
	     *
	     * _.dropRight([1, 2, 3], 0);
	     * // => [1, 2, 3]
	     */
	    function dropRight(array, n, guard) {
	      var length = array == null ? 0 : array.length;
	      if (!length) {
	        return [];
	      }
	      n = (guard || n === undefined) ? 1 : toInteger(n);
	      n = length - n;
	      return baseSlice(array, 0, n < 0 ? 0 : n);
	    }

	    /**
	     * Creates a slice of `array` excluding elements dropped from the end.
	     * Elements are dropped until `predicate` returns falsey. The predicate is
	     * invoked with three arguments: (value, index, array).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': true },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': false }
	     * ];
	     *
	     * _.dropRightWhile(users, function(o) { return !o.active; });
	     * // => objects for ['barney']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });
	     * // => objects for ['barney', 'fred']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.dropRightWhile(users, ['active', false]);
	     * // => objects for ['barney']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.dropRightWhile(users, 'active');
	     * // => objects for ['barney', 'fred', 'pebbles']
	     */
	    function dropRightWhile(array, predicate) {
	      return (array && array.length)
	        ? baseWhile(array, getIteratee(predicate, 3), true, true)
	        : [];
	    }

	    /**
	     * Creates a slice of `array` excluding elements dropped from the beginning.
	     * Elements are dropped until `predicate` returns falsey. The predicate is
	     * invoked with three arguments: (value, index, array).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': false },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': true }
	     * ];
	     *
	     * _.dropWhile(users, function(o) { return !o.active; });
	     * // => objects for ['pebbles']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.dropWhile(users, { 'user': 'barney', 'active': false });
	     * // => objects for ['fred', 'pebbles']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.dropWhile(users, ['active', false]);
	     * // => objects for ['pebbles']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.dropWhile(users, 'active');
	     * // => objects for ['barney', 'fred', 'pebbles']
	     */
	    function dropWhile(array, predicate) {
	      return (array && array.length)
	        ? baseWhile(array, getIteratee(predicate, 3), true)
	        : [];
	    }

	    /**
	     * Fills elements of `array` with `value` from `start` up to, but not
	     * including, `end`.
	     *
	     * **Note:** This method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.2.0
	     * @category Array
	     * @param {Array} array The array to fill.
	     * @param {*} value The value to fill `array` with.
	     * @param {number} [start=0] The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [1, 2, 3];
	     *
	     * _.fill(array, 'a');
	     * console.log(array);
	     * // => ['a', 'a', 'a']
	     *
	     * _.fill(Array(3), 2);
	     * // => [2, 2, 2]
	     *
	     * _.fill([4, 6, 8, 10], '*', 1, 3);
	     * // => [4, '*', '*', 10]
	     */
	    function fill(array, value, start, end) {
	      var length = array == null ? 0 : array.length;
	      if (!length) {
	        return [];
	      }
	      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
	        start = 0;
	        end = length;
	      }
	      return baseFill(array, value, start, end);
	    }

	    /**
	     * This method is like `_.find` except that it returns the index of the first
	     * element `predicate` returns truthy for instead of the element itself.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.1.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @param {number} [fromIndex=0] The index to search from.
	     * @returns {number} Returns the index of the found element, else `-1`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': false },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': true }
	     * ];
	     *
	     * _.findIndex(users, function(o) { return o.user == 'barney'; });
	     * // => 0
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.findIndex(users, { 'user': 'fred', 'active': false });
	     * // => 1
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.findIndex(users, ['active', false]);
	     * // => 0
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.findIndex(users, 'active');
	     * // => 2
	     */
	    function findIndex(array, predicate, fromIndex) {
	      var length = array == null ? 0 : array.length;
	      if (!length) {
	        return -1;
	      }
	      var index = fromIndex == null ? 0 : toInteger(fromIndex);
	      if (index < 0) {
	        index = nativeMax(length + index, 0);
	      }
	      return baseFindIndex(array, getIteratee(predicate, 3), index);
	    }

	    /**
	     * This method is like `_.findIndex` except that it iterates over elements
	     * of `collection` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @param {number} [fromIndex=array.length-1] The index to search from.
	     * @returns {number} Returns the index of the found element, else `-1`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': true },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': false }
	     * ];
	     *
	     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
	     * // => 2
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.findLastIndex(users, { 'user': 'barney', 'active': true });
	     * // => 0
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.findLastIndex(users, ['active', false]);
	     * // => 2
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.findLastIndex(users, 'active');
	     * // => 0
	     */
	    function findLastIndex(array, predicate, fromIndex) {
	      var length = array == null ? 0 : array.length;
	      if (!length) {
	        return -1;
	      }
	      var index = length - 1;
	      if (fromIndex !== undefined) {
	        index = toInteger(fromIndex);
	        index = fromIndex < 0
	          ? nativeMax(length + index, 0)
	          : nativeMin(index, length - 1);
	      }
	      return baseFindIndex(array, getIteratee(predicate, 3), index, true);
	    }

	    /**
	     * Flattens `array` a single level deep.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to flatten.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * _.flatten([1, [2, [3, [4]], 5]]);
	     * // => [1, 2, [3, [4]], 5]
	     */
	    function flatten(array) {
	      var length = array == null ? 0 : array.length;
	      return length ? baseFlatten(array, 1) : [];
	    }

	    /**
	     * Recursively flattens `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to flatten.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * _.flattenDeep([1, [2, [3, [4]], 5]]);
	     * // => [1, 2, 3, 4, 5]
	     */
	    function flattenDeep(array) {
	      var length = array == null ? 0 : array.length;
	      return length ? baseFlatten(array, INFINITY) : [];
	    }

	    /**
	     * Recursively flatten `array` up to `depth` times.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.4.0
	     * @category Array
	     * @param {Array} array The array to flatten.
	     * @param {number} [depth=1] The maximum recursion depth.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * var array = [1, [2, [3, [4]], 5]];
	     *
	     * _.flattenDepth(array, 1);
	     * // => [1, 2, [3, [4]], 5]
	     *
	     * _.flattenDepth(array, 2);
	     * // => [1, 2, 3, [4], 5]
	     */
	    function flattenDepth(array, depth) {
	      var length = array == null ? 0 : array.length;
	      if (!length) {
	        return [];
	      }
	      depth = depth === undefined ? 1 : toInteger(depth);
	      return baseFlatten(array, depth);
	    }

	    /**
	     * The inverse of `_.toPairs`; this method returns an object composed
	     * from key-value `pairs`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} pairs The key-value pairs.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * _.fromPairs([['a', 1], ['b', 2]]);
	     * // => { 'a': 1, 'b': 2 }
	     */
	    function fromPairs(pairs) {
	      var index = -1,
	          length = pairs == null ? 0 : pairs.length,
	          result = {};

	      while (++index < length) {
	        var pair = pairs[index];
	        result[pair[0]] = pair[1];
	      }
	      return result;
	    }

	    /**
	     * Gets the first element of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @alias first
	     * @category Array
	     * @param {Array} array The array to query.
	     * @returns {*} Returns the first element of `array`.
	     * @example
	     *
	     * _.head([1, 2, 3]);
	     * // => 1
	     *
	     * _.head([]);
	     * // => undefined
	     */
	    function head(array) {
	      return (array && array.length) ? array[0] : undefined;
	    }

	    /**
	     * Gets the index at which the first occurrence of `value` is found in `array`
	     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons. If `fromIndex` is negative, it's used as the
	     * offset from the end of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {*} value The value to search for.
	     * @param {number} [fromIndex=0] The index to search from.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     * @example
	     *
	     * _.indexOf([1, 2, 1, 2], 2);
	     * // => 1
	     *
	     * // Search from the `fromIndex`.
	     * _.indexOf([1, 2, 1, 2], 2, 2);
	     * // => 3
	     */
	    function indexOf(array, value, fromIndex) {
	      var length = array == null ? 0 : array.length;
	      if (!length) {
	        return -1;
	      }
	      var index = fromIndex == null ? 0 : toInteger(fromIndex);
	      if (index < 0) {
	        index = nativeMax(length + index, 0);
	      }
	      return baseIndexOf(array, value, index);
	    }

	    /**
	     * Gets all but the last element of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.initial([1, 2, 3]);
	     * // => [1, 2]
	     */
	    function initial(array) {
	      var length = array == null ? 0 : array.length;
	      return length ? baseSlice(array, 0, -1) : [];
	    }

	    /**
	     * Creates an array of unique values that are included in all given arrays
	     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons. The order and references of result values are
	     * determined by the first array.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @returns {Array} Returns the new array of intersecting values.
	     * @example
	     *
	     * _.intersection([2, 1], [2, 3]);
	     * // => [2]
	     */
	    var intersection = baseRest(function(arrays) {
	      var mapped = arrayMap(arrays, castArrayLikeObject);
	      return (mapped.length && mapped[0] === arrays[0])
	        ? baseIntersection(mapped)
	        : [];
	    });

	    /**
	     * This method is like `_.intersection` except that it accepts `iteratee`
	     * which is invoked for each element of each `arrays` to generate the criterion
	     * by which they're compared. The order and references of result values are
	     * determined by the first array. The iteratee is invoked with one argument:
	     * (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {Array} Returns the new array of intersecting values.
	     * @example
	     *
	     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);
	     * // => [2.1]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
	     * // => [{ 'x': 1 }]
	     */
	    var intersectionBy = baseRest(function(arrays) {
	      var iteratee = last(arrays),
	          mapped = arrayMap(arrays, castArrayLikeObject);

	      if (iteratee === last(mapped)) {
	        iteratee = undefined;
	      } else {
	        mapped.pop();
	      }
	      return (mapped.length && mapped[0] === arrays[0])
	        ? baseIntersection(mapped, getIteratee(iteratee, 2))
	        : [];
	    });

	    /**
	     * This method is like `_.intersection` except that it accepts `comparator`
	     * which is invoked to compare elements of `arrays`. The order and references
	     * of result values are determined by the first array. The comparator is
	     * invoked with two arguments: (arrVal, othVal).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of intersecting values.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
	     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
	     *
	     * _.intersectionWith(objects, others, _.isEqual);
	     * // => [{ 'x': 1, 'y': 2 }]
	     */
	    var intersectionWith = baseRest(function(arrays) {
	      var comparator = last(arrays),
	          mapped = arrayMap(arrays, castArrayLikeObject);

	      comparator = typeof comparator == 'function' ? comparator : undefined;
	      if (comparator) {
	        mapped.pop();
	      }
	      return (mapped.length && mapped[0] === arrays[0])
	        ? baseIntersection(mapped, undefined, comparator)
	        : [];
	    });

	    /**
	     * Converts all elements in `array` into a string separated by `separator`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to convert.
	     * @param {string} [separator=','] The element separator.
	     * @returns {string} Returns the joined string.
	     * @example
	     *
	     * _.join(['a', 'b', 'c'], '~');
	     * // => 'a~b~c'
	     */
	    function join(array, separator) {
	      return array == null ? '' : nativeJoin.call(array, separator);
	    }

	    /**
	     * Gets the last element of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @returns {*} Returns the last element of `array`.
	     * @example
	     *
	     * _.last([1, 2, 3]);
	     * // => 3
	     */
	    function last(array) {
	      var length = array == null ? 0 : array.length;
	      return length ? array[length - 1] : undefined;
	    }

	    /**
	     * This method is like `_.indexOf` except that it iterates over elements of
	     * `array` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {*} value The value to search for.
	     * @param {number} [fromIndex=array.length-1] The index to search from.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     * @example
	     *
	     * _.lastIndexOf([1, 2, 1, 2], 2);
	     * // => 3
	     *
	     * // Search from the `fromIndex`.
	     * _.lastIndexOf([1, 2, 1, 2], 2, 2);
	     * // => 1
	     */
	    function lastIndexOf(array, value, fromIndex) {
	      var length = array == null ? 0 : array.length;
	      if (!length) {
	        return -1;
	      }
	      var index = length;
	      if (fromIndex !== undefined) {
	        index = toInteger(fromIndex);
	        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
	      }
	      return value === value
	        ? strictLastIndexOf(array, value, index)
	        : baseFindIndex(array, baseIsNaN, index, true);
	    }

	    /**
	     * Gets the element at index `n` of `array`. If `n` is negative, the nth
	     * element from the end is returned.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.11.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=0] The index of the element to return.
	     * @returns {*} Returns the nth element of `array`.
	     * @example
	     *
	     * var array = ['a', 'b', 'c', 'd'];
	     *
	     * _.nth(array, 1);
	     * // => 'b'
	     *
	     * _.nth(array, -2);
	     * // => 'c';
	     */
	    function nth(array, n) {
	      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;
	    }

	    /**
	     * Removes all given values from `array` using
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons.
	     *
	     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
	     * to remove elements from an array by predicate.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {...*} [values] The values to remove.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
	     *
	     * _.pull(array, 'a', 'c');
	     * console.log(array);
	     * // => ['b', 'b']
	     */
	    var pull = baseRest(pullAll);

	    /**
	     * This method is like `_.pull` except that it accepts an array of values to remove.
	     *
	     * **Note:** Unlike `_.difference`, this method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {Array} values The values to remove.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
	     *
	     * _.pullAll(array, ['a', 'c']);
	     * console.log(array);
	     * // => ['b', 'b']
	     */
	    function pullAll(array, values) {
	      return (array && array.length && values && values.length)
	        ? basePullAll(array, values)
	        : array;
	    }

	    /**
	     * This method is like `_.pullAll` except that it accepts `iteratee` which is
	     * invoked for each element of `array` and `values` to generate the criterion
	     * by which they're compared. The iteratee is invoked with one argument: (value).
	     *
	     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {Array} values The values to remove.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];
	     *
	     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');
	     * console.log(array);
	     * // => [{ 'x': 2 }]
	     */
	    function pullAllBy(array, values, iteratee) {
	      return (array && array.length && values && values.length)
	        ? basePullAll(array, values, getIteratee(iteratee, 2))
	        : array;
	    }

	    /**
	     * This method is like `_.pullAll` except that it accepts `comparator` which
	     * is invoked to compare elements of `array` to `values`. The comparator is
	     * invoked with two arguments: (arrVal, othVal).
	     *
	     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.6.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {Array} values The values to remove.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];
	     *
	     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);
	     * console.log(array);
	     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]
	     */
	    function pullAllWith(array, values, comparator) {
	      return (array && array.length && values && values.length)
	        ? basePullAll(array, values, undefined, comparator)
	        : array;
	    }

	    /**
	     * Removes elements from `array` corresponding to `indexes` and returns an
	     * array of removed elements.
	     *
	     * **Note:** Unlike `_.at`, this method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {...(number|number[])} [indexes] The indexes of elements to remove.
	     * @returns {Array} Returns the new array of removed elements.
	     * @example
	     *
	     * var array = ['a', 'b', 'c', 'd'];
	     * var pulled = _.pullAt(array, [1, 3]);
	     *
	     * console.log(array);
	     * // => ['a', 'c']
	     *
	     * console.log(pulled);
	     * // => ['b', 'd']
	     */
	    var pullAt = flatRest(function(array, indexes) {
	      var length = array == null ? 0 : array.length,
	          result = baseAt(array, indexes);

	      basePullAt(array, arrayMap(indexes, function(index) {
	        return isIndex(index, length) ? +index : index;
	      }).sort(compareAscending));

	      return result;
	    });

	    /**
	     * Removes all elements from `array` that `predicate` returns truthy for
	     * and returns an array of the removed elements. The predicate is invoked
	     * with three arguments: (value, index, array).
	     *
	     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
	     * to pull elements from an array by value.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the new array of removed elements.
	     * @example
	     *
	     * var array = [1, 2, 3, 4];
	     * var evens = _.remove(array, function(n) {
	     *   return n % 2 == 0;
	     * });
	     *
	     * console.log(array);
	     * // => [1, 3]
	     *
	     * console.log(evens);
	     * // => [2, 4]
	     */
	    function remove(array, predicate) {
	      var result = [];
	      if (!(array && array.length)) {
	        return result;
	      }
	      var index = -1,
	          indexes = [],
	          length = array.length;

	      predicate = getIteratee(predicate, 3);
	      while (++index < length) {
	        var value = array[index];
	        if (predicate(value, index, array)) {
	          result.push(value);
	          indexes.push(index);
	        }
	      }
	      basePullAt(array, indexes);
	      return result;
	    }

	    /**
	     * Reverses `array` so that the first element becomes the last, the second
	     * element becomes the second to last, and so on.
	     *
	     * **Note:** This method mutates `array` and is based on
	     * [`Array#reverse`](https://mdn.io/Array/reverse).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [1, 2, 3];
	     *
	     * _.reverse(array);
	     * // => [3, 2, 1]
	     *
	     * console.log(array);
	     * // => [3, 2, 1]
	     */
	    function reverse(array) {
	      return array == null ? array : nativeReverse.call(array);
	    }

	    /**
	     * Creates a slice of `array` from `start` up to, but not including, `end`.
	     *
	     * **Note:** This method is used instead of
	     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are
	     * returned.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to slice.
	     * @param {number} [start=0] The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns the slice of `array`.
	     */
	    function slice(array, start, end) {
	      var length = array == null ? 0 : array.length;
	      if (!length) {
	        return [];
	      }
	      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {
	        start = 0;
	        end = length;
	      }
	      else {
	        start = start == null ? 0 : toInteger(start);
	        end = end === undefined ? length : toInteger(end);
	      }
	      return baseSlice(array, start, end);
	    }

	    /**
	     * Uses a binary search to determine the lowest index at which `value`
	     * should be inserted into `array` in order to maintain its sort order.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     * @example
	     *
	     * _.sortedIndex([30, 50], 40);
	     * // => 1
	     */
	    function sortedIndex(array, value) {
	      return baseSortedIndex(array, value);
	    }

	    /**
	     * This method is like `_.sortedIndex` except that it accepts `iteratee`
	     * which is invoked for `value` and each element of `array` to compute their
	     * sort ranking. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     * @example
	     *
	     * var objects = [{ 'x': 4 }, { 'x': 5 }];
	     *
	     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
	     * // => 0
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');
	     * // => 0
	     */
	    function sortedIndexBy(array, value, iteratee) {
	      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));
	    }

	    /**
	     * This method is like `_.indexOf` except that it performs a binary
	     * search on a sorted `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {*} value The value to search for.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     * @example
	     *
	     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);
	     * // => 1
	     */
	    function sortedIndexOf(array, value) {
	      var length = array == null ? 0 : array.length;
	      if (length) {
	        var index = baseSortedIndex(array, value);
	        if (index < length && eq(array[index], value)) {
	          return index;
	        }
	      }
	      return -1;
	    }

	    /**
	     * This method is like `_.sortedIndex` except that it returns the highest
	     * index at which `value` should be inserted into `array` in order to
	     * maintain its sort order.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     * @example
	     *
	     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);
	     * // => 4
	     */
	    function sortedLastIndex(array, value) {
	      return baseSortedIndex(array, value, true);
	    }

	    /**
	     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`
	     * which is invoked for `value` and each element of `array` to compute their
	     * sort ranking. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     * @example
	     *
	     * var objects = [{ 'x': 4 }, { 'x': 5 }];
	     *
	     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
	     * // => 1
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');
	     * // => 1
	     */
	    function sortedLastIndexBy(array, value, iteratee) {
	      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);
	    }

	    /**
	     * This method is like `_.lastIndexOf` except that it performs a binary
	     * search on a sorted `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {*} value The value to search for.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     * @example
	     *
	     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);
	     * // => 3
	     */
	    function sortedLastIndexOf(array, value) {
	      var length = array == null ? 0 : array.length;
	      if (length) {
	        var index = baseSortedIndex(array, value, true) - 1;
	        if (eq(array[index], value)) {
	          return index;
	        }
	      }
	      return -1;
	    }

	    /**
	     * This method is like `_.uniq` except that it's designed and optimized
	     * for sorted arrays.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * _.sortedUniq([1, 1, 2]);
	     * // => [1, 2]
	     */
	    function sortedUniq(array) {
	      return (array && array.length)
	        ? baseSortedUniq(array)
	        : [];
	    }

	    /**
	     * This method is like `_.uniqBy` except that it's designed and optimized
	     * for sorted arrays.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);
	     * // => [1.1, 2.3]
	     */
	    function sortedUniqBy(array, iteratee) {
	      return (array && array.length)
	        ? baseSortedUniq(array, getIteratee(iteratee, 2))
	        : [];
	    }

	    /**
	     * Gets all but the first element of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.tail([1, 2, 3]);
	     * // => [2, 3]
	     */
	    function tail(array) {
	      var length = array == null ? 0 : array.length;
	      return length ? baseSlice(array, 1, length) : [];
	    }

	    /**
	     * Creates a slice of `array` with `n` elements taken from the beginning.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=1] The number of elements to take.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.take([1, 2, 3]);
	     * // => [1]
	     *
	     * _.take([1, 2, 3], 2);
	     * // => [1, 2]
	     *
	     * _.take([1, 2, 3], 5);
	     * // => [1, 2, 3]
	     *
	     * _.take([1, 2, 3], 0);
	     * // => []
	     */
	    function take(array, n, guard) {
	      if (!(array && array.length)) {
	        return [];
	      }
	      n = (guard || n === undefined) ? 1 : toInteger(n);
	      return baseSlice(array, 0, n < 0 ? 0 : n);
	    }

	    /**
	     * Creates a slice of `array` with `n` elements taken from the end.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=1] The number of elements to take.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.takeRight([1, 2, 3]);
	     * // => [3]
	     *
	     * _.takeRight([1, 2, 3], 2);
	     * // => [2, 3]
	     *
	     * _.takeRight([1, 2, 3], 5);
	     * // => [1, 2, 3]
	     *
	     * _.takeRight([1, 2, 3], 0);
	     * // => []
	     */
	    function takeRight(array, n, guard) {
	      var length = array == null ? 0 : array.length;
	      if (!length) {
	        return [];
	      }
	      n = (guard || n === undefined) ? 1 : toInteger(n);
	      n = length - n;
	      return baseSlice(array, n < 0 ? 0 : n, length);
	    }

	    /**
	     * Creates a slice of `array` with elements taken from the end. Elements are
	     * taken until `predicate` returns falsey. The predicate is invoked with
	     * three arguments: (value, index, array).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': true },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': false }
	     * ];
	     *
	     * _.takeRightWhile(users, function(o) { return !o.active; });
	     * // => objects for ['fred', 'pebbles']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });
	     * // => objects for ['pebbles']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.takeRightWhile(users, ['active', false]);
	     * // => objects for ['fred', 'pebbles']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.takeRightWhile(users, 'active');
	     * // => []
	     */
	    function takeRightWhile(array, predicate) {
	      return (array && array.length)
	        ? baseWhile(array, getIteratee(predicate, 3), false, true)
	        : [];
	    }

	    /**
	     * Creates a slice of `array` with elements taken from the beginning. Elements
	     * are taken until `predicate` returns falsey. The predicate is invoked with
	     * three arguments: (value, index, array).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': false },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': true }
	     * ];
	     *
	     * _.takeWhile(users, function(o) { return !o.active; });
	     * // => objects for ['barney', 'fred']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.takeWhile(users, { 'user': 'barney', 'active': false });
	     * // => objects for ['barney']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.takeWhile(users, ['active', false]);
	     * // => objects for ['barney', 'fred']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.takeWhile(users, 'active');
	     * // => []
	     */
	    function takeWhile(array, predicate) {
	      return (array && array.length)
	        ? baseWhile(array, getIteratee(predicate, 3))
	        : [];
	    }

	    /**
	     * Creates an array of unique values, in order, from all given arrays using
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @returns {Array} Returns the new array of combined values.
	     * @example
	     *
	     * _.union([2], [1, 2]);
	     * // => [2, 1]
	     */
	    var union = baseRest(function(arrays) {
	      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
	    });

	    /**
	     * This method is like `_.union` except that it accepts `iteratee` which is
	     * invoked for each element of each `arrays` to generate the criterion by
	     * which uniqueness is computed. Result values are chosen from the first
	     * array in which the value occurs. The iteratee is invoked with one argument:
	     * (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {Array} Returns the new array of combined values.
	     * @example
	     *
	     * _.unionBy([2.1], [1.2, 2.3], Math.floor);
	     * // => [2.1, 1.2]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
	     * // => [{ 'x': 1 }, { 'x': 2 }]
	     */
	    var unionBy = baseRest(function(arrays) {
	      var iteratee = last(arrays);
	      if (isArrayLikeObject(iteratee)) {
	        iteratee = undefined;
	      }
	      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));
	    });

	    /**
	     * This method is like `_.union` except that it accepts `comparator` which
	     * is invoked to compare elements of `arrays`. Result values are chosen from
	     * the first array in which the value occurs. The comparator is invoked
	     * with two arguments: (arrVal, othVal).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of combined values.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
	     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
	     *
	     * _.unionWith(objects, others, _.isEqual);
	     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
	     */
	    var unionWith = baseRest(function(arrays) {
	      var comparator = last(arrays);
	      comparator = typeof comparator == 'function' ? comparator : undefined;
	      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);
	    });

	    /**
	     * Creates a duplicate-free version of an array, using
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons, in which only the first occurrence of each element
	     * is kept. The order of result values is determined by the order they occur
	     * in the array.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * _.uniq([2, 1, 2]);
	     * // => [2, 1]
	     */
	    function uniq(array) {
	      return (array && array.length) ? baseUniq(array) : [];
	    }

	    /**
	     * This method is like `_.uniq` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the criterion by which
	     * uniqueness is computed. The order of result values is determined by the
	     * order they occur in the array. The iteratee is invoked with one argument:
	     * (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
	     * // => [2.1, 1.2]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
	     * // => [{ 'x': 1 }, { 'x': 2 }]
	     */
	    function uniqBy(array, iteratee) {
	      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];
	    }

	    /**
	     * This method is like `_.uniq` except that it accepts `comparator` which
	     * is invoked to compare elements of `array`. The order of result values is
	     * determined by the order they occur in the array.The comparator is invoked
	     * with two arguments: (arrVal, othVal).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];
	     *
	     * _.uniqWith(objects, _.isEqual);
	     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
	     */
	    function uniqWith(array, comparator) {
	      comparator = typeof comparator == 'function' ? comparator : undefined;
	      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];
	    }

	    /**
	     * This method is like `_.zip` except that it accepts an array of grouped
	     * elements and creates an array regrouping the elements to their pre-zip
	     * configuration.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.2.0
	     * @category Array
	     * @param {Array} array The array of grouped elements to process.
	     * @returns {Array} Returns the new array of regrouped elements.
	     * @example
	     *
	     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);
	     * // => [['a', 1, true], ['b', 2, false]]
	     *
	     * _.unzip(zipped);
	     * // => [['a', 'b'], [1, 2], [true, false]]
	     */
	    function unzip(array) {
	      if (!(array && array.length)) {
	        return [];
	      }
	      var length = 0;
	      array = arrayFilter(array, function(group) {
	        if (isArrayLikeObject(group)) {
	          length = nativeMax(group.length, length);
	          return true;
	        }
	      });
	      return baseTimes(length, function(index) {
	        return arrayMap(array, baseProperty(index));
	      });
	    }

	    /**
	     * This method is like `_.unzip` except that it accepts `iteratee` to specify
	     * how regrouped values should be combined. The iteratee is invoked with the
	     * elements of each group: (...group).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.8.0
	     * @category Array
	     * @param {Array} array The array of grouped elements to process.
	     * @param {Function} [iteratee=_.identity] The function to combine
	     *  regrouped values.
	     * @returns {Array} Returns the new array of regrouped elements.
	     * @example
	     *
	     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
	     * // => [[1, 10, 100], [2, 20, 200]]
	     *
	     * _.unzipWith(zipped, _.add);
	     * // => [3, 30, 300]
	     */
	    function unzipWith(array, iteratee) {
	      if (!(array && array.length)) {
	        return [];
	      }
	      var result = unzip(array);
	      if (iteratee == null) {
	        return result;
	      }
	      return arrayMap(result, function(group) {
	        return apply(iteratee, undefined, group);
	      });
	    }

	    /**
	     * Creates an array excluding all given values using
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons.
	     *
	     * **Note:** Unlike `_.pull`, this method returns a new array.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {...*} [values] The values to exclude.
	     * @returns {Array} Returns the new array of filtered values.
	     * @see _.difference, _.xor
	     * @example
	     *
	     * _.without([2, 1, 2, 3], 1, 2);
	     * // => [3]
	     */
	    var without = baseRest(function(array, values) {
	      return isArrayLikeObject(array)
	        ? baseDifference(array, values)
	        : [];
	    });

	    /**
	     * Creates an array of unique values that is the
	     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
	     * of the given arrays. The order of result values is determined by the order
	     * they occur in the arrays.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @returns {Array} Returns the new array of filtered values.
	     * @see _.difference, _.without
	     * @example
	     *
	     * _.xor([2, 1], [2, 3]);
	     * // => [1, 3]
	     */
	    var xor = baseRest(function(arrays) {
	      return baseXor(arrayFilter(arrays, isArrayLikeObject));
	    });

	    /**
	     * This method is like `_.xor` except that it accepts `iteratee` which is
	     * invoked for each element of each `arrays` to generate the criterion by
	     * which by which they're compared. The order of result values is determined
	     * by the order they occur in the arrays. The iteratee is invoked with one
	     * argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);
	     * // => [1.2, 3.4]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
	     * // => [{ 'x': 2 }]
	     */
	    var xorBy = baseRest(function(arrays) {
	      var iteratee = last(arrays);
	      if (isArrayLikeObject(iteratee)) {
	        iteratee = undefined;
	      }
	      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));
	    });

	    /**
	     * This method is like `_.xor` except that it accepts `comparator` which is
	     * invoked to compare elements of `arrays`. The order of result values is
	     * determined by the order they occur in the arrays. The comparator is invoked
	     * with two arguments: (arrVal, othVal).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
	     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
	     *
	     * _.xorWith(objects, others, _.isEqual);
	     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
	     */
	    var xorWith = baseRest(function(arrays) {
	      var comparator = last(arrays);
	      comparator = typeof comparator == 'function' ? comparator : undefined;
	      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);
	    });

	    /**
	     * Creates an array of grouped elements, the first of which contains the
	     * first elements of the given arrays, the second of which contains the
	     * second elements of the given arrays, and so on.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to process.
	     * @returns {Array} Returns the new array of grouped elements.
	     * @example
	     *
	     * _.zip(['a', 'b'], [1, 2], [true, false]);
	     * // => [['a', 1, true], ['b', 2, false]]
	     */
	    var zip = baseRest(unzip);

	    /**
	     * This method is like `_.fromPairs` except that it accepts two arrays,
	     * one of property identifiers and one of corresponding values.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.4.0
	     * @category Array
	     * @param {Array} [props=[]] The property identifiers.
	     * @param {Array} [values=[]] The property values.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * _.zipObject(['a', 'b'], [1, 2]);
	     * // => { 'a': 1, 'b': 2 }
	     */
	    function zipObject(props, values) {
	      return baseZipObject(props || [], values || [], assignValue);
	    }

	    /**
	     * This method is like `_.zipObject` except that it supports property paths.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.1.0
	     * @category Array
	     * @param {Array} [props=[]] The property identifiers.
	     * @param {Array} [values=[]] The property values.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);
	     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }
	     */
	    function zipObjectDeep(props, values) {
	      return baseZipObject(props || [], values || [], baseSet);
	    }

	    /**
	     * This method is like `_.zip` except that it accepts `iteratee` to specify
	     * how grouped values should be combined. The iteratee is invoked with the
	     * elements of each group: (...group).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.8.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to process.
	     * @param {Function} [iteratee=_.identity] The function to combine
	     *  grouped values.
	     * @returns {Array} Returns the new array of grouped elements.
	     * @example
	     *
	     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {
	     *   return a + b + c;
	     * });
	     * // => [111, 222]
	     */
	    var zipWith = baseRest(function(arrays) {
	      var length = arrays.length,
	          iteratee = length > 1 ? arrays[length - 1] : undefined;

	      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;
	      return unzipWith(arrays, iteratee);
	    });

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates a `lodash` wrapper instance that wraps `value` with explicit method
	     * chain sequences enabled. The result of such sequences must be unwrapped
	     * with `_#value`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.3.0
	     * @category Seq
	     * @param {*} value The value to wrap.
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'age': 36 },
	     *   { 'user': 'fred',    'age': 40 },
	     *   { 'user': 'pebbles', 'age': 1 }
	     * ];
	     *
	     * var youngest = _
	     *   .chain(users)
	     *   .sortBy('age')
	     *   .map(function(o) {
	     *     return o.user + ' is ' + o.age;
	     *   })
	     *   .head()
	     *   .value();
	     * // => 'pebbles is 1'
	     */
	    function chain(value) {
	      var result = lodash(value);
	      result.__chain__ = true;
	      return result;
	    }

	    /**
	     * This method invokes `interceptor` and returns `value`. The interceptor
	     * is invoked with one argument; (value). The purpose of this method is to
	     * "tap into" a method chain sequence in order to modify intermediate results.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Seq
	     * @param {*} value The value to provide to `interceptor`.
	     * @param {Function} interceptor The function to invoke.
	     * @returns {*} Returns `value`.
	     * @example
	     *
	     * _([1, 2, 3])
	     *  .tap(function(array) {
	     *    // Mutate input array.
	     *    array.pop();
	     *  })
	     *  .reverse()
	     *  .value();
	     * // => [2, 1]
	     */
	    function tap(value, interceptor) {
	      interceptor(value);
	      return value;
	    }

	    /**
	     * This method is like `_.tap` except that it returns the result of `interceptor`.
	     * The purpose of this method is to "pass thru" values replacing intermediate
	     * results in a method chain sequence.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Seq
	     * @param {*} value The value to provide to `interceptor`.
	     * @param {Function} interceptor The function to invoke.
	     * @returns {*} Returns the result of `interceptor`.
	     * @example
	     *
	     * _('  abc  ')
	     *  .chain()
	     *  .trim()
	     *  .thru(function(value) {
	     *    return [value];
	     *  })
	     *  .value();
	     * // => ['abc']
	     */
	    function thru(value, interceptor) {
	      return interceptor(value);
	    }

	    /**
	     * This method is the wrapper version of `_.at`.
	     *
	     * @name at
	     * @memberOf _
	     * @since 1.0.0
	     * @category Seq
	     * @param {...(string|string[])} [paths] The property paths to pick.
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
	     *
	     * _(object).at(['a[0].b.c', 'a[1]']).value();
	     * // => [3, 4]
	     */
	    var wrapperAt = flatRest(function(paths) {
	      var length = paths.length,
	          start = length ? paths[0] : 0,
	          value = this.__wrapped__,
	          interceptor = function(object) { return baseAt(object, paths); };

	      if (length > 1 || this.__actions__.length ||
	          !(value instanceof LazyWrapper) || !isIndex(start)) {
	        return this.thru(interceptor);
	      }
	      value = value.slice(start, +start + (length ? 1 : 0));
	      value.__actions__.push({
	        'func': thru,
	        'args': [interceptor],
	        'thisArg': undefined
	      });
	      return new LodashWrapper(value, this.__chain__).thru(function(array) {
	        if (length && !array.length) {
	          array.push(undefined);
	        }
	        return array;
	      });
	    });

	    /**
	     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.
	     *
	     * @name chain
	     * @memberOf _
	     * @since 0.1.0
	     * @category Seq
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36 },
	     *   { 'user': 'fred',   'age': 40 }
	     * ];
	     *
	     * // A sequence without explicit chaining.
	     * _(users).head();
	     * // => { 'user': 'barney', 'age': 36 }
	     *
	     * // A sequence with explicit chaining.
	     * _(users)
	     *   .chain()
	     *   .head()
	     *   .pick('user')
	     *   .value();
	     * // => { 'user': 'barney' }
	     */
	    function wrapperChain() {
	      return chain(this);
	    }

	    /**
	     * Executes the chain sequence and returns the wrapped result.
	     *
	     * @name commit
	     * @memberOf _
	     * @since 3.2.0
	     * @category Seq
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var array = [1, 2];
	     * var wrapped = _(array).push(3);
	     *
	     * console.log(array);
	     * // => [1, 2]
	     *
	     * wrapped = wrapped.commit();
	     * console.log(array);
	     * // => [1, 2, 3]
	     *
	     * wrapped.last();
	     * // => 3
	     *
	     * console.log(array);
	     * // => [1, 2, 3]
	     */
	    function wrapperCommit() {
	      return new LodashWrapper(this.value(), this.__chain__);
	    }

	    /**
	     * Gets the next value on a wrapped object following the
	     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).
	     *
	     * @name next
	     * @memberOf _
	     * @since 4.0.0
	     * @category Seq
	     * @returns {Object} Returns the next iterator value.
	     * @example
	     *
	     * var wrapped = _([1, 2]);
	     *
	     * wrapped.next();
	     * // => { 'done': false, 'value': 1 }
	     *
	     * wrapped.next();
	     * // => { 'done': false, 'value': 2 }
	     *
	     * wrapped.next();
	     * // => { 'done': true, 'value': undefined }
	     */
	    function wrapperNext() {
	      if (this.__values__ === undefined) {
	        this.__values__ = toArray(this.value());
	      }
	      var done = this.__index__ >= this.__values__.length,
	          value = done ? undefined : this.__values__[this.__index__++];

	      return { 'done': done, 'value': value };
	    }

	    /**
	     * Enables the wrapper to be iterable.
	     *
	     * @name Symbol.iterator
	     * @memberOf _
	     * @since 4.0.0
	     * @category Seq
	     * @returns {Object} Returns the wrapper object.
	     * @example
	     *
	     * var wrapped = _([1, 2]);
	     *
	     * wrapped[Symbol.iterator]() === wrapped;
	     * // => true
	     *
	     * Array.from(wrapped);
	     * // => [1, 2]
	     */
	    function wrapperToIterator() {
	      return this;
	    }

	    /**
	     * Creates a clone of the chain sequence planting `value` as the wrapped value.
	     *
	     * @name plant
	     * @memberOf _
	     * @since 3.2.0
	     * @category Seq
	     * @param {*} value The value to plant.
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var wrapped = _([1, 2]).map(square);
	     * var other = wrapped.plant([3, 4]);
	     *
	     * other.value();
	     * // => [9, 16]
	     *
	     * wrapped.value();
	     * // => [1, 4]
	     */
	    function wrapperPlant(value) {
	      var result,
	          parent = this;

	      while (parent instanceof baseLodash) {
	        var clone = wrapperClone(parent);
	        clone.__index__ = 0;
	        clone.__values__ = undefined;
	        if (result) {
	          previous.__wrapped__ = clone;
	        } else {
	          result = clone;
	        }
	        var previous = clone;
	        parent = parent.__wrapped__;
	      }
	      previous.__wrapped__ = value;
	      return result;
	    }

	    /**
	     * This method is the wrapper version of `_.reverse`.
	     *
	     * **Note:** This method mutates the wrapped array.
	     *
	     * @name reverse
	     * @memberOf _
	     * @since 0.1.0
	     * @category Seq
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var array = [1, 2, 3];
	     *
	     * _(array).reverse().value()
	     * // => [3, 2, 1]
	     *
	     * console.log(array);
	     * // => [3, 2, 1]
	     */
	    function wrapperReverse() {
	      var value = this.__wrapped__;
	      if (value instanceof LazyWrapper) {
	        var wrapped = value;
	        if (this.__actions__.length) {
	          wrapped = new LazyWrapper(this);
	        }
	        wrapped = wrapped.reverse();
	        wrapped.__actions__.push({
	          'func': thru,
	          'args': [reverse],
	          'thisArg': undefined
	        });
	        return new LodashWrapper(wrapped, this.__chain__);
	      }
	      return this.thru(reverse);
	    }

	    /**
	     * Executes the chain sequence to resolve the unwrapped value.
	     *
	     * @name value
	     * @memberOf _
	     * @since 0.1.0
	     * @alias toJSON, valueOf
	     * @category Seq
	     * @returns {*} Returns the resolved unwrapped value.
	     * @example
	     *
	     * _([1, 2, 3]).value();
	     * // => [1, 2, 3]
	     */
	    function wrapperValue() {
	      return baseWrapperValue(this.__wrapped__, this.__actions__);
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates an object composed of keys generated from the results of running
	     * each element of `collection` thru `iteratee`. The corresponding value of
	     * each key is the number of times the key was returned by `iteratee`. The
	     * iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.5.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
	     * @returns {Object} Returns the composed aggregate object.
	     * @example
	     *
	     * _.countBy([6.1, 4.2, 6.3], Math.floor);
	     * // => { '4': 1, '6': 2 }
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.countBy(['one', 'two', 'three'], 'length');
	     * // => { '3': 2, '5': 1 }
	     */
	    var countBy = createAggregator(function(result, value, key) {
	      if (hasOwnProperty.call(result, key)) {
	        ++result[key];
	      } else {
	        baseAssignValue(result, key, 1);
	      }
	    });

	    /**
	     * Checks if `predicate` returns truthy for **all** elements of `collection`.
	     * Iteration is stopped once `predicate` returns falsey. The predicate is
	     * invoked with three arguments: (value, index|key, collection).
	     *
	     * **Note:** This method returns `true` for
	     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because
	     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
	     * elements of empty collections.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {boolean} Returns `true` if all elements pass the predicate check,
	     *  else `false`.
	     * @example
	     *
	     * _.every([true, 1, null, 'yes'], Boolean);
	     * // => false
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36, 'active': false },
	     *   { 'user': 'fred',   'age': 40, 'active': false }
	     * ];
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.every(users, { 'user': 'barney', 'active': false });
	     * // => false
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.every(users, ['active', false]);
	     * // => true
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.every(users, 'active');
	     * // => false
	     */
	    function every(collection, predicate, guard) {
	      var func = isArray(collection) ? arrayEvery : baseEvery;
	      if (guard && isIterateeCall(collection, predicate, guard)) {
	        predicate = undefined;
	      }
	      return func(collection, getIteratee(predicate, 3));
	    }

	    /**
	     * Iterates over elements of `collection`, returning an array of all elements
	     * `predicate` returns truthy for. The predicate is invoked with three
	     * arguments: (value, index|key, collection).
	     *
	     * **Note:** Unlike `_.remove`, this method returns a new array.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the new filtered array.
	     * @see _.reject
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36, 'active': true },
	     *   { 'user': 'fred',   'age': 40, 'active': false }
	     * ];
	     *
	     * _.filter(users, function(o) { return !o.active; });
	     * // => objects for ['fred']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.filter(users, { 'age': 36, 'active': true });
	     * // => objects for ['barney']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.filter(users, ['active', false]);
	     * // => objects for ['fred']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.filter(users, 'active');
	     * // => objects for ['barney']
	     */
	    function filter(collection, predicate) {
	      var func = isArray(collection) ? arrayFilter : baseFilter;
	      return func(collection, getIteratee(predicate, 3));
	    }

	    /**
	     * Iterates over elements of `collection`, returning the first element
	     * `predicate` returns truthy for. The predicate is invoked with three
	     * arguments: (value, index|key, collection).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to inspect.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @param {number} [fromIndex=0] The index to search from.
	     * @returns {*} Returns the matched element, else `undefined`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'age': 36, 'active': true },
	     *   { 'user': 'fred',    'age': 40, 'active': false },
	     *   { 'user': 'pebbles', 'age': 1,  'active': true }
	     * ];
	     *
	     * _.find(users, function(o) { return o.age < 40; });
	     * // => object for 'barney'
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.find(users, { 'age': 1, 'active': true });
	     * // => object for 'pebbles'
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.find(users, ['active', false]);
	     * // => object for 'fred'
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.find(users, 'active');
	     * // => object for 'barney'
	     */
	    var find = createFind(findIndex);

	    /**
	     * This method is like `_.find` except that it iterates over elements of
	     * `collection` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to inspect.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @param {number} [fromIndex=collection.length-1] The index to search from.
	     * @returns {*} Returns the matched element, else `undefined`.
	     * @example
	     *
	     * _.findLast([1, 2, 3, 4], function(n) {
	     *   return n % 2 == 1;
	     * });
	     * // => 3
	     */
	    var findLast = createFind(findLastIndex);

	    /**
	     * Creates a flattened array of values by running each element in `collection`
	     * thru `iteratee` and flattening the mapped results. The iteratee is invoked
	     * with three arguments: (value, index|key, collection).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * function duplicate(n) {
	     *   return [n, n];
	     * }
	     *
	     * _.flatMap([1, 2], duplicate);
	     * // => [1, 1, 2, 2]
	     */
	    function flatMap(collection, iteratee) {
	      return baseFlatten(map(collection, iteratee), 1);
	    }

	    /**
	     * This method is like `_.flatMap` except that it recursively flattens the
	     * mapped results.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * function duplicate(n) {
	     *   return [[[n, n]]];
	     * }
	     *
	     * _.flatMapDeep([1, 2], duplicate);
	     * // => [1, 1, 2, 2]
	     */
	    function flatMapDeep(collection, iteratee) {
	      return baseFlatten(map(collection, iteratee), INFINITY);
	    }

	    /**
	     * This method is like `_.flatMap` except that it recursively flattens the
	     * mapped results up to `depth` times.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @param {number} [depth=1] The maximum recursion depth.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * function duplicate(n) {
	     *   return [[[n, n]]];
	     * }
	     *
	     * _.flatMapDepth([1, 2], duplicate, 2);
	     * // => [[1, 1], [2, 2]]
	     */
	    function flatMapDepth(collection, iteratee, depth) {
	      depth = depth === undefined ? 1 : toInteger(depth);
	      return baseFlatten(map(collection, iteratee), depth);
	    }

	    /**
	     * Iterates over elements of `collection` and invokes `iteratee` for each element.
	     * The iteratee is invoked with three arguments: (value, index|key, collection).
	     * Iteratee functions may exit iteration early by explicitly returning `false`.
	     *
	     * **Note:** As with other "Collections" methods, objects with a "length"
	     * property are iterated like arrays. To avoid this behavior use `_.forIn`
	     * or `_.forOwn` for object iteration.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @alias each
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Array|Object} Returns `collection`.
	     * @see _.forEachRight
	     * @example
	     *
	     * _.forEach([1, 2], function(value) {
	     *   console.log(value);
	     * });
	     * // => Logs `1` then `2`.
	     *
	     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
	     */
	    function forEach(collection, iteratee) {
	      var func = isArray(collection) ? arrayEach : baseEach;
	      return func(collection, getIteratee(iteratee, 3));
	    }

	    /**
	     * This method is like `_.forEach` except that it iterates over elements of
	     * `collection` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @alias eachRight
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Array|Object} Returns `collection`.
	     * @see _.forEach
	     * @example
	     *
	     * _.forEachRight([1, 2], function(value) {
	     *   console.log(value);
	     * });
	     * // => Logs `2` then `1`.
	     */
	    function forEachRight(collection, iteratee) {
	      var func = isArray(collection) ? arrayEachRight : baseEachRight;
	      return func(collection, getIteratee(iteratee, 3));
	    }

	    /**
	     * Creates an object composed of keys generated from the results of running
	     * each element of `collection` thru `iteratee`. The order of grouped values
	     * is determined by the order they occur in `collection`. The corresponding
	     * value of each key is an array of elements responsible for generating the
	     * key. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
	     * @returns {Object} Returns the composed aggregate object.
	     * @example
	     *
	     * _.groupBy([6.1, 4.2, 6.3], Math.floor);
	     * // => { '4': [4.2], '6': [6.1, 6.3] }
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.groupBy(['one', 'two', 'three'], 'length');
	     * // => { '3': ['one', 'two'], '5': ['three'] }
	     */
	    var groupBy = createAggregator(function(result, value, key) {
	      if (hasOwnProperty.call(result, key)) {
	        result[key].push(value);
	      } else {
	        baseAssignValue(result, key, [value]);
	      }
	    });

	    /**
	     * Checks if `value` is in `collection`. If `collection` is a string, it's
	     * checked for a substring of `value`, otherwise
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * is used for equality comparisons. If `fromIndex` is negative, it's used as
	     * the offset from the end of `collection`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object|string} collection The collection to inspect.
	     * @param {*} value The value to search for.
	     * @param {number} [fromIndex=0] The index to search from.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
	     * @returns {boolean} Returns `true` if `value` is found, else `false`.
	     * @example
	     *
	     * _.includes([1, 2, 3], 1);
	     * // => true
	     *
	     * _.includes([1, 2, 3], 1, 2);
	     * // => false
	     *
	     * _.includes({ 'a': 1, 'b': 2 }, 1);
	     * // => true
	     *
	     * _.includes('abcd', 'bc');
	     * // => true
	     */
	    function includes(collection, value, fromIndex, guard) {
	      collection = isArrayLike(collection) ? collection : values(collection);
	      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;

	      var length = collection.length;
	      if (fromIndex < 0) {
	        fromIndex = nativeMax(length + fromIndex, 0);
	      }
	      return isString(collection)
	        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)
	        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);
	    }

	    /**
	     * Invokes the method at `path` of each element in `collection`, returning
	     * an array of the results of each invoked method. Any additional arguments
	     * are provided to each invoked method. If `path` is a function, it's invoked
	     * for, and `this` bound to, each element in `collection`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|string} path The path of the method to invoke or
	     *  the function invoked per iteration.
	     * @param {...*} [args] The arguments to invoke each method with.
	     * @returns {Array} Returns the array of results.
	     * @example
	     *
	     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');
	     * // => [[1, 5, 7], [1, 2, 3]]
	     *
	     * _.invokeMap([123, 456], String.prototype.split, '');
	     * // => [['1', '2', '3'], ['4', '5', '6']]
	     */
	    var invokeMap = baseRest(function(collection, path, args) {
	      var index = -1,
	          isFunc = typeof path == 'function',
	          result = isArrayLike(collection) ? Array(collection.length) : [];

	      baseEach(collection, function(value) {
	        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);
	      });
	      return result;
	    });

	    /**
	     * Creates an object composed of keys generated from the results of running
	     * each element of `collection` thru `iteratee`. The corresponding value of
	     * each key is the last element responsible for generating the key. The
	     * iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
	     * @returns {Object} Returns the composed aggregate object.
	     * @example
	     *
	     * var array = [
	     *   { 'dir': 'left', 'code': 97 },
	     *   { 'dir': 'right', 'code': 100 }
	     * ];
	     *
	     * _.keyBy(array, function(o) {
	     *   return String.fromCharCode(o.code);
	     * });
	     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
	     *
	     * _.keyBy(array, 'dir');
	     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
	     */
	    var keyBy = createAggregator(function(result, value, key) {
	      baseAssignValue(result, key, value);
	    });

	    /**
	     * Creates an array of values by running each element in `collection` thru
	     * `iteratee`. The iteratee is invoked with three arguments:
	     * (value, index|key, collection).
	     *
	     * Many lodash methods are guarded to work as iteratees for methods like
	     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
	     *
	     * The guarded methods are:
	     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
	     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
	     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
	     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the new mapped array.
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * _.map([4, 8], square);
	     * // => [16, 64]
	     *
	     * _.map({ 'a': 4, 'b': 8 }, square);
	     * // => [16, 64] (iteration order is not guaranteed)
	     *
	     * var users = [
	     *   { 'user': 'barney' },
	     *   { 'user': 'fred' }
	     * ];
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.map(users, 'user');
	     * // => ['barney', 'fred']
	     */
	    function map(collection, iteratee) {
	      var func = isArray(collection) ? arrayMap : baseMap;
	      return func(collection, getIteratee(iteratee, 3));
	    }

	    /**
	     * This method is like `_.sortBy` except that it allows specifying the sort
	     * orders of the iteratees to sort by. If `orders` is unspecified, all values
	     * are sorted in ascending order. Otherwise, specify an order of "desc" for
	     * descending or "asc" for ascending sort order of corresponding values.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
	     *  The iteratees to sort by.
	     * @param {string[]} [orders] The sort orders of `iteratees`.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
	     * @returns {Array} Returns the new sorted array.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'fred',   'age': 48 },
	     *   { 'user': 'barney', 'age': 34 },
	     *   { 'user': 'fred',   'age': 40 },
	     *   { 'user': 'barney', 'age': 36 }
	     * ];
	     *
	     * // Sort by `user` in ascending order and by `age` in descending order.
	     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
	     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
	     */
	    function orderBy(collection, iteratees, orders, guard) {
	      if (collection == null) {
	        return [];
	      }
	      if (!isArray(iteratees)) {
	        iteratees = iteratees == null ? [] : [iteratees];
	      }
	      orders = guard ? undefined : orders;
	      if (!isArray(orders)) {
	        orders = orders == null ? [] : [orders];
	      }
	      return baseOrderBy(collection, iteratees, orders);
	    }

	    /**
	     * Creates an array of elements split into two groups, the first of which
	     * contains elements `predicate` returns truthy for, the second of which
	     * contains elements `predicate` returns falsey for. The predicate is
	     * invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the array of grouped elements.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'age': 36, 'active': false },
	     *   { 'user': 'fred',    'age': 40, 'active': true },
	     *   { 'user': 'pebbles', 'age': 1,  'active': false }
	     * ];
	     *
	     * _.partition(users, function(o) { return o.active; });
	     * // => objects for [['fred'], ['barney', 'pebbles']]
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.partition(users, { 'age': 1, 'active': false });
	     * // => objects for [['pebbles'], ['barney', 'fred']]
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.partition(users, ['active', false]);
	     * // => objects for [['barney', 'pebbles'], ['fred']]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.partition(users, 'active');
	     * // => objects for [['fred'], ['barney', 'pebbles']]
	     */
	    var partition = createAggregator(function(result, value, key) {
	      result[key ? 0 : 1].push(value);
	    }, function() { return [[], []]; });

	    /**
	     * Reduces `collection` to a value which is the accumulated result of running
	     * each element in `collection` thru `iteratee`, where each successive
	     * invocation is supplied the return value of the previous. If `accumulator`
	     * is not given, the first element of `collection` is used as the initial
	     * value. The iteratee is invoked with four arguments:
	     * (accumulator, value, index|key, collection).
	     *
	     * Many lodash methods are guarded to work as iteratees for methods like
	     * `_.reduce`, `_.reduceRight`, and `_.transform`.
	     *
	     * The guarded methods are:
	     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
	     * and `sortBy`
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @param {*} [accumulator] The initial value.
	     * @returns {*} Returns the accumulated value.
	     * @see _.reduceRight
	     * @example
	     *
	     * _.reduce([1, 2], function(sum, n) {
	     *   return sum + n;
	     * }, 0);
	     * // => 3
	     *
	     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
	     *   (result[value] || (result[value] = [])).push(key);
	     *   return result;
	     * }, {});
	     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
	     */
	    function reduce(collection, iteratee, accumulator) {
	      var func = isArray(collection) ? arrayReduce : baseReduce,
	          initAccum = arguments.length < 3;

	      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
	    }

	    /**
	     * This method is like `_.reduce` except that it iterates over elements of
	     * `collection` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @param {*} [accumulator] The initial value.
	     * @returns {*} Returns the accumulated value.
	     * @see _.reduce
	     * @example
	     *
	     * var array = [[0, 1], [2, 3], [4, 5]];
	     *
	     * _.reduceRight(array, function(flattened, other) {
	     *   return flattened.concat(other);
	     * }, []);
	     * // => [4, 5, 2, 3, 0, 1]
	     */
	    function reduceRight(collection, iteratee, accumulator) {
	      var func = isArray(collection) ? arrayReduceRight : baseReduce,
	          initAccum = arguments.length < 3;

	      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
	    }

	    /**
	     * The opposite of `_.filter`; this method returns the elements of `collection`
	     * that `predicate` does **not** return truthy for.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the new filtered array.
	     * @see _.filter
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36, 'active': false },
	     *   { 'user': 'fred',   'age': 40, 'active': true }
	     * ];
	     *
	     * _.reject(users, function(o) { return !o.active; });
	     * // => objects for ['fred']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.reject(users, { 'age': 40, 'active': true });
	     * // => objects for ['barney']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.reject(users, ['active', false]);
	     * // => objects for ['fred']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.reject(users, 'active');
	     * // => objects for ['barney']
	     */
	    function reject(collection, predicate) {
	      var func = isArray(collection) ? arrayFilter : baseFilter;
	      return func(collection, negate(getIteratee(predicate, 3)));
	    }

	    /**
	     * Gets a random element from `collection`.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to sample.
	     * @returns {*} Returns the random element.
	     * @example
	     *
	     * _.sample([1, 2, 3, 4]);
	     * // => 2
	     */
	    function sample(collection) {
	      var func = isArray(collection) ? arraySample : baseSample;
	      return func(collection);
	    }

	    /**
	     * Gets `n` random elements at unique keys from `collection` up to the
	     * size of `collection`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to sample.
	     * @param {number} [n=1] The number of elements to sample.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the random elements.
	     * @example
	     *
	     * _.sampleSize([1, 2, 3], 2);
	     * // => [3, 1]
	     *
	     * _.sampleSize([1, 2, 3], 4);
	     * // => [2, 3, 1]
	     */
	    function sampleSize(collection, n, guard) {
	      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {
	        n = 1;
	      } else {
	        n = toInteger(n);
	      }
	      var func = isArray(collection) ? arraySampleSize : baseSampleSize;
	      return func(collection, n);
	    }

	    /**
	     * Creates an array of shuffled values, using a version of the
	     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to shuffle.
	     * @returns {Array} Returns the new shuffled array.
	     * @example
	     *
	     * _.shuffle([1, 2, 3, 4]);
	     * // => [4, 1, 3, 2]
	     */
	    function shuffle(collection) {
	      var func = isArray(collection) ? arrayShuffle : baseShuffle;
	      return func(collection);
	    }

	    /**
	     * Gets the size of `collection` by returning its length for array-like
	     * values or the number of own enumerable string keyed properties for objects.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object|string} collection The collection to inspect.
	     * @returns {number} Returns the collection size.
	     * @example
	     *
	     * _.size([1, 2, 3]);
	     * // => 3
	     *
	     * _.size({ 'a': 1, 'b': 2 });
	     * // => 2
	     *
	     * _.size('pebbles');
	     * // => 7
	     */
	    function size(collection) {
	      if (collection == null) {
	        return 0;
	      }
	      if (isArrayLike(collection)) {
	        return isString(collection) ? stringSize(collection) : collection.length;
	      }
	      var tag = getTag(collection);
	      if (tag == mapTag || tag == setTag) {
	        return collection.size;
	      }
	      return baseKeys(collection).length;
	    }

	    /**
	     * Checks if `predicate` returns truthy for **any** element of `collection`.
	     * Iteration is stopped once `predicate` returns truthy. The predicate is
	     * invoked with three arguments: (value, index|key, collection).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {boolean} Returns `true` if any element passes the predicate check,
	     *  else `false`.
	     * @example
	     *
	     * _.some([null, 0, 'yes', false], Boolean);
	     * // => true
	     *
	     * var users = [
	     *   { 'user': 'barney', 'active': true },
	     *   { 'user': 'fred',   'active': false }
	     * ];
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.some(users, { 'user': 'barney', 'active': false });
	     * // => false
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.some(users, ['active', false]);
	     * // => true
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.some(users, 'active');
	     * // => true
	     */
	    function some(collection, predicate, guard) {
	      var func = isArray(collection) ? arraySome : baseSome;
	      if (guard && isIterateeCall(collection, predicate, guard)) {
	        predicate = undefined;
	      }
	      return func(collection, getIteratee(predicate, 3));
	    }

	    /**
	     * Creates an array of elements, sorted in ascending order by the results of
	     * running each element in a collection thru each iteratee. This method
	     * performs a stable sort, that is, it preserves the original sort order of
	     * equal elements. The iteratees are invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {...(Function|Function[])} [iteratees=[_.identity]]
	     *  The iteratees to sort by.
	     * @returns {Array} Returns the new sorted array.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'fred',   'age': 48 },
	     *   { 'user': 'barney', 'age': 36 },
	     *   { 'user': 'fred',   'age': 40 },
	     *   { 'user': 'barney', 'age': 34 }
	     * ];
	     *
	     * _.sortBy(users, [function(o) { return o.user; }]);
	     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
	     *
	     * _.sortBy(users, ['user', 'age']);
	     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]
	     */
	    var sortBy = baseRest(function(collection, iteratees) {
	      if (collection == null) {
	        return [];
	      }
	      var length = iteratees.length;
	      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
	        iteratees = [];
	      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
	        iteratees = [iteratees[0]];
	      }
	      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
	    });

	    /*------------------------------------------------------------------------*/

	    /**
	     * Gets the timestamp of the number of milliseconds that have elapsed since
	     * the Unix epoch (1 January 1970 00:00:00 UTC).
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @category Date
	     * @returns {number} Returns the timestamp.
	     * @example
	     *
	     * _.defer(function(stamp) {
	     *   console.log(_.now() - stamp);
	     * }, _.now());
	     * // => Logs the number of milliseconds it took for the deferred invocation.
	     */
	    var now = ctxNow || function() {
	      return root.Date.now();
	    };

	    /*------------------------------------------------------------------------*/

	    /**
	     * The opposite of `_.before`; this method creates a function that invokes
	     * `func` once it's called `n` or more times.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {number} n The number of calls before `func` is invoked.
	     * @param {Function} func The function to restrict.
	     * @returns {Function} Returns the new restricted function.
	     * @example
	     *
	     * var saves = ['profile', 'settings'];
	     *
	     * var done = _.after(saves.length, function() {
	     *   console.log('done saving!');
	     * });
	     *
	     * _.forEach(saves, function(type) {
	     *   asyncSave({ 'type': type, 'complete': done });
	     * });
	     * // => Logs 'done saving!' after the two async saves have completed.
	     */
	    function after(n, func) {
	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      n = toInteger(n);
	      return function() {
	        if (--n < 1) {
	          return func.apply(this, arguments);
	        }
	      };
	    }

	    /**
	     * Creates a function that invokes `func`, with up to `n` arguments,
	     * ignoring any additional arguments.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {Function} func The function to cap arguments for.
	     * @param {number} [n=func.length] The arity cap.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Function} Returns the new capped function.
	     * @example
	     *
	     * _.map(['6', '8', '10'], _.ary(parseInt, 1));
	     * // => [6, 8, 10]
	     */
	    function ary(func, n, guard) {
	      n = guard ? undefined : n;
	      n = (func && n == null) ? func.length : n;
	      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);
	    }

	    /**
	     * Creates a function that invokes `func`, with the `this` binding and arguments
	     * of the created function, while it's called less than `n` times. Subsequent
	     * calls to the created function return the result of the last `func` invocation.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {number} n The number of calls at which `func` is no longer invoked.
	     * @param {Function} func The function to restrict.
	     * @returns {Function} Returns the new restricted function.
	     * @example
	     *
	     * jQuery(element).on('click', _.before(5, addContactToList));
	     * // => Allows adding up to 4 contacts to the list.
	     */
	    function before(n, func) {
	      var result;
	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      n = toInteger(n);
	      return function() {
	        if (--n > 0) {
	          result = func.apply(this, arguments);
	        }
	        if (n <= 1) {
	          func = undefined;
	        }
	        return result;
	      };
	    }

	    /**
	     * Creates a function that invokes `func` with the `this` binding of `thisArg`
	     * and `partials` prepended to the arguments it receives.
	     *
	     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
	     * may be used as a placeholder for partially applied arguments.
	     *
	     * **Note:** Unlike native `Function#bind`, this method doesn't set the "length"
	     * property of bound functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to bind.
	     * @param {*} thisArg The `this` binding of `func`.
	     * @param {...*} [partials] The arguments to be partially applied.
	     * @returns {Function} Returns the new bound function.
	     * @example
	     *
	     * function greet(greeting, punctuation) {
	     *   return greeting + ' ' + this.user + punctuation;
	     * }
	     *
	     * var object = { 'user': 'fred' };
	     *
	     * var bound = _.bind(greet, object, 'hi');
	     * bound('!');
	     * // => 'hi fred!'
	     *
	     * // Bound with placeholders.
	     * var bound = _.bind(greet, object, _, '!');
	     * bound('hi');
	     * // => 'hi fred!'
	     */
	    var bind = baseRest(function(func, thisArg, partials) {
	      var bitmask = WRAP_BIND_FLAG;
	      if (partials.length) {
	        var holders = replaceHolders(partials, getHolder(bind));
	        bitmask |= WRAP_PARTIAL_FLAG;
	      }
	      return createWrap(func, bitmask, thisArg, partials, holders);
	    });

	    /**
	     * Creates a function that invokes the method at `object[key]` with `partials`
	     * prepended to the arguments it receives.
	     *
	     * This method differs from `_.bind` by allowing bound functions to reference
	     * methods that may be redefined or don't yet exist. See
	     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
	     * for more details.
	     *
	     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
	     * builds, may be used as a placeholder for partially applied arguments.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.10.0
	     * @category Function
	     * @param {Object} object The object to invoke the method on.
	     * @param {string} key The key of the method.
	     * @param {...*} [partials] The arguments to be partially applied.
	     * @returns {Function} Returns the new bound function.
	     * @example
	     *
	     * var object = {
	     *   'user': 'fred',
	     *   'greet': function(greeting, punctuation) {
	     *     return greeting + ' ' + this.user + punctuation;
	     *   }
	     * };
	     *
	     * var bound = _.bindKey(object, 'greet', 'hi');
	     * bound('!');
	     * // => 'hi fred!'
	     *
	     * object.greet = function(greeting, punctuation) {
	     *   return greeting + 'ya ' + this.user + punctuation;
	     * };
	     *
	     * bound('!');
	     * // => 'hiya fred!'
	     *
	     * // Bound with placeholders.
	     * var bound = _.bindKey(object, 'greet', _, '!');
	     * bound('hi');
	     * // => 'hiya fred!'
	     */
	    var bindKey = baseRest(function(object, key, partials) {
	      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
	      if (partials.length) {
	        var holders = replaceHolders(partials, getHolder(bindKey));
	        bitmask |= WRAP_PARTIAL_FLAG;
	      }
	      return createWrap(key, bitmask, object, partials, holders);
	    });

	    /**
	     * Creates a function that accepts arguments of `func` and either invokes
	     * `func` returning its result, if at least `arity` number of arguments have
	     * been provided, or returns a function that accepts the remaining `func`
	     * arguments, and so on. The arity of `func` may be specified if `func.length`
	     * is not sufficient.
	     *
	     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
	     * may be used as a placeholder for provided arguments.
	     *
	     * **Note:** This method doesn't set the "length" property of curried functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Function
	     * @param {Function} func The function to curry.
	     * @param {number} [arity=func.length] The arity of `func`.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Function} Returns the new curried function.
	     * @example
	     *
	     * var abc = function(a, b, c) {
	     *   return [a, b, c];
	     * };
	     *
	     * var curried = _.curry(abc);
	     *
	     * curried(1)(2)(3);
	     * // => [1, 2, 3]
	     *
	     * curried(1, 2)(3);
	     * // => [1, 2, 3]
	     *
	     * curried(1, 2, 3);
	     * // => [1, 2, 3]
	     *
	     * // Curried with placeholders.
	     * curried(1)(_, 3)(2);
	     * // => [1, 2, 3]
	     */
	    function curry(func, arity, guard) {
	      arity = guard ? undefined : arity;
	      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
	      result.placeholder = curry.placeholder;
	      return result;
	    }

	    /**
	     * This method is like `_.curry` except that arguments are applied to `func`
	     * in the manner of `_.partialRight` instead of `_.partial`.
	     *
	     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
	     * builds, may be used as a placeholder for provided arguments.
	     *
	     * **Note:** This method doesn't set the "length" property of curried functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {Function} func The function to curry.
	     * @param {number} [arity=func.length] The arity of `func`.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Function} Returns the new curried function.
	     * @example
	     *
	     * var abc = function(a, b, c) {
	     *   return [a, b, c];
	     * };
	     *
	     * var curried = _.curryRight(abc);
	     *
	     * curried(3)(2)(1);
	     * // => [1, 2, 3]
	     *
	     * curried(2, 3)(1);
	     * // => [1, 2, 3]
	     *
	     * curried(1, 2, 3);
	     * // => [1, 2, 3]
	     *
	     * // Curried with placeholders.
	     * curried(3)(1, _)(2);
	     * // => [1, 2, 3]
	     */
	    function curryRight(func, arity, guard) {
	      arity = guard ? undefined : arity;
	      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
	      result.placeholder = curryRight.placeholder;
	      return result;
	    }

	    /**
	     * Creates a debounced function that delays invoking `func` until after `wait`
	     * milliseconds have elapsed since the last time the debounced function was
	     * invoked. The debounced function comes with a `cancel` method to cancel
	     * delayed `func` invocations and a `flush` method to immediately invoke them.
	     * Provide `options` to indicate whether `func` should be invoked on the
	     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
	     * with the last arguments provided to the debounced function. Subsequent
	     * calls to the debounced function return the result of the last `func`
	     * invocation.
	     *
	     * **Note:** If `leading` and `trailing` options are `true`, `func` is
	     * invoked on the trailing edge of the timeout only if the debounced function
	     * is invoked more than once during the `wait` timeout.
	     *
	     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
	     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
	     *
	     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
	     * for details over the differences between `_.debounce` and `_.throttle`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to debounce.
	     * @param {number} [wait=0] The number of milliseconds to delay.
	     * @param {Object} [options={}] The options object.
	     * @param {boolean} [options.leading=false]
	     *  Specify invoking on the leading edge of the timeout.
	     * @param {number} [options.maxWait]
	     *  The maximum time `func` is allowed to be delayed before it's invoked.
	     * @param {boolean} [options.trailing=true]
	     *  Specify invoking on the trailing edge of the timeout.
	     * @returns {Function} Returns the new debounced function.
	     * @example
	     *
	     * // Avoid costly calculations while the window size is in flux.
	     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
	     *
	     * // Invoke `sendMail` when clicked, debouncing subsequent calls.
	     * jQuery(element).on('click', _.debounce(sendMail, 300, {
	     *   'leading': true,
	     *   'trailing': false
	     * }));
	     *
	     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
	     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
	     * var source = new EventSource('/stream');
	     * jQuery(source).on('message', debounced);
	     *
	     * // Cancel the trailing debounced invocation.
	     * jQuery(window).on('popstate', debounced.cancel);
	     */
	    function debounce(func, wait, options) {
	      var lastArgs,
	          lastThis,
	          maxWait,
	          result,
	          timerId,
	          lastCallTime,
	          lastInvokeTime = 0,
	          leading = false,
	          maxing = false,
	          trailing = true;

	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      wait = toNumber(wait) || 0;
	      if (isObject(options)) {
	        leading = !!options.leading;
	        maxing = 'maxWait' in options;
	        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
	        trailing = 'trailing' in options ? !!options.trailing : trailing;
	      }

	      function invokeFunc(time) {
	        var args = lastArgs,
	            thisArg = lastThis;

	        lastArgs = lastThis = undefined;
	        lastInvokeTime = time;
	        result = func.apply(thisArg, args);
	        return result;
	      }

	      function leadingEdge(time) {
	        // Reset any `maxWait` timer.
	        lastInvokeTime = time;
	        // Start the timer for the trailing edge.
	        timerId = setTimeout(timerExpired, wait);
	        // Invoke the leading edge.
	        return leading ? invokeFunc(time) : result;
	      }

	      function remainingWait(time) {
	        var timeSinceLastCall = time - lastCallTime,
	            timeSinceLastInvoke = time - lastInvokeTime,
	            result = wait - timeSinceLastCall;

	        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;
	      }

	      function shouldInvoke(time) {
	        var timeSinceLastCall = time - lastCallTime,
	            timeSinceLastInvoke = time - lastInvokeTime;

	        // Either this is the first call, activity has stopped and we're at the
	        // trailing edge, the system time has gone backwards and we're treating
	        // it as the trailing edge, or we've hit the `maxWait` limit.
	        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
	          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
	      }

	      function timerExpired() {
	        var time = now();
	        if (shouldInvoke(time)) {
	          return trailingEdge(time);
	        }
	        // Restart the timer.
	        timerId = setTimeout(timerExpired, remainingWait(time));
	      }

	      function trailingEdge(time) {
	        timerId = undefined;

	        // Only invoke if we have `lastArgs` which means `func` has been
	        // debounced at least once.
	        if (trailing && lastArgs) {
	          return invokeFunc(time);
	        }
	        lastArgs = lastThis = undefined;
	        return result;
	      }

	      function cancel() {
	        if (timerId !== undefined) {
	          clearTimeout(timerId);
	        }
	        lastInvokeTime = 0;
	        lastArgs = lastCallTime = lastThis = timerId = undefined;
	      }

	      function flush() {
	        return timerId === undefined ? result : trailingEdge(now());
	      }

	      function debounced() {
	        var time = now(),
	            isInvoking = shouldInvoke(time);

	        lastArgs = arguments;
	        lastThis = this;
	        lastCallTime = time;

	        if (isInvoking) {
	          if (timerId === undefined) {
	            return leadingEdge(lastCallTime);
	          }
	          if (maxing) {
	            // Handle invocations in a tight loop.
	            timerId = setTimeout(timerExpired, wait);
	            return invokeFunc(lastCallTime);
	          }
	        }
	        if (timerId === undefined) {
	          timerId = setTimeout(timerExpired, wait);
	        }
	        return result;
	      }
	      debounced.cancel = cancel;
	      debounced.flush = flush;
	      return debounced;
	    }

	    /**
	     * Defers invoking the `func` until the current call stack has cleared. Any
	     * additional arguments are provided to `func` when it's invoked.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to defer.
	     * @param {...*} [args] The arguments to invoke `func` with.
	     * @returns {number} Returns the timer id.
	     * @example
	     *
	     * _.defer(function(text) {
	     *   console.log(text);
	     * }, 'deferred');
	     * // => Logs 'deferred' after one millisecond.
	     */
	    var defer = baseRest(function(func, args) {
	      return baseDelay(func, 1, args);
	    });

	    /**
	     * Invokes `func` after `wait` milliseconds. Any additional arguments are
	     * provided to `func` when it's invoked.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to delay.
	     * @param {number} wait The number of milliseconds to delay invocation.
	     * @param {...*} [args] The arguments to invoke `func` with.
	     * @returns {number} Returns the timer id.
	     * @example
	     *
	     * _.delay(function(text) {
	     *   console.log(text);
	     * }, 1000, 'later');
	     * // => Logs 'later' after one second.
	     */
	    var delay = baseRest(function(func, wait, args) {
	      return baseDelay(func, toNumber(wait) || 0, args);
	    });

	    /**
	     * Creates a function that invokes `func` with arguments reversed.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Function
	     * @param {Function} func The function to flip arguments for.
	     * @returns {Function} Returns the new flipped function.
	     * @example
	     *
	     * var flipped = _.flip(function() {
	     *   return _.toArray(arguments);
	     * });
	     *
	     * flipped('a', 'b', 'c', 'd');
	     * // => ['d', 'c', 'b', 'a']
	     */
	    function flip(func) {
	      return createWrap(func, WRAP_FLIP_FLAG);
	    }

	    /**
	     * Creates a function that memoizes the result of `func`. If `resolver` is
	     * provided, it determines the cache key for storing the result based on the
	     * arguments provided to the memoized function. By default, the first argument
	     * provided to the memoized function is used as the map cache key. The `func`
	     * is invoked with the `this` binding of the memoized function.
	     *
	     * **Note:** The cache is exposed as the `cache` property on the memoized
	     * function. Its creation may be customized by replacing the `_.memoize.Cache`
	     * constructor with one whose instances implement the
	     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
	     * method interface of `clear`, `delete`, `get`, `has`, and `set`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to have its output memoized.
	     * @param {Function} [resolver] The function to resolve the cache key.
	     * @returns {Function} Returns the new memoized function.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': 2 };
	     * var other = { 'c': 3, 'd': 4 };
	     *
	     * var values = _.memoize(_.values);
	     * values(object);
	     * // => [1, 2]
	     *
	     * values(other);
	     * // => [3, 4]
	     *
	     * object.a = 2;
	     * values(object);
	     * // => [1, 2]
	     *
	     * // Modify the result cache.
	     * values.cache.set(object, ['a', 'b']);
	     * values(object);
	     * // => ['a', 'b']
	     *
	     * // Replace `_.memoize.Cache`.
	     * _.memoize.Cache = WeakMap;
	     */
	    function memoize(func, resolver) {
	      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      var memoized = function() {
	        var args = arguments,
	            key = resolver ? resolver.apply(this, args) : args[0],
	            cache = memoized.cache;

	        if (cache.has(key)) {
	          return cache.get(key);
	        }
	        var result = func.apply(this, args);
	        memoized.cache = cache.set(key, result) || cache;
	        return result;
	      };
	      memoized.cache = new (memoize.Cache || MapCache);
	      return memoized;
	    }

	    // Expose `MapCache`.
	    memoize.Cache = MapCache;

	    /**
	     * Creates a function that negates the result of the predicate `func`. The
	     * `func` predicate is invoked with the `this` binding and arguments of the
	     * created function.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {Function} predicate The predicate to negate.
	     * @returns {Function} Returns the new negated function.
	     * @example
	     *
	     * function isEven(n) {
	     *   return n % 2 == 0;
	     * }
	     *
	     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
	     * // => [1, 3, 5]
	     */
	    function negate(predicate) {
	      if (typeof predicate != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      return function() {
	        var args = arguments;
	        switch (args.length) {
	          case 0: return !predicate.call(this);
	          case 1: return !predicate.call(this, args[0]);
	          case 2: return !predicate.call(this, args[0], args[1]);
	          case 3: return !predicate.call(this, args[0], args[1], args[2]);
	        }
	        return !predicate.apply(this, args);
	      };
	    }

	    /**
	     * Creates a function that is restricted to invoking `func` once. Repeat calls
	     * to the function return the value of the first invocation. The `func` is
	     * invoked with the `this` binding and arguments of the created function.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to restrict.
	     * @returns {Function} Returns the new restricted function.
	     * @example
	     *
	     * var initialize = _.once(createApplication);
	     * initialize();
	     * initialize();
	     * // => `createApplication` is invoked once
	     */
	    function once(func) {
	      return before(2, func);
	    }

	    /**
	     * Creates a function that invokes `func` with its arguments transformed.
	     *
	     * @static
	     * @since 4.0.0
	     * @memberOf _
	     * @category Function
	     * @param {Function} func The function to wrap.
	     * @param {...(Function|Function[])} [transforms=[_.identity]]
	     *  The argument transforms.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * function doubled(n) {
	     *   return n * 2;
	     * }
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var func = _.overArgs(function(x, y) {
	     *   return [x, y];
	     * }, [square, doubled]);
	     *
	     * func(9, 3);
	     * // => [81, 6]
	     *
	     * func(10, 5);
	     * // => [100, 10]
	     */
	    var overArgs = castRest(function(func, transforms) {
	      transforms = (transforms.length == 1 && isArray(transforms[0]))
	        ? arrayMap(transforms[0], baseUnary(getIteratee()))
	        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));

	      var funcsLength = transforms.length;
	      return baseRest(function(args) {
	        var index = -1,
	            length = nativeMin(args.length, funcsLength);

	        while (++index < length) {
	          args[index] = transforms[index].call(this, args[index]);
	        }
	        return apply(func, this, args);
	      });
	    });

	    /**
	     * Creates a function that invokes `func` with `partials` prepended to the
	     * arguments it receives. This method is like `_.bind` except it does **not**
	     * alter the `this` binding.
	     *
	     * The `_.partial.placeholder` value, which defaults to `_` in monolithic
	     * builds, may be used as a placeholder for partially applied arguments.
	     *
	     * **Note:** This method doesn't set the "length" property of partially
	     * applied functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.2.0
	     * @category Function
	     * @param {Function} func The function to partially apply arguments to.
	     * @param {...*} [partials] The arguments to be partially applied.
	     * @returns {Function} Returns the new partially applied function.
	     * @example
	     *
	     * function greet(greeting, name) {
	     *   return greeting + ' ' + name;
	     * }
	     *
	     * var sayHelloTo = _.partial(greet, 'hello');
	     * sayHelloTo('fred');
	     * // => 'hello fred'
	     *
	     * // Partially applied with placeholders.
	     * var greetFred = _.partial(greet, _, 'fred');
	     * greetFred('hi');
	     * // => 'hi fred'
	     */
	    var partial = baseRest(function(func, partials) {
	      var holders = replaceHolders(partials, getHolder(partial));
	      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);
	    });

	    /**
	     * This method is like `_.partial` except that partially applied arguments
	     * are appended to the arguments it receives.
	     *
	     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
	     * builds, may be used as a placeholder for partially applied arguments.
	     *
	     * **Note:** This method doesn't set the "length" property of partially
	     * applied functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.0.0
	     * @category Function
	     * @param {Function} func The function to partially apply arguments to.
	     * @param {...*} [partials] The arguments to be partially applied.
	     * @returns {Function} Returns the new partially applied function.
	     * @example
	     *
	     * function greet(greeting, name) {
	     *   return greeting + ' ' + name;
	     * }
	     *
	     * var greetFred = _.partialRight(greet, 'fred');
	     * greetFred('hi');
	     * // => 'hi fred'
	     *
	     * // Partially applied with placeholders.
	     * var sayHelloTo = _.partialRight(greet, 'hello', _);
	     * sayHelloTo('fred');
	     * // => 'hello fred'
	     */
	    var partialRight = baseRest(function(func, partials) {
	      var holders = replaceHolders(partials, getHolder(partialRight));
	      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
	    });

	    /**
	     * Creates a function that invokes `func` with arguments arranged according
	     * to the specified `indexes` where the argument value at the first index is
	     * provided as the first argument, the argument value at the second index is
	     * provided as the second argument, and so on.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {Function} func The function to rearrange arguments for.
	     * @param {...(number|number[])} indexes The arranged argument indexes.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var rearged = _.rearg(function(a, b, c) {
	     *   return [a, b, c];
	     * }, [2, 0, 1]);
	     *
	     * rearged('b', 'c', 'a')
	     * // => ['a', 'b', 'c']
	     */
	    var rearg = flatRest(function(func, indexes) {
	      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);
	    });

	    /**
	     * Creates a function that invokes `func` with the `this` binding of the
	     * created function and arguments from `start` and beyond provided as
	     * an array.
	     *
	     * **Note:** This method is based on the
	     * [rest parameter](https://mdn.io/rest_parameters).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Function
	     * @param {Function} func The function to apply a rest parameter to.
	     * @param {number} [start=func.length-1] The start position of the rest parameter.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var say = _.rest(function(what, names) {
	     *   return what + ' ' + _.initial(names).join(', ') +
	     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
	     * });
	     *
	     * say('hello', 'fred', 'barney', 'pebbles');
	     * // => 'hello fred, barney, & pebbles'
	     */
	    function rest(func, start) {
	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      start = start === undefined ? start : toInteger(start);
	      return baseRest(func, start);
	    }

	    /**
	     * Creates a function that invokes `func` with the `this` binding of the
	     * create function and an array of arguments much like
	     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).
	     *
	     * **Note:** This method is based on the
	     * [spread operator](https://mdn.io/spread_operator).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.2.0
	     * @category Function
	     * @param {Function} func The function to spread arguments over.
	     * @param {number} [start=0] The start position of the spread.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var say = _.spread(function(who, what) {
	     *   return who + ' says ' + what;
	     * });
	     *
	     * say(['fred', 'hello']);
	     * // => 'fred says hello'
	     *
	     * var numbers = Promise.all([
	     *   Promise.resolve(40),
	     *   Promise.resolve(36)
	     * ]);
	     *
	     * numbers.then(_.spread(function(x, y) {
	     *   return x + y;
	     * }));
	     * // => a Promise of 76
	     */
	    function spread(func, start) {
	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      start = start == null ? 0 : nativeMax(toInteger(start), 0);
	      return baseRest(function(args) {
	        var array = args[start],
	            otherArgs = castSlice(args, 0, start);

	        if (array) {
	          arrayPush(otherArgs, array);
	        }
	        return apply(func, this, otherArgs);
	      });
	    }

	    /**
	     * Creates a throttled function that only invokes `func` at most once per
	     * every `wait` milliseconds. The throttled function comes with a `cancel`
	     * method to cancel delayed `func` invocations and a `flush` method to
	     * immediately invoke them. Provide `options` to indicate whether `func`
	     * should be invoked on the leading and/or trailing edge of the `wait`
	     * timeout. The `func` is invoked with the last arguments provided to the
	     * throttled function. Subsequent calls to the throttled function return the
	     * result of the last `func` invocation.
	     *
	     * **Note:** If `leading` and `trailing` options are `true`, `func` is
	     * invoked on the trailing edge of the timeout only if the throttled function
	     * is invoked more than once during the `wait` timeout.
	     *
	     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
	     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
	     *
	     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
	     * for details over the differences between `_.throttle` and `_.debounce`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to throttle.
	     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
	     * @param {Object} [options={}] The options object.
	     * @param {boolean} [options.leading=true]
	     *  Specify invoking on the leading edge of the timeout.
	     * @param {boolean} [options.trailing=true]
	     *  Specify invoking on the trailing edge of the timeout.
	     * @returns {Function} Returns the new throttled function.
	     * @example
	     *
	     * // Avoid excessively updating the position while scrolling.
	     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
	     *
	     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
	     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
	     * jQuery(element).on('click', throttled);
	     *
	     * // Cancel the trailing throttled invocation.
	     * jQuery(window).on('popstate', throttled.cancel);
	     */
	    function throttle(func, wait, options) {
	      var leading = true,
	          trailing = true;

	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      if (isObject(options)) {
	        leading = 'leading' in options ? !!options.leading : leading;
	        trailing = 'trailing' in options ? !!options.trailing : trailing;
	      }
	      return debounce(func, wait, {
	        'leading': leading,
	        'maxWait': wait,
	        'trailing': trailing
	      });
	    }

	    /**
	     * Creates a function that accepts up to one argument, ignoring any
	     * additional arguments.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Function
	     * @param {Function} func The function to cap arguments for.
	     * @returns {Function} Returns the new capped function.
	     * @example
	     *
	     * _.map(['6', '8', '10'], _.unary(parseInt));
	     * // => [6, 8, 10]
	     */
	    function unary(func) {
	      return ary(func, 1);
	    }

	    /**
	     * Creates a function that provides `value` to `wrapper` as its first
	     * argument. Any additional arguments provided to the function are appended
	     * to those provided to the `wrapper`. The wrapper is invoked with the `this`
	     * binding of the created function.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {*} value The value to wrap.
	     * @param {Function} [wrapper=identity] The wrapper function.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var p = _.wrap(_.escape, function(func, text) {
	     *   return '<p>' + func(text) + '</p>';
	     * });
	     *
	     * p('fred, barney, & pebbles');
	     * // => '<p>fred, barney, &amp; pebbles</p>'
	     */
	    function wrap(value, wrapper) {
	      return partial(castFunction(wrapper), value);
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Casts `value` as an array if it's not one.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.4.0
	     * @category Lang
	     * @param {*} value The value to inspect.
	     * @returns {Array} Returns the cast array.
	     * @example
	     *
	     * _.castArray(1);
	     * // => [1]
	     *
	     * _.castArray({ 'a': 1 });
	     * // => [{ 'a': 1 }]
	     *
	     * _.castArray('abc');
	     * // => ['abc']
	     *
	     * _.castArray(null);
	     * // => [null]
	     *
	     * _.castArray(undefined);
	     * // => [undefined]
	     *
	     * _.castArray();
	     * // => []
	     *
	     * var array = [1, 2, 3];
	     * console.log(_.castArray(array) === array);
	     * // => true
	     */
	    function castArray() {
	      if (!arguments.length) {
	        return [];
	      }
	      var value = arguments[0];
	      return isArray(value) ? value : [value];
	    }

	    /**
	     * Creates a shallow clone of `value`.
	     *
	     * **Note:** This method is loosely based on the
	     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
	     * and supports cloning arrays, array buffers, booleans, date objects, maps,
	     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
	     * arrays. The own enumerable properties of `arguments` objects are cloned
	     * as plain objects. An empty object is returned for uncloneable values such
	     * as error objects, functions, DOM nodes, and WeakMaps.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to clone.
	     * @returns {*} Returns the cloned value.
	     * @see _.cloneDeep
	     * @example
	     *
	     * var objects = [{ 'a': 1 }, { 'b': 2 }];
	     *
	     * var shallow = _.clone(objects);
	     * console.log(shallow[0] === objects[0]);
	     * // => true
	     */
	    function clone(value) {
	      return baseClone(value, CLONE_SYMBOLS_FLAG);
	    }

	    /**
	     * This method is like `_.clone` except that it accepts `customizer` which
	     * is invoked to produce the cloned value. If `customizer` returns `undefined`,
	     * cloning is handled by the method instead. The `customizer` is invoked with
	     * up to four arguments; (value [, index|key, object, stack]).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to clone.
	     * @param {Function} [customizer] The function to customize cloning.
	     * @returns {*} Returns the cloned value.
	     * @see _.cloneDeepWith
	     * @example
	     *
	     * function customizer(value) {
	     *   if (_.isElement(value)) {
	     *     return value.cloneNode(false);
	     *   }
	     * }
	     *
	     * var el = _.cloneWith(document.body, customizer);
	     *
	     * console.log(el === document.body);
	     * // => false
	     * console.log(el.nodeName);
	     * // => 'BODY'
	     * console.log(el.childNodes.length);
	     * // => 0
	     */
	    function cloneWith(value, customizer) {
	      customizer = typeof customizer == 'function' ? customizer : undefined;
	      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
	    }

	    /**
	     * This method is like `_.clone` except that it recursively clones `value`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.0.0
	     * @category Lang
	     * @param {*} value The value to recursively clone.
	     * @returns {*} Returns the deep cloned value.
	     * @see _.clone
	     * @example
	     *
	     * var objects = [{ 'a': 1 }, { 'b': 2 }];
	     *
	     * var deep = _.cloneDeep(objects);
	     * console.log(deep[0] === objects[0]);
	     * // => false
	     */
	    function cloneDeep(value) {
	      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
	    }

	    /**
	     * This method is like `_.cloneWith` except that it recursively clones `value`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to recursively clone.
	     * @param {Function} [customizer] The function to customize cloning.
	     * @returns {*} Returns the deep cloned value.
	     * @see _.cloneWith
	     * @example
	     *
	     * function customizer(value) {
	     *   if (_.isElement(value)) {
	     *     return value.cloneNode(true);
	     *   }
	     * }
	     *
	     * var el = _.cloneDeepWith(document.body, customizer);
	     *
	     * console.log(el === document.body);
	     * // => false
	     * console.log(el.nodeName);
	     * // => 'BODY'
	     * console.log(el.childNodes.length);
	     * // => 20
	     */
	    function cloneDeepWith(value, customizer) {
	      customizer = typeof customizer == 'function' ? customizer : undefined;
	      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
	    }

	    /**
	     * Checks if `object` conforms to `source` by invoking the predicate
	     * properties of `source` with the corresponding property values of `object`.
	     *
	     * **Note:** This method is equivalent to `_.conforms` when `source` is
	     * partially applied.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.14.0
	     * @category Lang
	     * @param {Object} object The object to inspect.
	     * @param {Object} source The object of property predicates to conform to.
	     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': 2 };
	     *
	     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });
	     * // => true
	     *
	     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });
	     * // => false
	     */
	    function conformsTo(object, source) {
	      return source == null || baseConformsTo(object, source, keys(source));
	    }

	    /**
	     * Performs a
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * comparison between two values to determine if they are equivalent.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	     * @example
	     *
	     * var object = { 'a': 1 };
	     * var other = { 'a': 1 };
	     *
	     * _.eq(object, object);
	     * // => true
	     *
	     * _.eq(object, other);
	     * // => false
	     *
	     * _.eq('a', 'a');
	     * // => true
	     *
	     * _.eq('a', Object('a'));
	     * // => false
	     *
	     * _.eq(NaN, NaN);
	     * // => true
	     */
	    function eq(value, other) {
	      return value === other || (value !== value && other !== other);
	    }

	    /**
	     * Checks if `value` is greater than `other`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.9.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is greater than `other`,
	     *  else `false`.
	     * @see _.lt
	     * @example
	     *
	     * _.gt(3, 1);
	     * // => true
	     *
	     * _.gt(3, 3);
	     * // => false
	     *
	     * _.gt(1, 3);
	     * // => false
	     */
	    var gt = createRelationalOperation(baseGt);

	    /**
	     * Checks if `value` is greater than or equal to `other`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.9.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is greater than or equal to
	     *  `other`, else `false`.
	     * @see _.lte
	     * @example
	     *
	     * _.gte(3, 1);
	     * // => true
	     *
	     * _.gte(3, 3);
	     * // => true
	     *
	     * _.gte(1, 3);
	     * // => false
	     */
	    var gte = createRelationalOperation(function(value, other) {
	      return value >= other;
	    });

	    /**
	     * Checks if `value` is likely an `arguments` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
	     *  else `false`.
	     * @example
	     *
	     * _.isArguments(function() { return arguments; }());
	     * // => true
	     *
	     * _.isArguments([1, 2, 3]);
	     * // => false
	     */
	    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
	      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
	        !propertyIsEnumerable.call(value, 'callee');
	    };

	    /**
	     * Checks if `value` is classified as an `Array` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an array, else `false`.
	     * @example
	     *
	     * _.isArray([1, 2, 3]);
	     * // => true
	     *
	     * _.isArray(document.body.children);
	     * // => false
	     *
	     * _.isArray('abc');
	     * // => false
	     *
	     * _.isArray(_.noop);
	     * // => false
	     */
	    var isArray = Array.isArray;

	    /**
	     * Checks if `value` is classified as an `ArrayBuffer` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
	     * @example
	     *
	     * _.isArrayBuffer(new ArrayBuffer(2));
	     * // => true
	     *
	     * _.isArrayBuffer(new Array(2));
	     * // => false
	     */
	    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;

	    /**
	     * Checks if `value` is array-like. A value is considered array-like if it's
	     * not a function and has a `value.length` that's an integer greater than or
	     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
	     * @example
	     *
	     * _.isArrayLike([1, 2, 3]);
	     * // => true
	     *
	     * _.isArrayLike(document.body.children);
	     * // => true
	     *
	     * _.isArrayLike('abc');
	     * // => true
	     *
	     * _.isArrayLike(_.noop);
	     * // => false
	     */
	    function isArrayLike(value) {
	      return value != null && isLength(value.length) && !isFunction(value);
	    }

	    /**
	     * This method is like `_.isArrayLike` except that it also checks if `value`
	     * is an object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an array-like object,
	     *  else `false`.
	     * @example
	     *
	     * _.isArrayLikeObject([1, 2, 3]);
	     * // => true
	     *
	     * _.isArrayLikeObject(document.body.children);
	     * // => true
	     *
	     * _.isArrayLikeObject('abc');
	     * // => false
	     *
	     * _.isArrayLikeObject(_.noop);
	     * // => false
	     */
	    function isArrayLikeObject(value) {
	      return isObjectLike(value) && isArrayLike(value);
	    }

	    /**
	     * Checks if `value` is classified as a boolean primitive or object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.
	     * @example
	     *
	     * _.isBoolean(false);
	     * // => true
	     *
	     * _.isBoolean(null);
	     * // => false
	     */
	    function isBoolean(value) {
	      return value === true || value === false ||
	        (isObjectLike(value) && baseGetTag(value) == boolTag);
	    }

	    /**
	     * Checks if `value` is a buffer.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
	     * @example
	     *
	     * _.isBuffer(new Buffer(2));
	     * // => true
	     *
	     * _.isBuffer(new Uint8Array(2));
	     * // => false
	     */
	    var isBuffer = nativeIsBuffer || stubFalse;

	    /**
	     * Checks if `value` is classified as a `Date` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
	     * @example
	     *
	     * _.isDate(new Date);
	     * // => true
	     *
	     * _.isDate('Mon April 23 2012');
	     * // => false
	     */
	    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;

	    /**
	     * Checks if `value` is likely a DOM element.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.
	     * @example
	     *
	     * _.isElement(document.body);
	     * // => true
	     *
	     * _.isElement('<body>');
	     * // => false
	     */
	    function isElement(value) {
	      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);
	    }

	    /**
	     * Checks if `value` is an empty object, collection, map, or set.
	     *
	     * Objects are considered empty if they have no own enumerable string keyed
	     * properties.
	     *
	     * Array-like values such as `arguments` objects, arrays, buffers, strings, or
	     * jQuery-like collections are considered empty if they have a `length` of `0`.
	     * Similarly, maps and sets are considered empty if they have a `size` of `0`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is empty, else `false`.
	     * @example
	     *
	     * _.isEmpty(null);
	     * // => true
	     *
	     * _.isEmpty(true);
	     * // => true
	     *
	     * _.isEmpty(1);
	     * // => true
	     *
	     * _.isEmpty([1, 2, 3]);
	     * // => false
	     *
	     * _.isEmpty({ 'a': 1 });
	     * // => false
	     */
	    function isEmpty(value) {
	      if (value == null) {
	        return true;
	      }
	      if (isArrayLike(value) &&
	          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||
	            isBuffer(value) || isTypedArray(value) || isArguments(value))) {
	        return !value.length;
	      }
	      var tag = getTag(value);
	      if (tag == mapTag || tag == setTag) {
	        return !value.size;
	      }
	      if (isPrototype(value)) {
	        return !baseKeys(value).length;
	      }
	      for (var key in value) {
	        if (hasOwnProperty.call(value, key)) {
	          return false;
	        }
	      }
	      return true;
	    }

	    /**
	     * Performs a deep comparison between two values to determine if they are
	     * equivalent.
	     *
	     * **Note:** This method supports comparing arrays, array buffers, booleans,
	     * date objects, error objects, maps, numbers, `Object` objects, regexes,
	     * sets, strings, symbols, and typed arrays. `Object` objects are compared
	     * by their own, not inherited, enumerable properties. Functions and DOM
	     * nodes are compared by strict equality, i.e. `===`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	     * @example
	     *
	     * var object = { 'a': 1 };
	     * var other = { 'a': 1 };
	     *
	     * _.isEqual(object, other);
	     * // => true
	     *
	     * object === other;
	     * // => false
	     */
	    function isEqual(value, other) {
	      return baseIsEqual(value, other);
	    }

	    /**
	     * This method is like `_.isEqual` except that it accepts `customizer` which
	     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
	     * are handled by the method instead. The `customizer` is invoked with up to
	     * six arguments: (objValue, othValue [, index|key, object, other, stack]).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @param {Function} [customizer] The function to customize comparisons.
	     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	     * @example
	     *
	     * function isGreeting(value) {
	     *   return /^h(?:i|ello)$/.test(value);
	     * }
	     *
	     * function customizer(objValue, othValue) {
	     *   if (isGreeting(objValue) && isGreeting(othValue)) {
	     *     return true;
	     *   }
	     * }
	     *
	     * var array = ['hello', 'goodbye'];
	     * var other = ['hi', 'goodbye'];
	     *
	     * _.isEqualWith(array, other, customizer);
	     * // => true
	     */
	    function isEqualWith(value, other, customizer) {
	      customizer = typeof customizer == 'function' ? customizer : undefined;
	      var result = customizer ? customizer(value, other) : undefined;
	      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;
	    }

	    /**
	     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
	     * `SyntaxError`, `TypeError`, or `URIError` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
	     * @example
	     *
	     * _.isError(new Error);
	     * // => true
	     *
	     * _.isError(Error);
	     * // => false
	     */
	    function isError(value) {
	      if (!isObjectLike(value)) {
	        return false;
	      }
	      var tag = baseGetTag(value);
	      return tag == errorTag || tag == domExcTag ||
	        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));
	    }

	    /**
	     * Checks if `value` is a finite primitive number.
	     *
	     * **Note:** This method is based on
	     * [`Number.isFinite`](https://mdn.io/Number/isFinite).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
	     * @example
	     *
	     * _.isFinite(3);
	     * // => true
	     *
	     * _.isFinite(Number.MIN_VALUE);
	     * // => true
	     *
	     * _.isFinite(Infinity);
	     * // => false
	     *
	     * _.isFinite('3');
	     * // => false
	     */
	    function isFinite(value) {
	      return typeof value == 'number' && nativeIsFinite(value);
	    }

	    /**
	     * Checks if `value` is classified as a `Function` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a function, else `false`.
	     * @example
	     *
	     * _.isFunction(_);
	     * // => true
	     *
	     * _.isFunction(/abc/);
	     * // => false
	     */
	    function isFunction(value) {
	      if (!isObject(value)) {
	        return false;
	      }
	      // The use of `Object#toString` avoids issues with the `typeof` operator
	      // in Safari 9 which returns 'object' for typed arrays and other constructors.
	      var tag = baseGetTag(value);
	      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
	    }

	    /**
	     * Checks if `value` is an integer.
	     *
	     * **Note:** This method is based on
	     * [`Number.isInteger`](https://mdn.io/Number/isInteger).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.
	     * @example
	     *
	     * _.isInteger(3);
	     * // => true
	     *
	     * _.isInteger(Number.MIN_VALUE);
	     * // => false
	     *
	     * _.isInteger(Infinity);
	     * // => false
	     *
	     * _.isInteger('3');
	     * // => false
	     */
	    function isInteger(value) {
	      return typeof value == 'number' && value == toInteger(value);
	    }

	    /**
	     * Checks if `value` is a valid array-like length.
	     *
	     * **Note:** This method is loosely based on
	     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
	     * @example
	     *
	     * _.isLength(3);
	     * // => true
	     *
	     * _.isLength(Number.MIN_VALUE);
	     * // => false
	     *
	     * _.isLength(Infinity);
	     * // => false
	     *
	     * _.isLength('3');
	     * // => false
	     */
	    function isLength(value) {
	      return typeof value == 'number' &&
	        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
	    }

	    /**
	     * Checks if `value` is the
	     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
	     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	     * @example
	     *
	     * _.isObject({});
	     * // => true
	     *
	     * _.isObject([1, 2, 3]);
	     * // => true
	     *
	     * _.isObject(_.noop);
	     * // => true
	     *
	     * _.isObject(null);
	     * // => false
	     */
	    function isObject(value) {
	      var type = typeof value;
	      return value != null && (type == 'object' || type == 'function');
	    }

	    /**
	     * Checks if `value` is object-like. A value is object-like if it's not `null`
	     * and has a `typeof` result of "object".
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	     * @example
	     *
	     * _.isObjectLike({});
	     * // => true
	     *
	     * _.isObjectLike([1, 2, 3]);
	     * // => true
	     *
	     * _.isObjectLike(_.noop);
	     * // => false
	     *
	     * _.isObjectLike(null);
	     * // => false
	     */
	    function isObjectLike(value) {
	      return value != null && typeof value == 'object';
	    }

	    /**
	     * Checks if `value` is classified as a `Map` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
	     * @example
	     *
	     * _.isMap(new Map);
	     * // => true
	     *
	     * _.isMap(new WeakMap);
	     * // => false
	     */
	    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;

	    /**
	     * Performs a partial deep comparison between `object` and `source` to
	     * determine if `object` contains equivalent property values.
	     *
	     * **Note:** This method is equivalent to `_.matches` when `source` is
	     * partially applied.
	     *
	     * Partial comparisons will match empty array and empty object `source`
	     * values against any array or object value, respectively. See `_.isEqual`
	     * for a list of supported value comparisons.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {Object} object The object to inspect.
	     * @param {Object} source The object of property values to match.
	     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': 2 };
	     *
	     * _.isMatch(object, { 'b': 2 });
	     * // => true
	     *
	     * _.isMatch(object, { 'b': 1 });
	     * // => false
	     */
	    function isMatch(object, source) {
	      return object === source || baseIsMatch(object, source, getMatchData(source));
	    }

	    /**
	     * This method is like `_.isMatch` except that it accepts `customizer` which
	     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
	     * are handled by the method instead. The `customizer` is invoked with five
	     * arguments: (objValue, srcValue, index|key, object, source).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {Object} object The object to inspect.
	     * @param {Object} source The object of property values to match.
	     * @param {Function} [customizer] The function to customize comparisons.
	     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
	     * @example
	     *
	     * function isGreeting(value) {
	     *   return /^h(?:i|ello)$/.test(value);
	     * }
	     *
	     * function customizer(objValue, srcValue) {
	     *   if (isGreeting(objValue) && isGreeting(srcValue)) {
	     *     return true;
	     *   }
	     * }
	     *
	     * var object = { 'greeting': 'hello' };
	     * var source = { 'greeting': 'hi' };
	     *
	     * _.isMatchWith(object, source, customizer);
	     * // => true
	     */
	    function isMatchWith(object, source, customizer) {
	      customizer = typeof customizer == 'function' ? customizer : undefined;
	      return baseIsMatch(object, source, getMatchData(source), customizer);
	    }

	    /**
	     * Checks if `value` is `NaN`.
	     *
	     * **Note:** This method is based on
	     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
	     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
	     * `undefined` and other non-number values.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
	     * @example
	     *
	     * _.isNaN(NaN);
	     * // => true
	     *
	     * _.isNaN(new Number(NaN));
	     * // => true
	     *
	     * isNaN(undefined);
	     * // => true
	     *
	     * _.isNaN(undefined);
	     * // => false
	     */
	    function isNaN(value) {
	      // An `NaN` primitive is the only value that is not equal to itself.
	      // Perform the `toStringTag` check first to avoid errors with some
	      // ActiveX objects in IE.
	      return isNumber(value) && value != +value;
	    }

	    /**
	     * Checks if `value` is a pristine native function.
	     *
	     * **Note:** This method can't reliably detect native functions in the presence
	     * of the core-js package because core-js circumvents this kind of detection.
	     * Despite multiple requests, the core-js maintainer has made it clear: any
	     * attempt to fix the detection will be obstructed. As a result, we're left
	     * with little choice but to throw an error. Unfortunately, this also affects
	     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),
	     * which rely on core-js.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a native function,
	     *  else `false`.
	     * @example
	     *
	     * _.isNative(Array.prototype.push);
	     * // => true
	     *
	     * _.isNative(_);
	     * // => false
	     */
	    function isNative(value) {
	      if (isMaskable(value)) {
	        throw new Error(CORE_ERROR_TEXT);
	      }
	      return baseIsNative(value);
	    }

	    /**
	     * Checks if `value` is `null`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
	     * @example
	     *
	     * _.isNull(null);
	     * // => true
	     *
	     * _.isNull(void 0);
	     * // => false
	     */
	    function isNull(value) {
	      return value === null;
	    }

	    /**
	     * Checks if `value` is `null` or `undefined`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
	     * @example
	     *
	     * _.isNil(null);
	     * // => true
	     *
	     * _.isNil(void 0);
	     * // => true
	     *
	     * _.isNil(NaN);
	     * // => false
	     */
	    function isNil(value) {
	      return value == null;
	    }

	    /**
	     * Checks if `value` is classified as a `Number` primitive or object.
	     *
	     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
	     * classified as numbers, use the `_.isFinite` method.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a number, else `false`.
	     * @example
	     *
	     * _.isNumber(3);
	     * // => true
	     *
	     * _.isNumber(Number.MIN_VALUE);
	     * // => true
	     *
	     * _.isNumber(Infinity);
	     * // => true
	     *
	     * _.isNumber('3');
	     * // => false
	     */
	    function isNumber(value) {
	      return typeof value == 'number' ||
	        (isObjectLike(value) && baseGetTag(value) == numberTag);
	    }

	    /**
	     * Checks if `value` is a plain object, that is, an object created by the
	     * `Object` constructor or one with a `[[Prototype]]` of `null`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.8.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     * }
	     *
	     * _.isPlainObject(new Foo);
	     * // => false
	     *
	     * _.isPlainObject([1, 2, 3]);
	     * // => false
	     *
	     * _.isPlainObject({ 'x': 0, 'y': 0 });
	     * // => true
	     *
	     * _.isPlainObject(Object.create(null));
	     * // => true
	     */
	    function isPlainObject(value) {
	      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
	        return false;
	      }
	      var proto = getPrototype(value);
	      if (proto === null) {
	        return true;
	      }
	      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
	      return typeof Ctor == 'function' && Ctor instanceof Ctor &&
	        funcToString.call(Ctor) == objectCtorString;
	    }

	    /**
	     * Checks if `value` is classified as a `RegExp` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
	     * @example
	     *
	     * _.isRegExp(/abc/);
	     * // => true
	     *
	     * _.isRegExp('/abc/');
	     * // => false
	     */
	    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;

	    /**
	     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754
	     * double precision number which isn't the result of a rounded unsafe integer.
	     *
	     * **Note:** This method is based on
	     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.
	     * @example
	     *
	     * _.isSafeInteger(3);
	     * // => true
	     *
	     * _.isSafeInteger(Number.MIN_VALUE);
	     * // => false
	     *
	     * _.isSafeInteger(Infinity);
	     * // => false
	     *
	     * _.isSafeInteger('3');
	     * // => false
	     */
	    function isSafeInteger(value) {
	      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
	    }

	    /**
	     * Checks if `value` is classified as a `Set` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
	     * @example
	     *
	     * _.isSet(new Set);
	     * // => true
	     *
	     * _.isSet(new WeakSet);
	     * // => false
	     */
	    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;

	    /**
	     * Checks if `value` is classified as a `String` primitive or object.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a string, else `false`.
	     * @example
	     *
	     * _.isString('abc');
	     * // => true
	     *
	     * _.isString(1);
	     * // => false
	     */
	    function isString(value) {
	      return typeof value == 'string' ||
	        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);
	    }

	    /**
	     * Checks if `value` is classified as a `Symbol` primitive or object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
	     * @example
	     *
	     * _.isSymbol(Symbol.iterator);
	     * // => true
	     *
	     * _.isSymbol('abc');
	     * // => false
	     */
	    function isSymbol(value) {
	      return typeof value == 'symbol' ||
	        (isObjectLike(value) && baseGetTag(value) == symbolTag);
	    }

	    /**
	     * Checks if `value` is classified as a typed array.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
	     * @example
	     *
	     * _.isTypedArray(new Uint8Array);
	     * // => true
	     *
	     * _.isTypedArray([]);
	     * // => false
	     */
	    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

	    /**
	     * Checks if `value` is `undefined`.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
	     * @example
	     *
	     * _.isUndefined(void 0);
	     * // => true
	     *
	     * _.isUndefined(null);
	     * // => false
	     */
	    function isUndefined(value) {
	      return value === undefined;
	    }

	    /**
	     * Checks if `value` is classified as a `WeakMap` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.
	     * @example
	     *
	     * _.isWeakMap(new WeakMap);
	     * // => true
	     *
	     * _.isWeakMap(new Map);
	     * // => false
	     */
	    function isWeakMap(value) {
	      return isObjectLike(value) && getTag(value) == weakMapTag;
	    }

	    /**
	     * Checks if `value` is classified as a `WeakSet` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.
	     * @example
	     *
	     * _.isWeakSet(new WeakSet);
	     * // => true
	     *
	     * _.isWeakSet(new Set);
	     * // => false
	     */
	    function isWeakSet(value) {
	      return isObjectLike(value) && baseGetTag(value) == weakSetTag;
	    }

	    /**
	     * Checks if `value` is less than `other`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.9.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is less than `other`,
	     *  else `false`.
	     * @see _.gt
	     * @example
	     *
	     * _.lt(1, 3);
	     * // => true
	     *
	     * _.lt(3, 3);
	     * // => false
	     *
	     * _.lt(3, 1);
	     * // => false
	     */
	    var lt = createRelationalOperation(baseLt);

	    /**
	     * Checks if `value` is less than or equal to `other`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.9.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is less than or equal to
	     *  `other`, else `false`.
	     * @see _.gte
	     * @example
	     *
	     * _.lte(1, 3);
	     * // => true
	     *
	     * _.lte(3, 3);
	     * // => true
	     *
	     * _.lte(3, 1);
	     * // => false
	     */
	    var lte = createRelationalOperation(function(value, other) {
	      return value <= other;
	    });

	    /**
	     * Converts `value` to an array.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {Array} Returns the converted array.
	     * @example
	     *
	     * _.toArray({ 'a': 1, 'b': 2 });
	     * // => [1, 2]
	     *
	     * _.toArray('abc');
	     * // => ['a', 'b', 'c']
	     *
	     * _.toArray(1);
	     * // => []
	     *
	     * _.toArray(null);
	     * // => []
	     */
	    function toArray(value) {
	      if (!value) {
	        return [];
	      }
	      if (isArrayLike(value)) {
	        return isString(value) ? stringToArray(value) : copyArray(value);
	      }
	      if (symIterator && value[symIterator]) {
	        return iteratorToArray(value[symIterator]());
	      }
	      var tag = getTag(value),
	          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);

	      return func(value);
	    }

	    /**
	     * Converts `value` to a finite number.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.12.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {number} Returns the converted number.
	     * @example
	     *
	     * _.toFinite(3.2);
	     * // => 3.2
	     *
	     * _.toFinite(Number.MIN_VALUE);
	     * // => 5e-324
	     *
	     * _.toFinite(Infinity);
	     * // => 1.7976931348623157e+308
	     *
	     * _.toFinite('3.2');
	     * // => 3.2
	     */
	    function toFinite(value) {
	      if (!value) {
	        return value === 0 ? value : 0;
	      }
	      value = toNumber(value);
	      if (value === INFINITY || value === -INFINITY) {
	        var sign = (value < 0 ? -1 : 1);
	        return sign * MAX_INTEGER;
	      }
	      return value === value ? value : 0;
	    }

	    /**
	     * Converts `value` to an integer.
	     *
	     * **Note:** This method is loosely based on
	     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {number} Returns the converted integer.
	     * @example
	     *
	     * _.toInteger(3.2);
	     * // => 3
	     *
	     * _.toInteger(Number.MIN_VALUE);
	     * // => 0
	     *
	     * _.toInteger(Infinity);
	     * // => 1.7976931348623157e+308
	     *
	     * _.toInteger('3.2');
	     * // => 3
	     */
	    function toInteger(value) {
	      var result = toFinite(value),
	          remainder = result % 1;

	      return result === result ? (remainder ? result - remainder : result) : 0;
	    }

	    /**
	     * Converts `value` to an integer suitable for use as the length of an
	     * array-like object.
	     *
	     * **Note:** This method is based on
	     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {number} Returns the converted integer.
	     * @example
	     *
	     * _.toLength(3.2);
	     * // => 3
	     *
	     * _.toLength(Number.MIN_VALUE);
	     * // => 0
	     *
	     * _.toLength(Infinity);
	     * // => 4294967295
	     *
	     * _.toLength('3.2');
	     * // => 3
	     */
	    function toLength(value) {
	      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
	    }

	    /**
	     * Converts `value` to a number.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to process.
	     * @returns {number} Returns the number.
	     * @example
	     *
	     * _.toNumber(3.2);
	     * // => 3.2
	     *
	     * _.toNumber(Number.MIN_VALUE);
	     * // => 5e-324
	     *
	     * _.toNumber(Infinity);
	     * // => Infinity
	     *
	     * _.toNumber('3.2');
	     * // => 3.2
	     */
	    function toNumber(value) {
	      if (typeof value == 'number') {
	        return value;
	      }
	      if (isSymbol(value)) {
	        return NAN;
	      }
	      if (isObject(value)) {
	        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
	        value = isObject(other) ? (other + '') : other;
	      }
	      if (typeof value != 'string') {
	        return value === 0 ? value : +value;
	      }
	      value = value.replace(reTrim, '');
	      var isBinary = reIsBinary.test(value);
	      return (isBinary || reIsOctal.test(value))
	        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
	        : (reIsBadHex.test(value) ? NAN : +value);
	    }

	    /**
	     * Converts `value` to a plain object flattening inherited enumerable string
	     * keyed properties of `value` to own properties of the plain object.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {Object} Returns the converted plain object.
	     * @example
	     *
	     * function Foo() {
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.assign({ 'a': 1 }, new Foo);
	     * // => { 'a': 1, 'b': 2 }
	     *
	     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
	     * // => { 'a': 1, 'b': 2, 'c': 3 }
	     */
	    function toPlainObject(value) {
	      return copyObject(value, keysIn(value));
	    }

	    /**
	     * Converts `value` to a safe integer. A safe integer can be compared and
	     * represented correctly.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {number} Returns the converted integer.
	     * @example
	     *
	     * _.toSafeInteger(3.2);
	     * // => 3
	     *
	     * _.toSafeInteger(Number.MIN_VALUE);
	     * // => 0
	     *
	     * _.toSafeInteger(Infinity);
	     * // => 9007199254740991
	     *
	     * _.toSafeInteger('3.2');
	     * // => 3
	     */
	    function toSafeInteger(value) {
	      return value
	        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)
	        : (value === 0 ? value : 0);
	    }

	    /**
	     * Converts `value` to a string. An empty string is returned for `null`
	     * and `undefined` values. The sign of `-0` is preserved.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {string} Returns the converted string.
	     * @example
	     *
	     * _.toString(null);
	     * // => ''
	     *
	     * _.toString(-0);
	     * // => '-0'
	     *
	     * _.toString([1, 2, 3]);
	     * // => '1,2,3'
	     */
	    function toString(value) {
	      return value == null ? '' : baseToString(value);
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Assigns own enumerable string keyed properties of source objects to the
	     * destination object. Source objects are applied from left to right.
	     * Subsequent sources overwrite property assignments of previous sources.
	     *
	     * **Note:** This method mutates `object` and is loosely based on
	     * [`Object.assign`](https://mdn.io/Object/assign).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.10.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @see _.assignIn
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     * }
	     *
	     * function Bar() {
	     *   this.c = 3;
	     * }
	     *
	     * Foo.prototype.b = 2;
	     * Bar.prototype.d = 4;
	     *
	     * _.assign({ 'a': 0 }, new Foo, new Bar);
	     * // => { 'a': 1, 'c': 3 }
	     */
	    var assign = createAssigner(function(object, source) {
	      if (isPrototype(source) || isArrayLike(source)) {
	        copyObject(source, keys(source), object);
	        return;
	      }
	      for (var key in source) {
	        if (hasOwnProperty.call(source, key)) {
	          assignValue(object, key, source[key]);
	        }
	      }
	    });

	    /**
	     * This method is like `_.assign` except that it iterates over own and
	     * inherited source properties.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @alias extend
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @see _.assign
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     * }
	     *
	     * function Bar() {
	     *   this.c = 3;
	     * }
	     *
	     * Foo.prototype.b = 2;
	     * Bar.prototype.d = 4;
	     *
	     * _.assignIn({ 'a': 0 }, new Foo, new Bar);
	     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }
	     */
	    var assignIn = createAssigner(function(object, source) {
	      copyObject(source, keysIn(source), object);
	    });

	    /**
	     * This method is like `_.assignIn` except that it accepts `customizer`
	     * which is invoked to produce the assigned values. If `customizer` returns
	     * `undefined`, assignment is handled by the method instead. The `customizer`
	     * is invoked with five arguments: (objValue, srcValue, key, object, source).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @alias extendWith
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} sources The source objects.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @see _.assignWith
	     * @example
	     *
	     * function customizer(objValue, srcValue) {
	     *   return _.isUndefined(objValue) ? srcValue : objValue;
	     * }
	     *
	     * var defaults = _.partialRight(_.assignInWith, customizer);
	     *
	     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
	     * // => { 'a': 1, 'b': 2 }
	     */
	    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
	      copyObject(source, keysIn(source), object, customizer);
	    });

	    /**
	     * This method is like `_.assign` except that it accepts `customizer`
	     * which is invoked to produce the assigned values. If `customizer` returns
	     * `undefined`, assignment is handled by the method instead. The `customizer`
	     * is invoked with five arguments: (objValue, srcValue, key, object, source).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} sources The source objects.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @see _.assignInWith
	     * @example
	     *
	     * function customizer(objValue, srcValue) {
	     *   return _.isUndefined(objValue) ? srcValue : objValue;
	     * }
	     *
	     * var defaults = _.partialRight(_.assignWith, customizer);
	     *
	     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
	     * // => { 'a': 1, 'b': 2 }
	     */
	    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
	      copyObject(source, keys(source), object, customizer);
	    });

	    /**
	     * Creates an array of values corresponding to `paths` of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.0.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {...(string|string[])} [paths] The property paths to pick.
	     * @returns {Array} Returns the picked values.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
	     *
	     * _.at(object, ['a[0].b.c', 'a[1]']);
	     * // => [3, 4]
	     */
	    var at = flatRest(baseAt);

	    /**
	     * Creates an object that inherits from the `prototype` object. If a
	     * `properties` object is given, its own enumerable string keyed properties
	     * are assigned to the created object.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.3.0
	     * @category Object
	     * @param {Object} prototype The object to inherit from.
	     * @param {Object} [properties] The properties to assign to the object.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * function Shape() {
	     *   this.x = 0;
	     *   this.y = 0;
	     * }
	     *
	     * function Circle() {
	     *   Shape.call(this);
	     * }
	     *
	     * Circle.prototype = _.create(Shape.prototype, {
	     *   'constructor': Circle
	     * });
	     *
	     * var circle = new Circle;
	     * circle instanceof Circle;
	     * // => true
	     *
	     * circle instanceof Shape;
	     * // => true
	     */
	    function create(prototype, properties) {
	      var result = baseCreate(prototype);
	      return properties == null ? result : baseAssign(result, properties);
	    }

	    /**
	     * Assigns own and inherited enumerable string keyed properties of source
	     * objects to the destination object for all destination properties that
	     * resolve to `undefined`. Source objects are applied from left to right.
	     * Once a property is set, additional values of the same property are ignored.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @see _.defaultsDeep
	     * @example
	     *
	     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
	     * // => { 'a': 1, 'b': 2 }
	     */
	    var defaults = baseRest(function(args) {
	      args.push(undefined, customDefaultsAssignIn);
	      return apply(assignInWith, undefined, args);
	    });

	    /**
	     * This method is like `_.defaults` except that it recursively assigns
	     * default properties.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.10.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @see _.defaults
	     * @example
	     *
	     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });
	     * // => { 'a': { 'b': 2, 'c': 3 } }
	     */
	    var defaultsDeep = baseRest(function(args) {
	      args.push(undefined, customDefaultsMerge);
	      return apply(mergeWith, undefined, args);
	    });

	    /**
	     * This method is like `_.find` except that it returns the key of the first
	     * element `predicate` returns truthy for instead of the element itself.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.1.0
	     * @category Object
	     * @param {Object} object The object to inspect.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {string|undefined} Returns the key of the matched element,
	     *  else `undefined`.
	     * @example
	     *
	     * var users = {
	     *   'barney':  { 'age': 36, 'active': true },
	     *   'fred':    { 'age': 40, 'active': false },
	     *   'pebbles': { 'age': 1,  'active': true }
	     * };
	     *
	     * _.findKey(users, function(o) { return o.age < 40; });
	     * // => 'barney' (iteration order is not guaranteed)
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.findKey(users, { 'age': 1, 'active': true });
	     * // => 'pebbles'
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.findKey(users, ['active', false]);
	     * // => 'fred'
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.findKey(users, 'active');
	     * // => 'barney'
	     */
	    function findKey(object, predicate) {
	      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
	    }

	    /**
	     * This method is like `_.findKey` except that it iterates over elements of
	     * a collection in the opposite order.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Object
	     * @param {Object} object The object to inspect.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {string|undefined} Returns the key of the matched element,
	     *  else `undefined`.
	     * @example
	     *
	     * var users = {
	     *   'barney':  { 'age': 36, 'active': true },
	     *   'fred':    { 'age': 40, 'active': false },
	     *   'pebbles': { 'age': 1,  'active': true }
	     * };
	     *
	     * _.findLastKey(users, function(o) { return o.age < 40; });
	     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.findLastKey(users, { 'age': 36, 'active': true });
	     * // => 'barney'
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.findLastKey(users, ['active', false]);
	     * // => 'fred'
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.findLastKey(users, 'active');
	     * // => 'pebbles'
	     */
	    function findLastKey(object, predicate) {
	      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
	    }

	    /**
	     * Iterates over own and inherited enumerable string keyed properties of an
	     * object and invokes `iteratee` for each property. The iteratee is invoked
	     * with three arguments: (value, key, object). Iteratee functions may exit
	     * iteration early by explicitly returning `false`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.3.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     * @see _.forInRight
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.forIn(new Foo, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
	     */
	    function forIn(object, iteratee) {
	      return object == null
	        ? object
	        : baseFor(object, getIteratee(iteratee, 3), keysIn);
	    }

	    /**
	     * This method is like `_.forIn` except that it iterates over properties of
	     * `object` in the opposite order.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     * @see _.forIn
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.forInRight(new Foo, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.
	     */
	    function forInRight(object, iteratee) {
	      return object == null
	        ? object
	        : baseForRight(object, getIteratee(iteratee, 3), keysIn);
	    }

	    /**
	     * Iterates over own enumerable string keyed properties of an object and
	     * invokes `iteratee` for each property. The iteratee is invoked with three
	     * arguments: (value, key, object). Iteratee functions may exit iteration
	     * early by explicitly returning `false`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.3.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     * @see _.forOwnRight
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.forOwn(new Foo, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
	     */
	    function forOwn(object, iteratee) {
	      return object && baseForOwn(object, getIteratee(iteratee, 3));
	    }

	    /**
	     * This method is like `_.forOwn` except that it iterates over properties of
	     * `object` in the opposite order.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     * @see _.forOwn
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.forOwnRight(new Foo, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.
	     */
	    function forOwnRight(object, iteratee) {
	      return object && baseForOwnRight(object, getIteratee(iteratee, 3));
	    }

	    /**
	     * Creates an array of function property names from own enumerable properties
	     * of `object`.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to inspect.
	     * @returns {Array} Returns the function names.
	     * @see _.functionsIn
	     * @example
	     *
	     * function Foo() {
	     *   this.a = _.constant('a');
	     *   this.b = _.constant('b');
	     * }
	     *
	     * Foo.prototype.c = _.constant('c');
	     *
	     * _.functions(new Foo);
	     * // => ['a', 'b']
	     */
	    function functions(object) {
	      return object == null ? [] : baseFunctions(object, keys(object));
	    }

	    /**
	     * Creates an array of function property names from own and inherited
	     * enumerable properties of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to inspect.
	     * @returns {Array} Returns the function names.
	     * @see _.functions
	     * @example
	     *
	     * function Foo() {
	     *   this.a = _.constant('a');
	     *   this.b = _.constant('b');
	     * }
	     *
	     * Foo.prototype.c = _.constant('c');
	     *
	     * _.functionsIn(new Foo);
	     * // => ['a', 'b', 'c']
	     */
	    function functionsIn(object) {
	      return object == null ? [] : baseFunctions(object, keysIn(object));
	    }

	    /**
	     * Gets the value at `path` of `object`. If the resolved value is
	     * `undefined`, the `defaultValue` is returned in its place.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.7.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the property to get.
	     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
	     * @returns {*} Returns the resolved value.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	     *
	     * _.get(object, 'a[0].b.c');
	     * // => 3
	     *
	     * _.get(object, ['a', '0', 'b', 'c']);
	     * // => 3
	     *
	     * _.get(object, 'a.b.c', 'default');
	     * // => 'default'
	     */
	    function get(object, path, defaultValue) {
	      var result = object == null ? undefined : baseGet(object, path);
	      return result === undefined ? defaultValue : result;
	    }

	    /**
	     * Checks if `path` is a direct property of `object`.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path to check.
	     * @returns {boolean} Returns `true` if `path` exists, else `false`.
	     * @example
	     *
	     * var object = { 'a': { 'b': 2 } };
	     * var other = _.create({ 'a': _.create({ 'b': 2 }) });
	     *
	     * _.has(object, 'a');
	     * // => true
	     *
	     * _.has(object, 'a.b');
	     * // => true
	     *
	     * _.has(object, ['a', 'b']);
	     * // => true
	     *
	     * _.has(other, 'a');
	     * // => false
	     */
	    function has(object, path) {
	      return object != null && hasPath(object, path, baseHas);
	    }

	    /**
	     * Checks if `path` is a direct or inherited property of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path to check.
	     * @returns {boolean} Returns `true` if `path` exists, else `false`.
	     * @example
	     *
	     * var object = _.create({ 'a': _.create({ 'b': 2 }) });
	     *
	     * _.hasIn(object, 'a');
	     * // => true
	     *
	     * _.hasIn(object, 'a.b');
	     * // => true
	     *
	     * _.hasIn(object, ['a', 'b']);
	     * // => true
	     *
	     * _.hasIn(object, 'b');
	     * // => false
	     */
	    function hasIn(object, path) {
	      return object != null && hasPath(object, path, baseHasIn);
	    }

	    /**
	     * Creates an object composed of the inverted keys and values of `object`.
	     * If `object` contains duplicate values, subsequent values overwrite
	     * property assignments of previous values.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.7.0
	     * @category Object
	     * @param {Object} object The object to invert.
	     * @returns {Object} Returns the new inverted object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': 2, 'c': 1 };
	     *
	     * _.invert(object);
	     * // => { '1': 'c', '2': 'b' }
	     */
	    var invert = createInverter(function(result, value, key) {
	      result[value] = key;
	    }, constant(identity));

	    /**
	     * This method is like `_.invert` except that the inverted object is generated
	     * from the results of running each element of `object` thru `iteratee`. The
	     * corresponding inverted value of each inverted key is an array of keys
	     * responsible for generating the inverted value. The iteratee is invoked
	     * with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.1.0
	     * @category Object
	     * @param {Object} object The object to invert.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {Object} Returns the new inverted object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': 2, 'c': 1 };
	     *
	     * _.invertBy(object);
	     * // => { '1': ['a', 'c'], '2': ['b'] }
	     *
	     * _.invertBy(object, function(value) {
	     *   return 'group' + value;
	     * });
	     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }
	     */
	    var invertBy = createInverter(function(result, value, key) {
	      if (hasOwnProperty.call(result, value)) {
	        result[value].push(key);
	      } else {
	        result[value] = [key];
	      }
	    }, getIteratee);

	    /**
	     * Invokes the method at `path` of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the method to invoke.
	     * @param {...*} [args] The arguments to invoke the method with.
	     * @returns {*} Returns the result of the invoked method.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
	     *
	     * _.invoke(object, 'a[0].b.c.slice', 1, 3);
	     * // => [2, 3]
	     */
	    var invoke = baseRest(baseInvoke);

	    /**
	     * Creates an array of the own enumerable property names of `object`.
	     *
	     * **Note:** Non-object values are coerced to objects. See the
	     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
	     * for more details.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.keys(new Foo);
	     * // => ['a', 'b'] (iteration order is not guaranteed)
	     *
	     * _.keys('hi');
	     * // => ['0', '1']
	     */
	    function keys(object) {
	      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
	    }

	    /**
	     * Creates an array of the own and inherited enumerable property names of `object`.
	     *
	     * **Note:** Non-object values are coerced to objects.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.keysIn(new Foo);
	     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
	     */
	    function keysIn(object) {
	      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
	    }

	    /**
	     * The opposite of `_.mapValues`; this method creates an object with the
	     * same values as `object` and keys generated by running each own enumerable
	     * string keyed property of `object` thru `iteratee`. The iteratee is invoked
	     * with three arguments: (value, key, object).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.8.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns the new mapped object.
	     * @see _.mapValues
	     * @example
	     *
	     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
	     *   return key + value;
	     * });
	     * // => { 'a1': 1, 'b2': 2 }
	     */
	    function mapKeys(object, iteratee) {
	      var result = {};
	      iteratee = getIteratee(iteratee, 3);

	      baseForOwn(object, function(value, key, object) {
	        baseAssignValue(result, iteratee(value, key, object), value);
	      });
	      return result;
	    }

	    /**
	     * Creates an object with the same keys as `object` and values generated
	     * by running each own enumerable string keyed property of `object` thru
	     * `iteratee`. The iteratee is invoked with three arguments:
	     * (value, key, object).
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns the new mapped object.
	     * @see _.mapKeys
	     * @example
	     *
	     * var users = {
	     *   'fred':    { 'user': 'fred',    'age': 40 },
	     *   'pebbles': { 'user': 'pebbles', 'age': 1 }
	     * };
	     *
	     * _.mapValues(users, function(o) { return o.age; });
	     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.mapValues(users, 'age');
	     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
	     */
	    function mapValues(object, iteratee) {
	      var result = {};
	      iteratee = getIteratee(iteratee, 3);

	      baseForOwn(object, function(value, key, object) {
	        baseAssignValue(result, key, iteratee(value, key, object));
	      });
	      return result;
	    }

	    /**
	     * This method is like `_.assign` except that it recursively merges own and
	     * inherited enumerable string keyed properties of source objects into the
	     * destination object. Source properties that resolve to `undefined` are
	     * skipped if a destination value exists. Array and plain object properties
	     * are merged recursively. Other objects and value types are overridden by
	     * assignment. Source objects are applied from left to right. Subsequent
	     * sources overwrite property assignments of previous sources.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.5.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var object = {
	     *   'a': [{ 'b': 2 }, { 'd': 4 }]
	     * };
	     *
	     * var other = {
	     *   'a': [{ 'c': 3 }, { 'e': 5 }]
	     * };
	     *
	     * _.merge(object, other);
	     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
	     */
	    var merge = createAssigner(function(object, source, srcIndex) {
	      baseMerge(object, source, srcIndex);
	    });

	    /**
	     * This method is like `_.merge` except that it accepts `customizer` which
	     * is invoked to produce the merged values of the destination and source
	     * properties. If `customizer` returns `undefined`, merging is handled by the
	     * method instead. The `customizer` is invoked with six arguments:
	     * (objValue, srcValue, key, object, source, stack).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} sources The source objects.
	     * @param {Function} customizer The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * function customizer(objValue, srcValue) {
	     *   if (_.isArray(objValue)) {
	     *     return objValue.concat(srcValue);
	     *   }
	     * }
	     *
	     * var object = { 'a': [1], 'b': [2] };
	     * var other = { 'a': [3], 'b': [4] };
	     *
	     * _.mergeWith(object, other, customizer);
	     * // => { 'a': [1, 3], 'b': [2, 4] }
	     */
	    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
	      baseMerge(object, source, srcIndex, customizer);
	    });

	    /**
	     * The opposite of `_.pick`; this method creates an object composed of the
	     * own and inherited enumerable property paths of `object` that are not omitted.
	     *
	     * **Note:** This method is considerably slower than `_.pick`.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The source object.
	     * @param {...(string|string[])} [paths] The property paths to omit.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': '2', 'c': 3 };
	     *
	     * _.omit(object, ['a', 'c']);
	     * // => { 'b': '2' }
	     */
	    var omit = flatRest(function(object, paths) {
	      var result = {};
	      if (object == null) {
	        return result;
	      }
	      var isDeep = false;
	      paths = arrayMap(paths, function(path) {
	        path = castPath(path, object);
	        isDeep || (isDeep = path.length > 1);
	        return path;
	      });
	      copyObject(object, getAllKeysIn(object), result);
	      if (isDeep) {
	        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
	      }
	      var length = paths.length;
	      while (length--) {
	        baseUnset(result, paths[length]);
	      }
	      return result;
	    });

	    /**
	     * The opposite of `_.pickBy`; this method creates an object composed of
	     * the own and inherited enumerable string keyed properties of `object` that
	     * `predicate` doesn't return truthy for. The predicate is invoked with two
	     * arguments: (value, key).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The source object.
	     * @param {Function} [predicate=_.identity] The function invoked per property.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': '2', 'c': 3 };
	     *
	     * _.omitBy(object, _.isNumber);
	     * // => { 'b': '2' }
	     */
	    function omitBy(object, predicate) {
	      return pickBy(object, negate(getIteratee(predicate)));
	    }

	    /**
	     * Creates an object composed of the picked `object` properties.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The source object.
	     * @param {...(string|string[])} [paths] The property paths to pick.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': '2', 'c': 3 };
	     *
	     * _.pick(object, ['a', 'c']);
	     * // => { 'a': 1, 'c': 3 }
	     */
	    var pick = flatRest(function(object, paths) {
	      return object == null ? {} : basePick(object, paths);
	    });

	    /**
	     * Creates an object composed of the `object` properties `predicate` returns
	     * truthy for. The predicate is invoked with two arguments: (value, key).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The source object.
	     * @param {Function} [predicate=_.identity] The function invoked per property.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': '2', 'c': 3 };
	     *
	     * _.pickBy(object, _.isNumber);
	     * // => { 'a': 1, 'c': 3 }
	     */
	    function pickBy(object, predicate) {
	      if (object == null) {
	        return {};
	      }
	      var props = arrayMap(getAllKeysIn(object), function(prop) {
	        return [prop];
	      });
	      predicate = getIteratee(predicate);
	      return basePickBy(object, props, function(value, path) {
	        return predicate(value, path[0]);
	      });
	    }

	    /**
	     * This method is like `_.get` except that if the resolved value is a
	     * function it's invoked with the `this` binding of its parent object and
	     * its result is returned.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the property to resolve.
	     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
	     * @returns {*} Returns the resolved value.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
	     *
	     * _.result(object, 'a[0].b.c1');
	     * // => 3
	     *
	     * _.result(object, 'a[0].b.c2');
	     * // => 4
	     *
	     * _.result(object, 'a[0].b.c3', 'default');
	     * // => 'default'
	     *
	     * _.result(object, 'a[0].b.c3', _.constant('default'));
	     * // => 'default'
	     */
	    function result(object, path, defaultValue) {
	      path = castPath(path, object);

	      var index = -1,
	          length = path.length;

	      // Ensure the loop is entered when path is empty.
	      if (!length) {
	        length = 1;
	        object = undefined;
	      }
	      while (++index < length) {
	        var value = object == null ? undefined : object[toKey(path[index])];
	        if (value === undefined) {
	          index = length;
	          value = defaultValue;
	        }
	        object = isFunction(value) ? value.call(object) : value;
	      }
	      return object;
	    }

	    /**
	     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
	     * it's created. Arrays are created for missing index properties while objects
	     * are created for all other missing properties. Use `_.setWith` to customize
	     * `path` creation.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.7.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to set.
	     * @param {*} value The value to set.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	     *
	     * _.set(object, 'a[0].b.c', 4);
	     * console.log(object.a[0].b.c);
	     * // => 4
	     *
	     * _.set(object, ['x', '0', 'y', 'z'], 5);
	     * console.log(object.x[0].y.z);
	     * // => 5
	     */
	    function set(object, path, value) {
	      return object == null ? object : baseSet(object, path, value);
	    }

	    /**
	     * This method is like `_.set` except that it accepts `customizer` which is
	     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
	     * path creation is handled by the method instead. The `customizer` is invoked
	     * with three arguments: (nsValue, key, nsObject).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to set.
	     * @param {*} value The value to set.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var object = {};
	     *
	     * _.setWith(object, '[0][1]', 'a', Object);
	     * // => { '0': { '1': 'a' } }
	     */
	    function setWith(object, path, value, customizer) {
	      customizer = typeof customizer == 'function' ? customizer : undefined;
	      return object == null ? object : baseSet(object, path, value, customizer);
	    }

	    /**
	     * Creates an array of own enumerable string keyed-value pairs for `object`
	     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its
	     * entries are returned.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @alias entries
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the key-value pairs.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.toPairs(new Foo);
	     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
	     */
	    var toPairs = createToPairs(keys);

	    /**
	     * Creates an array of own and inherited enumerable string keyed-value pairs
	     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map
	     * or set, its entries are returned.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @alias entriesIn
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the key-value pairs.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.toPairsIn(new Foo);
	     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)
	     */
	    var toPairsIn = createToPairs(keysIn);

	    /**
	     * An alternative to `_.reduce`; this method transforms `object` to a new
	     * `accumulator` object which is the result of running each of its own
	     * enumerable string keyed properties thru `iteratee`, with each invocation
	     * potentially mutating the `accumulator` object. If `accumulator` is not
	     * provided, a new object with the same `[[Prototype]]` will be used. The
	     * iteratee is invoked with four arguments: (accumulator, value, key, object).
	     * Iteratee functions may exit iteration early by explicitly returning `false`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.3.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @param {*} [accumulator] The custom accumulator value.
	     * @returns {*} Returns the accumulated value.
	     * @example
	     *
	     * _.transform([2, 3, 4], function(result, n) {
	     *   result.push(n *= n);
	     *   return n % 2 == 0;
	     * }, []);
	     * // => [4, 9]
	     *
	     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
	     *   (result[value] || (result[value] = [])).push(key);
	     * }, {});
	     * // => { '1': ['a', 'c'], '2': ['b'] }
	     */
	    function transform(object, iteratee, accumulator) {
	      var isArr = isArray(object),
	          isArrLike = isArr || isBuffer(object) || isTypedArray(object);

	      iteratee = getIteratee(iteratee, 4);
	      if (accumulator == null) {
	        var Ctor = object && object.constructor;
	        if (isArrLike) {
	          accumulator = isArr ? new Ctor : [];
	        }
	        else if (isObject(object)) {
	          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
	        }
	        else {
	          accumulator = {};
	        }
	      }
	      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {
	        return iteratee(accumulator, value, index, object);
	      });
	      return accumulator;
	    }

	    /**
	     * Removes the property at `path` of `object`.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to unset.
	     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 7 } }] };
	     * _.unset(object, 'a[0].b.c');
	     * // => true
	     *
	     * console.log(object);
	     * // => { 'a': [{ 'b': {} }] };
	     *
	     * _.unset(object, ['a', '0', 'b', 'c']);
	     * // => true
	     *
	     * console.log(object);
	     * // => { 'a': [{ 'b': {} }] };
	     */
	    function unset(object, path) {
	      return object == null ? true : baseUnset(object, path);
	    }

	    /**
	     * This method is like `_.set` except that accepts `updater` to produce the
	     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
	     * is invoked with one argument: (value).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.6.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to set.
	     * @param {Function} updater The function to produce the updated value.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	     *
	     * _.update(object, 'a[0].b.c', function(n) { return n * n; });
	     * console.log(object.a[0].b.c);
	     * // => 9
	     *
	     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });
	     * console.log(object.x[0].y.z);
	     * // => 0
	     */
	    function update(object, path, updater) {
	      return object == null ? object : baseUpdate(object, path, castFunction(updater));
	    }

	    /**
	     * This method is like `_.update` except that it accepts `customizer` which is
	     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
	     * path creation is handled by the method instead. The `customizer` is invoked
	     * with three arguments: (nsValue, key, nsObject).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.6.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to set.
	     * @param {Function} updater The function to produce the updated value.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var object = {};
	     *
	     * _.updateWith(object, '[0][1]', _.constant('a'), Object);
	     * // => { '0': { '1': 'a' } }
	     */
	    function updateWith(object, path, updater, customizer) {
	      customizer = typeof customizer == 'function' ? customizer : undefined;
	      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
	    }

	    /**
	     * Creates an array of the own enumerable string keyed property values of `object`.
	     *
	     * **Note:** Non-object values are coerced to objects.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property values.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.values(new Foo);
	     * // => [1, 2] (iteration order is not guaranteed)
	     *
	     * _.values('hi');
	     * // => ['h', 'i']
	     */
	    function values(object) {
	      return object == null ? [] : baseValues(object, keys(object));
	    }

	    /**
	     * Creates an array of the own and inherited enumerable string keyed property
	     * values of `object`.
	     *
	     * **Note:** Non-object values are coerced to objects.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property values.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.valuesIn(new Foo);
	     * // => [1, 2, 3] (iteration order is not guaranteed)
	     */
	    function valuesIn(object) {
	      return object == null ? [] : baseValues(object, keysIn(object));
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Clamps `number` within the inclusive `lower` and `upper` bounds.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Number
	     * @param {number} number The number to clamp.
	     * @param {number} [lower] The lower bound.
	     * @param {number} upper The upper bound.
	     * @returns {number} Returns the clamped number.
	     * @example
	     *
	     * _.clamp(-10, -5, 5);
	     * // => -5
	     *
	     * _.clamp(10, -5, 5);
	     * // => 5
	     */
	    function clamp(number, lower, upper) {
	      if (upper === undefined) {
	        upper = lower;
	        lower = undefined;
	      }
	      if (upper !== undefined) {
	        upper = toNumber(upper);
	        upper = upper === upper ? upper : 0;
	      }
	      if (lower !== undefined) {
	        lower = toNumber(lower);
	        lower = lower === lower ? lower : 0;
	      }
	      return baseClamp(toNumber(number), lower, upper);
	    }

	    /**
	     * Checks if `n` is between `start` and up to, but not including, `end`. If
	     * `end` is not specified, it's set to `start` with `start` then set to `0`.
	     * If `start` is greater than `end` the params are swapped to support
	     * negative ranges.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.3.0
	     * @category Number
	     * @param {number} number The number to check.
	     * @param {number} [start=0] The start of the range.
	     * @param {number} end The end of the range.
	     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
	     * @see _.range, _.rangeRight
	     * @example
	     *
	     * _.inRange(3, 2, 4);
	     * // => true
	     *
	     * _.inRange(4, 8);
	     * // => true
	     *
	     * _.inRange(4, 2);
	     * // => false
	     *
	     * _.inRange(2, 2);
	     * // => false
	     *
	     * _.inRange(1.2, 2);
	     * // => true
	     *
	     * _.inRange(5.2, 4);
	     * // => false
	     *
	     * _.inRange(-3, -2, -6);
	     * // => true
	     */
	    function inRange(number, start, end) {
	      start = toFinite(start);
	      if (end === undefined) {
	        end = start;
	        start = 0;
	      } else {
	        end = toFinite(end);
	      }
	      number = toNumber(number);
	      return baseInRange(number, start, end);
	    }

	    /**
	     * Produces a random number between the inclusive `lower` and `upper` bounds.
	     * If only one argument is provided a number between `0` and the given number
	     * is returned. If `floating` is `true`, or either `lower` or `upper` are
	     * floats, a floating-point number is returned instead of an integer.
	     *
	     * **Note:** JavaScript follows the IEEE-754 standard for resolving
	     * floating-point values which can produce unexpected results.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.7.0
	     * @category Number
	     * @param {number} [lower=0] The lower bound.
	     * @param {number} [upper=1] The upper bound.
	     * @param {boolean} [floating] Specify returning a floating-point number.
	     * @returns {number} Returns the random number.
	     * @example
	     *
	     * _.random(0, 5);
	     * // => an integer between 0 and 5
	     *
	     * _.random(5);
	     * // => also an integer between 0 and 5
	     *
	     * _.random(5, true);
	     * // => a floating-point number between 0 and 5
	     *
	     * _.random(1.2, 5.2);
	     * // => a floating-point number between 1.2 and 5.2
	     */
	    function random(lower, upper, floating) {
	      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {
	        upper = floating = undefined;
	      }
	      if (floating === undefined) {
	        if (typeof upper == 'boolean') {
	          floating = upper;
	          upper = undefined;
	        }
	        else if (typeof lower == 'boolean') {
	          floating = lower;
	          lower = undefined;
	        }
	      }
	      if (lower === undefined && upper === undefined) {
	        lower = 0;
	        upper = 1;
	      }
	      else {
	        lower = toFinite(lower);
	        if (upper === undefined) {
	          upper = lower;
	          lower = 0;
	        } else {
	          upper = toFinite(upper);
	        }
	      }
	      if (lower > upper) {
	        var temp = lower;
	        lower = upper;
	        upper = temp;
	      }
	      if (floating || lower % 1 || upper % 1) {
	        var rand = nativeRandom();
	        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);
	      }
	      return baseRandom(lower, upper);
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the camel cased string.
	     * @example
	     *
	     * _.camelCase('Foo Bar');
	     * // => 'fooBar'
	     *
	     * _.camelCase('--foo-bar--');
	     * // => 'fooBar'
	     *
	     * _.camelCase('__FOO_BAR__');
	     * // => 'fooBar'
	     */
	    var camelCase = createCompounder(function(result, word, index) {
	      word = word.toLowerCase();
	      return result + (index ? capitalize(word) : word);
	    });

	    /**
	     * Converts the first character of `string` to upper case and the remaining
	     * to lower case.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to capitalize.
	     * @returns {string} Returns the capitalized string.
	     * @example
	     *
	     * _.capitalize('FRED');
	     * // => 'Fred'
	     */
	    function capitalize(string) {
	      return upperFirst(toString(string).toLowerCase());
	    }

	    /**
	     * Deburrs `string` by converting
	     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
	     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
	     * letters to basic Latin letters and removing
	     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to deburr.
	     * @returns {string} Returns the deburred string.
	     * @example
	     *
	     * _.deburr('déjà vu');
	     * // => 'deja vu'
	     */
	    function deburr(string) {
	      string = toString(string);
	      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
	    }

	    /**
	     * Checks if `string` ends with the given target string.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to inspect.
	     * @param {string} [target] The string to search for.
	     * @param {number} [position=string.length] The position to search up to.
	     * @returns {boolean} Returns `true` if `string` ends with `target`,
	     *  else `false`.
	     * @example
	     *
	     * _.endsWith('abc', 'c');
	     * // => true
	     *
	     * _.endsWith('abc', 'b');
	     * // => false
	     *
	     * _.endsWith('abc', 'b', 2);
	     * // => true
	     */
	    function endsWith(string, target, position) {
	      string = toString(string);
	      target = baseToString(target);

	      var length = string.length;
	      position = position === undefined
	        ? length
	        : baseClamp(toInteger(position), 0, length);

	      var end = position;
	      position -= target.length;
	      return position >= 0 && string.slice(position, end) == target;
	    }

	    /**
	     * Converts the characters "&", "<", ">", '"', and "'" in `string` to their
	     * corresponding HTML entities.
	     *
	     * **Note:** No other characters are escaped. To escape additional
	     * characters use a third-party library like [_he_](https://mths.be/he).
	     *
	     * Though the ">" character is escaped for symmetry, characters like
	     * ">" and "/" don't need escaping in HTML and have no special meaning
	     * unless they're part of a tag or unquoted attribute value. See
	     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
	     * (under "semi-related fun fact") for more details.
	     *
	     * When working with HTML you should always
	     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce
	     * XSS vectors.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category String
	     * @param {string} [string=''] The string to escape.
	     * @returns {string} Returns the escaped string.
	     * @example
	     *
	     * _.escape('fred, barney, & pebbles');
	     * // => 'fred, barney, &amp; pebbles'
	     */
	    function escape(string) {
	      string = toString(string);
	      return (string && reHasUnescapedHtml.test(string))
	        ? string.replace(reUnescapedHtml, escapeHtmlChar)
	        : string;
	    }

	    /**
	     * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
	     * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to escape.
	     * @returns {string} Returns the escaped string.
	     * @example
	     *
	     * _.escapeRegExp('[lodash](https://lodash.com/)');
	     * // => '\[lodash\]\(https://lodash\.com/\)'
	     */
	    function escapeRegExp(string) {
	      string = toString(string);
	      return (string && reHasRegExpChar.test(string))
	        ? string.replace(reRegExpChar, '\\$&')
	        : string;
	    }

	    /**
	     * Converts `string` to
	     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the kebab cased string.
	     * @example
	     *
	     * _.kebabCase('Foo Bar');
	     * // => 'foo-bar'
	     *
	     * _.kebabCase('fooBar');
	     * // => 'foo-bar'
	     *
	     * _.kebabCase('__FOO_BAR__');
	     * // => 'foo-bar'
	     */
	    var kebabCase = createCompounder(function(result, word, index) {
	      return result + (index ? '-' : '') + word.toLowerCase();
	    });

	    /**
	     * Converts `string`, as space separated words, to lower case.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the lower cased string.
	     * @example
	     *
	     * _.lowerCase('--Foo-Bar--');
	     * // => 'foo bar'
	     *
	     * _.lowerCase('fooBar');
	     * // => 'foo bar'
	     *
	     * _.lowerCase('__FOO_BAR__');
	     * // => 'foo bar'
	     */
	    var lowerCase = createCompounder(function(result, word, index) {
	      return result + (index ? ' ' : '') + word.toLowerCase();
	    });

	    /**
	     * Converts the first character of `string` to lower case.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the converted string.
	     * @example
	     *
	     * _.lowerFirst('Fred');
	     * // => 'fred'
	     *
	     * _.lowerFirst('FRED');
	     * // => 'fRED'
	     */
	    var lowerFirst = createCaseFirst('toLowerCase');

	    /**
	     * Pads `string` on the left and right sides if it's shorter than `length`.
	     * Padding characters are truncated if they can't be evenly divided by `length`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to pad.
	     * @param {number} [length=0] The padding length.
	     * @param {string} [chars=' '] The string used as padding.
	     * @returns {string} Returns the padded string.
	     * @example
	     *
	     * _.pad('abc', 8);
	     * // => '  abc   '
	     *
	     * _.pad('abc', 8, '_-');
	     * // => '_-abc_-_'
	     *
	     * _.pad('abc', 3);
	     * // => 'abc'
	     */
	    function pad(string, length, chars) {
	      string = toString(string);
	      length = toInteger(length);

	      var strLength = length ? stringSize(string) : 0;
	      if (!length || strLength >= length) {
	        return string;
	      }
	      var mid = (length - strLength) / 2;
	      return (
	        createPadding(nativeFloor(mid), chars) +
	        string +
	        createPadding(nativeCeil(mid), chars)
	      );
	    }

	    /**
	     * Pads `string` on the right side if it's shorter than `length`. Padding
	     * characters are truncated if they exceed `length`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to pad.
	     * @param {number} [length=0] The padding length.
	     * @param {string} [chars=' '] The string used as padding.
	     * @returns {string} Returns the padded string.
	     * @example
	     *
	     * _.padEnd('abc', 6);
	     * // => 'abc   '
	     *
	     * _.padEnd('abc', 6, '_-');
	     * // => 'abc_-_'
	     *
	     * _.padEnd('abc', 3);
	     * // => 'abc'
	     */
	    function padEnd(string, length, chars) {
	      string = toString(string);
	      length = toInteger(length);

	      var strLength = length ? stringSize(string) : 0;
	      return (length && strLength < length)
	        ? (string + createPadding(length - strLength, chars))
	        : string;
	    }

	    /**
	     * Pads `string` on the left side if it's shorter than `length`. Padding
	     * characters are truncated if they exceed `length`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to pad.
	     * @param {number} [length=0] The padding length.
	     * @param {string} [chars=' '] The string used as padding.
	     * @returns {string} Returns the padded string.
	     * @example
	     *
	     * _.padStart('abc', 6);
	     * // => '   abc'
	     *
	     * _.padStart('abc', 6, '_-');
	     * // => '_-_abc'
	     *
	     * _.padStart('abc', 3);
	     * // => 'abc'
	     */
	    function padStart(string, length, chars) {
	      string = toString(string);
	      length = toInteger(length);

	      var strLength = length ? stringSize(string) : 0;
	      return (length && strLength < length)
	        ? (createPadding(length - strLength, chars) + string)
	        : string;
	    }

	    /**
	     * Converts `string` to an integer of the specified radix. If `radix` is
	     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a
	     * hexadecimal, in which case a `radix` of `16` is used.
	     *
	     * **Note:** This method aligns with the
	     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.1.0
	     * @category String
	     * @param {string} string The string to convert.
	     * @param {number} [radix=10] The radix to interpret `value` by.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {number} Returns the converted integer.
	     * @example
	     *
	     * _.parseInt('08');
	     * // => 8
	     *
	     * _.map(['6', '08', '10'], _.parseInt);
	     * // => [6, 8, 10]
	     */
	    function parseInt(string, radix, guard) {
	      if (guard || radix == null) {
	        radix = 0;
	      } else if (radix) {
	        radix = +radix;
	      }
	      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);
	    }

	    /**
	     * Repeats the given string `n` times.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to repeat.
	     * @param {number} [n=1] The number of times to repeat the string.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {string} Returns the repeated string.
	     * @example
	     *
	     * _.repeat('*', 3);
	     * // => '***'
	     *
	     * _.repeat('abc', 2);
	     * // => 'abcabc'
	     *
	     * _.repeat('abc', 0);
	     * // => ''
	     */
	    function repeat(string, n, guard) {
	      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {
	        n = 1;
	      } else {
	        n = toInteger(n);
	      }
	      return baseRepeat(toString(string), n);
	    }

	    /**
	     * Replaces matches for `pattern` in `string` with `replacement`.
	     *
	     * **Note:** This method is based on
	     * [`String#replace`](https://mdn.io/String/replace).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to modify.
	     * @param {RegExp|string} pattern The pattern to replace.
	     * @param {Function|string} replacement The match replacement.
	     * @returns {string} Returns the modified string.
	     * @example
	     *
	     * _.replace('Hi Fred', 'Fred', 'Barney');
	     * // => 'Hi Barney'
	     */
	    function replace() {
	      var args = arguments,
	          string = toString(args[0]);

	      return args.length < 3 ? string : string.replace(args[1], args[2]);
	    }

	    /**
	     * Converts `string` to
	     * [snake case](https://en.wikipedia.org/wiki/Snake_case).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the snake cased string.
	     * @example
	     *
	     * _.snakeCase('Foo Bar');
	     * // => 'foo_bar'
	     *
	     * _.snakeCase('fooBar');
	     * // => 'foo_bar'
	     *
	     * _.snakeCase('--FOO-BAR--');
	     * // => 'foo_bar'
	     */
	    var snakeCase = createCompounder(function(result, word, index) {
	      return result + (index ? '_' : '') + word.toLowerCase();
	    });

	    /**
	     * Splits `string` by `separator`.
	     *
	     * **Note:** This method is based on
	     * [`String#split`](https://mdn.io/String/split).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to split.
	     * @param {RegExp|string} separator The separator pattern to split by.
	     * @param {number} [limit] The length to truncate results to.
	     * @returns {Array} Returns the string segments.
	     * @example
	     *
	     * _.split('a-b-c', '-', 2);
	     * // => ['a', 'b']
	     */
	    function split(string, separator, limit) {
	      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {
	        separator = limit = undefined;
	      }
	      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;
	      if (!limit) {
	        return [];
	      }
	      string = toString(string);
	      if (string && (
	            typeof separator == 'string' ||
	            (separator != null && !isRegExp(separator))
	          )) {
	        separator = baseToString(separator);
	        if (!separator && hasUnicode(string)) {
	          return castSlice(stringToArray(string), 0, limit);
	        }
	      }
	      return string.split(separator, limit);
	    }

	    /**
	     * Converts `string` to
	     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.1.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the start cased string.
	     * @example
	     *
	     * _.startCase('--foo-bar--');
	     * // => 'Foo Bar'
	     *
	     * _.startCase('fooBar');
	     * // => 'Foo Bar'
	     *
	     * _.startCase('__FOO_BAR__');
	     * // => 'FOO BAR'
	     */
	    var startCase = createCompounder(function(result, word, index) {
	      return result + (index ? ' ' : '') + upperFirst(word);
	    });

	    /**
	     * Checks if `string` starts with the given target string.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to inspect.
	     * @param {string} [target] The string to search for.
	     * @param {number} [position=0] The position to search from.
	     * @returns {boolean} Returns `true` if `string` starts with `target`,
	     *  else `false`.
	     * @example
	     *
	     * _.startsWith('abc', 'a');
	     * // => true
	     *
	     * _.startsWith('abc', 'b');
	     * // => false
	     *
	     * _.startsWith('abc', 'b', 1);
	     * // => true
	     */
	    function startsWith(string, target, position) {
	      string = toString(string);
	      position = position == null
	        ? 0
	        : baseClamp(toInteger(position), 0, string.length);

	      target = baseToString(target);
	      return string.slice(position, position + target.length) == target;
	    }

	    /**
	     * Creates a compiled template function that can interpolate data properties
	     * in "interpolate" delimiters, HTML-escape interpolated data properties in
	     * "escape" delimiters, and execute JavaScript in "evaluate" delimiters. Data
	     * properties may be accessed as free variables in the template. If a setting
	     * object is given, it takes precedence over `_.templateSettings` values.
	     *
	     * **Note:** In the development build `_.template` utilizes
	     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
	     * for easier debugging.
	     *
	     * For more information on precompiling templates see
	     * [lodash's custom builds documentation](https://lodash.com/custom-builds).
	     *
	     * For more information on Chrome extension sandboxes see
	     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category String
	     * @param {string} [string=''] The template string.
	     * @param {Object} [options={}] The options object.
	     * @param {RegExp} [options.escape=_.templateSettings.escape]
	     *  The HTML "escape" delimiter.
	     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]
	     *  The "evaluate" delimiter.
	     * @param {Object} [options.imports=_.templateSettings.imports]
	     *  An object to import into the template as free variables.
	     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]
	     *  The "interpolate" delimiter.
	     * @param {string} [options.sourceURL='lodash.templateSources[n]']
	     *  The sourceURL of the compiled template.
	     * @param {string} [options.variable='obj']
	     *  The data object variable name.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Function} Returns the compiled template function.
	     * @example
	     *
	     * // Use the "interpolate" delimiter to create a compiled template.
	     * var compiled = _.template('hello <%= user %>!');
	     * compiled({ 'user': 'fred' });
	     * // => 'hello fred!'
	     *
	     * // Use the HTML "escape" delimiter to escape data property values.
	     * var compiled = _.template('<b><%- value %></b>');
	     * compiled({ 'value': '<script>' });
	     * // => '<b>&lt;script&gt;</b>'
	     *
	     * // Use the "evaluate" delimiter to execute JavaScript and generate HTML.
	     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
	     * compiled({ 'users': ['fred', 'barney'] });
	     * // => '<li>fred</li><li>barney</li>'
	     *
	     * // Use the internal `print` function in "evaluate" delimiters.
	     * var compiled = _.template('<% print("hello " + user); %>!');
	     * compiled({ 'user': 'barney' });
	     * // => 'hello barney!'
	     *
	     * // Use the ES template literal delimiter as an "interpolate" delimiter.
	     * // Disable support by replacing the "interpolate" delimiter.
	     * var compiled = _.template('hello ${ user }!');
	     * compiled({ 'user': 'pebbles' });
	     * // => 'hello pebbles!'
	     *
	     * // Use backslashes to treat delimiters as plain text.
	     * var compiled = _.template('<%= "\\<%- value %\\>" %>');
	     * compiled({ 'value': 'ignored' });
	     * // => '<%- value %>'
	     *
	     * // Use the `imports` option to import `jQuery` as `jq`.
	     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
	     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
	     * compiled({ 'users': ['fred', 'barney'] });
	     * // => '<li>fred</li><li>barney</li>'
	     *
	     * // Use the `sourceURL` option to specify a custom sourceURL for the template.
	     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
	     * compiled(data);
	     * // => Find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector.
	     *
	     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.
	     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
	     * compiled.source;
	     * // => function(data) {
	     * //   var __t, __p = '';
	     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
	     * //   return __p;
	     * // }
	     *
	     * // Use custom template delimiters.
	     * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
	     * var compiled = _.template('hello {{ user }}!');
	     * compiled({ 'user': 'mustache' });
	     * // => 'hello mustache!'
	     *
	     * // Use the `source` property to inline compiled templates for meaningful
	     * // line numbers in error messages and stack traces.
	     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\
	     *   var JST = {\
	     *     "main": ' + _.template(mainText).source + '\
	     *   };\
	     * ');
	     */
	    function template(string, options, guard) {
	      // Based on John Resig's `tmpl` implementation
	      // (http://ejohn.org/blog/javascript-micro-templating/)
	      // and Laura Doktorova's doT.js (https://github.com/olado/doT).
	      var settings = lodash.templateSettings;

	      if (guard && isIterateeCall(string, options, guard)) {
	        options = undefined;
	      }
	      string = toString(string);
	      options = assignInWith({}, options, settings, customDefaultsAssignIn);

	      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),
	          importsKeys = keys(imports),
	          importsValues = baseValues(imports, importsKeys);

	      var isEscaping,
	          isEvaluating,
	          index = 0,
	          interpolate = options.interpolate || reNoMatch,
	          source = "__p += '";

	      // Compile the regexp to match each delimiter.
	      var reDelimiters = RegExp(
	        (options.escape || reNoMatch).source + '|' +
	        interpolate.source + '|' +
	        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +
	        (options.evaluate || reNoMatch).source + '|$'
	      , 'g');

	      // Use a sourceURL for easier debugging.
	      var sourceURL = '//# sourceURL=' +
	        ('sourceURL' in options
	          ? options.sourceURL
	          : ('lodash.templateSources[' + (++templateCounter) + ']')
	        ) + '\n';

	      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
	        interpolateValue || (interpolateValue = esTemplateValue);

	        // Escape characters that can't be included in string literals.
	        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);

	        // Replace delimiters with snippets.
	        if (escapeValue) {
	          isEscaping = true;
	          source += "' +\n__e(" + escapeValue + ") +\n'";
	        }
	        if (evaluateValue) {
	          isEvaluating = true;
	          source += "';\n" + evaluateValue + ";\n__p += '";
	        }
	        if (interpolateValue) {
	          source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
	        }
	        index = offset + match.length;

	        // The JS engine embedded in Adobe products needs `match` returned in
	        // order to produce the correct `offset` value.
	        return match;
	      });

	      source += "';\n";

	      // If `variable` is not specified wrap a with-statement around the generated
	      // code to add the data object to the top of the scope chain.
	      var variable = options.variable;
	      if (!variable) {
	        source = 'with (obj) {\n' + source + '\n}\n';
	      }
	      // Cleanup code by stripping empty strings.
	      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)
	        .replace(reEmptyStringMiddle, '$1')
	        .replace(reEmptyStringTrailing, '$1;');

	      // Frame code as the function body.
	      source = 'function(' + (variable || 'obj') + ') {\n' +
	        (variable
	          ? ''
	          : 'obj || (obj = {});\n'
	        ) +
	        "var __t, __p = ''" +
	        (isEscaping
	           ? ', __e = _.escape'
	           : ''
	        ) +
	        (isEvaluating
	          ? ', __j = Array.prototype.join;\n' +
	            "function print() { __p += __j.call(arguments, '') }\n"
	          : ';\n'
	        ) +
	        source +
	        'return __p\n}';

	      var result = attempt(function() {
	        return Function(importsKeys, sourceURL + 'return ' + source)
	          .apply(undefined, importsValues);
	      });

	      // Provide the compiled function's source by its `toString` method or
	      // the `source` property as a convenience for inlining compiled templates.
	      result.source = source;
	      if (isError(result)) {
	        throw result;
	      }
	      return result;
	    }

	    /**
	     * Converts `string`, as a whole, to lower case just like
	     * [String#toLowerCase](https://mdn.io/toLowerCase).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the lower cased string.
	     * @example
	     *
	     * _.toLower('--Foo-Bar--');
	     * // => '--foo-bar--'
	     *
	     * _.toLower('fooBar');
	     * // => 'foobar'
	     *
	     * _.toLower('__FOO_BAR__');
	     * // => '__foo_bar__'
	     */
	    function toLower(value) {
	      return toString(value).toLowerCase();
	    }

	    /**
	     * Converts `string`, as a whole, to upper case just like
	     * [String#toUpperCase](https://mdn.io/toUpperCase).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the upper cased string.
	     * @example
	     *
	     * _.toUpper('--foo-bar--');
	     * // => '--FOO-BAR--'
	     *
	     * _.toUpper('fooBar');
	     * // => 'FOOBAR'
	     *
	     * _.toUpper('__foo_bar__');
	     * // => '__FOO_BAR__'
	     */
	    function toUpper(value) {
	      return toString(value).toUpperCase();
	    }

	    /**
	     * Removes leading and trailing whitespace or specified characters from `string`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to trim.
	     * @param {string} [chars=whitespace] The characters to trim.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {string} Returns the trimmed string.
	     * @example
	     *
	     * _.trim('  abc  ');
	     * // => 'abc'
	     *
	     * _.trim('-_-abc-_-', '_-');
	     * // => 'abc'
	     *
	     * _.map(['  foo  ', '  bar  '], _.trim);
	     * // => ['foo', 'bar']
	     */
	    function trim(string, chars, guard) {
	      string = toString(string);
	      if (string && (guard || chars === undefined)) {
	        return string.replace(reTrim, '');
	      }
	      if (!string || !(chars = baseToString(chars))) {
	        return string;
	      }
	      var strSymbols = stringToArray(string),
	          chrSymbols = stringToArray(chars),
	          start = charsStartIndex(strSymbols, chrSymbols),
	          end = charsEndIndex(strSymbols, chrSymbols) + 1;

	      return castSlice(strSymbols, start, end).join('');
	    }

	    /**
	     * Removes trailing whitespace or specified characters from `string`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to trim.
	     * @param {string} [chars=whitespace] The characters to trim.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {string} Returns the trimmed string.
	     * @example
	     *
	     * _.trimEnd('  abc  ');
	     * // => '  abc'
	     *
	     * _.trimEnd('-_-abc-_-', '_-');
	     * // => '-_-abc'
	     */
	    function trimEnd(string, chars, guard) {
	      string = toString(string);
	      if (string && (guard || chars === undefined)) {
	        return string.replace(reTrimEnd, '');
	      }
	      if (!string || !(chars = baseToString(chars))) {
	        return string;
	      }
	      var strSymbols = stringToArray(string),
	          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;

	      return castSlice(strSymbols, 0, end).join('');
	    }

	    /**
	     * Removes leading whitespace or specified characters from `string`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to trim.
	     * @param {string} [chars=whitespace] The characters to trim.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {string} Returns the trimmed string.
	     * @example
	     *
	     * _.trimStart('  abc  ');
	     * // => 'abc  '
	     *
	     * _.trimStart('-_-abc-_-', '_-');
	     * // => 'abc-_-'
	     */
	    function trimStart(string, chars, guard) {
	      string = toString(string);
	      if (string && (guard || chars === undefined)) {
	        return string.replace(reTrimStart, '');
	      }
	      if (!string || !(chars = baseToString(chars))) {
	        return string;
	      }
	      var strSymbols = stringToArray(string),
	          start = charsStartIndex(strSymbols, stringToArray(chars));

	      return castSlice(strSymbols, start).join('');
	    }

	    /**
	     * Truncates `string` if it's longer than the given maximum string length.
	     * The last characters of the truncated string are replaced with the omission
	     * string which defaults to "...".
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to truncate.
	     * @param {Object} [options={}] The options object.
	     * @param {number} [options.length=30] The maximum string length.
	     * @param {string} [options.omission='...'] The string to indicate text is omitted.
	     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
	     * @returns {string} Returns the truncated string.
	     * @example
	     *
	     * _.truncate('hi-diddly-ho there, neighborino');
	     * // => 'hi-diddly-ho there, neighbo...'
	     *
	     * _.truncate('hi-diddly-ho there, neighborino', {
	     *   'length': 24,
	     *   'separator': ' '
	     * });
	     * // => 'hi-diddly-ho there,...'
	     *
	     * _.truncate('hi-diddly-ho there, neighborino', {
	     *   'length': 24,
	     *   'separator': /,? +/
	     * });
	     * // => 'hi-diddly-ho there...'
	     *
	     * _.truncate('hi-diddly-ho there, neighborino', {
	     *   'omission': ' [...]'
	     * });
	     * // => 'hi-diddly-ho there, neig [...]'
	     */
	    function truncate(string, options) {
	      var length = DEFAULT_TRUNC_LENGTH,
	          omission = DEFAULT_TRUNC_OMISSION;

	      if (isObject(options)) {
	        var separator = 'separator' in options ? options.separator : separator;
	        length = 'length' in options ? toInteger(options.length) : length;
	        omission = 'omission' in options ? baseToString(options.omission) : omission;
	      }
	      string = toString(string);

	      var strLength = string.length;
	      if (hasUnicode(string)) {
	        var strSymbols = stringToArray(string);
	        strLength = strSymbols.length;
	      }
	      if (length >= strLength) {
	        return string;
	      }
	      var end = length - stringSize(omission);
	      if (end < 1) {
	        return omission;
	      }
	      var result = strSymbols
	        ? castSlice(strSymbols, 0, end).join('')
	        : string.slice(0, end);

	      if (separator === undefined) {
	        return result + omission;
	      }
	      if (strSymbols) {
	        end += (result.length - end);
	      }
	      if (isRegExp(separator)) {
	        if (string.slice(end).search(separator)) {
	          var match,
	              substring = result;

	          if (!separator.global) {
	            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');
	          }
	          separator.lastIndex = 0;
	          while ((match = separator.exec(substring))) {
	            var newEnd = match.index;
	          }
	          result = result.slice(0, newEnd === undefined ? end : newEnd);
	        }
	      } else if (string.indexOf(baseToString(separator), end) != end) {
	        var index = result.lastIndexOf(separator);
	        if (index > -1) {
	          result = result.slice(0, index);
	        }
	      }
	      return result + omission;
	    }

	    /**
	     * The inverse of `_.escape`; this method converts the HTML entities
	     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to
	     * their corresponding characters.
	     *
	     * **Note:** No other HTML entities are unescaped. To unescape additional
	     * HTML entities use a third-party library like [_he_](https://mths.be/he).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.6.0
	     * @category String
	     * @param {string} [string=''] The string to unescape.
	     * @returns {string} Returns the unescaped string.
	     * @example
	     *
	     * _.unescape('fred, barney, &amp; pebbles');
	     * // => 'fred, barney, & pebbles'
	     */
	    function unescape(string) {
	      string = toString(string);
	      return (string && reHasEscapedHtml.test(string))
	        ? string.replace(reEscapedHtml, unescapeHtmlChar)
	        : string;
	    }

	    /**
	     * Converts `string`, as space separated words, to upper case.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the upper cased string.
	     * @example
	     *
	     * _.upperCase('--foo-bar');
	     * // => 'FOO BAR'
	     *
	     * _.upperCase('fooBar');
	     * // => 'FOO BAR'
	     *
	     * _.upperCase('__foo_bar__');
	     * // => 'FOO BAR'
	     */
	    var upperCase = createCompounder(function(result, word, index) {
	      return result + (index ? ' ' : '') + word.toUpperCase();
	    });

	    /**
	     * Converts the first character of `string` to upper case.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the converted string.
	     * @example
	     *
	     * _.upperFirst('fred');
	     * // => 'Fred'
	     *
	     * _.upperFirst('FRED');
	     * // => 'FRED'
	     */
	    var upperFirst = createCaseFirst('toUpperCase');

	    /**
	     * Splits `string` into an array of its words.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to inspect.
	     * @param {RegExp|string} [pattern] The pattern to match words.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the words of `string`.
	     * @example
	     *
	     * _.words('fred, barney, & pebbles');
	     * // => ['fred', 'barney', 'pebbles']
	     *
	     * _.words('fred, barney, & pebbles', /[^, ]+/g);
	     * // => ['fred', 'barney', '&', 'pebbles']
	     */
	    function words(string, pattern, guard) {
	      string = toString(string);
	      pattern = guard ? undefined : pattern;

	      if (pattern === undefined) {
	        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
	      }
	      return string.match(pattern) || [];
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Attempts to invoke `func`, returning either the result or the caught error
	     * object. Any additional arguments are provided to `func` when it's invoked.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Util
	     * @param {Function} func The function to attempt.
	     * @param {...*} [args] The arguments to invoke `func` with.
	     * @returns {*} Returns the `func` result or error object.
	     * @example
	     *
	     * // Avoid throwing errors for invalid selectors.
	     * var elements = _.attempt(function(selector) {
	     *   return document.querySelectorAll(selector);
	     * }, '>_>');
	     *
	     * if (_.isError(elements)) {
	     *   elements = [];
	     * }
	     */
	    var attempt = baseRest(function(func, args) {
	      try {
	        return apply(func, undefined, args);
	      } catch (e) {
	        return isError(e) ? e : new Error(e);
	      }
	    });

	    /**
	     * Binds methods of an object to the object itself, overwriting the existing
	     * method.
	     *
	     * **Note:** This method doesn't set the "length" property of bound functions.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {Object} object The object to bind and assign the bound methods to.
	     * @param {...(string|string[])} methodNames The object method names to bind.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var view = {
	     *   'label': 'docs',
	     *   'click': function() {
	     *     console.log('clicked ' + this.label);
	     *   }
	     * };
	     *
	     * _.bindAll(view, ['click']);
	     * jQuery(element).on('click', view.click);
	     * // => Logs 'clicked docs' when clicked.
	     */
	    var bindAll = flatRest(function(object, methodNames) {
	      arrayEach(methodNames, function(key) {
	        key = toKey(key);
	        baseAssignValue(object, key, bind(object[key], object));
	      });
	      return object;
	    });

	    /**
	     * Creates a function that iterates over `pairs` and invokes the corresponding
	     * function of the first predicate to return truthy. The predicate-function
	     * pairs are invoked with the `this` binding and arguments of the created
	     * function.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {Array} pairs The predicate-function pairs.
	     * @returns {Function} Returns the new composite function.
	     * @example
	     *
	     * var func = _.cond([
	     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],
	     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],
	     *   [_.stubTrue,                      _.constant('no match')]
	     * ]);
	     *
	     * func({ 'a': 1, 'b': 2 });
	     * // => 'matches A'
	     *
	     * func({ 'a': 0, 'b': 1 });
	     * // => 'matches B'
	     *
	     * func({ 'a': '1', 'b': '2' });
	     * // => 'no match'
	     */
	    function cond(pairs) {
	      var length = pairs == null ? 0 : pairs.length,
	          toIteratee = getIteratee();

	      pairs = !length ? [] : arrayMap(pairs, function(pair) {
	        if (typeof pair[1] != 'function') {
	          throw new TypeError(FUNC_ERROR_TEXT);
	        }
	        return [toIteratee(pair[0]), pair[1]];
	      });

	      return baseRest(function(args) {
	        var index = -1;
	        while (++index < length) {
	          var pair = pairs[index];
	          if (apply(pair[0], this, args)) {
	            return apply(pair[1], this, args);
	          }
	        }
	      });
	    }

	    /**
	     * Creates a function that invokes the predicate properties of `source` with
	     * the corresponding property values of a given object, returning `true` if
	     * all predicates return truthy, else `false`.
	     *
	     * **Note:** The created function is equivalent to `_.conformsTo` with
	     * `source` partially applied.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {Object} source The object of property predicates to conform to.
	     * @returns {Function} Returns the new spec function.
	     * @example
	     *
	     * var objects = [
	     *   { 'a': 2, 'b': 1 },
	     *   { 'a': 1, 'b': 2 }
	     * ];
	     *
	     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));
	     * // => [{ 'a': 1, 'b': 2 }]
	     */
	    function conforms(source) {
	      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
	    }

	    /**
	     * Creates a function that returns `value`.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @category Util
	     * @param {*} value The value to return from the new function.
	     * @returns {Function} Returns the new constant function.
	     * @example
	     *
	     * var objects = _.times(2, _.constant({ 'a': 1 }));
	     *
	     * console.log(objects);
	     * // => [{ 'a': 1 }, { 'a': 1 }]
	     *
	     * console.log(objects[0] === objects[1]);
	     * // => true
	     */
	    function constant(value) {
	      return function() {
	        return value;
	      };
	    }

	    /**
	     * Checks `value` to determine whether a default value should be returned in
	     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,
	     * or `undefined`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.14.0
	     * @category Util
	     * @param {*} value The value to check.
	     * @param {*} defaultValue The default value.
	     * @returns {*} Returns the resolved value.
	     * @example
	     *
	     * _.defaultTo(1, 10);
	     * // => 1
	     *
	     * _.defaultTo(undefined, 10);
	     * // => 10
	     */
	    function defaultTo(value, defaultValue) {
	      return (value == null || value !== value) ? defaultValue : value;
	    }

	    /**
	     * Creates a function that returns the result of invoking the given functions
	     * with the `this` binding of the created function, where each successive
	     * invocation is supplied the return value of the previous.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Util
	     * @param {...(Function|Function[])} [funcs] The functions to invoke.
	     * @returns {Function} Returns the new composite function.
	     * @see _.flowRight
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var addSquare = _.flow([_.add, square]);
	     * addSquare(1, 2);
	     * // => 9
	     */
	    var flow = createFlow();

	    /**
	     * This method is like `_.flow` except that it creates a function that
	     * invokes the given functions from right to left.
	     *
	     * @static
	     * @since 3.0.0
	     * @memberOf _
	     * @category Util
	     * @param {...(Function|Function[])} [funcs] The functions to invoke.
	     * @returns {Function} Returns the new composite function.
	     * @see _.flow
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var addSquare = _.flowRight([square, _.add]);
	     * addSquare(1, 2);
	     * // => 9
	     */
	    var flowRight = createFlow(true);

	    /**
	     * This method returns the first argument it receives.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {*} value Any value.
	     * @returns {*} Returns `value`.
	     * @example
	     *
	     * var object = { 'a': 1 };
	     *
	     * console.log(_.identity(object) === object);
	     * // => true
	     */
	    function identity(value) {
	      return value;
	    }

	    /**
	     * Creates a function that invokes `func` with the arguments of the created
	     * function. If `func` is a property name, the created function returns the
	     * property value for a given element. If `func` is an array or object, the
	     * created function returns `true` for elements that contain the equivalent
	     * source properties, otherwise it returns `false`.
	     *
	     * @static
	     * @since 4.0.0
	     * @memberOf _
	     * @category Util
	     * @param {*} [func=_.identity] The value to convert to a callback.
	     * @returns {Function} Returns the callback.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36, 'active': true },
	     *   { 'user': 'fred',   'age': 40, 'active': false }
	     * ];
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
	     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.filter(users, _.iteratee(['user', 'fred']));
	     * // => [{ 'user': 'fred', 'age': 40 }]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.map(users, _.iteratee('user'));
	     * // => ['barney', 'fred']
	     *
	     * // Create custom iteratee shorthands.
	     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
	     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
	     *     return func.test(string);
	     *   };
	     * });
	     *
	     * _.filter(['abc', 'def'], /ef/);
	     * // => ['def']
	     */
	    function iteratee(func) {
	      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));
	    }

	    /**
	     * Creates a function that performs a partial deep comparison between a given
	     * object and `source`, returning `true` if the given object has equivalent
	     * property values, else `false`.
	     *
	     * **Note:** The created function is equivalent to `_.isMatch` with `source`
	     * partially applied.
	     *
	     * Partial comparisons will match empty array and empty object `source`
	     * values against any array or object value, respectively. See `_.isEqual`
	     * for a list of supported value comparisons.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Util
	     * @param {Object} source The object of property values to match.
	     * @returns {Function} Returns the new spec function.
	     * @example
	     *
	     * var objects = [
	     *   { 'a': 1, 'b': 2, 'c': 3 },
	     *   { 'a': 4, 'b': 5, 'c': 6 }
	     * ];
	     *
	     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));
	     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]
	     */
	    function matches(source) {
	      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
	    }

	    /**
	     * Creates a function that performs a partial deep comparison between the
	     * value at `path` of a given object to `srcValue`, returning `true` if the
	     * object value is equivalent, else `false`.
	     *
	     * **Note:** Partial comparisons will match empty array and empty object
	     * `srcValue` values against any array or object value, respectively. See
	     * `_.isEqual` for a list of supported value comparisons.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.2.0
	     * @category Util
	     * @param {Array|string} path The path of the property to get.
	     * @param {*} srcValue The value to match.
	     * @returns {Function} Returns the new spec function.
	     * @example
	     *
	     * var objects = [
	     *   { 'a': 1, 'b': 2, 'c': 3 },
	     *   { 'a': 4, 'b': 5, 'c': 6 }
	     * ];
	     *
	     * _.find(objects, _.matchesProperty('a', 4));
	     * // => { 'a': 4, 'b': 5, 'c': 6 }
	     */
	    function matchesProperty(path, srcValue) {
	      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
	    }

	    /**
	     * Creates a function that invokes the method at `path` of a given object.
	     * Any additional arguments are provided to the invoked method.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.7.0
	     * @category Util
	     * @param {Array|string} path The path of the method to invoke.
	     * @param {...*} [args] The arguments to invoke the method with.
	     * @returns {Function} Returns the new invoker function.
	     * @example
	     *
	     * var objects = [
	     *   { 'a': { 'b': _.constant(2) } },
	     *   { 'a': { 'b': _.constant(1) } }
	     * ];
	     *
	     * _.map(objects, _.method('a.b'));
	     * // => [2, 1]
	     *
	     * _.map(objects, _.method(['a', 'b']));
	     * // => [2, 1]
	     */
	    var method = baseRest(function(path, args) {
	      return function(object) {
	        return baseInvoke(object, path, args);
	      };
	    });

	    /**
	     * The opposite of `_.method`; this method creates a function that invokes
	     * the method at a given path of `object`. Any additional arguments are
	     * provided to the invoked method.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.7.0
	     * @category Util
	     * @param {Object} object The object to query.
	     * @param {...*} [args] The arguments to invoke the method with.
	     * @returns {Function} Returns the new invoker function.
	     * @example
	     *
	     * var array = _.times(3, _.constant),
	     *     object = { 'a': array, 'b': array, 'c': array };
	     *
	     * _.map(['a[2]', 'c[0]'], _.methodOf(object));
	     * // => [2, 0]
	     *
	     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
	     * // => [2, 0]
	     */
	    var methodOf = baseRest(function(object, args) {
	      return function(path) {
	        return baseInvoke(object, path, args);
	      };
	    });

	    /**
	     * Adds all own enumerable string keyed function properties of a source
	     * object to the destination object. If `object` is a function, then methods
	     * are added to its prototype as well.
	     *
	     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
	     * avoid conflicts caused by modifying the original.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {Function|Object} [object=lodash] The destination object.
	     * @param {Object} source The object of functions to add.
	     * @param {Object} [options={}] The options object.
	     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.
	     * @returns {Function|Object} Returns `object`.
	     * @example
	     *
	     * function vowels(string) {
	     *   return _.filter(string, function(v) {
	     *     return /[aeiou]/i.test(v);
	     *   });
	     * }
	     *
	     * _.mixin({ 'vowels': vowels });
	     * _.vowels('fred');
	     * // => ['e']
	     *
	     * _('fred').vowels().value();
	     * // => ['e']
	     *
	     * _.mixin({ 'vowels': vowels }, { 'chain': false });
	     * _('fred').vowels();
	     * // => ['e']
	     */
	    function mixin(object, source, options) {
	      var props = keys(source),
	          methodNames = baseFunctions(source, props);

	      if (options == null &&
	          !(isObject(source) && (methodNames.length || !props.length))) {
	        options = source;
	        source = object;
	        object = this;
	        methodNames = baseFunctions(source, keys(source));
	      }
	      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,
	          isFunc = isFunction(object);

	      arrayEach(methodNames, function(methodName) {
	        var func = source[methodName];
	        object[methodName] = func;
	        if (isFunc) {
	          object.prototype[methodName] = function() {
	            var chainAll = this.__chain__;
	            if (chain || chainAll) {
	              var result = object(this.__wrapped__),
	                  actions = result.__actions__ = copyArray(this.__actions__);

	              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });
	              result.__chain__ = chainAll;
	              return result;
	            }
	            return func.apply(object, arrayPush([this.value()], arguments));
	          };
	        }
	      });

	      return object;
	    }

	    /**
	     * Reverts the `_` variable to its previous value and returns a reference to
	     * the `lodash` function.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @returns {Function} Returns the `lodash` function.
	     * @example
	     *
	     * var lodash = _.noConflict();
	     */
	    function noConflict() {
	      if (root._ === this) {
	        root._ = oldDash;
	      }
	      return this;
	    }

	    /**
	     * This method returns `undefined`.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.3.0
	     * @category Util
	     * @example
	     *
	     * _.times(2, _.noop);
	     * // => [undefined, undefined]
	     */
	    function noop() {
	      // No operation performed.
	    }

	    /**
	     * Creates a function that gets the argument at index `n`. If `n` is negative,
	     * the nth argument from the end is returned.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {number} [n=0] The index of the argument to return.
	     * @returns {Function} Returns the new pass-thru function.
	     * @example
	     *
	     * var func = _.nthArg(1);
	     * func('a', 'b', 'c', 'd');
	     * // => 'b'
	     *
	     * var func = _.nthArg(-2);
	     * func('a', 'b', 'c', 'd');
	     * // => 'c'
	     */
	    function nthArg(n) {
	      n = toInteger(n);
	      return baseRest(function(args) {
	        return baseNth(args, n);
	      });
	    }

	    /**
	     * Creates a function that invokes `iteratees` with the arguments it receives
	     * and returns their results.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {...(Function|Function[])} [iteratees=[_.identity]]
	     *  The iteratees to invoke.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var func = _.over([Math.max, Math.min]);
	     *
	     * func(1, 2, 3, 4);
	     * // => [4, 1]
	     */
	    var over = createOver(arrayMap);

	    /**
	     * Creates a function that checks if **all** of the `predicates` return
	     * truthy when invoked with the arguments it receives.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {...(Function|Function[])} [predicates=[_.identity]]
	     *  The predicates to check.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var func = _.overEvery([Boolean, isFinite]);
	     *
	     * func('1');
	     * // => true
	     *
	     * func(null);
	     * // => false
	     *
	     * func(NaN);
	     * // => false
	     */
	    var overEvery = createOver(arrayEvery);

	    /**
	     * Creates a function that checks if **any** of the `predicates` return
	     * truthy when invoked with the arguments it receives.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {...(Function|Function[])} [predicates=[_.identity]]
	     *  The predicates to check.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var func = _.overSome([Boolean, isFinite]);
	     *
	     * func('1');
	     * // => true
	     *
	     * func(null);
	     * // => true
	     *
	     * func(NaN);
	     * // => false
	     */
	    var overSome = createOver(arraySome);

	    /**
	     * Creates a function that returns the value at `path` of a given object.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @category Util
	     * @param {Array|string} path The path of the property to get.
	     * @returns {Function} Returns the new accessor function.
	     * @example
	     *
	     * var objects = [
	     *   { 'a': { 'b': 2 } },
	     *   { 'a': { 'b': 1 } }
	     * ];
	     *
	     * _.map(objects, _.property('a.b'));
	     * // => [2, 1]
	     *
	     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
	     * // => [1, 2]
	     */
	    function property(path) {
	      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
	    }

	    /**
	     * The opposite of `_.property`; this method creates a function that returns
	     * the value at a given path of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Util
	     * @param {Object} object The object to query.
	     * @returns {Function} Returns the new accessor function.
	     * @example
	     *
	     * var array = [0, 1, 2],
	     *     object = { 'a': array, 'b': array, 'c': array };
	     *
	     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
	     * // => [2, 0]
	     *
	     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
	     * // => [2, 0]
	     */
	    function propertyOf(object) {
	      return function(path) {
	        return object == null ? undefined : baseGet(object, path);
	      };
	    }

	    /**
	     * Creates an array of numbers (positive and/or negative) progressing from
	     * `start` up to, but not including, `end`. A step of `-1` is used if a negative
	     * `start` is specified without an `end` or `step`. If `end` is not specified,
	     * it's set to `start` with `start` then set to `0`.
	     *
	     * **Note:** JavaScript follows the IEEE-754 standard for resolving
	     * floating-point values which can produce unexpected results.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {number} [start=0] The start of the range.
	     * @param {number} end The end of the range.
	     * @param {number} [step=1] The value to increment or decrement by.
	     * @returns {Array} Returns the range of numbers.
	     * @see _.inRange, _.rangeRight
	     * @example
	     *
	     * _.range(4);
	     * // => [0, 1, 2, 3]
	     *
	     * _.range(-4);
	     * // => [0, -1, -2, -3]
	     *
	     * _.range(1, 5);
	     * // => [1, 2, 3, 4]
	     *
	     * _.range(0, 20, 5);
	     * // => [0, 5, 10, 15]
	     *
	     * _.range(0, -4, -1);
	     * // => [0, -1, -2, -3]
	     *
	     * _.range(1, 4, 0);
	     * // => [1, 1, 1]
	     *
	     * _.range(0);
	     * // => []
	     */
	    var range = createRange();

	    /**
	     * This method is like `_.range` except that it populates values in
	     * descending order.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {number} [start=0] The start of the range.
	     * @param {number} end The end of the range.
	     * @param {number} [step=1] The value to increment or decrement by.
	     * @returns {Array} Returns the range of numbers.
	     * @see _.inRange, _.range
	     * @example
	     *
	     * _.rangeRight(4);
	     * // => [3, 2, 1, 0]
	     *
	     * _.rangeRight(-4);
	     * // => [-3, -2, -1, 0]
	     *
	     * _.rangeRight(1, 5);
	     * // => [4, 3, 2, 1]
	     *
	     * _.rangeRight(0, 20, 5);
	     * // => [15, 10, 5, 0]
	     *
	     * _.rangeRight(0, -4, -1);
	     * // => [-3, -2, -1, 0]
	     *
	     * _.rangeRight(1, 4, 0);
	     * // => [1, 1, 1]
	     *
	     * _.rangeRight(0);
	     * // => []
	     */
	    var rangeRight = createRange(true);

	    /**
	     * This method returns a new empty array.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.13.0
	     * @category Util
	     * @returns {Array} Returns the new empty array.
	     * @example
	     *
	     * var arrays = _.times(2, _.stubArray);
	     *
	     * console.log(arrays);
	     * // => [[], []]
	     *
	     * console.log(arrays[0] === arrays[1]);
	     * // => false
	     */
	    function stubArray() {
	      return [];
	    }

	    /**
	     * This method returns `false`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.13.0
	     * @category Util
	     * @returns {boolean} Returns `false`.
	     * @example
	     *
	     * _.times(2, _.stubFalse);
	     * // => [false, false]
	     */
	    function stubFalse() {
	      return false;
	    }

	    /**
	     * This method returns a new empty object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.13.0
	     * @category Util
	     * @returns {Object} Returns the new empty object.
	     * @example
	     *
	     * var objects = _.times(2, _.stubObject);
	     *
	     * console.log(objects);
	     * // => [{}, {}]
	     *
	     * console.log(objects[0] === objects[1]);
	     * // => false
	     */
	    function stubObject() {
	      return {};
	    }

	    /**
	     * This method returns an empty string.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.13.0
	     * @category Util
	     * @returns {string} Returns the empty string.
	     * @example
	     *
	     * _.times(2, _.stubString);
	     * // => ['', '']
	     */
	    function stubString() {
	      return '';
	    }

	    /**
	     * This method returns `true`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.13.0
	     * @category Util
	     * @returns {boolean} Returns `true`.
	     * @example
	     *
	     * _.times(2, _.stubTrue);
	     * // => [true, true]
	     */
	    function stubTrue() {
	      return true;
	    }

	    /**
	     * Invokes the iteratee `n` times, returning an array of the results of
	     * each invocation. The iteratee is invoked with one argument; (index).
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {number} n The number of times to invoke `iteratee`.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the array of results.
	     * @example
	     *
	     * _.times(3, String);
	     * // => ['0', '1', '2']
	     *
	     *  _.times(4, _.constant(0));
	     * // => [0, 0, 0, 0]
	     */
	    function times(n, iteratee) {
	      n = toInteger(n);
	      if (n < 1 || n > MAX_SAFE_INTEGER) {
	        return [];
	      }
	      var index = MAX_ARRAY_LENGTH,
	          length = nativeMin(n, MAX_ARRAY_LENGTH);

	      iteratee = getIteratee(iteratee);
	      n -= MAX_ARRAY_LENGTH;

	      var result = baseTimes(length, iteratee);
	      while (++index < n) {
	        iteratee(index);
	      }
	      return result;
	    }

	    /**
	     * Converts `value` to a property path array.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {*} value The value to convert.
	     * @returns {Array} Returns the new property path array.
	     * @example
	     *
	     * _.toPath('a.b.c');
	     * // => ['a', 'b', 'c']
	     *
	     * _.toPath('a[0].b.c');
	     * // => ['a', '0', 'b', 'c']
	     */
	    function toPath(value) {
	      if (isArray(value)) {
	        return arrayMap(value, toKey);
	      }
	      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
	    }

	    /**
	     * Generates a unique ID. If `prefix` is given, the ID is appended to it.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {string} [prefix=''] The value to prefix the ID with.
	     * @returns {string} Returns the unique ID.
	     * @example
	     *
	     * _.uniqueId('contact_');
	     * // => 'contact_104'
	     *
	     * _.uniqueId();
	     * // => '105'
	     */
	    function uniqueId(prefix) {
	      var id = ++idCounter;
	      return toString(prefix) + id;
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Adds two numbers.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.4.0
	     * @category Math
	     * @param {number} augend The first number in an addition.
	     * @param {number} addend The second number in an addition.
	     * @returns {number} Returns the total.
	     * @example
	     *
	     * _.add(6, 4);
	     * // => 10
	     */
	    var add = createMathOperation(function(augend, addend) {
	      return augend + addend;
	    }, 0);

	    /**
	     * Computes `number` rounded up to `precision`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.10.0
	     * @category Math
	     * @param {number} number The number to round up.
	     * @param {number} [precision=0] The precision to round up to.
	     * @returns {number} Returns the rounded up number.
	     * @example
	     *
	     * _.ceil(4.006);
	     * // => 5
	     *
	     * _.ceil(6.004, 2);
	     * // => 6.01
	     *
	     * _.ceil(6040, -2);
	     * // => 6100
	     */
	    var ceil = createRound('ceil');

	    /**
	     * Divide two numbers.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Math
	     * @param {number} dividend The first number in a division.
	     * @param {number} divisor The second number in a division.
	     * @returns {number} Returns the quotient.
	     * @example
	     *
	     * _.divide(6, 4);
	     * // => 1.5
	     */
	    var divide = createMathOperation(function(dividend, divisor) {
	      return dividend / divisor;
	    }, 1);

	    /**
	     * Computes `number` rounded down to `precision`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.10.0
	     * @category Math
	     * @param {number} number The number to round down.
	     * @param {number} [precision=0] The precision to round down to.
	     * @returns {number} Returns the rounded down number.
	     * @example
	     *
	     * _.floor(4.006);
	     * // => 4
	     *
	     * _.floor(0.046, 2);
	     * // => 0.04
	     *
	     * _.floor(4060, -2);
	     * // => 4000
	     */
	    var floor = createRound('floor');

	    /**
	     * Computes the maximum value of `array`. If `array` is empty or falsey,
	     * `undefined` is returned.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @returns {*} Returns the maximum value.
	     * @example
	     *
	     * _.max([4, 2, 8, 6]);
	     * // => 8
	     *
	     * _.max([]);
	     * // => undefined
	     */
	    function max(array) {
	      return (array && array.length)
	        ? baseExtremum(array, identity, baseGt)
	        : undefined;
	    }

	    /**
	     * This method is like `_.max` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the criterion by which
	     * the value is ranked. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {*} Returns the maximum value.
	     * @example
	     *
	     * var objects = [{ 'n': 1 }, { 'n': 2 }];
	     *
	     * _.maxBy(objects, function(o) { return o.n; });
	     * // => { 'n': 2 }
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.maxBy(objects, 'n');
	     * // => { 'n': 2 }
	     */
	    function maxBy(array, iteratee) {
	      return (array && array.length)
	        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)
	        : undefined;
	    }

	    /**
	     * Computes the mean of the values in `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @returns {number} Returns the mean.
	     * @example
	     *
	     * _.mean([4, 2, 8, 6]);
	     * // => 5
	     */
	    function mean(array) {
	      return baseMean(array, identity);
	    }

	    /**
	     * This method is like `_.mean` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the value to be averaged.
	     * The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {number} Returns the mean.
	     * @example
	     *
	     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
	     *
	     * _.meanBy(objects, function(o) { return o.n; });
	     * // => 5
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.meanBy(objects, 'n');
	     * // => 5
	     */
	    function meanBy(array, iteratee) {
	      return baseMean(array, getIteratee(iteratee, 2));
	    }

	    /**
	     * Computes the minimum value of `array`. If `array` is empty or falsey,
	     * `undefined` is returned.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @returns {*} Returns the minimum value.
	     * @example
	     *
	     * _.min([4, 2, 8, 6]);
	     * // => 2
	     *
	     * _.min([]);
	     * // => undefined
	     */
	    function min(array) {
	      return (array && array.length)
	        ? baseExtremum(array, identity, baseLt)
	        : undefined;
	    }

	    /**
	     * This method is like `_.min` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the criterion by which
	     * the value is ranked. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {*} Returns the minimum value.
	     * @example
	     *
	     * var objects = [{ 'n': 1 }, { 'n': 2 }];
	     *
	     * _.minBy(objects, function(o) { return o.n; });
	     * // => { 'n': 1 }
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.minBy(objects, 'n');
	     * // => { 'n': 1 }
	     */
	    function minBy(array, iteratee) {
	      return (array && array.length)
	        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)
	        : undefined;
	    }

	    /**
	     * Multiply two numbers.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Math
	     * @param {number} multiplier The first number in a multiplication.
	     * @param {number} multiplicand The second number in a multiplication.
	     * @returns {number} Returns the product.
	     * @example
	     *
	     * _.multiply(6, 4);
	     * // => 24
	     */
	    var multiply = createMathOperation(function(multiplier, multiplicand) {
	      return multiplier * multiplicand;
	    }, 1);

	    /**
	     * Computes `number` rounded to `precision`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.10.0
	     * @category Math
	     * @param {number} number The number to round.
	     * @param {number} [precision=0] The precision to round to.
	     * @returns {number} Returns the rounded number.
	     * @example
	     *
	     * _.round(4.006);
	     * // => 4
	     *
	     * _.round(4.006, 2);
	     * // => 4.01
	     *
	     * _.round(4060, -2);
	     * // => 4100
	     */
	    var round = createRound('round');

	    /**
	     * Subtract two numbers.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {number} minuend The first number in a subtraction.
	     * @param {number} subtrahend The second number in a subtraction.
	     * @returns {number} Returns the difference.
	     * @example
	     *
	     * _.subtract(6, 4);
	     * // => 2
	     */
	    var subtract = createMathOperation(function(minuend, subtrahend) {
	      return minuend - subtrahend;
	    }, 0);

	    /**
	     * Computes the sum of the values in `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.4.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @returns {number} Returns the sum.
	     * @example
	     *
	     * _.sum([4, 2, 8, 6]);
	     * // => 20
	     */
	    function sum(array) {
	      return (array && array.length)
	        ? baseSum(array, identity)
	        : 0;
	    }

	    /**
	     * This method is like `_.sum` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the value to be summed.
	     * The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {number} Returns the sum.
	     * @example
	     *
	     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
	     *
	     * _.sumBy(objects, function(o) { return o.n; });
	     * // => 20
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.sumBy(objects, 'n');
	     * // => 20
	     */
	    function sumBy(array, iteratee) {
	      return (array && array.length)
	        ? baseSum(array, getIteratee(iteratee, 2))
	        : 0;
	    }

	    /*------------------------------------------------------------------------*/

	    // Add methods that return wrapped values in chain sequences.
	    lodash.after = after;
	    lodash.ary = ary;
	    lodash.assign = assign;
	    lodash.assignIn = assignIn;
	    lodash.assignInWith = assignInWith;
	    lodash.assignWith = assignWith;
	    lodash.at = at;
	    lodash.before = before;
	    lodash.bind = bind;
	    lodash.bindAll = bindAll;
	    lodash.bindKey = bindKey;
	    lodash.castArray = castArray;
	    lodash.chain = chain;
	    lodash.chunk = chunk;
	    lodash.compact = compact;
	    lodash.concat = concat;
	    lodash.cond = cond;
	    lodash.conforms = conforms;
	    lodash.constant = constant;
	    lodash.countBy = countBy;
	    lodash.create = create;
	    lodash.curry = curry;
	    lodash.curryRight = curryRight;
	    lodash.debounce = debounce;
	    lodash.defaults = defaults;
	    lodash.defaultsDeep = defaultsDeep;
	    lodash.defer = defer;
	    lodash.delay = delay;
	    lodash.difference = difference;
	    lodash.differenceBy = differenceBy;
	    lodash.differenceWith = differenceWith;
	    lodash.drop = drop;
	    lodash.dropRight = dropRight;
	    lodash.dropRightWhile = dropRightWhile;
	    lodash.dropWhile = dropWhile;
	    lodash.fill = fill;
	    lodash.filter = filter;
	    lodash.flatMap = flatMap;
	    lodash.flatMapDeep = flatMapDeep;
	    lodash.flatMapDepth = flatMapDepth;
	    lodash.flatten = flatten;
	    lodash.flattenDeep = flattenDeep;
	    lodash.flattenDepth = flattenDepth;
	    lodash.flip = flip;
	    lodash.flow = flow;
	    lodash.flowRight = flowRight;
	    lodash.fromPairs = fromPairs;
	    lodash.functions = functions;
	    lodash.functionsIn = functionsIn;
	    lodash.groupBy = groupBy;
	    lodash.initial = initial;
	    lodash.intersection = intersection;
	    lodash.intersectionBy = intersectionBy;
	    lodash.intersectionWith = intersectionWith;
	    lodash.invert = invert;
	    lodash.invertBy = invertBy;
	    lodash.invokeMap = invokeMap;
	    lodash.iteratee = iteratee;
	    lodash.keyBy = keyBy;
	    lodash.keys = keys;
	    lodash.keysIn = keysIn;
	    lodash.map = map;
	    lodash.mapKeys = mapKeys;
	    lodash.mapValues = mapValues;
	    lodash.matches = matches;
	    lodash.matchesProperty = matchesProperty;
	    lodash.memoize = memoize;
	    lodash.merge = merge;
	    lodash.mergeWith = mergeWith;
	    lodash.method = method;
	    lodash.methodOf = methodOf;
	    lodash.mixin = mixin;
	    lodash.negate = negate;
	    lodash.nthArg = nthArg;
	    lodash.omit = omit;
	    lodash.omitBy = omitBy;
	    lodash.once = once;
	    lodash.orderBy = orderBy;
	    lodash.over = over;
	    lodash.overArgs = overArgs;
	    lodash.overEvery = overEvery;
	    lodash.overSome = overSome;
	    lodash.partial = partial;
	    lodash.partialRight = partialRight;
	    lodash.partition = partition;
	    lodash.pick = pick;
	    lodash.pickBy = pickBy;
	    lodash.property = property;
	    lodash.propertyOf = propertyOf;
	    lodash.pull = pull;
	    lodash.pullAll = pullAll;
	    lodash.pullAllBy = pullAllBy;
	    lodash.pullAllWith = pullAllWith;
	    lodash.pullAt = pullAt;
	    lodash.range = range;
	    lodash.rangeRight = rangeRight;
	    lodash.rearg = rearg;
	    lodash.reject = reject;
	    lodash.remove = remove;
	    lodash.rest = rest;
	    lodash.reverse = reverse;
	    lodash.sampleSize = sampleSize;
	    lodash.set = set;
	    lodash.setWith = setWith;
	    lodash.shuffle = shuffle;
	    lodash.slice = slice;
	    lodash.sortBy = sortBy;
	    lodash.sortedUniq = sortedUniq;
	    lodash.sortedUniqBy = sortedUniqBy;
	    lodash.split = split;
	    lodash.spread = spread;
	    lodash.tail = tail;
	    lodash.take = take;
	    lodash.takeRight = takeRight;
	    lodash.takeRightWhile = takeRightWhile;
	    lodash.takeWhile = takeWhile;
	    lodash.tap = tap;
	    lodash.throttle = throttle;
	    lodash.thru = thru;
	    lodash.toArray = toArray;
	    lodash.toPairs = toPairs;
	    lodash.toPairsIn = toPairsIn;
	    lodash.toPath = toPath;
	    lodash.toPlainObject = toPlainObject;
	    lodash.transform = transform;
	    lodash.unary = unary;
	    lodash.union = union;
	    lodash.unionBy = unionBy;
	    lodash.unionWith = unionWith;
	    lodash.uniq = uniq;
	    lodash.uniqBy = uniqBy;
	    lodash.uniqWith = uniqWith;
	    lodash.unset = unset;
	    lodash.unzip = unzip;
	    lodash.unzipWith = unzipWith;
	    lodash.update = update;
	    lodash.updateWith = updateWith;
	    lodash.values = values;
	    lodash.valuesIn = valuesIn;
	    lodash.without = without;
	    lodash.words = words;
	    lodash.wrap = wrap;
	    lodash.xor = xor;
	    lodash.xorBy = xorBy;
	    lodash.xorWith = xorWith;
	    lodash.zip = zip;
	    lodash.zipObject = zipObject;
	    lodash.zipObjectDeep = zipObjectDeep;
	    lodash.zipWith = zipWith;

	    // Add aliases.
	    lodash.entries = toPairs;
	    lodash.entriesIn = toPairsIn;
	    lodash.extend = assignIn;
	    lodash.extendWith = assignInWith;

	    // Add methods to `lodash.prototype`.
	    mixin(lodash, lodash);

	    /*------------------------------------------------------------------------*/

	    // Add methods that return unwrapped values in chain sequences.
	    lodash.add = add;
	    lodash.attempt = attempt;
	    lodash.camelCase = camelCase;
	    lodash.capitalize = capitalize;
	    lodash.ceil = ceil;
	    lodash.clamp = clamp;
	    lodash.clone = clone;
	    lodash.cloneDeep = cloneDeep;
	    lodash.cloneDeepWith = cloneDeepWith;
	    lodash.cloneWith = cloneWith;
	    lodash.conformsTo = conformsTo;
	    lodash.deburr = deburr;
	    lodash.defaultTo = defaultTo;
	    lodash.divide = divide;
	    lodash.endsWith = endsWith;
	    lodash.eq = eq;
	    lodash.escape = escape;
	    lodash.escapeRegExp = escapeRegExp;
	    lodash.every = every;
	    lodash.find = find;
	    lodash.findIndex = findIndex;
	    lodash.findKey = findKey;
	    lodash.findLast = findLast;
	    lodash.findLastIndex = findLastIndex;
	    lodash.findLastKey = findLastKey;
	    lodash.floor = floor;
	    lodash.forEach = forEach;
	    lodash.forEachRight = forEachRight;
	    lodash.forIn = forIn;
	    lodash.forInRight = forInRight;
	    lodash.forOwn = forOwn;
	    lodash.forOwnRight = forOwnRight;
	    lodash.get = get;
	    lodash.gt = gt;
	    lodash.gte = gte;
	    lodash.has = has;
	    lodash.hasIn = hasIn;
	    lodash.head = head;
	    lodash.identity = identity;
	    lodash.includes = includes;
	    lodash.indexOf = indexOf;
	    lodash.inRange = inRange;
	    lodash.invoke = invoke;
	    lodash.isArguments = isArguments;
	    lodash.isArray = isArray;
	    lodash.isArrayBuffer = isArrayBuffer;
	    lodash.isArrayLike = isArrayLike;
	    lodash.isArrayLikeObject = isArrayLikeObject;
	    lodash.isBoolean = isBoolean;
	    lodash.isBuffer = isBuffer;
	    lodash.isDate = isDate;
	    lodash.isElement = isElement;
	    lodash.isEmpty = isEmpty;
	    lodash.isEqual = isEqual;
	    lodash.isEqualWith = isEqualWith;
	    lodash.isError = isError;
	    lodash.isFinite = isFinite;
	    lodash.isFunction = isFunction;
	    lodash.isInteger = isInteger;
	    lodash.isLength = isLength;
	    lodash.isMap = isMap;
	    lodash.isMatch = isMatch;
	    lodash.isMatchWith = isMatchWith;
	    lodash.isNaN = isNaN;
	    lodash.isNative = isNative;
	    lodash.isNil = isNil;
	    lodash.isNull = isNull;
	    lodash.isNumber = isNumber;
	    lodash.isObject = isObject;
	    lodash.isObjectLike = isObjectLike;
	    lodash.isPlainObject = isPlainObject;
	    lodash.isRegExp = isRegExp;
	    lodash.isSafeInteger = isSafeInteger;
	    lodash.isSet = isSet;
	    lodash.isString = isString;
	    lodash.isSymbol = isSymbol;
	    lodash.isTypedArray = isTypedArray;
	    lodash.isUndefined = isUndefined;
	    lodash.isWeakMap = isWeakMap;
	    lodash.isWeakSet = isWeakSet;
	    lodash.join = join;
	    lodash.kebabCase = kebabCase;
	    lodash.last = last;
	    lodash.lastIndexOf = lastIndexOf;
	    lodash.lowerCase = lowerCase;
	    lodash.lowerFirst = lowerFirst;
	    lodash.lt = lt;
	    lodash.lte = lte;
	    lodash.max = max;
	    lodash.maxBy = maxBy;
	    lodash.mean = mean;
	    lodash.meanBy = meanBy;
	    lodash.min = min;
	    lodash.minBy = minBy;
	    lodash.stubArray = stubArray;
	    lodash.stubFalse = stubFalse;
	    lodash.stubObject = stubObject;
	    lodash.stubString = stubString;
	    lodash.stubTrue = stubTrue;
	    lodash.multiply = multiply;
	    lodash.nth = nth;
	    lodash.noConflict = noConflict;
	    lodash.noop = noop;
	    lodash.now = now;
	    lodash.pad = pad;
	    lodash.padEnd = padEnd;
	    lodash.padStart = padStart;
	    lodash.parseInt = parseInt;
	    lodash.random = random;
	    lodash.reduce = reduce;
	    lodash.reduceRight = reduceRight;
	    lodash.repeat = repeat;
	    lodash.replace = replace;
	    lodash.result = result;
	    lodash.round = round;
	    lodash.runInContext = runInContext;
	    lodash.sample = sample;
	    lodash.size = size;
	    lodash.snakeCase = snakeCase;
	    lodash.some = some;
	    lodash.sortedIndex = sortedIndex;
	    lodash.sortedIndexBy = sortedIndexBy;
	    lodash.sortedIndexOf = sortedIndexOf;
	    lodash.sortedLastIndex = sortedLastIndex;
	    lodash.sortedLastIndexBy = sortedLastIndexBy;
	    lodash.sortedLastIndexOf = sortedLastIndexOf;
	    lodash.startCase = startCase;
	    lodash.startsWith = startsWith;
	    lodash.subtract = subtract;
	    lodash.sum = sum;
	    lodash.sumBy = sumBy;
	    lodash.template = template;
	    lodash.times = times;
	    lodash.toFinite = toFinite;
	    lodash.toInteger = toInteger;
	    lodash.toLength = toLength;
	    lodash.toLower = toLower;
	    lodash.toNumber = toNumber;
	    lodash.toSafeInteger = toSafeInteger;
	    lodash.toString = toString;
	    lodash.toUpper = toUpper;
	    lodash.trim = trim;
	    lodash.trimEnd = trimEnd;
	    lodash.trimStart = trimStart;
	    lodash.truncate = truncate;
	    lodash.unescape = unescape;
	    lodash.uniqueId = uniqueId;
	    lodash.upperCase = upperCase;
	    lodash.upperFirst = upperFirst;

	    // Add aliases.
	    lodash.each = forEach;
	    lodash.eachRight = forEachRight;
	    lodash.first = head;

	    mixin(lodash, (function() {
	      var source = {};
	      baseForOwn(lodash, function(func, methodName) {
	        if (!hasOwnProperty.call(lodash.prototype, methodName)) {
	          source[methodName] = func;
	        }
	      });
	      return source;
	    }()), { 'chain': false });

	    /*------------------------------------------------------------------------*/

	    /**
	     * The semantic version number.
	     *
	     * @static
	     * @memberOf _
	     * @type {string}
	     */
	    lodash.VERSION = VERSION;

	    // Assign default placeholders.
	    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {
	      lodash[methodName].placeholder = lodash;
	    });

	    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.
	    arrayEach(['drop', 'take'], function(methodName, index) {
	      LazyWrapper.prototype[methodName] = function(n) {
	        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);

	        var result = (this.__filtered__ && !index)
	          ? new LazyWrapper(this)
	          : this.clone();

	        if (result.__filtered__) {
	          result.__takeCount__ = nativeMin(n, result.__takeCount__);
	        } else {
	          result.__views__.push({
	            'size': nativeMin(n, MAX_ARRAY_LENGTH),
	            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')
	          });
	        }
	        return result;
	      };

	      LazyWrapper.prototype[methodName + 'Right'] = function(n) {
	        return this.reverse()[methodName](n).reverse();
	      };
	    });

	    // Add `LazyWrapper` methods that accept an `iteratee` value.
	    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {
	      var type = index + 1,
	          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;

	      LazyWrapper.prototype[methodName] = function(iteratee) {
	        var result = this.clone();
	        result.__iteratees__.push({
	          'iteratee': getIteratee(iteratee, 3),
	          'type': type
	        });
	        result.__filtered__ = result.__filtered__ || isFilter;
	        return result;
	      };
	    });

	    // Add `LazyWrapper` methods for `_.head` and `_.last`.
	    arrayEach(['head', 'last'], function(methodName, index) {
	      var takeName = 'take' + (index ? 'Right' : '');

	      LazyWrapper.prototype[methodName] = function() {
	        return this[takeName](1).value()[0];
	      };
	    });

	    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.
	    arrayEach(['initial', 'tail'], function(methodName, index) {
	      var dropName = 'drop' + (index ? '' : 'Right');

	      LazyWrapper.prototype[methodName] = function() {
	        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
	      };
	    });

	    LazyWrapper.prototype.compact = function() {
	      return this.filter(identity);
	    };

	    LazyWrapper.prototype.find = function(predicate) {
	      return this.filter(predicate).head();
	    };

	    LazyWrapper.prototype.findLast = function(predicate) {
	      return this.reverse().find(predicate);
	    };

	    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {
	      if (typeof path == 'function') {
	        return new LazyWrapper(this);
	      }
	      return this.map(function(value) {
	        return baseInvoke(value, path, args);
	      });
	    });

	    LazyWrapper.prototype.reject = function(predicate) {
	      return this.filter(negate(getIteratee(predicate)));
	    };

	    LazyWrapper.prototype.slice = function(start, end) {
	      start = toInteger(start);

	      var result = this;
	      if (result.__filtered__ && (start > 0 || end < 0)) {
	        return new LazyWrapper(result);
	      }
	      if (start < 0) {
	        result = result.takeRight(-start);
	      } else if (start) {
	        result = result.drop(start);
	      }
	      if (end !== undefined) {
	        end = toInteger(end);
	        result = end < 0 ? result.dropRight(-end) : result.take(end - start);
	      }
	      return result;
	    };

	    LazyWrapper.prototype.takeRightWhile = function(predicate) {
	      return this.reverse().takeWhile(predicate).reverse();
	    };

	    LazyWrapper.prototype.toArray = function() {
	      return this.take(MAX_ARRAY_LENGTH);
	    };

	    // Add `LazyWrapper` methods to `lodash.prototype`.
	    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
	      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),
	          isTaker = /^(?:head|last)$/.test(methodName),
	          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],
	          retUnwrapped = isTaker || /^find/.test(methodName);

	      if (!lodashFunc) {
	        return;
	      }
	      lodash.prototype[methodName] = function() {
	        var value = this.__wrapped__,
	            args = isTaker ? [1] : arguments,
	            isLazy = value instanceof LazyWrapper,
	            iteratee = args[0],
	            useLazy = isLazy || isArray(value);

	        var interceptor = function(value) {
	          var result = lodashFunc.apply(lodash, arrayPush([value], args));
	          return (isTaker && chainAll) ? result[0] : result;
	        };

	        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {
	          // Avoid lazy use if the iteratee has a "length" value other than `1`.
	          isLazy = useLazy = false;
	        }
	        var chainAll = this.__chain__,
	            isHybrid = !!this.__actions__.length,
	            isUnwrapped = retUnwrapped && !chainAll,
	            onlyLazy = isLazy && !isHybrid;

	        if (!retUnwrapped && useLazy) {
	          value = onlyLazy ? value : new LazyWrapper(this);
	          var result = func.apply(value, args);
	          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });
	          return new LodashWrapper(result, chainAll);
	        }
	        if (isUnwrapped && onlyLazy) {
	          return func.apply(this, args);
	        }
	        result = this.thru(interceptor);
	        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;
	      };
	    });

	    // Add `Array` methods to `lodash.prototype`.
	    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {
	      var func = arrayProto[methodName],
	          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
	          retUnwrapped = /^(?:pop|shift)$/.test(methodName);

	      lodash.prototype[methodName] = function() {
	        var args = arguments;
	        if (retUnwrapped && !this.__chain__) {
	          var value = this.value();
	          return func.apply(isArray(value) ? value : [], args);
	        }
	        return this[chainName](function(value) {
	          return func.apply(isArray(value) ? value : [], args);
	        });
	      };
	    });

	    // Map minified method names to their real names.
	    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
	      var lodashFunc = lodash[methodName];
	      if (lodashFunc) {
	        var key = (lodashFunc.name + ''),
	            names = realNames[key] || (realNames[key] = []);

	        names.push({ 'name': methodName, 'func': lodashFunc });
	      }
	    });

	    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{
	      'name': 'wrapper',
	      'func': undefined
	    }];

	    // Add methods to `LazyWrapper`.
	    LazyWrapper.prototype.clone = lazyClone;
	    LazyWrapper.prototype.reverse = lazyReverse;
	    LazyWrapper.prototype.value = lazyValue;

	    // Add chain sequence methods to the `lodash` wrapper.
	    lodash.prototype.at = wrapperAt;
	    lodash.prototype.chain = wrapperChain;
	    lodash.prototype.commit = wrapperCommit;
	    lodash.prototype.next = wrapperNext;
	    lodash.prototype.plant = wrapperPlant;
	    lodash.prototype.reverse = wrapperReverse;
	    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;

	    // Add lazy aliases.
	    lodash.prototype.first = lodash.prototype.head;

	    if (symIterator) {
	      lodash.prototype[symIterator] = wrapperToIterator;
	    }
	    return lodash;
	  });

	  /*--------------------------------------------------------------------------*/

	  // Export lodash.
	  var _ = runInContext();

	  // Some AMD build optimizers, like r.js, check for condition patterns like:
	  if (true) {
	    // Expose Lodash on the global object to prevent errors when Lodash is
	    // loaded by a script tag in the presence of an AMD loader.
	    // See http://requirejs.org/docs/errors.html#mismatch for more details.
	    // Use `_.noConflict` to remove Lodash from the global object.
	    root._ = _;

	    // Define as an anonymous module so, through path mapping, it can be
	    // referenced as the "underscore" module.
	    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {
	      return _;
	    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  }
	  // Check for `exports` after `define` in case a build optimizer adds it.
	  else if (freeModule) {
	    // Export for Node.js.
	    (freeModule.exports = _)._ = _;
	    // Export for CommonJS support.
	    freeExports._ = _;
	  }
	  else {
	    // Export to the global object.
	    root._ = _;
	  }
	}.call(this));

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(38)(module)))

/***/ }),
/* 643 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	function __export(m) {
	    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
	}
	__export(__webpack_require__(644));
	

/***/ }),
/* 644 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var core_1 = __webpack_require__(2);
	var ng2_bootstrap_1 = __webpack_require__(345);
	var HelpComponent = (function () {
	    function HelpComponent() {
	    }
	    ;
	    HelpComponent.prototype.showModal = function () {
	        this.serverModal.show();
	    };
	    __decorate([
	        core_1.ViewChild('serverModal'), 
	        __metadata('design:type', Object)
	    ], HelpComponent.prototype, "serverModal", void 0);
	    HelpComponent = __decorate([
	        core_1.Component({
	            selector: 'transflo-help',
	            template: __webpack_require__(645),
	            directives: [ng2_bootstrap_1.MODAL_DIRECTVES, ng2_bootstrap_1.DROPDOWN_DIRECTIVES],
	            viewProviders: [ng2_bootstrap_1.BS_VIEW_PROVIDERS]
	        }), 
	        __metadata('design:paramtypes', [])
	    ], HelpComponent);
	    return HelpComponent;
	}());
	exports.HelpComponent = HelpComponent;
	

/***/ }),
/* 645 */
/***/ (function(module, exports) {

	module.exports = "\r\n<!--Server eula modal-->\r\n<div bsModal #serverModal=\"bs-modal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myServerModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\">\r\n    <div class=\"modal-content -center\">\r\n\t  <div class=\"modal-popup-close\">\r\n\t\t<button type=\"button\" class=\"modal-close \" aria-label=\"Close\" (click)=\"serverModal.hide()\" title=\"Close\">&times;</button>\r\n\t  </div>\r\n\t    <div class=\"modal-popup\">\r\n\t\t  <header class=\"modal-popup-header\"><h1>Help</h1></header>\r\n\t\t  <div class=\"modal-popup-content\">\r\n\t\t    For further assistance, please email support@transflo.com\r\n\t\t  </div>\r\n    </div>\r\n  </div>\r\n</div>"

/***/ }),
/* 646 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	function __export(m) {
	    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
	}
	__export(__webpack_require__(647));
	

/***/ }),
/* 647 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var core_1 = __webpack_require__(2);
	var ng2_bootstrap_1 = __webpack_require__(345);
	var AboutComponent = (function () {
	    function AboutComponent() {
	    }
	    ;
	    AboutComponent.prototype.showModal = function (version) {
	        this.appVersion = version;
	        this.serverModal.show();
	    };
	    __decorate([
	        core_1.ViewChild('serverModal'), 
	        __metadata('design:type', Object)
	    ], AboutComponent.prototype, "serverModal", void 0);
	    AboutComponent = __decorate([
	        core_1.Component({
	            selector: 'transflo-about',
	            template: __webpack_require__(648),
	            directives: [ng2_bootstrap_1.MODAL_DIRECTVES, ng2_bootstrap_1.DROPDOWN_DIRECTIVES],
	            viewProviders: [ng2_bootstrap_1.BS_VIEW_PROVIDERS]
	        }), 
	        __metadata('design:paramtypes', [])
	    ], AboutComponent);
	    return AboutComponent;
	}());
	exports.AboutComponent = AboutComponent;
	

/***/ }),
/* 648 */
/***/ (function(module, exports) {

	module.exports = "\r\n<!--Server eula modal-->\r\n<div bsModal #serverModal=\"bs-modal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myServerModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\">\r\n    <div class=\"modal-content -center\">\r\n\t  <div class=\"modal-popup-close\">\r\n\t\t<button type=\"button\" class=\"modal-close \" aria-label=\"Close\" (click)=\"serverModal.hide()\" title=\"Close\">&times;</button>\r\n\t  </div>\r\n\t    <div class=\"modal-popup\">\r\n\t\t  <header class=\"modal-popup-header\">\r\n\t\t\t<h1>About</h1>\r\n\t\t</header>\r\n\t\t<div class=\"modal-popup-content\">\r\n\t\t  <svg class=\"icon -logo\"><use xlink:href=\"#svg_logo\" /></svg>\r\n\t\t  Version: {{appVersion}}\r\n\t\t</div>\r\n\t  </div>\r\n    </div>\r\n  </div>\r\n</div>"

/***/ }),
/* 649 */
/***/ (function(module, exports) {

	module.exports = "<div class=\"loading-page\" [hidden]=\"!loading\" style=\"top: 0; left: 0; height: 100vh;\"><em></em><em></em><em></em></div>\r\n\r\n<header class=\"header flex\" *ngIf=\"!isSignInPage\">\r\n  <span class=\" header-item header-logo\"><svg class=\"icon -logo\"><use xlink:href=\"#svg_logo\"/></svg></span>\r\n  <nav class=\"header-item flex-auto header-divisions\">\r\n    <div dropdown keyboardNav=\"true\" autoClose=\"nonInput\" [hidden]=\"!selectedDivision.id\">\r\n      <button class=\"header-dropdown-toggle\" type=\"button\" dropdownToggle>\r\n        {{selectedDivision.name  ? selectedDivision.name + '&bull;' : ''}}  \r\n        {{selectedDivision.code ? selectedDivision.code + '&bull;' : ''}} \r\n        <span>{{selectedDivision.type}}</span>\r\n      </button>\r\n      <div class=\"dropdown-menu -header\" role=\"menu\" dropdownMenu>\r\n        <input type=\"text\" class=\"header-dropdown-control\" [ngModel]=\"searchString\" (ngModelChange)=\"search($event)\" placeholder=\"Filter\"/>\r\n        <ul class=\"header-dropdown-menu\">\r\n          <li *ngFor=\"let division of filteredDivisions\">\r\n            <a (click)=\"setSelectedDivision(division, true)\" [ngClass]=\"{'-active': division.id == selectedDivision.id}\">\r\n              <strong>{{division.name}}</strong>\r\n              <span>{{division.code}} &mdash; {{division.type}}</span>\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  <ul class=\"header-item header-menu\">\r\n    <li><a [routerLink]=\"['Home', {divId: selectedDivision.id}]\">Home</a></li>\r\n    <li><a [routerLink]=\"['Loads', {divId: selectedDivision.id, ddl: getDate(), dsh: getDate()}]\">Loads</a></li>\r\n\t<li [hidden]=\"!isCarrier\"><a messages [divisionId]=\"selectedDivision.id\">Drivers</a></li>\r\n  </ul>\r\n  <nav class=\"header-item header-profile\">\r\n    <div dropdown keyboardNav=\"true\" autoClose=\"outsideClick\">\r\n      <button class=\"header-dropdown-toggle\" type=\"button\" dropdownToggle>\r\n        {{user.firstname}} {{user.lastname}}\r\n      </button>\r\n      <ul class=\"dropdown-menu -right -header\" role=\"menu\" dropdownMenu>\r\n        <li>\r\n          <a [routerLink]=\"['Profile', { divId: selectedDivision.id }]\" dropdownToggle>\r\n            My Profile\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a (click)=\"showHelp()\">\r\n            Help\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a (click)=\"showAbout()\">\r\n            About\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a (click)=\"logout()\">\r\n            Logout\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </nav>\r\n</header>\r\n<transflo-help></transflo-help>\r\n<transflo-about></transflo-about>"

/***/ }),
/* 650 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	function __export(m) {
	    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
	}
	__export(__webpack_require__(651));
	

/***/ }),
/* 651 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var core_1 = __webpack_require__(2);
	var FooterComponent = (function () {
	    function FooterComponent() {
	    }
	    FooterComponent = __decorate([
	        core_1.Component({
	            selector: 'transflo-footer',
	            template: __webpack_require__(652)
	        }), 
	        __metadata('design:paramtypes', [])
	    ], FooterComponent);
	    return FooterComponent;
	}());
	exports.FooterComponent = FooterComponent;
	

/***/ }),
/* 652 */
/***/ (function(module, exports) {

	module.exports = "\r\n<footer class=\"footer\">\r\n  &copy; Transflo, 2017\r\n</footer>\r\n<div class=\"footer-placeholder\"></div>"

/***/ }),
/* 653 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	function __export(m) {
	    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
	}
	__export(__webpack_require__(654));
	

/***/ }),
/* 654 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {"use strict";
	var core_1 = __webpack_require__(2);
	var DropdownComponent = (function () {
	    function DropdownComponent(el) {
	        this.shown = false;
	        this.searchString = '';
	        this.filteredScope = [];
	        this.listChanged = new core_1.EventEmitter();
	        this.el = el.nativeElement;
	        this.id = Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);
	    }
	    DropdownComponent.prototype.ngOnChanges = function (changes) {
	        if (changes.list) {
	            this.filteredScope = this.list.slice();
	        }
	    };
	    ;
	    DropdownComponent.prototype.ngOnInit = function () {
	        var _this = this;
	        $('body').on('click.' + this.id + ' touchstart.' + this.id, function (event) {
	            if (!$(event.target).closest('.id' + _this.id).length) {
	                _this.shown = false;
	            }
	        });
	    };
	    ;
	    DropdownComponent.prototype.getSelected = function (el) {
	        return !!(this.selectedList.indexOf(el) + 1);
	    };
	    ;
	    DropdownComponent.prototype.onKey = function (event) {
	        if (event.code == 'Backspace' && this.searchString == '') {
	            this.selectedList.pop();
	        }
	    };
	    ;
	    DropdownComponent.prototype.deleteStatus = function (el) {
	        this.setSelected(el, false);
	    };
	    ;
	    DropdownComponent.prototype.setSelected = function (el, isSelected) {
	        if (isSelected) {
	            this.selectedList.push(el);
	        }
	        else {
	            this.selectedList = this.selectedList.filter(function (status) {
	                return status != el;
	            });
	        }
	        this.listChanged.emit(this.selectedList);
	    };
	    ;
	    DropdownComponent.prototype.filter = function (str) {
	        this.searchString = str;
	        if (str && str != '') {
	            str = str.toUpperCase();
	            this.filteredScope = this.list.filter(function (el) {
	                var name = '';
	                if (el.name) {
	                    name = el.name.toUpperCase();
	                }
	                else {
	                    name = el.text.toUpperCase();
	                }
	                return (name.indexOf(str) != -1);
	            });
	        }
	        else {
	            this.filteredScope = this.list;
	        }
	    };
	    ;
	    DropdownComponent.prototype.ngOnDestroy = function () {
	        $('body').unbind('click.' + this.id + ' touchstart.' + this.id);
	    };
	    ;
	    DropdownComponent.prototype.onFocus = function () {
	        this.shown = true;
	    };
	    ;
	    __decorate([
	        core_1.Output(), 
	        __metadata('design:type', Object)
	    ], DropdownComponent.prototype, "listChanged", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Array)
	    ], DropdownComponent.prototype, "list", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Array)
	    ], DropdownComponent.prototype, "selectedList", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', String)
	    ], DropdownComponent.prototype, "placeholder", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', String)
	    ], DropdownComponent.prototype, "valueField", void 0);
	    DropdownComponent = __decorate([
	        core_1.Component({
	            selector: 'transflo-dropdown',
	            template: __webpack_require__(655)
	        }), 
	        __metadata('design:paramtypes', [core_1.ElementRef])
	    ], DropdownComponent);
	    return DropdownComponent;
	}());
	exports.DropdownComponent = DropdownComponent;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(337)))

/***/ }),
/* 655 */
/***/ (function(module, exports) {

	module.exports = "<div class=\"form-control multiple id{{id}}\" xmlns=\"http://www.w3.org/1999/html\" [ngClass]=\"{'-active': shown }\">\r\n  <span *ngFor=\"let selected of selectedList\" class=\"multiple-selected\" [ngClass]=\"selected.className\">\r\n    <span>{{selected.name || selected.text}}</span>\r\n    <span class=\"multiple-selected-delete\" (click)=\"deleteStatus(selected)\" title=\"Delete\">×</span>\r\n  </span>\r\n  <input type=\"text\" autocomplete=\"off\" [ngModel]=\"searchString\" (ngModelChange)=\"filter($event)\" class=\"multiple-field\" (focus)=\"onFocus($event)\" (keydown)=\"onKey($event)\" [placeholder]=\"placeholder\" />\r\n  <ul class=\"dropdown-menu -hover multiple-menu\" [hidden]=\"!shown || !filteredScope.length\">\r\n    <li *ngFor=\"let el of filteredScope\">\r\n      <label>\r\n        <input type=\"checkbox\" [ngModel]=\"getSelected(el)\" (ngModelChange)=\"setSelected(el, $event)\"/>\r\n        <span>{{el.name || el.text}}</span>\r\n      </label>\r\n    </li>\r\n  </ul>\r\n</div>"

/***/ }),
/* 656 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	function __export(m) {
	    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
	}
	__export(__webpack_require__(657));
	

/***/ }),
/* 657 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var core_1 = __webpack_require__(2);
	var ng2_bootstrap_1 = __webpack_require__(345);
	var directives_1 = __webpack_require__(635);
	var router_deprecated_1 = __webpack_require__(281);
	var DriversComponent = (function () {
	    function DriversComponent(router) {
	        this.router = router;
	        this.onToggle = new core_1.EventEmitter();
	        this.driversList = [];
	    }
	    DriversComponent.prototype.goToTendering = function (event) {
	        if (this.divisionId && this.loadId && this.loadStatus !== 'Delivered') {
	            this.router.navigate(['TenderingLoad', { divId: this.divisionId, loadId: this.loadId }]);
	        }
	        ;
	        event.stopPropagation();
	        event.preventDefault();
	    };
	    ;
	    DriversComponent.prototype.ngOnChanges = function (changes) {
	        if (changes.drivers) {
	            var offeredDrivers = [];
	            var assignedDrivers = [];
	            if (this.drivers && this.drivers.length) {
	                offeredDrivers = this.drivers.filter(function (driver) {
	                    return driver.assignmentStatus == 'Offered';
	                });
	                assignedDrivers = this.drivers.filter(function (driver) {
	                    return driver.assignmentStatus == 'Assigned' || driver.assignmentStatus == 'Accepted';
	                });
	                if (offeredDrivers.length) {
	                    this.status = 'Offered';
	                    this.driversList = offeredDrivers;
	                }
	                else {
	                    if (assignedDrivers.length) {
	                        this.status = 'Assigned';
	                        this.driversList = assignedDrivers;
	                    }
	                    else {
	                        this.driversList = [];
	                    }
	                }
	            }
	        }
	    };
	    ;
	    DriversComponent.prototype.toggled = function (val) {
	        this.onToggle.emit(val);
	    };
	    ;
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Array)
	    ], DriversComponent.prototype, "drivers", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Boolean)
	    ], DriversComponent.prototype, "isCarrier", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Object)
	    ], DriversComponent.prototype, "loadId", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Object)
	    ], DriversComponent.prototype, "divisionId", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', String)
	    ], DriversComponent.prototype, "loadStatus", void 0);
	    __decorate([
	        core_1.Output(), 
	        __metadata('design:type', Object)
	    ], DriversComponent.prototype, "onToggle", void 0);
	    DriversComponent = __decorate([
	        core_1.Component({
	            selector: 'transflo-drivers',
	            template: __webpack_require__(658),
	            directives: [ng2_bootstrap_1.DROPDOWN_DIRECTIVES, directives_1.MessagesDirective],
	        }), 
	        __metadata('design:paramtypes', [router_deprecated_1.Router])
	    ], DriversComponent);
	    return DriversComponent;
	}());
	exports.DriversComponent = DriversComponent;
	

/***/ }),
/* 658 */
/***/ (function(module, exports) {

	module.exports = "<div *ngIf=\"driversList.length != 0\" class=\"label-title nowrap\">\r\n  {{status}} to&nbsp;\r\n  <button *ngIf=\"isCarrier\" [disabled]=\"loadStatus == 'Delivered'\" class=\"button -outline -xs -icon\" type=\"button\" title=\"Edit\" (click)=\"goToTendering($event)\">\r\n    <svg class=\"icon -pen\"><use xlink:href=\"#svg_pen\"/></svg>\r\n  </button>\r\n</div>\r\n\r\n<ul class=\"user-selected-list\" [hidden]=\"driversList.length > 2\">\r\n  <li *ngFor=\"let driver of driversList\">\r\n    <a href=\"javascript:;\" *ngIf=\"isCarrier\" messages [divisionId]=\"divisionId\" [driverId]=\"driver.id\" [ngClass]=\"{'-active': driver.isNewMessage}\">\r\n      <span class=\"user-selected-list_bubble\"><svg class=\"icon -quote\"><use xlink:href=\"#svg_quote\"/></svg></span>\r\n      <span class=\"label-link medium\">{{driver.name}}</span>\r\n      <span class=\"block label-text\">#{{driver.id}}</span>\r\n    </a>\r\n    <span *ngIf=\"!isCarrier\">\r\n      <span class=\"medium\">{{driver.name}}</span>\r\n      <span class=\"block label-text\">#{{driver.id}}</span>\r\n    </span>\r\n  </li>\r\n</ul>\r\n\r\n<ul class=\"user-selected-list\" [hidden]=\"driversList.length <= 2\">\r\n  <li *ngIf=\"isCarrier\">\r\n    <a href=\"javascript:;\" messages [divisionId]=\"divisionId\" [driverId]=\"driversList && driversList[0] && driversList[0].id\" [ngClass]=\"{'-active':  driversList && driversList[0] && driversList[0].isNewMessage}\">\r\n      <span class=\"user-selected-list_bubble\"><svg class=\"icon -quote\"><use xlink:href=\"#svg_quote\"/></svg></span>\r\n      <span class=\"label-link medium\">{{driversList[0] && driversList[0].name}}</span>\r\n      <span class=\"block label-text\">#{{driversList[0] && driversList[0].id}}</span>\r\n    </a>\r\n  </li>\r\n  <li *ngIf=\"!isCarrier\" class=\"-no-bubble\">\r\n    <span class=\"medium\">{{driversList[0] && driversList[0].name}}</span>\r\n    <span class=\"block label-text\">#{{driversList[0] && driversList[0].id}}</span>\r\n  </li>\r\n  <li class=\"dropdown\" dropdown keyboardNav=\"true\" (onToggle)=\"toggled($event)\">\r\n    <a href=\"javascript:;\" dropdownToggle>\r\n      and {{driversList.length - 1}} others\r\n    </a>\r\n    <ul class=\"dropdown-menu user-selected-list-dropdown\" role=\"menu\" dropdownMenu>\r\n      <li *ngFor=\"let driver of driversList.slice(1)\">\r\n        <a href=\"javascript:;\" *ngIf=\"isCarrier\" messages [divisionId]=\"divisionId\" [driverId]=\"driver.id\" [ngClass]=\"{'-active': driver.isNewMessage}\">\r\n          <span class=\"user-selected-list_bubble\"><svg class=\"icon -quote\"><use xlink:href=\"#svg_quote\"/></svg></span>\r\n          <span class=\"label-link medium\">{{driver.name}}</span>\r\n          <span class=\"block label-text\">#{{driver.id}}</span>\r\n        </a>\r\n        <span *ngIf=\"!isCarrier\">\r\n          <span class=\"medium\">{{driver.name}}</span>\r\n          <span class=\"block label-text\">#{{driver.id}}</span>\r\n        </span>\r\n      </li>\r\n    </ul>\r\n  </li>\r\n</ul>\r\n\r\n<button *ngIf=\"driversList.length == 0 && isCarrier\" [disabled]=\"loadStatus == 'Delivered'\" class=\"button -outline -xs\" type=\"button\" (click)=\"goToTendering($event)\">+ Assign</button>\r\n\r\n<br *ngIf=\"driversList.length == 0 && !isCarrier\"/>"

/***/ }),
/* 659 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	function __export(m) {
	    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
	}
	__export(__webpack_require__(660));
	

/***/ }),
/* 660 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var core_1 = __webpack_require__(2);
	var moment = __webpack_require__(529);
	var DateComponent = (function () {
	    function DateComponent() {
	    }
	    DateComponent.prototype.ngOnChanges = function (changes) {
	        if (changes.date) {
	            var momentObj = moment(this.date, 'M/D/YYYY');
	            this.value = momentObj.format('MMM DD');
	            if (!this.time) {
	                this.time = momentObj.format('LT');
	            }
	        }
	    };
	    ;
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Object)
	    ], DateComponent.prototype, "date", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Object)
	    ], DateComponent.prototype, "time", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Object)
	    ], DateComponent.prototype, "dontShowTime", void 0);
	    DateComponent = __decorate([
	        core_1.Component({
	            selector: 'transflo-date',
	            template: __webpack_require__(661)
	        }), 
	        __metadata('design:paramtypes', [])
	    ], DateComponent);
	    return DateComponent;
	}());
	exports.DateComponent = DateComponent;
	

/***/ }),
/* 661 */
/***/ (function(module, exports) {

	module.exports = "{{value}}\r\n<span *ngIf=\"!dontShowTime\" class=\"label-small\">{{time}}</span>"

/***/ }),
/* 662 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	function __export(m) {
	    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
	}
	__export(__webpack_require__(663));
	

/***/ }),
/* 663 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var core_1 = __webpack_require__(2);
	var ng2_bootstrap_1 = __webpack_require__(345);
	var AttributesComponent = (function () {
	    function AttributesComponent() {
	        this.onToggle = new core_1.EventEmitter();
	        this.attributesObject = {};
	    }
	    AttributesComponent.prototype.ngOnChanges = function (changes) {
	        if (this.attrs && changes.attrs) {
	            for (var i = 0; i < this.attrs.length; i++) {
	                this.attributesObject[this.attrs[i].key] = this.attrs[i].value;
	            }
	        }
	    };
	    ;
	    AttributesComponent.prototype.toggled = function (val) {
	        this.onToggle.emit(val);
	    };
	    ;
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Object)
	    ], AttributesComponent.prototype, "attrs", void 0);
	    __decorate([
	        core_1.Output(), 
	        __metadata('design:type', Object)
	    ], AttributesComponent.prototype, "onToggle", void 0);
	    AttributesComponent = __decorate([
	        core_1.Component({
	            selector: 'transflo-attributes',
	            template: __webpack_require__(664),
	            directives: [ng2_bootstrap_1.DROPDOWN_DIRECTIVES]
	        }), 
	        __metadata('design:paramtypes', [])
	    ], AttributesComponent);
	    return AttributesComponent;
	}());
	exports.AttributesComponent = AttributesComponent;
	

/***/ }),
/* 664 */
/***/ (function(module, exports) {

	module.exports = "<div class=\"form-group -x05\" *ngIf=\"attributesObject['Hazardous']\"><svg class=\"icon -danger\"><use xlink:href=\"#svg_danger\"/></svg></div>\r\n<div class=\"form-group -x05\" *ngIf=\"attributesObject['High Value']\"><svg class=\"icon -ruby\" title=\"Fragile\"><use xlink:href=\"#svg_ruby\"/></svg></div>\r\n<div class=\"form-group -x05\" *ngIf=\"attributesObject['Fragile']\"><svg class=\"icon -fragile\" title=\"High Value\"><use xlink:href=\"#svg_fragile\"/></svg></div>\r\n<div class=\"form-group -x05 dropdown -inline\" dropdown (onToggle)=\"toggled($event)\" keyboardNav=\"true\" [hidden]=\"attrs && attrs.length == 0\">\r\n  <button type=\"button\" class=\"button -outline -xs -arrow\" dropdownToggle>{{attrs && attrs.length}}</button>\r\n  <div class=\"dropdown-menu -sm -text -right\" role=\"menu\" dropdownMenu>\r\n    <table class=\"table -list\">\r\n      <tbody>\r\n        <tr *ngFor=\"let attr of attrs\">\r\n          <td *ngIf=\"attr && attr.key == 'Hazardous'\" class=\"align-middle center\">\r\n            <svg class=\"icon -danger m0\"><use xlink:href=\"#svg_danger\"/></svg>\r\n          </td>\r\n          <td *ngIf=\"attr && attr.key == 'Hazardous'\" >Hazardous</td>\r\n          <td *ngIf=\"attr && attr.key == 'Fragile'\" class=\"align-middle center\">\r\n            <svg class=\"icon -fragile m0\"><use xlink:href=\"#svg_fragile\"/></svg>\r\n          </td>\r\n          <td *ngIf=\"attr && attr.key == 'Fragile'\" >Fragile</td>\r\n          <td *ngIf=\"attr && attr.key == 'High Value'\" class=\"align-middle center\">\r\n            <svg class=\"icon -ruby m0\"><use xlink:href=\"#svg_ruby\"/></svg>\r\n          </td>\r\n          <td *ngIf=\"attr && attr.key == 'High Value'\" >High Value</td>\r\n          <td *ngIf=\"attr && attr.key != 'High Value' && attr.key != 'Fragile' && attr.key != 'Hazardous'\"  class=\"align-middle center\">\r\n              &bull;\r\n          </td>\r\n          <td *ngIf=\"attr && attr.key != 'High Value' && attr.key != 'Fragile' && attr.key != 'Hazardous'\">{{attr.key}}: {{attr.value}}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</div>"

/***/ }),
/* 665 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	function __export(m) {
	    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
	}
	__export(__webpack_require__(666));
	

/***/ }),
/* 666 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {"use strict";
	var core_1 = __webpack_require__(2);
	var SimpleDropdownComponent = (function () {
	    function SimpleDropdownComponent(el) {
	        this.searchString = '';
	        this.filteredScope = [];
	        this.attributeChanged = new core_1.EventEmitter();
	        this.el = el.nativeElement;
	        this.id = Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);
	    }
	    SimpleDropdownComponent.prototype.ngOnInit = function () {
	        var _this = this;
	        $('body').on('click.' + this.id, function (event) {
	            if (!$(event.target).closest('.id' + _this.id).length) {
	                if (_this.shown) {
	                    _this.attributeChanged.emit(_this.searchString);
	                }
	                _this.shown = false;
	            }
	        });
	    };
	    ;
	    SimpleDropdownComponent.prototype.onBlur = function (event) {
	        this.setSelected({
	            name: this.searchString,
	        }, event);
	    };
	    ;
	    SimpleDropdownComponent.prototype.onFocus = function () {
	        this.shown = true;
	        this.filter(this.searchString);
	    };
	    ;
	    SimpleDropdownComponent.prototype.ngOnChanges = function (changes) {
	        if (changes.values) {
	            this.filteredScope = this.values.slice();
	        }
	        if (changes.stringValue) {
	            this.searchString = this.stringValue;
	        }
	    };
	    ;
	    SimpleDropdownComponent.prototype.filter = function (str) {
	        this.attributeChanged.emit(this.searchString);
	        this.searchString = str;
	        this.shown = true;
	        if (str && str != '') {
	            str = str.toUpperCase();
	            this.filteredScope = this.values.filter(function (el) {
	                var name = '';
	                if (el.name) {
	                    name = el.name.toUpperCase();
	                }
	                else {
	                    name = el.text.toUpperCase();
	                }
	                return (name.indexOf(str) != -1);
	            });
	        }
	        else {
	            this.filteredScope = this.values;
	        }
	    };
	    ;
	    SimpleDropdownComponent.prototype.setSelected = function (attribute, event) {
	        this.searchString = attribute.name;
	        this.shown = false;
	        this.attributeChanged.emit(this.searchString);
	        event.stopImmediatePropagation();
	        return false;
	    };
	    ;
	    SimpleDropdownComponent.prototype.ngOnDestroy = function () {
	        $('body').unbind('click.' + this.id);
	    };
	    ;
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', String)
	    ], SimpleDropdownComponent.prototype, "stringValue", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Array)
	    ], SimpleDropdownComponent.prototype, "values", void 0);
	    __decorate([
	        core_1.Output(), 
	        __metadata('design:type', Object)
	    ], SimpleDropdownComponent.prototype, "attributeChanged", void 0);
	    SimpleDropdownComponent = __decorate([
	        core_1.Component({
	            selector: 'transflo-simple-dropdown',
	            template: __webpack_require__(667)
	        }), 
	        __metadata('design:paramtypes', [core_1.ElementRef])
	    ], SimpleDropdownComponent);
	    return SimpleDropdownComponent;
	}());
	exports.SimpleDropdownComponent = SimpleDropdownComponent;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(337)))

/***/ }),
/* 667 */
/***/ (function(module, exports) {

	module.exports = "<div class=\"id{{id}}\" class=\"dropdown\">\r\n\t<input type=\"text\" class=\"form-control\" autocomplete=\"off\" [(ngModel)]=\"searchString\" (ngModelChange)=\"filter($event)\" (focus)=\"onFocus($event)\" (blur)=\"onBlur($event)\"/>\r\n\t<ul class=\"dropdown-menu -shown\" [hidden]=\"!shown || !filteredScope.length\">\r\n\t\t<li *ngFor=\"let el of filteredScope\" (mousedown)=\"setSelected(el, $event)\">\r\n\t\t\t<a>{{el.name || el.text}}</a>\r\n\t\t</li>\r\n\t</ul>\r\n</div>"

/***/ }),
/* 668 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	function __export(m) {
	    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
	}
	__export(__webpack_require__(669));
	

/***/ }),
/* 669 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var core_1 = __webpack_require__(2);
	var index_1 = __webpack_require__(670);
	var SkeletonComponent = (function () {
	    function SkeletonComponent() {
	        this.shipments = [];
	        this.stops = [];
	        this.feetToCm = 30.48;
	        this.lbsToKg = 0.453592;
	        this.ft3toCm3 = 28316.8;
	        this.weightUnits = ['lbs', 'kg'];
	        this.heightUnits = ['ft', 'cm'];
	        this.volumeUnits = ['ft³', 'cm³'];
	    }
	    SkeletonComponent.prototype.ngOnChanges = function (changes) {
	        if (changes.load) {
	            this.shipments = this.load && this.load.shipments || [];
	            this.stops = this.load && this.load.stops || [];
	            this.stops.sort(function (a, b) { return a.stopNum - b.stopNum; });
	            this.recalculateSkeleton();
	        }
	    };
	    ;
	    SkeletonComponent.prototype.getValue = function (shipments, type, isImperial) {
	        var total = 0;
	        if (shipments) {
	            for (var _i = 0, shipments_1 = shipments; _i < shipments_1.length; _i++) {
	                var shipment = shipments_1[_i];
	                for (var _a = 0, _b = shipment.packages; _a < _b.length; _a++) {
	                    var pack = _b[_a];
	                    if (type != 'quantity') {
	                        if (pack.sizeUnit == 'cm' || pack.weightUnit == 'kg') {
	                            if (!isImperial) {
	                                total += pack.quantity * pack[type];
	                            }
	                        }
	                        else {
	                            if (isImperial) {
	                                total += pack.quantity * pack[type];
	                            }
	                        }
	                    }
	                    else {
	                        total += +pack.quantity;
	                    }
	                }
	            }
	        }
	        return total;
	    };
	    ;
	    SkeletonComponent.prototype.recalculateSkeleton = function () {
	        var prevStop;
	        var _loop_1 = function(stop) {
	            var foundPickUpShipment = this_1.shipments.filter(function (shipment) { return shipment.pickup == stop.id; });
	            var foundDropOffShipment = this_1.shipments.filter(function (shipment) { return shipment.dropoff == stop.id; });
	            var totalWeightOnStopImperial = this_1.getValue(foundPickUpShipment, 'weight', true) - this_1.getValue(foundDropOffShipment, 'weight', true);
	            var totalVolumeOfStopImperial = this_1.getValue(foundPickUpShipment, 'volume', true) - this_1.getValue(foundDropOffShipment, 'volume', true);
	            var totalWeightOnStopDecimal = this_1.getValue(foundPickUpShipment, 'weight', false) - this_1.getValue(foundDropOffShipment, 'weight', false);
	            var totalVolumeOfStopDecimal = this_1.getValue(foundPickUpShipment, 'volume', false) - this_1.getValue(foundDropOffShipment, 'volume', false);
	            if (prevStop) {
	                stop.truckLoad = {
	                    weightImperial: prevStop.truckLoad.weightImperial + totalWeightOnStopImperial,
	                    volumeImperial: prevStop.truckLoad.volumeImperial + totalVolumeOfStopImperial,
	                    weightDecimal: prevStop.truckLoad.weightDecimal + totalWeightOnStopDecimal,
	                    volumeDecimal: prevStop.truckLoad.volumeDecimal + totalVolumeOfStopDecimal,
	                    showDecimal: prevStop.truckLoad.volumeDecimal > 0 || prevStop.truckLoad.weightDecimal > 0,
	                    showImperial: prevStop.truckLoad.weightImperial > 0 || prevStop.truckLoad.volumeImperial > 0
	                };
	            }
	            else {
	                stop.truckLoad = {
	                    weightImperial: totalWeightOnStopImperial,
	                    volumeImperial: totalVolumeOfStopImperial,
	                    weightDecimal: totalWeightOnStopDecimal,
	                    volumeDecimal: totalVolumeOfStopDecimal,
	                    showDecimal: totalWeightOnStopDecimal > 0 || totalVolumeOfStopDecimal > 0,
	                    showImperial: totalVolumeOfStopImperial > 0 || totalWeightOnStopImperial > 0
	                };
	            }
	            stop.pickupShipments = foundPickUpShipment || [];
	            stop.dropoffShipments = foundDropOffShipment || [];
	            prevStop = stop;
	        };
	        var this_1 = this;
	        for (var _i = 0, _a = this.stops; _i < _a.length; _i++) {
	            var stop = _a[_i];
	            _loop_1(stop);
	        }
	    };
	    ;
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Object)
	    ], SkeletonComponent.prototype, "load", void 0);
	    SkeletonComponent = __decorate([
	        core_1.Component({
	            selector: 'transflo-skeleton',
	            template: __webpack_require__(673),
	            directives: [index_1.NumberComponent]
	        }), 
	        __metadata('design:paramtypes', [])
	    ], SkeletonComponent);
	    return SkeletonComponent;
	}());
	exports.SkeletonComponent = SkeletonComponent;
	

/***/ }),
/* 670 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	function __export(m) {
	    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
	}
	__export(__webpack_require__(671));
	

/***/ }),
/* 671 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var core_1 = __webpack_require__(2);
	var NumberComponent = (function () {
	    function NumberComponent() {
	    }
	    NumberComponent.prototype.ngOnChanges = function (changes) {
	        if (changes.number) {
	            this.value = this.number.toFixed(2);
	        }
	    };
	    ;
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Object)
	    ], NumberComponent.prototype, "number", void 0);
	    NumberComponent = __decorate([
	        core_1.Component({
	            selector: 'transflo-number',
	            template: __webpack_require__(672)
	        }), 
	        __metadata('design:paramtypes', [])
	    ], NumberComponent);
	    return NumberComponent;
	}());
	exports.NumberComponent = NumberComponent;
	

/***/ }),
/* 672 */
/***/ (function(module, exports) {

	module.exports = "{{value}}"

/***/ }),
/* 673 */
/***/ (function(module, exports) {

	module.exports = "  <div class=\"skeleton\" [hidden]=\"!shipments.length\">\r\n    <div class=\"skeleton-item\" *ngFor=\"let stop of stops; let idx = index;\">\r\n      <div class=\"skeleton-bubble -left\" *ngIf=\"stop.pickupShipments && stop.pickupShipments.length\" [hidden]=\"stop.isService\">\r\n        <div class=\"skeleton-bubble-header\">\r\n          <strong class=\"flex-auto\">Pick Up</strong>\r\n          <div *ngIf=\"getValue(stop.pickupShipments, 'volume', true) > 0 || getValue(stop.pickupShipments, 'weight', true) > 0\">\r\n            <small><transflo-number [number]=\"getValue(stop.pickupShipments, 'volume', true)\"></transflo-number>\r\n              ft³\r\n            </small>\r\n            <small><transflo-number [number]=\"getValue(stop.pickupShipments, 'weight', true)\"></transflo-number>\r\n              lbs\r\n            </small>\r\n          </div>\r\n          <div *ngIf=\"getValue(stop.pickupShipments, 'volume', false) > 0 || getValue(stop.pickupShipments, 'weight', false) > 0\">\r\n            <small><transflo-number [number]=\"getValue(stop.pickupShipments, 'volume', false)\"></transflo-number>\r\n              cm³\r\n            </small>\r\n            <small><transflo-number [number]=\"getValue(stop.pickupShipments, 'weight', false)\"></transflo-number>\r\n              kg\r\n            </small>\r\n          </div>\r\n        </div>\r\n        <ul class=\"skeleton-bubble-list\">\r\n          <li *ngFor=\"let shipment of stop.pickupShipments\">\r\n            <span>{{getValue([shipment], 'quantity')}} pcs</span>\r\n            <div *ngIf=\"getValue([shipment], 'volume', true) > 0 || getValue([shipment], 'weight', true) > 0\">\r\n              <span><transflo-number [number]=\"getValue([shipment], 'volume', true)\"></transflo-number>\r\n                &nbsp;ft³\r\n              </span>\r\n              <span><transflo-number [number]=\"getValue([shipment], 'weight', true)\"></transflo-number>\r\n                &nbsp;lbs\r\n              </span>\r\n            </div>\r\n            <div *ngIf=\"getValue([shipment], 'volume', false) > 0 || getValue([shipment], 'weight', false) > 0\">\r\n              <span><transflo-number [number]=\"getValue([shipment], 'volume', false)\"></transflo-number>\r\n                &nbsp;cm³\r\n              </span>\r\n              <span><transflo-number [number]=\"getValue([shipment], 'weight', false)\"></transflo-number>\r\n                &nbsp;kg\r\n              </span>\r\n            </div>\r\n            <strong>BOL {{shipment.shipmentBOL}}</strong>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div class=\"skeleton-bubble -right\" *ngIf=\"stop.dropoffShipments && stop.dropoffShipments.length\">\r\n        <div class=\"skeleton-bubble-header\">\r\n          <strong>Drop Off</strong>\r\n        </div>\r\n        <ul class=\"skeleton-bubble-list\">\r\n          <li *ngFor=\"let shipment of stop.dropoffShipments\">\r\n            <span>{{getValue([shipment], 'quantity')}} pcs</span>\r\n            <div *ngIf=\"getValue([shipment], 'volume', true) > 0 || getValue([shipment], 'weight', true) > 0\">\r\n              <span><transflo-number [number]=\"getValue([shipment], 'volume', true)\"></transflo-number>\r\n                ft³\r\n              </span>\r\n              <span><transflo-number [number]=\"getValue([shipment], 'weight', true)\"></transflo-number>\r\n                lbs\r\n              </span>\r\n            </div>\r\n            <div *ngIf=\"getValue([shipment], 'volume', false) > 0 || getValue([shipment], 'weight', false) > 0\">\r\n              <span><transflo-number [number]=\"getValue([shipment], 'volume', false)\"></transflo-number>\r\n                cm³\r\n              </span>\r\n              <span><transflo-number [number]=\"getValue([shipment], 'weight', false)\"></transflo-number>\r\n                kg\r\n              </span>\r\n            </div>\r\n            <strong>BOL {{shipment.shipmentBOL}}</strong>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div class=\"skeleton-item-container\">\r\n        <div class=\"flex flex-wrap content-stretch\" *ngIf=\"stop.isService\">\r\n          <p class=\"col-6 pr2\">\r\n            <strong>{{stop.date}}</strong>\r\n            <span>{{stop.time}}</span>\r\n          </p>\r\n          <div class=\"col-6 right-align pl2\">\r\n          </div>\r\n          <p class=\"col-6 self-end pr2 pt3\">\r\n            <strong>{{stop.addressLines && stop.addressLines[0] && stop.addressLines[0].val}}</strong><br />\r\n            <span>{{stop.addressLines && stop.addressLines[1] && stop.addressLines[1].val}}</span>\r\n            <span>{{stop.city}}, {{stop.state}}, {{stop.postalCode}}</span>\r\n          </p>\r\n          <div class=\"col-6 right-align self-end pl2 pt3\">\r\n            <strong>{{stop.contactName}}</strong>\r\n          </div>\r\n        </div>\r\n        <div class=\"flex flex-wrap content-stretch\" *ngIf=\"!stop.isService\">\r\n          <p class=\"col-6 pr2\">\r\n            <strong>{{stop.date}}</strong>\r\n            <span>{{stop.time}}</span>\r\n          </p>\r\n          <div class=\"col-6 right-align pl2\">\r\n            <div *ngIf=\"stop.truckLoad.showImperial\">\r\n              <strong class=\"pl2\"><transflo-number [number]=\"stop.truckLoad.volumeImperial\"></transflo-number>\r\n                ft³\r\n              </strong>\r\n              <strong class=\"pl2\"><transflo-number [number]=\"stop.truckLoad.weightImperial\"></transflo-number>\r\n                lbs\r\n              </strong>\r\n            </div>\r\n            <div *ngIf=\"stop.truckLoad.showDecimal\">\r\n              <strong class=\"pl2\"><transflo-number [number]=\"stop.truckLoad.volumeDecimal\"></transflo-number>\r\n                cm³\r\n              </strong>\r\n              <strong class=\"pl2\"><transflo-number [number]=\"stop.truckLoad.weightDecimal\"></transflo-number>\r\n                kg\r\n              </strong>\r\n            </div>\r\n            <div class=\"skeleton-item-hint\">Truck Load</div>\r\n          </div>\r\n          <p class=\"col-6 self-end pr2 pt3\">\r\n            <strong>{{stop.addressLines.join(', ')}}</strong><br />\r\n            <span>{{stop.city}}, {{stop.state}}, {{stop.postalCode}}</span>\r\n          </p>\r\n          <div class=\"col-6 right-align self-end pl2 pt3\">\r\n            <strong>{{stop.contactName}}</strong>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"skeleton-item-footer\">\r\n      </div>\r\n    </div>\r\n  </div>"

/***/ }),
/* 674 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	function __export(m) {
	    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
	}
	__export(__webpack_require__(675));
	

/***/ }),
/* 675 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var core_1 = __webpack_require__(2);
	var services_1 = __webpack_require__(508);
	var ng2_bootstrap_1 = __webpack_require__(345);
	var ShareComponent = (function () {
	    function ShareComponent(loadsService) {
	        this.loadsService = loadsService;
	        this.onToggle = new core_1.EventEmitter();
	        this.trackedEmails = [];
	        this.newEmail = '';
	        this.expired = 3;
	        this.time = 'hours';
	    }
	    ShareComponent.prototype.extractLink = function (res) {
	        if (res) {
	            var body = res.json();
	            this.trackingLink = window.location.origin + window.location.pathname + '#' + body.link;
	        }
	    };
	    ;
	    ShareComponent.prototype.getLink = function (loadId) {
	        if (!this.trackingLink) {
	            this.loadsService.getShareLink(this.loadId).then(this.extractLink.bind(this));
	        }
	    };
	    ;
	    ShareComponent.prototype.keyUp = function (event) {
	        if (this.newEmail == '' && event.keyCode == 8) {
	            this.removeEmail(this.trackedEmails.length - 1);
	        }
	    };
	    ;
	    ShareComponent.prototype.addEmail = function (lastCheck) {
	        var lastSymbol = this.newEmail[this.newEmail.length - 1];
	        var email;
	        if (lastSymbol == ' ' || lastSymbol == ';' || lastSymbol == ',' || lastCheck) {
	            email = this.newEmail.match(/([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\.[a-zA-Z0-9._-]+)/gi);
	            if (email) {
	                this.trackedEmails.push(email[0]);
	                this.newEmail = '';
	            }
	        }
	    };
	    ;
	    ShareComponent.prototype.removeEmail = function (index) {
	        this.trackedEmails.splice(index, 1);
	    };
	    ;
	    ShareComponent.prototype.toggle = function (val) {
	        this.onToggle.emit(val);
	    };
	    ;
	    ShareComponent.prototype.sendTackingLink = function () {
	        this.addEmail(true);
	        var sharingInfo = {
	            link: this.trackingLink,
	            expirationTime: this.time == 'hours' ? this.expired : this.expired * 24,
	            emails: this.trackedEmails,
	            additionalInfo: this.info
	        };
	        this.loadsService.shareLink(this.loadId, sharingInfo);
	    };
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Object)
	    ], ShareComponent.prototype, "loadId", void 0);
	    __decorate([
	        core_1.Output(), 
	        __metadata('design:type', Object)
	    ], ShareComponent.prototype, "onToggle", void 0);
	    ShareComponent = __decorate([
	        core_1.Component({
	            selector: 'transflo-share',
	            template: __webpack_require__(676),
	            providers: [services_1.LoadsService],
	            directives: [ng2_bootstrap_1.DROPDOWN_DIRECTIVES]
	        }), 
	        __metadata('design:paramtypes', [services_1.LoadsService])
	    ], ShareComponent);
	    return ShareComponent;
	}());
	exports.ShareComponent = ShareComponent;
	

/***/ }),
/* 676 */
/***/ (function(module, exports) {

	module.exports = "<div class=\"dropdown -inline\" dropdown keyboardNav=\"true\" (onToggle)=\"emailTracking = false; getLink(); toggle($event)\" autoClose=\"outsideClick\">\r\n    <button type=\"button\" class=\"button -link -sm\" dropdownToggle>Share</button>\r\n    <div class=\"dropdown-menu -xlg2 -center\" role=\"menu\" dropdownMenu>\r\n      <h2>Tracking Link</h2>\r\n      <div class=\"form-group\">\r\n        <input autocomplete=\"off\" class=\"form-control\" [(ngModel)]=\"trackingLink\" readonly />\r\n      </div>\r\n      <div class=\"form-group -x2 nowrap flex items-center\">\r\n        <div class=\"bold label-danger pr2\">Expires</div>\r\n        <div class=\"pr2 col-4 flex\">\r\n          <div class=\"col-5 -merged\">\r\n            <input autocomplete=\"off\" type=\"number\" class=\"form-control\" [value]=\"3\" [(ngModel)]=\"expired\"/>\r\n          </div>\r\n          <div class=\"col-7 -merged\">\r\n            <select class=\"form-control\" [(ngModel)]=\"time\">\r\n              <option>hours</option>\r\n              <option>days</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div class=\"flex-auto\">after the load arrives at the destination.</div>\r\n      </div>\r\n      <hr />\r\n      <div class=\"right-align\" [hidden]=\"emailTracking || trackedEmails.length\">\r\n        <button type=\"button\" class=\"button -link\" (click)=\"emailTracking = true\">Email Tracking Link</button>\r\n      </div>\r\n      <div class=\"flex items-baseline\" [hidden]=\"!emailTracking && !trackedEmails.length\">\r\n        <!--<label for=\"tracking_email_field\" class=\"pr2 nowrap\">Email tracking to</label>-->\r\n        <div class=\"pr2 flex-auto\">\r\n\t\t  <label for=\"tracking_email_field\" class=\"pr2 nowrap\">Email tracking to</label>\r\n          <div xmlns=\"http://www.w3.org/1999/html\" class=\"form-control multiple\">\r\n            <!--template bindings={}-->\r\n            <span class=\"multiple-selected\" *ngFor=\"let email of trackedEmails; let idx = index\">\r\n              <span>{{email}}</span>\r\n              <span class=\"multiple-selected-delete\" (click)=\"removeEmail(idx)\" title=\"Delete\">×</span>\r\n            </span>\r\n            <form (submit)=\"addEmail(true)\">\r\n              <input id=\"tracking_email_field\" autocomplete=\"off\" autofocus=\"\" (keyup)=\"keyUp($event)\" class=\"multiple-field -w100 ng-pristine ng-valid ng-touched\" type=\"text\" placeholder=\"Type email\" [(ngModel)]=\"newEmail\" (ngModelChange)=\"addEmail()\" (blur)=\"addEmail(true)\">\r\n            </form>\t\t    \r\n          </div>\r\n\t\t  <br />\r\n\t\t  <div class=\"form-group\">\r\n\t\t    <label for=\"additional_information\" class=\"pr2 nowrap\">Personalize Message</label>\r\n\t\t    <div class=\"pr2 flex-auto\">\r\n\t\t      <textarea class=\"form-control\" [(ngModel)]=\"info\" rows=\"4\" maxlength=\"1000\" placeholder=\"Additional Message\"></textarea>\r\n\t\t    </div>\r\n\t\t  </div>\r\n        </div>\r\n        <button class=\"button -outline self-end\" type=\"button\" dropdownToggle (click)=\"sendTackingLink()\">Send</button>\r\n      </div>\r\n    </div>\r\n  </div>"

/***/ }),
/* 677 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	function __export(m) {
	    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
	}
	__export(__webpack_require__(678));
	

/***/ }),
/* 678 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {"use strict";
	var core_1 = __webpack_require__(2);
	var ng2_bootstrap_1 = __webpack_require__(345);
	var index_1 = __webpack_require__(508);
	var index_2 = __webpack_require__(635);
	var router_deprecated_1 = __webpack_require__(281);
	var _ = __webpack_require__(642);
	var moment = __webpack_require__(529);
	var PopoversComponent = (function () {
	    function PopoversComponent(renderer, divisionService, popoverService, userService, router) {
	        var _this = this;
	        this.renderer = renderer;
	        this.divisionService = divisionService;
	        this.popoverService = popoverService;
	        this.userService = userService;
	        this.router = router;
	        this.message = '';
	        this.searchString = '';
	        this.filteredByFavorite = false;
	        this.drivers = [];
	        this.driversList = [];
	        this.dialog = [];
	        this.lastPartLength = 1;
	        this.activeDriverName = '';
	        this.activeDriverNames = '';
	        this.activeMode = 'solo';
	        this.selectedObject = {};
	        this.notifications = [];
	        this.perPage = 20;
	        this.notificationMessage = '';
	        this.notificationTitle = '';
	        this.activeDriverEmail = '';
	        this.allSelected = false;
	        this.favoriteActiveDriver = false;
	        this.activeTab = 'messages';
	        this.notificationType = 'general';
	        this.scrollEmitter = new core_1.EventEmitter();
	        this.isSignInPage = false;
	        this.dontAskForAuthUrls = ['signin', 'restore', 'share', 'resetpassword', 'register'];
	        this.sub = router.subscribe(function (url) { return _this.checkPage(url); });
	        this.subscribtion = this.popoverService
	            .eventShown
	            .subscribe(this.showModal.bind(this));
	        this.eventHide = this.popoverService
	            .eventHidden
	            .subscribe(this.hideModals.bind(this));
	    }
	    ;
	    PopoversComponent.prototype.showNew = function (index) {
	        if (this.dialog[index + 1]) {
	            return !this.dialog[index].unread && this.dialog[index + 1].undread;
	        }
	    };
	    ;
	    PopoversComponent.prototype.checkPage = function (url) {
	        this.isSignInPage = !!(this.dontAskForAuthUrls.findIndex(function (link) { return url.split('/')[0].split('?')[0] == link; }) + 1);
	        if (!this.isSignInPage) {
	            this.userService.getUser(this.setUser.bind(this));
	        }
	    };
	    ;
	    PopoversComponent.prototype.filterByFavorite = function () {
	        if (this.filteredByFavorite) {
	            this.driversList = _.filter(this.drivers, function (dr) { return dr.isFavorite; });
	        }
	        else {
	            this.driversList = this.drivers.slice(0);
	        }
	        this.filterDrivers(this.driversList);
	    };
	    ;
	    PopoversComponent.prototype.filterDrivers = function (drivers) {
	        var _this = this;
	        if (this.searchString) {
	            this.driversList = _.filter(drivers, function (driver) {
	                return driver.name.toUpperCase().indexOf(_this.searchString.toUpperCase()) != -1;
	            });
	        }
	        else {
	            this.driversList = drivers;
	        }
	    };
	    ;
	    PopoversComponent.prototype.toggleMode = function () {
	        if (this.activeMode == 'solo') {
	            this.changeMode('multy');
	        }
	        else {
	            this.changeMode('solo');
	        }
	    };
	    ;
	    PopoversComponent.prototype.changeMode = function (mode) {
	        this.activeMode = mode;
	        if (this.activeMode == 'multy') {
	            this.removeListener();
	            this.dialog = [];
	            this.notifications = [];
	            this.selectedObject = {};
	            this.selectedObject[this.activeDriver] = true;
	            this.activeDriverNames = this.activeDriverName;
	        }
	        else {
	            this.startListener();
	            this.getMessages(this.activeDriver, this.perPage);
	            this.getNotifications();
	        }
	    };
	    ;
	    PopoversComponent.prototype.getDate = function (time) {
	        return moment(time).format('MMM DD, YYYY');
	    };
	    PopoversComponent.prototype.getTime = function (time) {
	        return moment(time).format('HH:mm:A');
	    };
	    ;
	    PopoversComponent.prototype.setUser = function (user) {
	        this.userId = user.id;
	    };
	    ;
	    PopoversComponent.prototype.scrollBottom = function () {
	        this.scrollEmitter.emit({});
	    };
	    ;
	    PopoversComponent.prototype.parseMessages = function (res) {
	        if (res) {
	            var body = res.json();
	            var _loop_1 = function(driver) {
	                var found = body.find(function (el) { return el.driverId == driver.id; });
	                if (found) {
	                    driver.messages = found.quantity;
	                    if (driver.messages && driver.id == this_1.activeDriver) {
	                        this_1.loadNew();
	                        driver.messages = 0;
	                    }
	                }
	            };
	            var this_1 = this;
	            for (var _i = 0, _a = this.drivers; _i < _a.length; _i++) {
	                var driver = _a[_i];
	                _loop_1(driver);
	            }
	            this.driversLoading = false;
	        }
	    };
	    ;
	    PopoversComponent.prototype.parseDrivers = function (res, divisionId) {
	        var _this = this;
	        if (res) {
	            var body = res.json();
	            this.drivers = body;
	            this.driversList = body;
	            this.setActiveDriver(_.find(this.drivers, function (d) { return d.id == _this.activeDriver; }), null);
	            this.getNewMessages();
	        }
	    };
	    ;
	    PopoversComponent.prototype.sortDialog = function () {
	        var _this = this;
	        this.dialog.sort(function (mess1, mess2) { return +new Date(mess2.timestamp) - +new Date(mess1.timestamp); });
	        this.dialog = _.map(this.dialog, function (el, index) {
	            var showDate = false;
	            var unread = false;
	            if (!_this.dialog[index + 1]) {
	                showDate = true;
	                unread = el.unread;
	            }
	            else {
	                showDate = moment(el.timestamp).format('MMM DD, YYYY') != moment(_this.dialog[index + 1].timestamp).format('MMM DD, YYYY');
	                unread = _this.dialog[index + 1].unread == false && el.unread == true;
	            }
	            ;
	            return {
	                body: el.body,
	                fromId: el.fromId,
	                id: el.id,
	                timestamp: el.timestamp,
	                toId: el.toId,
	                unread: unread,
	                date: _this.getDate(el.timestamp),
	                time: _this.getTime(el.timestamp),
	                showDate: showDate
	            };
	        });
	    };
	    ;
	    PopoversComponent.prototype.parseDialog = function (res) {
	        if (res) {
	            var body = res.json();
	            this.dialog = body;
	            this.sortDialog();
	            if (this.drivers.length) {
	                for (var _i = 0, _a = this.drivers; _i < _a.length; _i++) {
	                    var driver = _a[_i];
	                    if (driver.id == this.activeDriver) {
	                        driver.messages = 0;
	                    }
	                }
	            }
	        }
	    };
	    ;
	    PopoversComponent.prototype.getMessages = function (id, count) {
	        if (id) {
	            this.divisionService.getMessagesDriver(this.divisionId, id, count, null, null)
	                .then(this.parseDialog.bind(this));
	        }
	    };
	    ;
	    PopoversComponent.prototype.selectAll = function () {
	        var _this = this;
	        _.each(this.drivers, function (driver) {
	            _this.selectedObject[driver.id] = true;
	        });
	        this.activeDriverNames = _.map(_.filter(this.drivers, function (driver) { return _this.selectedObject[driver.id]; }), 'name').join(', ');
	        this.allSelected = true;
	    };
	    ;
	    PopoversComponent.prototype.unselectAll = function () {
	        var _this = this;
	        this.selectedObject = {};
	        this.selectedObject[this.activeDriver] = true;
	        this.activeDriverNames = _.map(_.filter(this.drivers, function (driver) { return _this.selectedObject[driver.id]; }), 'name').join(', ');
	        this.allSelected = false;
	    };
	    ;
	    PopoversComponent.prototype.setAsFavorite = function () {
	        var _this = this;
	        var driver = _.find(this.drivers, function (d) { return d.id == _this.activeDriver; });
	        driver.isFavorite = this.favoriteActiveDriver;
	        this.filterByFavorite();
	        this.divisionService.setAsFavorite(this.divisionId, this.activeDriver, this.favoriteActiveDriver);
	    };
	    ;
	    PopoversComponent.prototype.setActiveDriver = function (driver, id) {
	        var _this = this;
	        if (this.activeMode == 'solo') {
	            if (id) {
	                this.activeDriver = id;
	            }
	            if (driver) {
	                this.activeDriverEmail = driver.email;
	                this.activeDriverName = driver.name;
	                this.activeDriver = driver.id;
	                this.favoriteActiveDriver = driver.isFavorite;
	            }
	            this.getMessages(this.activeDriver, this.perPage);
	            this.getNotifications();
	            this.scrollBottom();
	        }
	        else {
	            if (this.selectedObject[driver.id] && _.keys(this.selectedObject).length > 1) {
	                delete this.selectedObject[driver.id];
	                this.allSelected = false;
	            }
	            else {
	                this.selectedObject[driver.id] = true;
	                if (_.keys(this.selectedObject) == this.drivers.length) {
	                    this.allSelected = true;
	                }
	                ;
	            }
	            this.activeDriverNames = _.map(_.filter(this.drivers, function (driver) { return _this.selectedObject[driver.id]; }), 'name').join(', ');
	        }
	    };
	    ;
	    PopoversComponent.prototype.onScroll = function (event) {
	        var top = $(event.currentTarget).scrollTop();
	        if (top == 0) {
	            this.loadMore();
	        }
	    };
	    ;
	    PopoversComponent.prototype.loadMore = function () {
	        var lastId;
	        if (this.dialog.length && this.activeDriver) {
	            lastId = this.dialog[this.dialog.length - 1].id;
	            if (this.lastPartLength) {
	                this.divisionService.getMessagesDriver(this.divisionId, this.activeDriver, this.perPage, lastId, null)
	                    .then(this.appendDialog.bind(this));
	            }
	        }
	    };
	    ;
	    PopoversComponent.prototype.loadNew = function () {
	        var firstId;
	        if (this.dialog.length && this.activeDriver) {
	            firstId = this.dialog[0].id;
	            this.divisionService.getMessagesDriver(this.divisionId, this.activeDriver, this.perPage, null, firstId)
	                .then(this.prependDialog.bind(this));
	        }
	    };
	    ;
	    PopoversComponent.prototype.getNewMessages = function () {
	        this.divisionService.getMessages(this.divisionId)
	            .then(this.parseMessages.bind(this));
	    };
	    ;
	    PopoversComponent.prototype.prependDialog = function (res) {
	        var _this = this;
	        this.dialog = _.filter(this.dialog, 'id');
	        this.dialog = _.each(this.dialog, function (el) {
	            el.unread = false;
	        });
	        if (res) {
	            var body = res.json();
	            for (var _i = 0, body_1 = body; _i < body_1.length; _i++) {
	                var message = body_1[_i];
	                this.dialog.push(message);
	            }
	            ;
	            this.sortDialog();
	            if (_.find(body, function (mess) { return mess.fromId == _this.userId; })) {
	                this.scrollBottom();
	            }
	        }
	    };
	    ;
	    PopoversComponent.prototype.appendDialog = function (res) {
	        if (res) {
	            var body = res.json();
	            this.lastPartLength = body.length;
	            if (this.lastPartLength) {
	                for (var _i = 0, body_2 = body; _i < body_2.length; _i++) {
	                    var message = body_2[_i];
	                    this.dialog.push(message);
	                }
	                ;
	            }
	            this.sortDialog();
	        }
	    };
	    ;
	    PopoversComponent.prototype.removeListener = function () {
	        clearInterval(this.timer);
	    };
	    ;
	    PopoversComponent.prototype.startListener = function () {
	        this.timer = setInterval(this.getNewMessages.bind(this), 30000);
	    };
	    ;
	    PopoversComponent.prototype.parseMessage = function (res) {
	        this.loadNew();
	    };
	    ;
	    PopoversComponent.prototype.sendNotification = function (message, title, type) {
	        var _this = this;
	        if (this.notificationMessage != '' && this.notificationTitle != '' && this.activeMode == 'solo') {
	            this.divisionService
	                .sendNotifications(this.divisionId, [this.activeDriver], {
	                message: message,
	                title: title,
	                type: type
	            })
	                .then(this.getNotifications.bind(this));
	            this.notificationMessage = '';
	            this.notificationTitle = '';
	        }
	        if (this.notificationMessage != '' && this.notificationTitle != '' && this.activeMode == 'multy') {
	            this.divisionService
	                .sendNotifications(this.divisionId, _.keys(this.selectedObject), {
	                message: message,
	                title: title,
	                type: type
	            });
	            this.notifications.push({
	                body: message,
	                title: title,
	                timestamp: new Date()
	            });
	            this.notifications = _.map(this.notifications, function (not) { return ({
	                body: not.body,
	                title: not.title,
	                timestamp: not.timestamp,
	                date: _this.getDate(not.timestamp)
	            }); });
	            this.notifications.sort(function (mess1, mess2) { return +new Date(mess2.timestamp) - +new Date(mess1.timestamp); });
	            this.notificationMessage = '';
	            this.notificationTitle = '';
	            this.scrollBottom();
	        }
	    };
	    PopoversComponent.prototype.sendMessage = function (message) {
	        if (this.message != '' && this.activeMode == 'solo') {
	            this.divisionService
	                .sendMessages(this.divisionId, [this.activeDriver], message)
	                .then(this.parseMessage.bind(this));
	            this.message = '';
	        }
	        if (this.message != '' && this.activeMode == 'multy') {
	            var showDate = false;
	            this.divisionService
	                .sendMessages(this.divisionId, _.keys(this.selectedObject), message);
	            this.dialog.push({
	                body: this.message,
	                fromId: this.userId,
	                unread: false,
	                timestamp: new Date()
	            });
	            this.sortDialog();
	            this.message = '';
	            this.scrollBottom();
	        }
	    };
	    ;
	    PopoversComponent.prototype.getDrivers = function (divisionId) {
	        var _this = this;
	        this.divisionService
	            .getDrivers(divisionId, null)
	            .then(function (res) { return _this.parseDrivers(res, divisionId); });
	    };
	    ;
	    PopoversComponent.prototype.parseNotifications = function (res) {
	        var _this = this;
	        var body = res.json();
	        this.notifications = _.map(body, function (not) { return ({
	            body: not.body,
	            fromId: not.fromId,
	            id: not.id,
	            toId: not.toId,
	            type: not.type,
	            title: not.title,
	            timestamp: not.timestamp,
	            date: _this.getDate(not.timestamp)
	        }); });
	        this.notifications.sort(function (mess1, mess2) { return +new Date(mess2.timestamp) - +new Date(mess1.timestamp); });
	        this.scrollBottom();
	    };
	    PopoversComponent.prototype.getNotifications = function () {
	        if (this.activeDriver) {
	            this.divisionService
	                .getNotifications(this.divisionId, this.activeDriver)
	                .then(this.parseNotifications.bind(this));
	        }
	    };
	    ;
	    PopoversComponent.prototype.showModal = function (values) {
	        if (values.type == 'messages') {
	            this.divisionId = values.divisionId;
	            if (values.driverId) {
	                this.driversLoading = true;
	                this.getDrivers(values.divisionId);
	                this.setActiveDriver(null, values.driverId);
	                this.getNotifications();
	                this.startListener();
	                this.chat2Modal.show();
	            }
	            else {
	                this.driversLoading = true;
	                this.getDrivers(this.divisionId);
	                this.chat2Modal.show();
	            }
	        }
	    };
	    ;
	    PopoversComponent.prototype.hideModals = function () {
	        this.chat1Modal.hide();
	        this.chat2Modal.hide();
	        this.chat3Modal.hide();
	        this.chat4Modal.hide();
	        this.chat5Modal.hide();
	        this.removeListener();
	    };
	    __decorate([
	        core_1.ViewChild('chat1Modal'), 
	        __metadata('design:type', Object)
	    ], PopoversComponent.prototype, "chat1Modal", void 0);
	    __decorate([
	        core_1.ViewChild('chat2Modal'), 
	        __metadata('design:type', Object)
	    ], PopoversComponent.prototype, "chat2Modal", void 0);
	    __decorate([
	        core_1.ViewChild('chat3Modal'), 
	        __metadata('design:type', Object)
	    ], PopoversComponent.prototype, "chat3Modal", void 0);
	    __decorate([
	        core_1.ViewChild('chat4Modal'), 
	        __metadata('design:type', Object)
	    ], PopoversComponent.prototype, "chat4Modal", void 0);
	    __decorate([
	        core_1.ViewChild('chat5Modal'), 
	        __metadata('design:type', Object)
	    ], PopoversComponent.prototype, "chat5Modal", void 0);
	    PopoversComponent = __decorate([
	        core_1.Component({
	            selector: 'transflo-popovers',
	            template: __webpack_require__(679),
	            directives: [ng2_bootstrap_1.MODAL_DIRECTVES, index_2.ScrollDirective, ng2_bootstrap_1.DROPDOWN_DIRECTIVES, index_2.AutosizeDirective],
	            providers: [index_1.DivisionService],
	            viewProviders: [ng2_bootstrap_1.BS_VIEW_PROVIDERS]
	        }), 
	        __metadata('design:paramtypes', [core_1.Renderer, index_1.DivisionService, index_1.PopoverService, index_1.UserService, router_deprecated_1.Router])
	    ], PopoversComponent);
	    return PopoversComponent;
	}());
	exports.PopoversComponent = PopoversComponent;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(337)))

/***/ }),
/* 679 */
/***/ (function(module, exports) {

	module.exports = "<!--Chat Welcome modal-->\r\n<div bsModal #chat1Modal=\"bs-modal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myChatModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\">\r\n    <div class=\"modal-content -horizontal\">\r\n      <button type=\"button\" class=\"modal-close\" aria-label=\"Close\" (click)=\"chat1Modal.hide()\" title=\"Close\">&times;</button>\r\n      <div class=\"chat-sidebar\">\r\n        <div class=\"chat-filter flex flex-column\">\r\n          <div class=\"flex\">\r\n            <input autocomplete=\"off\" class=\"form-control flex-auto -addon\" type=\"search\" placeholder=\"Find Driver\" />\r\n            <label class=\"form-addon flex items-center\" title=\"Show only favorites\"><input type=\"checkbox\" hidden /><svg class=\"icon -favorite -filter\"><use xlink:href=\"#svg_star\"/></svg></label>\r\n          </div>\r\n          <div class=\"flex-auto\"></div>\r\n          <div class=\"label-gray\">Use filter to find driver</div>\r\n        </div>\r\n        <div class=\"chat-list\">\r\n          <a class=\"card-link\">\r\n            <span class=\"card-title\">\r\n              <span class=\"label-lg label-link regular block truncate\">\r\n                Boris Finerman\r\n                <span class=\"card-icon -active\"><svg class=\"icon -favorite\"><use xlink:href=\"#svg_star\"/></svg></span>\r\n              </span>\r\n              <span class=\"label-gray block truncate\">#123456</span>\r\n              <span class=\"label-gray block truncate\">b.finerman@gmail.com</span>\r\n            </span>\r\n          </a>\r\n          <a class=\"card-link\">\r\n            <span class=\"card-title\">\r\n              <span class=\"label-lg label-link regular block truncate\">Silva Pancheto</span>\r\n              <span class=\"label-gray block truncate\">#123456</span>\r\n              <span class=\"label-gray block truncate\">pancheto@gmail.com</span>\r\n            </span>\r\n          </a>\r\n          <a class=\"card-link\">\r\n            <span class=\"card-title\">\r\n              <span class=\"label-lg label-link regular block truncate\">Antonio Badrigez</span>\r\n              <span class=\"label-gray block truncate\">#123456</span>\r\n              <span class=\"label-gray block truncate\">badrigez@gmail.com</span>\r\n            </span>\r\n          </a>\r\n          <a class=\"card-link\">\r\n            <span class=\"card-title\">\r\n              <span class=\"label-lg label-link regular block truncate\">Barney Lock</span>\r\n              <span class=\"label-gray block truncate\">#123456</span>\r\n              <span class=\"label-gray block truncate\">kingpin@gmail.com</span>\r\n            </span>\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <div class=\"flex-auto self-center center\">\r\n        <img src=\"./images/chat.png\" alt=\"\" width=\"88\" />\r\n        <h2 class=\"fs24 mb2 mt3\">Welcome to Chat with Drivers!</h2>\r\n        <div class=\"label-md label-gray\">Please, select a driver to start a chat.</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!--Chat messages modal-->\r\n<div bsModal #chat2Modal=\"bs-modal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myChatModalLabel\" aria-hidden=\"true\" (onHide)=\"removeListener()\" id=\"modal\">\r\n  <div class=\"modal-dialog\">\r\n    <div class=\"modal-content -horizontal\">\r\n      <button type=\"button\" class=\"modal-close\" aria-label=\"Close\" (click)=\"chat2Modal.hide();\" title=\"Close\">&times;</button>\r\n      <div class=\"chat-sidebar\">\r\n        <div class=\"chat-filter flex flex-column\">\r\n          <div class=\"flex\">\r\n            <input autocomplete=\"off\" class=\"form-control flex-auto -addon\" type=\"search\" [(ngModel)]=\"searchString\" placeholder=\"Find Driver\" (ngModelChange)=\"filterDrivers(drivers)\"/>\r\n            <label class=\"form-addon flex items-center\" title=\"Show only favorites\"><input type=\"checkbox\" [(ngModel)]=\"filteredByFavorite\" (ngModelChange)=\"filterByFavorite()\" hidden /><svg class=\"icon -favorite -filter\"><use xlink:href=\"#svg_star\"/></svg></label>\r\n          </div>\r\n          <div class=\"flex-auto\"></div>\r\n          <div class=\"flex items-end\">\r\n            <div class=\"label-gray flex-auto\">{{driversList.length}} drivers found\r\n              <a class=\"italic label-green ml2\" (click)=\"selectAll()\" [hidden]=\"activeMode == 'solo' || allSelected\">Select all</a>\r\n              <a class=\"italic label-green ml2\" (click)=\"unselectAll()\" [hidden]=\"activeMode == 'solo' || !allSelected\">Unselect all</a>\r\n            </div>\r\n            <div class=\"dropdown\" dropdown keyboardNav=\"true\">\r\n              <button class=\"chat-group-button\" type=\"button\" (click)=\"toggleMode()\" [ngClass]=\"{'-active': activeMode == 'multy'}\">\r\n                <svg class=\"icon -chat-group chat-group-button-icon1\"><use xlink:href=\"#svg_chatgroup\"/></svg>\r\n                <svg class=\"icon -chat-group chat-group-button-icon2\"><use xlink:href=\"#svg_chatgroup_hover\"/></svg>\r\n                <svg class=\"icon -chat-group chat-group-button-icon3\"><use xlink:href=\"#svg_chatgroup_active\"/></svg>\r\n              </button>\r\n              <div class=\"dropdown-menu -center -lg\" dropdownMenu>\r\n                <div class=\"chat-help\">\r\n                  <h2 class=\"label-green\">You’re about to send <br />a notification to the group drivers</h2>\r\n                  <p>Use <strong>SHIFT + Click</strong> or <strong>CMD + Click</strong> to choose recipients.<br /> Click on any driver to cancel.</p>\r\n                  <button type=\"button\" class=\"button -outline\">Select all drivers from the list</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"chat-list\" [hidden]=\"driversLoading\">\r\n          <a class=\"card-link\" *ngFor=\"let driver of driversList\" [ngClass]=\"{'-active': activeMode == 'solo' && driver.id == activeDriver || activeMode == 'multy' && selectedObject[driver.id]}\" (click)=\"setActiveDriver(driver, driver.id)\">\r\n            <span class=\"card-title\">\r\n              <span class=\"label-lg label-link regular block truncate\">{{driver.name}}</span>\r\n              <span class=\"label-gray block truncate\">{{driver.driverId}}</span>\r\n              <span class=\"label-gray block truncate\">{{driver.email}}</span>\r\n            </span>\r\n            <span class=\"pl3\" [hidden]=\"!driver.messages\">\r\n              <span class=\"label-count -msg\">{{driver.messages}}</span>\r\n            </span>\r\n          </a>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"flex-auto self-center center\" *ngIf=\"!activeDriver\">\r\n        <img src=\"./images/chat.png\" alt=\"\" width=\"88\" />\r\n        <h2 class=\"fs24 mb2 mt3\">Welcome to Chat with Drivers!</h2>\r\n        <div class=\"label-md label-gray\">Please, select a driver to start a chat.</div>\r\n      </div>\r\n\r\n      <div class=\"chat\" *ngIf=\"activeDriver\">\r\n        <div class=\"chat-header flex flex-column justify-between\">\r\n          <div class=\"flex items-center pr3\">\r\n            <h2 class=\"fs24 m0 truncate\">{{activeMode == 'multy' ? activeDriverNames : activeDriverName}}</h2>\r\n            <div class=\"pl2\" [hidden]=\"activeMode == 'multy'\">\r\n              <label title=\"Mark as favorite\"><input type=\"checkbox\" hidden [(ngModel)]=\"favoriteActiveDriver\"  (ngModelChange)=\"setAsFavorite()\"/><em class=\"form-favorite\"><svg class=\"icon -favorite m0\"><use xlink:href=\"#svg_star\"/></svg></em></label>\r\n            </div>\r\n            <div class=\"pl2\" [hidden]=\"activeMode == 'multy'\">\r\n              <a href=\"mailto:{{activeDriverEmail}}\" class=\"button -outline -icon\"><svg class=\"icon -mail\"><use xlink:href=\"#svg_mail\"/></svg></a>\r\n            </div>\r\n          </div>\r\n          <div class=\"chat-nav flex items-end\">\r\n            <div class=\"flex-auto nowrap\">\r\n              <a class=\"chat-nav-button\" (click)=\"activeTab = 'messages'; scrollBottom()\" [ngClass]=\"{'-active': activeTab == 'messages'}\">{{ activeMode == 'solo' ? 'Messages' : 'Messages to Group'}}</a>\r\n              <a class=\"chat-nav-button\" (click)=\"activeTab = 'notifications'; notificationType = 'general'; scrollBottom()\" [ngClass]=\"{'-active': activeTab == 'notifications'}\">{{ activeMode == 'solo' ? 'Notification' : 'Notification to Group'}}</a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"chat-body\" [hidden]=\"activeTab == 'messages'\" scroll [scrollEmitter]=\"scrollEmitter\">\r\n          <div class=\"chat-messages\">\r\n            <div *ngFor=\"let notification of notifications\" class=\"chat-item\">\r\n                <div class=\"chat-date\">\r\n                <span class=\"chat-date-content\">{{notification.date}}</span>\r\n              </div>\r\n              <div class=\"chat-notification\">\r\n                <h5>{{notification.title}}</h5>\r\n                <p>{{notification.body}}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"chat-body\" scroll (onScroll)=\"onScroll($event)\" [scrollEmitter]=\"scrollEmitter\" [hidden]=\"activeTab =='notifications'\">\r\n          <!--div [hidden]=\"!loading\"> loading </div-->\r\n          <div class=\"chat-messages\">\r\n            <div *ngFor=\"let message of dialog; let idx = index\" class=\"chat-item\">\r\n              <div class=\"chat-date -new\" [hidden]=\"!message.unread\">\r\n                <span class=\"chat-date-content -new\">new messages</span>\r\n              </div>\r\n              <div class=\"chat-date\" [hidden]=\"!message.showDate\">\r\n                <span class=\"chat-date-content\">{{message.date}}</span>\r\n              </div>\r\n              <div class=\"chat-line\" [ngClass]=\"{'-reverse': message.fromId == divisionId}\">\r\n                <div class=\"chat-bubble\" [ngClass]=\"{'-reverse': message.fromId == divisionId}\">{{message.body}}</div>\r\n                <div class=\"chat-time\">{{message.time}}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"chat-footer\" [hidden]=\"activeTab == 'messages'\">\r\n          <div class=\"form-group flex\">\r\n            <div class=\"col-8 pr2\">\r\n              <input autocomplete=\"off\" class=\"form-control\" placeholder=\"Subject\" [(ngModel)]=\"notificationTitle\" />\r\n            </div>\r\n            <div class=\"col-2 pr1\">\r\n              <button type=\"button\" class=\"button -outline-primary -block\" (click)=\"notificationType = 'general'\" [ngClass]=\"{'-active': notificationType == 'general'}\">General</button>\r\n            </div>\r\n            <div class=\"col-2 pl1\">\r\n              <button type=\"button\" class=\"button -outline -block\" (click)=\"notificationType = 'settlement'\" [ngClass]=\"{'-active': notificationType == 'settlement'}\">Settlement</button>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group -x15\">\r\n            <textarea rows=\"6\" class=\"form-control\" placeholder=\"Message\" [(ngModel)]=\"notificationMessage\"></textarea>\r\n          </div>\r\n          <div class=\"form-group -x15\">\r\n            <button class=\"button -primary -wider\" type=\"button\" [disabled]=\"notificationMessage == '' || notificationTitle == '' \" (click)=\"sendNotification(notificationMessage, notificationTitle, notificationType)\">Send</button>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"chat-footer\" [hidden]=\"activeTab == 'notifications'\">\r\n          <div class=\"flex\">\r\n            <div class=\"flex-auto\">\r\n              <textarea autocomplete=\"off\" rows=\"1\" class=\"form-control\" placeholder=\"Your message\" [(ngModel)]=\"message\" autosize></textarea>\r\n            </div>\r\n            <div class=\"pl2 self-end\">\r\n              <button class=\"button -primary -wider\" type=\"button\" [disabled]=\"message == ''\" (click)=\"sendMessage(message)\">Send</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<!--Chat notification modal-->\r\n<div bsModal #chat3Modal=\"bs-modal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myChatModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\">\r\n    <div class=\"modal-content -horizontal\">\r\n      <button type=\"button\" class=\"modal-close\" aria-label=\"Close\" (click)=\"chat3Modal.hide()\" title=\"Close\">&times;</button>\r\n      <div class=\"chat-sidebar\">\r\n        <div class=\"chat-filter flex flex-column\">\r\n          <div class=\"flex\">\r\n            <input autocomplete=\"off\" class=\"form-control flex-auto -addon\" type=\"search\" placeholder=\"Find Driver\" />\r\n            <label class=\"form-addon flex items-center\" title=\"Show only favorites\"><input type=\"checkbox\" hidden /><svg class=\"icon -favorite -filter\"><use xlink:href=\"#svg_star\"/></svg></label>\r\n          </div>\r\n          <div class=\"flex-auto\"></div>\r\n          <div class=\"label-gray\">Use filter to find driver</div>\r\n        </div>\r\n        <div class=\"chat-list\">\r\n          <a class=\"card-link -active\">\r\n              <span class=\"card-title\">\r\n                <span class=\"label-lg label-link regular block truncate\">Boris Finerman</span>\r\n                <span class=\"label-gray block truncate\">#123456</span>\r\n                <span class=\"label-gray block truncate\">b.finerman@gmail.com</span>\r\n              </span>\r\n          </a>\r\n          <a class=\"card-link\">\r\n              <span class=\"card-title\">\r\n                <span class=\"label-lg label-link regular block truncate\">Silva Pancheto</span>\r\n                <span class=\"label-gray block truncate\">#123456</span>\r\n                <span class=\"label-gray block truncate\">pancheto@gmail.com</span>\r\n              </span>\r\n          </a>\r\n          <a class=\"card-link\">\r\n              <span class=\"card-title\">\r\n                <span class=\"label-lg label-link regular block truncate\">Antonio Badrigez</span>\r\n                <span class=\"label-gray block truncate\">#123456</span>\r\n                <span class=\"label-gray block truncate\">badrigez@gmail.com</span>\r\n              </span>\r\n          </a>\r\n          <a class=\"card-link\">\r\n              <span class=\"card-title\">\r\n                <span class=\"label-lg label-link regular block truncate\">Barney Lock</span>\r\n                <span class=\"label-gray block truncate\">#123456</span>\r\n                <span class=\"label-gray block truncate\">kingpin@gmail.com</span>\r\n              </span>\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <div class=\"chat\">\r\n        <div class=\"chat-header flex flex-column justify-between\">\r\n          <div class=\"flex items-center pr3\">\r\n            <h2 class=\"fs24 m0 truncate\">Boris Finerman</h2>\r\n            <div class=\"pl2\">\r\n              <label title=\"Mark as favorite\"><input type=\"checkbox\" checked hidden /><em class=\"form-favorite\"><svg class=\"icon -favorite m0\"><use xlink:href=\"#svg_star\"/></svg></em></label>\r\n            </div>\r\n            <div class=\"pl2\">\r\n              <a href=\"mailto:b.finerman@gmail.com\" class=\"button -outline -icon\"><svg class=\"icon -mail\"><use xlink:href=\"#svg_mail\"/></svg></a>\r\n            </div>\r\n          </div>\r\n          <div class=\"chat-nav flex items-end\">\r\n            <div class=\"flex-auto nowrap\">\r\n              <a class=\"chat-nav-button\">Messages</a>\r\n              <a class=\"chat-nav-button -active\">Notification</a>\r\n            </div>\r\n            <input type=\"search\" class=\"form-control -inline\" placeholder=\"Search\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"chat-body\">\r\n          <div class=\"chat-notification\">\r\n            <h5>Boris Finerman</h5>\r\n            <p>Do not forget to pass medicine control by the end of week. It's very important because otherwise you will not get huge load and should pay fine. Please pay attention to this notification! You are one of the best drivers what you constantly forget to pass medicine control.</p>\r\n          </div>\r\n          <div class=\"chat-date\">\r\n            <span class=\"chat-date-content\">Mar 19, 2016</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"chat-footer\">\r\n          <div class=\"flex\">\r\n            <div class=\"flex-auto\">\r\n              <div class=\"form-group\">\r\n                <input autocomplete=\"off\" class=\"form-control\" placeholder=\"Subject\" />\r\n              </div>\r\n              <div class=\"form-group -x15\">\r\n                <textarea autocomplete=\"off\" rows=\"6\" class=\"form-control\" placeholder=\"Your message\"></textarea>\r\n              </div>\r\n            </div>\r\n            <div class=\"pl2 self-end\">\r\n              <button class=\"button -primary -wider\" type=\"button\">Send</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!--Chat messages to group modal-->\r\n<div bsModal #chat4Modal=\"bs-modal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myChatModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\">\r\n    <div class=\"modal-content -horizontal\">\r\n      <button type=\"button\" class=\"modal-close\" aria-label=\"Close\" (click)=\"chat4Modal.hide()\" title=\"Close\">&times;</button>\r\n      <div class=\"chat-sidebar\">\r\n        <div class=\"chat-filter flex flex-column\">\r\n          <div class=\"flex\">\r\n            <input autocomplete=\"off\" class=\"form-control flex-auto -addon\" type=\"search\" placeholder=\"Find Driver\" />\r\n            <label class=\"form-addon flex items-center\" title=\"Show only favorites\"><input type=\"checkbox\" hidden /><svg class=\"icon -favorite -filter\"><use xlink:href=\"#svg_star\"/></svg></label>\r\n          </div>\r\n          <div class=\"flex-auto\"></div>\r\n          <div class=\"flex items-end\">\r\n            <div class=\"label-gray flex-auto\">4 drivers found</div>\r\n            <div class=\"dropdown\" dropdown keyboardNav=\"true\">\r\n              <button class=\"chat-group-button -active\" type=\"button\" dropdownToggle>\r\n                <svg class=\"icon -chat-group chat-group-button-icon1\"><use xlink:href=\"#svg_chatgroup\"/></svg>\r\n                <svg class=\"icon -chat-group chat-group-button-icon2\"><use xlink:href=\"#svg_chatgroup_hover\"/></svg>\r\n                <svg class=\"icon -chat-group chat-group-button-icon3\"><use xlink:href=\"#svg_chatgroup_active\"/></svg>\r\n              </button>\r\n              <div class=\"dropdown-menu -center -lg\" dropdownMenu>\r\n                <div class=\"chat-help\">\r\n                  <h2 class=\"label-green\">You’re about to send <br />a notification to the group drivers</h2>\r\n                  <p>Use <strong>SHIFT + Click</strong> or <strong>CMD + Click</strong> to choose recipients.<br /> Click on any driver to cancel.</p>\r\n                  <button type=\"button\" class=\"button -outline\">Select all drivers from the list</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"chat-list\">\r\n          <a class=\"card-link -active\">\r\n              <span class=\"card-title\">\r\n                <span class=\"label-lg label-link regular block truncate\">Boris Finerman</span>\r\n                <span class=\"label-gray block truncate\">#123456</span>\r\n                <span class=\"label-gray block truncate\">b.finerman@gmail.com</span>\r\n              </span>\r\n          </a>\r\n          <a class=\"card-link -active\">\r\n              <span class=\"card-title\">\r\n                <span class=\"label-lg label-link regular block truncate\">Silva Pancheto</span>\r\n                <span class=\"label-gray block truncate\">#123456</span>\r\n                <span class=\"label-gray block truncate\">pancheto@gmail.com</span>\r\n              </span>\r\n          </a>\r\n          <a class=\"card-link -active\">\r\n              <span class=\"card-title\">\r\n                <span class=\"label-lg label-link regular block truncate\">Antonio Badrigez</span>\r\n                <span class=\"label-gray block truncate\">#123456</span>\r\n                <span class=\"label-gray block truncate\">badrigez@gmail.com</span>\r\n              </span>\r\n          </a>\r\n          <a class=\"card-link -active\">\r\n              <span class=\"card-title\">\r\n                <span class=\"label-lg label-link regular block truncate\">Barney Lock</span>\r\n                <span class=\"label-gray block truncate\">#123456</span>\r\n                <span class=\"label-gray block truncate\">kingpin@gmail.com</span>\r\n              </span>\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <div class=\"chat\">\r\n        <div class=\"chat-header flex flex-column justify-between\">\r\n          <div class=\"flex items-center pr3\">\r\n            <h2 class=\"fs24 m0 truncate pr2\">Boris Finerman, Silva Pancheto, </h2>\r\n            <div class=\"dropdown -inline\" dropdown keyboardNav=\"true\">\r\n              <button class=\"button -link fs24 medium\" type=\"button\" dropdownToggle>+ 2 more</button>\r\n              <ul class=\"dropdown-menu -list -right\" dropdownMenu>\r\n                <li>Antonio Badrigez</li>\r\n                <li>Barney Lock</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div class=\"chat-nav flex items-end\">\r\n            <div class=\"flex-auto nowrap\">\r\n              <a class=\"chat-nav-button -active\">Messages to Group</a>\r\n              <a class=\"chat-nav-button\">Notification to Group</a>\r\n            </div>\r\n            <input type=\"search\" class=\"form-control -inline\" placeholder=\"Search\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"chat-body\">\r\n          <div class=\"chat-line -reverse\">\r\n            <div class=\"chat-bubble -reverse\">Good Morning Guys!</div>\r\n            <div class=\"chat-time\">7:30</div>\r\n          </div>\r\n          <div class=\"chat-date\">\r\n            <span class=\"chat-date-content\">Mar 19, 2016</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"chat-footer\">\r\n          <div class=\"flex\">\r\n            <div class=\"flex-auto\">\r\n              <textarea rows=\"1\" class=\"form-control\" placeholder=\"Your message\" autosize></textarea>\r\n            </div>\r\n            <div class=\"pl2 self-end\">\r\n              <button class=\"button -primary -wider\" type=\"button\">Send</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!--Chat notification to group modal-->\r\n<div bsModal #chat5Modal=\"bs-modal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myChatModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\">\r\n    <div class=\"modal-content -horizontal\">\r\n      <button type=\"button\" class=\"modal-close\" aria-label=\"Close\" (click)=\"chat5Modal.hide()\" title=\"Close\">&times;</button>\r\n      <div class=\"chat-sidebar\">\r\n        <div class=\"chat-filter flex flex-column\">\r\n          <div class=\"flex\">\r\n            <input autocomplete=\"off\" class=\"form-control flex-auto -addon\" type=\"search\" placeholder=\"Find Driver\" />\r\n            <label class=\"form-addon flex items-center\" title=\"Show only favorites\"><input type=\"checkbox\" hidden /><svg class=\"icon -favorite -filter\"><use xlink:href=\"#svg_star\"/></svg></label>\r\n          </div>\r\n          <div class=\"flex-auto\"></div>\r\n          <div class=\"flex items-end\">\r\n            <div class=\"label-gray flex-auto\">4 drivers found <a class=\"italic label-green ml2\">Select all</a></div>\r\n            <div class=\"dropdown\" dropdown keyboardNav=\"true\">\r\n              <button class=\"chat-group-button\" type=\"button\" dropdownToggle>\r\n                <svg class=\"icon -chat-group chat-group-button-icon1\"><use xlink:href=\"#svg_chatgroup\"/></svg>\r\n                <svg class=\"icon -chat-group chat-group-button-icon2\"><use xlink:href=\"#svg_chatgroup_hover\"/></svg>\r\n                <svg class=\"icon -chat-group chat-group-button-icon3\"><use xlink:href=\"#svg_chatgroup_active\"/></svg>\r\n              </button>\r\n              <div class=\"dropdown-menu -center -lg\" dropdownMenu>\r\n                <div class=\"chat-help\">\r\n                  <h2 class=\"label-green\">You’re about to send <br />a notification to the group drivers</h2>\r\n                  <p>Use <strong>SHIFT + Click</strong> or <strong>CMD + Click</strong> to choose recipients.<br /> Click on any driver to cancel.</p>\r\n                  <button type=\"button\" class=\"button -outline\">Select all drivers from the list</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"chat-list\">\r\n          <a class=\"card-link -active\">\r\n                <span class=\"card-title\">\r\n                  <span class=\"label-lg label-link regular block truncate\">Boris Finerman</span>\r\n                  <span class=\"label-gray block truncate\">#123456</span>\r\n                  <span class=\"label-gray block truncate\">b.finerman@gmail.com</span>\r\n                </span>\r\n          </a>\r\n          <a class=\"card-link\">\r\n                <span class=\"card-title\">\r\n                  <span class=\"label-lg label-link regular block truncate\">Silva Pancheto</span>\r\n                  <span class=\"label-gray block truncate\">#123456</span>\r\n                  <span class=\"label-gray block truncate\">pancheto@gmail.com</span>\r\n                </span>\r\n          </a>\r\n          <a class=\"card-link -active\">\r\n                <span class=\"card-title\">\r\n                  <span class=\"label-lg label-link regular block truncate\">Antonio Badrigez</span>\r\n                  <span class=\"label-gray block truncate\">#123456</span>\r\n                  <span class=\"label-gray block truncate\">badrigez@gmail.com</span>\r\n                </span>\r\n          </a>\r\n          <a class=\"card-link\">\r\n                <span class=\"card-title\">\r\n                  <span class=\"label-lg label-link regular block truncate\">Barney Lock</span>\r\n                  <span class=\"label-gray block truncate\">#123456</span>\r\n                  <span class=\"label-gray block truncate\">kingpin@gmail.com</span>\r\n                </span>\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <div class=\"chat\">\r\n        <div class=\"chat-header flex flex-column justify-between\">\r\n          <div class=\"flex items-center pr3\">\r\n            <h2 class=\"fs24 m0 truncate\">Boris Finerman, Antonio Badrigez</h2>\r\n          </div>\r\n          <div class=\"chat-nav flex items-end\">\r\n            <div class=\"flex-auto nowrap\">\r\n              <a class=\"chat-nav-button\">Messages to Group</a>\r\n              <a class=\"chat-nav-button -active\">Notification to Group</a>\r\n            </div>\r\n            <input type=\"search\" autocomplete=\"off\" class=\"form-control -inline\" placeholder=\"Search\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"chat-body\">\r\n          <div class=\"chat-notification\">\r\n            <h5>Boris Finerman</h5>\r\n            <p>Do not forget to pass medicine control by the end of week. It's very important because otherwise you will not get huge load and should pay fine. Please pay attention to this notification! You are one of the best drivers what you constantly forget to pass medicine control.</p>\r\n          </div>\r\n          <div class=\"chat-date\">\r\n            <span class=\"chat-date-content\">Mar 19, 2016</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"chat-footer\">\r\n          <div class=\"flex\">\r\n            <div class=\"flex-auto\">\r\n              <div class=\"form-group\">\r\n                <input autocomplete=\"off\" class=\"form-control\" placeholder=\"Subject\" />\r\n              </div>\r\n              <div class=\"form-group -x15\">\r\n                <textarea rows=\"6\" class=\"form-control\" placeholder=\"Your message\"></textarea>\r\n              </div>\r\n            </div>\r\n            <div class=\"pl2 self-end\">\r\n              <button class=\"button -primary -wider\" type=\"button\">Send</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"

/***/ }),
/* 680 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	function __export(m) {
	    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
	}
	__export(__webpack_require__(681));
	

/***/ }),
/* 681 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var core_1 = __webpack_require__(2);
	var index_1 = __webpack_require__(508);
	var ng2_bootstrap_1 = __webpack_require__(345);
	var ErrorsComponent = (function () {
	    function ErrorsComponent(popoverService) {
	        this.popoverService = popoverService;
	        this.errors = [];
	        this.popoverService
	            .eventShown
	            .subscribe(this.showModal.bind(this));
	        this.popoverService
	            .eventShown
	            .subscribe(this.showErrorBox.bind(this));
	        this.popoverService
	            .eventHidden
	            .subscribe(this.closeModals.bind(this));
	    }
	    ;
	    ErrorsComponent.prototype.closeModals = function () {
	        this.serverModal.hide();
	        this.errorsListModal.hide();
	    };
	    ErrorsComponent.prototype.showModal = function (values) {
	        if (values.type == 'error') {
	            this.serverModal.show();
	            this.text = 'values.additional && values.additional.text';
	        }
	    };
	    ErrorsComponent.prototype.showErrorBox = function (errorsListObject) {
	        if (errorsListObject.type == 'errors_list') {
	            if (errorsListObject.errors && errorsListObject.errors.length) {
	                this.errors = errorsListObject.errors;
	            }
	            else {
	                this.errors = ['An unexpected error has occurred. If the problem persists please contact your system administrator'];
	            }
	            this.errorsListModal.show();
	        }
	    };
	    __decorate([
	        core_1.ViewChild('serverModal'), 
	        __metadata('design:type', Object)
	    ], ErrorsComponent.prototype, "serverModal", void 0);
	    __decorate([
	        core_1.ViewChild('errorsListModal'), 
	        __metadata('design:type', Object)
	    ], ErrorsComponent.prototype, "errorsListModal", void 0);
	    ErrorsComponent = __decorate([
	        core_1.Component({
	            selector: 'transflo-errors',
	            template: __webpack_require__(682),
	            directives: [ng2_bootstrap_1.MODAL_DIRECTVES, ng2_bootstrap_1.DROPDOWN_DIRECTIVES],
	            viewProviders: [ng2_bootstrap_1.BS_VIEW_PROVIDERS]
	        }), 
	        __metadata('design:paramtypes', [index_1.PopoverService])
	    ], ErrorsComponent);
	    return ErrorsComponent;
	}());
	exports.ErrorsComponent = ErrorsComponent;
	

/***/ }),
/* 682 */
/***/ (function(module, exports) {

	module.exports = "\r\n<!--Server error modal-->\r\n<div bsModal #serverModal=\"bs-modal\" class=\"modal error fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myServerModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\">\r\n    <div class=\"modal-content -center\">\r\n      <div class=\"modal-error\">\r\n        <button type=\"button\" class=\"modal-close -white\" aria-label=\"Close\" (click)=\"serverModal.hide()\" title=\"Close\">&times;</button>\r\n        {{text}}\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<!--Errors list modal-->\r\n<div bsModal #errorsListModal=\"bs-modal\" class=\"modal error fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myServerModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\">\r\n    <div class=\"modal-content -center\">\r\n      <div class=\"modal-errors-list\">\r\n        <div class=\"modal-errors-list-header\">\r\n          <span class=\"modal-errors-list-header-text -large\">{{errors.length}}</span>\r\n          <br />\r\n          <span class=\"modal-errors-list-header-text\">errors at this page</span>\r\n        </div>\r\n        <div class=\"modal-errors-list-container\">\r\n          <ul class=\"modal-errors-list-container-list ul\">\r\n            <li class=\"modal-errors-list-container-list-item\" *ngFor=\"let error of errors\">\r\n              {{error}}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n\r\n        <div class=\"modal-errors-list-footer\">\r\n          <button type=\"button\" class=\"button -outline -ml\" aria-label=\"Close\" (click)=\"errorsListModal.hide()\" title=\"Close\">\r\n            Ok, got it!\r\n          </button>\r\n        </div>\r\n\r\n      </div>\r\n      \r\n    </div>\r\n  </div>\r\n</div>"

/***/ }),
/* 683 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	function __export(m) {
	    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
	}
	__export(__webpack_require__(684));
	

/***/ }),
/* 684 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var core_1 = __webpack_require__(2);
	var ng2_bootstrap_1 = __webpack_require__(345);
	var EULAComponent = (function () {
	    function EULAComponent() {
	        this.eulaUrl = './commandeula.html';
	    }
	    ;
	    EULAComponent.prototype.showModal = function () {
	        this.serverModal.show();
	    };
	    __decorate([
	        core_1.ViewChild('serverModal'), 
	        __metadata('design:type', Object)
	    ], EULAComponent.prototype, "serverModal", void 0);
	    EULAComponent = __decorate([
	        core_1.Component({
	            selector: 'transflo-eula',
	            template: __webpack_require__(685),
	            directives: [ng2_bootstrap_1.MODAL_DIRECTVES, ng2_bootstrap_1.DROPDOWN_DIRECTIVES],
	            viewProviders: [ng2_bootstrap_1.BS_VIEW_PROVIDERS]
	        }), 
	        __metadata('design:paramtypes', [])
	    ], EULAComponent);
	    return EULAComponent;
	}());
	exports.EULAComponent = EULAComponent;
	

/***/ }),
/* 685 */
/***/ (function(module, exports) {

	module.exports = "\r\n<!--Server eula modal-->\r\n<div bsModal #serverModal=\"bs-modal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myServerModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\">\r\n    <div class=\"modal-content -center\">\r\n\t  <div class=\"modal-eula-header\">\r\n\t\t<button type=\"button\" class=\"modal-close \" aria-label=\"Close\" (click)=\"serverModal.hide()\" title=\"Close\">&times;</button>\r\n\t  </div>\r\n\t    <div class=\"modal-eula\">\r\n\t\t  <!--<link rel=\"import\" [href]=\"eulaUrl\">-->\r\n\t\t \r\n\t\t  <html>\r\n\t\t  <head>\r\n\t\t    <meta http-equiv=Content-Type content=\"text/html; charset=windows-1252\">\r\n\t\t    <meta name=Generator content=\"Microsoft Word 15 (filtered)\">\r\n\t\t    <style>\r\n\t\t\t  <!--\r\n\t\t\t  /* Font Definitions */\r\n\t\t\t  @font-face {\r\n\t\t\t\tfont-family: PMingLiU;\r\n\t\t\t\tpanose-1: 2 1 6 1 0 1 1 1 1 1;\r\n\t\t\t  }\r\n\r\n\t\t\t  @font-face {\r\n\t\t\t\tfont-family: \"Cambria Math\";\r\n\t\t\t\tpanose-1: 2 4 5 3 5 4 6 3 2 4;\r\n\t\t\t  }\r\n\r\n\t\t\t  @font-face {\r\n\t\t\t\tfont-family: Tahoma;\r\n\t\t\t\tpanose-1: 2 11 6 4 3 5 4 4 2 4;\r\n\t\t\t  }\r\n\r\n\t\t\t  @font-face {\r\n\t\t\t\tfont-family: \"Arial Narrow\";\r\n\t\t\t\tpanose-1: 2 11 6 6 2 2 2 3 2 4;\r\n\t\t\t  }\r\n\r\n\t\t\t  @font-face {\r\n\t\t\t\tfont-family: \"\\@PMingLiU\";\r\n\t\t\t\tpanose-1: 2 1 6 1 0 1 1 1 1 1;\r\n\t\t\t  }\r\n\t\t\t  /* Style Definitions */\r\n\t\t\t  p.MsoNormal, li.MsoNormal, div.MsoNormal {\r\n\t\t\t\tmargin: 0in;\r\n\t\t\t\tmargin-bottom: .0001pt;\r\n\t\t\t\ttext-align: justify;\r\n\t\t\t\ttext-justify: inter-ideograph;\r\n\t\t\t\tline-height: 115%;\r\n\t\t\t\tfont-size: 11.0pt;\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  h1 {\r\n\t\t\t\tmso-style-link: \"Heading 1 Char\";\r\n\t\t\t\tmargin-top: 24.0pt;\r\n\t\t\t\tmargin-right: 0in;\r\n\t\t\t\tmargin-bottom: 0in;\r\n\t\t\t\tmargin-left: 0in;\r\n\t\t\t\tmargin-bottom: .0001pt;\r\n\t\t\t\ttext-align: justify;\r\n\t\t\t\ttext-justify: inter-ideograph;\r\n\t\t\t\tline-height: 115%;\r\n\t\t\t\tpage-break-after: avoid;\r\n\t\t\t\tfont-size: 14.0pt;\r\n\t\t\t\tfont-family: \"Cambria\",serif;\r\n\t\t\t\tcolor: #365F91;\r\n\t\t\t  }\r\n\r\n\t\t\t  p.MsoToc1, li.MsoToc1, div.MsoToc1 {\r\n\t\t\t\tmargin-top: 6.0pt;\r\n\t\t\t\tmargin-right: 30.0pt;\r\n\t\t\t\tmargin-bottom: 6.0pt;\r\n\t\t\t\tmargin-left: .5in;\r\n\t\t\t\ttext-align: justify;\r\n\t\t\t\ttext-justify: inter-ideograph;\r\n\t\t\t\ttext-indent: -.5in;\r\n\t\t\t\tline-height: 115%;\r\n\t\t\t\tfont-size: 11.0pt;\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  p.MsoToc2, li.MsoToc2, div.MsoToc2 {\r\n\t\t\t\tmargin-top: 6.0pt;\r\n\t\t\t\tmargin-right: 30.0pt;\r\n\t\t\t\tmargin-bottom: 6.0pt;\r\n\t\t\t\tmargin-left: .5in;\r\n\t\t\t\ttext-align: justify;\r\n\t\t\t\ttext-justify: inter-ideograph;\r\n\t\t\t\ttext-indent: -.5in;\r\n\t\t\t\tline-height: 115%;\r\n\t\t\t\tfont-size: 11.0pt;\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  p.MsoToc3, li.MsoToc3, div.MsoToc3 {\r\n\t\t\t\tmargin-top: 6.0pt;\r\n\t\t\t\tmargin-right: 30.0pt;\r\n\t\t\t\tmargin-bottom: 6.0pt;\r\n\t\t\t\tmargin-left: .5in;\r\n\t\t\t\ttext-align: justify;\r\n\t\t\t\ttext-justify: inter-ideograph;\r\n\t\t\t\ttext-indent: -.5in;\r\n\t\t\t\tline-height: 115%;\r\n\t\t\t\tfont-size: 11.0pt;\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  p.MsoToc4, li.MsoToc4, div.MsoToc4 {\r\n\t\t\t\tmargin-top: 6.0pt;\r\n\t\t\t\tmargin-right: 30.0pt;\r\n\t\t\t\tmargin-bottom: 6.0pt;\r\n\t\t\t\tmargin-left: 1.0in;\r\n\t\t\t\ttext-align: justify;\r\n\t\t\t\ttext-justify: inter-ideograph;\r\n\t\t\t\ttext-indent: -.5in;\r\n\t\t\t\tline-height: 115%;\r\n\t\t\t\tfont-size: 11.0pt;\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  p.MsoFootnoteText, li.MsoFootnoteText, div.MsoFootnoteText {\r\n\t\t\t\tmso-style-link: \"Footnote Text Char\";\r\n\t\t\t\tmargin-top: 0in;\r\n\t\t\t\tmargin-right: 0in;\r\n\t\t\t\tmargin-bottom: 6.0pt;\r\n\t\t\t\tmargin-left: 0in;\r\n\t\t\t\ttext-align: justify;\r\n\t\t\t\ttext-justify: inter-ideograph;\r\n\t\t\t\tline-height: 115%;\r\n\t\t\t\tfont-size: 10.0pt;\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  p.MsoHeader, li.MsoHeader, div.MsoHeader {\r\n\t\t\t\tmso-style-link: \"Header Char\";\r\n\t\t\t\tmargin: 0in;\r\n\t\t\t\tmargin-bottom: .0001pt;\r\n\t\t\t\ttext-align: justify;\r\n\t\t\t\ttext-justify: inter-ideograph;\r\n\t\t\t\tline-height: 115%;\r\n\t\t\t\tfont-size: 11.0pt;\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  p.MsoFooter, li.MsoFooter, div.MsoFooter {\r\n\t\t\t\tmso-style-link: \"Footer Char\";\r\n\t\t\t\tmargin: 0in;\r\n\t\t\t\tmargin-bottom: .0001pt;\r\n\t\t\t\ttext-align: justify;\r\n\t\t\t\ttext-justify: inter-ideograph;\r\n\t\t\t\tline-height: 115%;\r\n\t\t\t\tfont-size: 11.0pt;\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  span.MsoFootnoteReference {\r\n\t\t\t\tvertical-align: super;\r\n\t\t\t  }\r\n\r\n\t\t\t  p.MsoEndnoteText, li.MsoEndnoteText, div.MsoEndnoteText {\r\n\t\t\t\tmso-style-link: \"Endnote Text Char\";\r\n\t\t\t\tmargin-top: 0in;\r\n\t\t\t\tmargin-right: 0in;\r\n\t\t\t\tmargin-bottom: 6.0pt;\r\n\t\t\t\tmargin-left: 0in;\r\n\t\t\t\ttext-align: justify;\r\n\t\t\t\ttext-justify: inter-ideograph;\r\n\t\t\t\tfont-size: 10.0pt;\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  a:link, span.MsoHyperlink {\r\n\t\t\t\tcolor: blue;\r\n\t\t\t\ttext-decoration: underline;\r\n\t\t\t  }\r\n\r\n\t\t\t  a:visited, span.MsoHyperlinkFollowed {\r\n\t\t\t\tcolor: purple;\r\n\t\t\t\ttext-decoration: underline;\r\n\t\t\t  }\r\n\r\n\t\t\t  p.MsoAcetate, li.MsoAcetate, div.MsoAcetate {\r\n\t\t\t\tmso-style-link: \"Balloon Text Char\";\r\n\t\t\t\tmargin: 0in;\r\n\t\t\t\tmargin-bottom: .0001pt;\r\n\t\t\t\ttext-align: justify;\r\n\t\t\t\ttext-justify: inter-ideograph;\r\n\t\t\t\tline-height: 115%;\r\n\t\t\t\tfont-size: 8.0pt;\r\n\t\t\t\tfont-family: \"Tahoma\",sans-serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  span.MsoPlaceholderText {\r\n\t\t\t\tcolor: gray;\r\n\t\t\t  }\r\n\r\n\t\t\t  p.MsoTocHeading, li.MsoTocHeading, div.MsoTocHeading {\r\n\t\t\t\tmargin-top: 0in;\r\n\t\t\t\tmargin-right: 0in;\r\n\t\t\t\tmargin-bottom: 12.0pt;\r\n\t\t\t\tmargin-left: 0in;\r\n\t\t\t\ttext-align: center;\r\n\t\t\t\tline-height: 115%;\r\n\t\t\t\tfont-size: 11.0pt;\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t\ttext-transform: uppercase;\r\n\t\t\t\tfont-weight: bold;\r\n\t\t\t  }\r\n\r\n\t\t\t  p.KBody, li.KBody, div.KBody {\r\n\t\t\t\tmso-style-name: \"K Body\";\r\n\t\t\t\tmso-style-link: \"K Body Char\";\r\n\t\t\t\tmargin-top: 0in;\r\n\t\t\t\tmargin-right: 0in;\r\n\t\t\t\tmargin-bottom: 12.0pt;\r\n\t\t\t\tmargin-left: 0in;\r\n\t\t\t\ttext-align: justify;\r\n\t\t\t\ttext-justify: inter-ideograph;\r\n\t\t\t\tline-height: 115%;\r\n\t\t\t\tfont-size: 11.0pt;\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  span.KBodyChar {\r\n\t\t\t\tmso-style-name: \"K Body Char\";\r\n\t\t\t\tmso-style-link: \"K Body\";\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  p.KTBody, li.KTBody, div.KTBody {\r\n\t\t\t\tmso-style-name: \"K TBody\";\r\n\t\t\t\tmso-style-link: \"K TBody Char\";\r\n\t\t\t\tmargin: 0in;\r\n\t\t\t\tmargin-bottom: .0001pt;\r\n\t\t\t\ttext-align: justify;\r\n\t\t\t\ttext-justify: inter-ideograph;\r\n\t\t\t\tline-height: 115%;\r\n\t\t\t\tfont-size: 11.0pt;\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  span.KTBodyChar {\r\n\t\t\t\tmso-style-name: \"K TBody Char\";\r\n\t\t\t\tmso-style-link: \"K TBody\";\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t\tcolor: black;\r\n\t\t\t  }\r\n\r\n\t\t\t  p.KIndent1, li.KIndent1, div.KIndent1 {\r\n\t\t\t\tmso-style-name: \"K Indent1\";\r\n\t\t\t\tmso-style-link: \"K Indent1 Char\";\r\n\t\t\t\tmargin-top: 0in;\r\n\t\t\t\tmargin-right: 0in;\r\n\t\t\t\tmargin-bottom: 12.0pt;\r\n\t\t\t\tmargin-left: .5in;\r\n\t\t\t\ttext-align: justify;\r\n\t\t\t\ttext-justify: inter-ideograph;\r\n\t\t\t\tline-height: 115%;\r\n\t\t\t\tfont-size: 11.0pt;\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  span.KIndent1Char {\r\n\t\t\t\tmso-style-name: \"K Indent1 Char\";\r\n\t\t\t\tmso-style-link: \"K Indent1\";\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t\tcolor: black;\r\n\t\t\t  }\r\n\r\n\t\t\t  p.KIndent2, li.KIndent2, div.KIndent2 {\r\n\t\t\t\tmso-style-name: \"K Indent2\";\r\n\t\t\t\tmso-style-link: \"K Indent2 Char\";\r\n\t\t\t\tmargin-top: 0in;\r\n\t\t\t\tmargin-right: 0in;\r\n\t\t\t\tmargin-bottom: 12.0pt;\r\n\t\t\t\tmargin-left: 1.0in;\r\n\t\t\t\ttext-align: justify;\r\n\t\t\t\ttext-justify: inter-ideograph;\r\n\t\t\t\tline-height: 115%;\r\n\t\t\t\tfont-size: 11.0pt;\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  span.KIndent2Char {\r\n\t\t\t\tmso-style-name: \"K Indent2 Char\";\r\n\t\t\t\tmso-style-link: \"K Indent2\";\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t\tcolor: black;\r\n\t\t\t  }\r\n\r\n\t\t\t  p.KIndent3, li.KIndent3, div.KIndent3 {\r\n\t\t\t\tmso-style-name: \"K Indent3\";\r\n\t\t\t\tmso-style-link: \"K Indent3 Char\";\r\n\t\t\t\tmargin-top: 0in;\r\n\t\t\t\tmargin-right: 0in;\r\n\t\t\t\tmargin-bottom: 12.0pt;\r\n\t\t\t\tmargin-left: 1.5in;\r\n\t\t\t\ttext-align: justify;\r\n\t\t\t\ttext-justify: inter-ideograph;\r\n\t\t\t\tline-height: 115%;\r\n\t\t\t\tfont-size: 11.0pt;\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  span.KIndent3Char {\r\n\t\t\t\tmso-style-name: \"K Indent3 Char\";\r\n\t\t\t\tmso-style-link: \"K Indent3\";\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t\tcolor: black;\r\n\t\t\t  }\r\n\r\n\t\t\t  p.KIndent4, li.KIndent4, div.KIndent4 {\r\n\t\t\t\tmso-style-name: \"K Indent4\";\r\n\t\t\t\tmso-style-link: \"K Indent4 Char\";\r\n\t\t\t\tmargin-top: 0in;\r\n\t\t\t\tmargin-right: 0in;\r\n\t\t\t\tmargin-bottom: 12.0pt;\r\n\t\t\t\tmargin-left: 2.0in;\r\n\t\t\t\ttext-align: justify;\r\n\t\t\t\ttext-justify: inter-ideograph;\r\n\t\t\t\tline-height: 115%;\r\n\t\t\t\tfont-size: 11.0pt;\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  span.KIndent4Char {\r\n\t\t\t\tmso-style-name: \"K Indent4 Char\";\r\n\t\t\t\tmso-style-link: \"K Indent4\";\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t\tcolor: black;\r\n\t\t\t  }\r\n\r\n\t\t\t  p.KIndent5, li.KIndent5, div.KIndent5 {\r\n\t\t\t\tmso-style-name: \"K Indent5\";\r\n\t\t\t\tmso-style-link: \"K Indent5 Char\";\r\n\t\t\t\tmargin-top: 0in;\r\n\t\t\t\tmargin-right: 0in;\r\n\t\t\t\tmargin-bottom: 12.0pt;\r\n\t\t\t\tmargin-left: 2.5in;\r\n\t\t\t\ttext-align: justify;\r\n\t\t\t\ttext-justify: inter-ideograph;\r\n\t\t\t\tline-height: 115%;\r\n\t\t\t\tfont-size: 11.0pt;\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  span.KIndent5Char {\r\n\t\t\t\tmso-style-name: \"K Indent5 Char\";\r\n\t\t\t\tmso-style-link: \"K Indent5\";\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t\tcolor: black;\r\n\t\t\t  }\r\n\r\n\t\t\t  p.KSS, li.KSS, div.KSS {\r\n\t\t\t\tmso-style-name: \"K SS\";\r\n\t\t\t\tmso-style-link: \"K SS Char\";\r\n\t\t\t\tmargin-top: 0in;\r\n\t\t\t\tmargin-right: 0in;\r\n\t\t\t\tmargin-bottom: 12.0pt;\r\n\t\t\t\tmargin-left: 0in;\r\n\t\t\t\ttext-align: center;\r\n\t\t\t\tline-height: 115%;\r\n\t\t\t\tfont-size: 11.0pt;\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t\tfont-weight: bold;\r\n\t\t\t  }\r\n\r\n\t\t\t  span.KSSChar {\r\n\t\t\t\tmso-style-name: \"K SS Char\";\r\n\t\t\t\tmso-style-link: \"K SS\";\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t\tcolor: black;\r\n\t\t\t\tfont-weight: bold;\r\n\t\t\t  }\r\n\r\n\t\t\t  p.KFrontPageBox, li.KFrontPageBox, div.KFrontPageBox {\r\n\t\t\t\tmso-style-name: \"K FrontPageBox\";\r\n\t\t\t\tmso-style-link: \"K FrontPageBox Char\";\r\n\t\t\t\tmargin-top: 12.0pt;\r\n\t\t\t\tmargin-right: 0in;\r\n\t\t\t\tmargin-bottom: 12.0pt;\r\n\t\t\t\tmargin-left: 0in;\r\n\t\t\t\ttext-align: justify;\r\n\t\t\t\ttext-justify: inter-ideograph;\r\n\t\t\t\tline-height: 115%;\r\n\t\t\t\tfont-size: 15.0pt;\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t\ttext-transform: uppercase;\r\n\t\t\t\tfont-weight: bold;\r\n\t\t\t  }\r\n\r\n\t\t\t  span.KFrontPageBoxChar {\r\n\t\t\t\tmso-style-name: \"K FrontPageBox Char\";\r\n\t\t\t\tmso-style-link: \"K FrontPageBox\";\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t\tcolor: black;\r\n\t\t\t\ttext-transform: uppercase;\r\n\t\t\t\tfont-weight: bold;\r\n\t\t\t  }\r\n\r\n\t\t\t  p.KST, li.KST, div.KST {\r\n\t\t\t\tmso-style-name: \"K ST\";\r\n\t\t\t\tmso-style-link: \"K ST Char\";\r\n\t\t\t\tmargin-top: 0in;\r\n\t\t\t\tmargin-right: 0in;\r\n\t\t\t\tmargin-bottom: 12.0pt;\r\n\t\t\t\tmargin-left: 0in;\r\n\t\t\t\ttext-align: center;\r\n\t\t\t\tline-height: 115%;\r\n\t\t\t\tfont-size: 11.0pt;\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t\ttext-transform: uppercase;\r\n\t\t\t\tfont-weight: bold;\r\n\t\t\t  }\r\n\r\n\t\t\t  span.KSTChar {\r\n\t\t\t\tmso-style-name: \"K ST Char\";\r\n\t\t\t\tmso-style-link: \"K ST\";\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t\tcolor: black;\r\n\t\t\t\ttext-transform: uppercase;\r\n\t\t\t\tfont-weight: bold;\r\n\t\t\t  }\r\n\r\n\t\t\t  span.HeaderChar {\r\n\t\t\t\tmso-style-name: \"Header Char\";\r\n\t\t\t\tmso-style-link: Header;\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  span.FooterChar {\r\n\t\t\t\tmso-style-name: \"Footer Char\";\r\n\t\t\t\tmso-style-link: Footer;\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  span.BalloonTextChar {\r\n\t\t\t\tmso-style-name: \"Balloon Text Char\";\r\n\t\t\t\tmso-style-link: \"Balloon Text\";\r\n\t\t\t\tfont-family: \"Tahoma\",sans-serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  span.Heading1Char {\r\n\t\t\t\tmso-style-name: \"Heading 1 Char\";\r\n\t\t\t\tmso-style-link: \"Heading 1\";\r\n\t\t\t\tfont-family: \"Cambria\",serif;\r\n\t\t\t\tcolor: #365F91;\r\n\t\t\t\tfont-weight: bold;\r\n\t\t\t  }\r\n\r\n\t\t\t  p.KDisclosure, li.KDisclosure, div.KDisclosure {\r\n\t\t\t\tmso-style-name: \"K Disclosure\";\r\n\t\t\t\tmargin-top: 3.0pt;\r\n\t\t\t\tmargin-right: 0in;\r\n\t\t\t\tmargin-bottom: 3.0pt;\r\n\t\t\t\tmargin-left: 0in;\r\n\t\t\t\ttext-align: justify;\r\n\t\t\t\ttext-justify: inter-ideograph;\r\n\t\t\t\tline-height: 115%;\r\n\t\t\t\tfont-size: 8.0pt;\r\n\t\t\t\tfont-family: \"Arial Narrow\",sans-serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  p.KBodyFirstIndent, li.KBodyFirstIndent, div.KBodyFirstIndent {\r\n\t\t\t\tmso-style-name: \"K Body First Indent\";\r\n\t\t\t\tmso-style-link: \"K Body First Indent Char\";\r\n\t\t\t\tmargin-top: 0in;\r\n\t\t\t\tmargin-right: 0in;\r\n\t\t\t\tmargin-bottom: 12.0pt;\r\n\t\t\t\tmargin-left: 0in;\r\n\t\t\t\ttext-align: justify;\r\n\t\t\t\ttext-justify: inter-ideograph;\r\n\t\t\t\ttext-indent: .5in;\r\n\t\t\t\tline-height: 115%;\r\n\t\t\t\tfont-size: 11.0pt;\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  span.KBodyFirstIndentChar {\r\n\t\t\t\tmso-style-name: \"K Body First Indent Char\";\r\n\t\t\t\tmso-style-link: \"K Body First Indent\";\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t\tcolor: black;\r\n\t\t\t  }\r\n\r\n\t\t\t  p.KIndentFL1, li.KIndentFL1, div.KIndentFL1 {\r\n\t\t\t\tmso-style-name: \"K IndentFL1\";\r\n\t\t\t\tmso-style-link: \"K IndentFL1 Char\";\r\n\t\t\t\tmargin-top: 0in;\r\n\t\t\t\tmargin-right: 0in;\r\n\t\t\t\tmargin-bottom: 12.0pt;\r\n\t\t\t\tmargin-left: .5in;\r\n\t\t\t\ttext-align: justify;\r\n\t\t\t\ttext-justify: inter-ideograph;\r\n\t\t\t\ttext-indent: .5in;\r\n\t\t\t\tline-height: 115%;\r\n\t\t\t\tfont-size: 11.0pt;\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  span.KIndentFL1Char {\r\n\t\t\t\tmso-style-name: \"K IndentFL1 Char\";\r\n\t\t\t\tmso-style-link: \"K IndentFL1\";\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t\tcolor: black;\r\n\t\t\t  }\r\n\r\n\t\t\t  p.KIndentFL2, li.KIndentFL2, div.KIndentFL2 {\r\n\t\t\t\tmso-style-name: \"K IndentFL2\";\r\n\t\t\t\tmso-style-link: \"K IndentFL2 Char\";\r\n\t\t\t\tmargin-top: 0in;\r\n\t\t\t\tmargin-right: 0in;\r\n\t\t\t\tmargin-bottom: 12.0pt;\r\n\t\t\t\tmargin-left: 1.0in;\r\n\t\t\t\ttext-align: justify;\r\n\t\t\t\ttext-justify: inter-ideograph;\r\n\t\t\t\ttext-indent: .5in;\r\n\t\t\t\tline-height: 115%;\r\n\t\t\t\tfont-size: 11.0pt;\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  span.KIndentFL2Char {\r\n\t\t\t\tmso-style-name: \"K IndentFL2 Char\";\r\n\t\t\t\tmso-style-link: \"K IndentFL2\";\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t\tcolor: black;\r\n\t\t\t  }\r\n\r\n\t\t\t  p.KIndentFL3, li.KIndentFL3, div.KIndentFL3 {\r\n\t\t\t\tmso-style-name: \"K IndentFL3\";\r\n\t\t\t\tmso-style-link: \"K IndentFL3 Char\";\r\n\t\t\t\tmargin-top: 0in;\r\n\t\t\t\tmargin-right: 0in;\r\n\t\t\t\tmargin-bottom: 12.0pt;\r\n\t\t\t\tmargin-left: 1.5in;\r\n\t\t\t\ttext-align: justify;\r\n\t\t\t\ttext-justify: inter-ideograph;\r\n\t\t\t\ttext-indent: .5in;\r\n\t\t\t\tline-height: 115%;\r\n\t\t\t\tfont-size: 11.0pt;\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  span.KIndentFL3Char {\r\n\t\t\t\tmso-style-name: \"K IndentFL3 Char\";\r\n\t\t\t\tmso-style-link: \"K IndentFL3\";\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t\tcolor: black;\r\n\t\t\t  }\r\n\r\n\t\t\t  p.KIndentFL4, li.KIndentFL4, div.KIndentFL4 {\r\n\t\t\t\tmso-style-name: \"K IndentFL4\";\r\n\t\t\t\tmso-style-link: \"K IndentFL4 Char\";\r\n\t\t\t\tmargin-top: 0in;\r\n\t\t\t\tmargin-right: 0in;\r\n\t\t\t\tmargin-bottom: 12.0pt;\r\n\t\t\t\tmargin-left: 2.0in;\r\n\t\t\t\ttext-align: justify;\r\n\t\t\t\ttext-justify: inter-ideograph;\r\n\t\t\t\ttext-indent: .5in;\r\n\t\t\t\tline-height: 115%;\r\n\t\t\t\tfont-size: 11.0pt;\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  span.KIndentFL4Char {\r\n\t\t\t\tmso-style-name: \"K IndentFL4 Char\";\r\n\t\t\t\tmso-style-link: \"K IndentFL4\";\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t\tcolor: black;\r\n\t\t\t  }\r\n\r\n\t\t\t  p.KIndentFL5, li.KIndentFL5, div.KIndentFL5 {\r\n\t\t\t\tmso-style-name: \"K IndentFL5\";\r\n\t\t\t\tmso-style-link: \"K IndentFL5 Char\";\r\n\t\t\t\tmargin-top: 0in;\r\n\t\t\t\tmargin-right: 0in;\r\n\t\t\t\tmargin-bottom: 12.0pt;\r\n\t\t\t\tmargin-left: 2.5in;\r\n\t\t\t\ttext-align: justify;\r\n\t\t\t\ttext-justify: inter-ideograph;\r\n\t\t\t\ttext-indent: .5in;\r\n\t\t\t\tline-height: 115%;\r\n\t\t\t\tfont-size: 11.0pt;\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  span.KIndentFL5Char {\r\n\t\t\t\tmso-style-name: \"K IndentFL5 Char\";\r\n\t\t\t\tmso-style-link: \"K IndentFL5\";\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t\tcolor: black;\r\n\t\t\t  }\r\n\r\n\t\t\t  p.KLetterSenderName, li.KLetterSenderName, div.KLetterSenderName {\r\n\t\t\t\tmso-style-name: \"K LetterSenderName\";\r\n\t\t\t\tmso-style-link: \"K LetterSenderName Char\";\r\n\t\t\t\tmargin: 0in;\r\n\t\t\t\tmargin-bottom: .0001pt;\r\n\t\t\t\ttext-align: justify;\r\n\t\t\t\ttext-justify: inter-ideograph;\r\n\t\t\t\tline-height: 115%;\r\n\t\t\t\tfont-size: 9.5pt;\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  span.KLetterSenderNameChar {\r\n\t\t\t\tmso-style-name: \"K LetterSenderName Char\";\r\n\t\t\t\tmso-style-link: \"K LetterSenderName\";\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t\tcolor: black;\r\n\t\t\t  }\r\n\r\n\t\t\t  p.KLetterReferences, li.KLetterReferences, div.KLetterReferences {\r\n\t\t\t\tmso-style-name: \"K LetterReferences\";\r\n\t\t\t\tmso-style-link: \"K LetterReferences Char\";\r\n\t\t\t\tmargin: 0in;\r\n\t\t\t\tmargin-bottom: .0001pt;\r\n\t\t\t\ttext-align: justify;\r\n\t\t\t\ttext-justify: inter-ideograph;\r\n\t\t\t\tline-height: 115%;\r\n\t\t\t\tfont-size: 7.5pt;\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  span.KLetterReferencesChar {\r\n\t\t\t\tmso-style-name: \"K LetterReferences Char\";\r\n\t\t\t\tmso-style-link: \"K LetterReferences\";\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t\tcolor: black;\r\n\t\t\t  }\r\n\r\n\t\t\t  p.KLetterSenderEmail, li.KLetterSenderEmail, div.KLetterSenderEmail {\r\n\t\t\t\tmso-style-name: \"K LetterSenderEmail\";\r\n\t\t\t\tmso-style-link: \"K LetterSenderEmail Char\";\r\n\t\t\t\tmargin: 0in;\r\n\t\t\t\tmargin-bottom: .0001pt;\r\n\t\t\t\ttext-align: justify;\r\n\t\t\t\ttext-justify: inter-ideograph;\r\n\t\t\t\tline-height: 115%;\r\n\t\t\t\tfont-size: 8.5pt;\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  span.KLetterSenderEmailChar {\r\n\t\t\t\tmso-style-name: \"K LetterSenderEmail Char\";\r\n\t\t\t\tmso-style-link: \"K LetterSenderEmail\";\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t\tcolor: black;\r\n\t\t\t  }\r\n\r\n\t\t\t  p.KLetterSenderPhone, li.KLetterSenderPhone, div.KLetterSenderPhone {\r\n\t\t\t\tmso-style-name: \"K LetterSenderPhone\";\r\n\t\t\t\tmso-style-link: \"K LetterSenderPhone Char\";\r\n\t\t\t\tmargin: 0in;\r\n\t\t\t\tmargin-bottom: .0001pt;\r\n\t\t\t\ttext-align: justify;\r\n\t\t\t\ttext-justify: inter-ideograph;\r\n\t\t\t\tline-height: 115%;\r\n\t\t\t\tfont-size: 7.5pt;\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  span.KLetterSenderPhoneChar {\r\n\t\t\t\tmso-style-name: \"K LetterSenderPhone Char\";\r\n\t\t\t\tmso-style-link: \"K LetterSenderPhone\";\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t\tcolor: black;\r\n\t\t\t  }\r\n\r\n\t\t\t  p.TOCPage, li.TOCPage, div.TOCPage {\r\n\t\t\t\tmso-style-name: \"TOC Page\";\r\n\t\t\t\tmso-style-link: \"TOC Page Char\";\r\n\t\t\t\tmargin-top: 0in;\r\n\t\t\t\tmargin-right: 0in;\r\n\t\t\t\tmargin-bottom: 12.0pt;\r\n\t\t\t\tmargin-left: 0in;\r\n\t\t\t\ttext-align: right;\r\n\t\t\t\tline-height: 115%;\r\n\t\t\t\tfont-size: 11.0pt;\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t\tfont-weight: bold;\r\n\t\t\t  }\r\n\r\n\t\t\t  span.TOCPageChar {\r\n\t\t\t\tmso-style-name: \"TOC Page Char\";\r\n\t\t\t\tmso-style-link: \"TOC Page\";\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t\tcolor: black;\r\n\t\t\t\tfont-weight: bold;\r\n\t\t\t  }\r\n\r\n\t\t\t  p.KBullet1, li.KBullet1, div.KBullet1 {\r\n\t\t\t\tmso-style-name: \"K Bullet1\";\r\n\t\t\t\tmso-style-link: \"K Bullet1 Char\";\r\n\t\t\t\tmargin-top: 0in;\r\n\t\t\t\tmargin-right: 0in;\r\n\t\t\t\tmargin-bottom: 12.0pt;\r\n\t\t\t\tmargin-left: .5in;\r\n\t\t\t\ttext-align: justify;\r\n\t\t\t\ttext-justify: inter-ideograph;\r\n\t\t\t\ttext-indent: -.5in;\r\n\t\t\t\tline-height: 115%;\r\n\t\t\t\tfont-size: 11.0pt;\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  span.KBullet1Char {\r\n\t\t\t\tmso-style-name: \"K Bullet1 Char\";\r\n\t\t\t\tmso-style-link: \"K Bullet1\";\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  p.KBullet2, li.KBullet2, div.KBullet2 {\r\n\t\t\t\tmso-style-name: \"K Bullet2\";\r\n\t\t\t\tmso-style-link: \"K Bullet2 Char\";\r\n\t\t\t\tmargin-top: 0in;\r\n\t\t\t\tmargin-right: 0in;\r\n\t\t\t\tmargin-bottom: 12.0pt;\r\n\t\t\t\tmargin-left: 1.0in;\r\n\t\t\t\ttext-align: justify;\r\n\t\t\t\ttext-justify: inter-ideograph;\r\n\t\t\t\ttext-indent: -.5in;\r\n\t\t\t\tline-height: 115%;\r\n\t\t\t\tfont-size: 11.0pt;\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  span.KBullet2Char {\r\n\t\t\t\tmso-style-name: \"K Bullet2 Char\";\r\n\t\t\t\tmso-style-link: \"K Bullet2\";\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  p.KBullet3, li.KBullet3, div.KBullet3 {\r\n\t\t\t\tmso-style-name: \"K Bullet3\";\r\n\t\t\t\tmso-style-link: \"K Bullet3 Char\";\r\n\t\t\t\tmargin-top: 0in;\r\n\t\t\t\tmargin-right: 0in;\r\n\t\t\t\tmargin-bottom: 12.0pt;\r\n\t\t\t\tmargin-left: 1.5in;\r\n\t\t\t\ttext-align: justify;\r\n\t\t\t\ttext-justify: inter-ideograph;\r\n\t\t\t\ttext-indent: -.5in;\r\n\t\t\t\tline-height: 115%;\r\n\t\t\t\tfont-size: 11.0pt;\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  span.KBullet3Char {\r\n\t\t\t\tmso-style-name: \"K Bullet3 Char\";\r\n\t\t\t\tmso-style-link: \"K Bullet3\";\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  p.KBullet4, li.KBullet4, div.KBullet4 {\r\n\t\t\t\tmso-style-name: \"K Bullet4\";\r\n\t\t\t\tmso-style-link: \"K Bullet4 Char\";\r\n\t\t\t\tmargin-top: 0in;\r\n\t\t\t\tmargin-right: 0in;\r\n\t\t\t\tmargin-bottom: 12.0pt;\r\n\t\t\t\tmargin-left: 2.0in;\r\n\t\t\t\ttext-align: justify;\r\n\t\t\t\ttext-justify: inter-ideograph;\r\n\t\t\t\ttext-indent: -.5in;\r\n\t\t\t\tline-height: 115%;\r\n\t\t\t\tfont-size: 11.0pt;\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  span.KBullet4Char {\r\n\t\t\t\tmso-style-name: \"K Bullet4 Char\";\r\n\t\t\t\tmso-style-link: \"K Bullet4\";\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  p.KBullet5, li.KBullet5, div.KBullet5 {\r\n\t\t\t\tmso-style-name: \"K Bullet5\";\r\n\t\t\t\tmso-style-link: \"K Bullet5 Char\";\r\n\t\t\t\tmargin-top: 0in;\r\n\t\t\t\tmargin-right: 0in;\r\n\t\t\t\tmargin-bottom: 12.0pt;\r\n\t\t\t\tmargin-left: 2.5in;\r\n\t\t\t\ttext-align: justify;\r\n\t\t\t\ttext-justify: inter-ideograph;\r\n\t\t\t\ttext-indent: -.5in;\r\n\t\t\t\tline-height: 115%;\r\n\t\t\t\tfont-size: 11.0pt;\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  span.KBullet5Char {\r\n\t\t\t\tmso-style-name: \"K Bullet5 Char\";\r\n\t\t\t\tmso-style-link: \"K Bullet5\";\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  span.FootnoteTextChar {\r\n\t\t\t\tmso-style-name: \"Footnote Text Char\";\r\n\t\t\t\tmso-style-link: \"Footnote Text\";\r\n\t\t\t  }\r\n\r\n\t\t\t  span.EndnoteTextChar {\r\n\t\t\t\tmso-style-name: \"Endnote Text Char\";\r\n\t\t\t\tmso-style-link: \"Endnote Text\";\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  p.Quote5, li.Quote5, div.Quote5 {\r\n\t\t\t\tmso-style-name: \"Quote \\.5\\0022\";\r\n\t\t\t\tmargin-top: 0in;\r\n\t\t\t\tmargin-right: .5in;\r\n\t\t\t\tmargin-bottom: 12.0pt;\r\n\t\t\t\tmargin-left: .5in;\r\n\t\t\t\ttext-align: justify;\r\n\t\t\t\ttext-justify: inter-ideograph;\r\n\t\t\t\tline-height: 115%;\r\n\t\t\t\tfont-size: 11.0pt;\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  p.Quote1, li.Quote1, div.Quote1 {\r\n\t\t\t\tmso-style-name: \"Quote 1\\0022\";\r\n\t\t\t\tmargin-top: 0in;\r\n\t\t\t\tmargin-right: 1.0in;\r\n\t\t\t\tmargin-bottom: 12.0pt;\r\n\t\t\t\tmargin-left: 1.0in;\r\n\t\t\t\ttext-align: justify;\r\n\t\t\t\ttext-justify: inter-ideograph;\r\n\t\t\t\tline-height: 115%;\r\n\t\t\t\tfont-size: 11.0pt;\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  p.TitleBold, li.TitleBold, div.TitleBold {\r\n\t\t\t\tmso-style-name: \"Title Bold\";\r\n\t\t\t\tmargin-top: 0in;\r\n\t\t\t\tmargin-right: 0in;\r\n\t\t\t\tmargin-bottom: 12.0pt;\r\n\t\t\t\tmargin-left: 0in;\r\n\t\t\t\ttext-align: center;\r\n\t\t\t\tline-height: 115%;\r\n\t\t\t\tpage-break-after: avoid;\r\n\t\t\t\tfont-size: 11.0pt;\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t\tfont-weight: bold;\r\n\t\t\t  }\r\n\r\n\t\t\t  p.TitleCaps, li.TitleCaps, div.TitleCaps {\r\n\t\t\t\tmso-style-name: \"Title Caps\";\r\n\t\t\t\tmargin-top: 0in;\r\n\t\t\t\tmargin-right: 0in;\r\n\t\t\t\tmargin-bottom: 12.0pt;\r\n\t\t\t\tmargin-left: 0in;\r\n\t\t\t\ttext-align: center;\r\n\t\t\t\tline-height: 115%;\r\n\t\t\t\tpage-break-after: avoid;\r\n\t\t\t\tfont-size: 11.0pt;\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t\ttext-transform: uppercase;\r\n\t\t\t  }\r\n\r\n\t\t\t  p.TitleCenter, li.TitleCenter, div.TitleCenter {\r\n\t\t\t\tmso-style-name: \"Title Center\";\r\n\t\t\t\tmargin-top: 0in;\r\n\t\t\t\tmargin-right: 0in;\r\n\t\t\t\tmargin-bottom: 12.0pt;\r\n\t\t\t\tmargin-left: 0in;\r\n\t\t\t\ttext-align: center;\r\n\t\t\t\tline-height: 115%;\r\n\t\t\t\tpage-break-after: avoid;\r\n\t\t\t\tfont-size: 11.0pt;\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  p.TitleLeftBold, li.TitleLeftBold, div.TitleLeftBold {\r\n\t\t\t\tmso-style-name: \"Title Left Bold\";\r\n\t\t\t\tmargin-top: 0in;\r\n\t\t\t\tmargin-right: 0in;\r\n\t\t\t\tmargin-bottom: 12.0pt;\r\n\t\t\t\tmargin-left: 0in;\r\n\t\t\t\tline-height: 115%;\r\n\t\t\t\tpage-break-after: avoid;\r\n\t\t\t\tfont-size: 11.0pt;\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t\tfont-weight: bold;\r\n\t\t\t  }\r\n\r\n\t\t\t  p.TitleLeftUnderline, li.TitleLeftUnderline, div.TitleLeftUnderline {\r\n\t\t\t\tmso-style-name: \"Title Left Underline\";\r\n\t\t\t\tmargin-top: 0in;\r\n\t\t\t\tmargin-right: 0in;\r\n\t\t\t\tmargin-bottom: 12.0pt;\r\n\t\t\t\tmargin-left: 0in;\r\n\t\t\t\tline-height: 115%;\r\n\t\t\t\tpage-break-after: avoid;\r\n\t\t\t\tfont-size: 11.0pt;\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t\ttext-decoration: underline;\r\n\t\t\t  }\r\n\r\n\t\t\t  p.sfalevel1, li.sfalevel1, div.sfalevel1 {\r\n\t\t\t\tmso-style-name: sfalevel1;\r\n\t\t\t\tmargin-top: 12.0pt;\r\n\t\t\t\tmargin-right: 0in;\r\n\t\t\t\tmargin-bottom: 0in;\r\n\t\t\t\tmargin-left: 0in;\r\n\t\t\t\tmargin-bottom: .0001pt;\r\n\t\t\t\ttext-indent: 0in;\r\n\t\t\t\tline-height: 15.0pt;\r\n\t\t\t\tfont-size: 12.0pt;\r\n\t\t\t\tfont-family: \"Times New Roman\",serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  p.sfalevel2, li.sfalevel2, div.sfalevel2 {\r\n\t\t\t\tmso-style-name: sfalevel2;\r\n\t\t\t\tmargin-top: 12.0pt;\r\n\t\t\t\tmargin-right: 0in;\r\n\t\t\t\tmargin-bottom: 0in;\r\n\t\t\t\tmargin-left: 0in;\r\n\t\t\t\tmargin-bottom: .0001pt;\r\n\t\t\t\ttext-indent: .5in;\r\n\t\t\t\tline-height: 15.0pt;\r\n\t\t\t\tfont-size: 12.0pt;\r\n\t\t\t\tfont-family: \"Times New Roman\",serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  p.sfalevel3, li.sfalevel3, div.sfalevel3 {\r\n\t\t\t\tmso-style-name: sfalevel3;\r\n\t\t\t\tmargin-top: 12.0pt;\r\n\t\t\t\tmargin-right: 0in;\r\n\t\t\t\tmargin-bottom: 0in;\r\n\t\t\t\tmargin-left: 0in;\r\n\t\t\t\tmargin-bottom: .0001pt;\r\n\t\t\t\ttext-indent: 1.0in;\r\n\t\t\t\tline-height: 15.0pt;\r\n\t\t\t\tfont-size: 12.0pt;\r\n\t\t\t\tfont-family: \"Times New Roman\",serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  span.Defterm {\r\n\t\t\t\tmso-style-name: Defterm;\r\n\t\t\t\tcolor: black;\r\n\t\t\t\tfont-weight: bold;\r\n\t\t\t  }\r\n\r\n\t\t\t  p.TabbedInL1, li.TabbedInL1, div.TabbedInL1 {\r\n\t\t\t\tmso-style-name: TabbedIn_L1;\r\n\t\t\t\tmargin-top: 0in;\r\n\t\t\t\tmargin-right: 0in;\r\n\t\t\t\tmargin-bottom: 0in;\r\n\t\t\t\tmargin-left: .6in;\r\n\t\t\t\tmargin-bottom: .0001pt;\r\n\t\t\t\ttext-align: justify;\r\n\t\t\t\ttext-justify: inter-ideograph;\r\n\t\t\t\ttext-indent: -.3in;\r\n\t\t\t\tfont-size: 9.0pt;\r\n\t\t\t\tfont-family: \"Times New Roman\",serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  p.TabbedInL2, li.TabbedInL2, div.TabbedInL2 {\r\n\t\t\t\tmso-style-name: TabbedIn_L2;\r\n\t\t\t\tmargin-top: 0in;\r\n\t\t\t\tmargin-right: 0in;\r\n\t\t\t\tmargin-bottom: 12.0pt;\r\n\t\t\t\tmargin-left: 1.5in;\r\n\t\t\t\ttext-align: justify;\r\n\t\t\t\ttext-justify: inter-ideograph;\r\n\t\t\t\ttext-indent: -.5in;\r\n\t\t\t\tfont-size: 12.0pt;\r\n\t\t\t\tfont-family: \"Times New Roman\",serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  p.TabbedInL3, li.TabbedInL3, div.TabbedInL3 {\r\n\t\t\t\tmso-style-name: TabbedIn_L3;\r\n\t\t\t\tmargin-top: 0in;\r\n\t\t\t\tmargin-right: 0in;\r\n\t\t\t\tmargin-bottom: 12.0pt;\r\n\t\t\t\tmargin-left: 2.0in;\r\n\t\t\t\ttext-align: justify;\r\n\t\t\t\ttext-justify: inter-ideograph;\r\n\t\t\t\ttext-indent: -.5in;\r\n\t\t\t\tfont-size: 12.0pt;\r\n\t\t\t\tfont-family: \"Times New Roman\",serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  p.TabbedInL4, li.TabbedInL4, div.TabbedInL4 {\r\n\t\t\t\tmso-style-name: TabbedIn_L4;\r\n\t\t\t\tmargin-top: 0in;\r\n\t\t\t\tmargin-right: 0in;\r\n\t\t\t\tmargin-bottom: 12.0pt;\r\n\t\t\t\tmargin-left: 2.5in;\r\n\t\t\t\ttext-align: justify;\r\n\t\t\t\ttext-justify: inter-ideograph;\r\n\t\t\t\ttext-indent: -.5in;\r\n\t\t\t\tfont-size: 12.0pt;\r\n\t\t\t\tfont-family: \"Times New Roman\",serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  p.TabbedInL5, li.TabbedInL5, div.TabbedInL5 {\r\n\t\t\t\tmso-style-name: TabbedIn_L5;\r\n\t\t\t\tmargin-top: 0in;\r\n\t\t\t\tmargin-right: 0in;\r\n\t\t\t\tmargin-bottom: 12.0pt;\r\n\t\t\t\tmargin-left: 3.0in;\r\n\t\t\t\ttext-align: justify;\r\n\t\t\t\ttext-justify: inter-ideograph;\r\n\t\t\t\ttext-indent: -.5in;\r\n\t\t\t\tfont-size: 12.0pt;\r\n\t\t\t\tfont-family: \"Times New Roman\",serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  p.TabbedInL6, li.TabbedInL6, div.TabbedInL6 {\r\n\t\t\t\tmso-style-name: TabbedIn_L6;\r\n\t\t\t\tmargin-top: 0in;\r\n\t\t\t\tmargin-right: 0in;\r\n\t\t\t\tmargin-bottom: 12.0pt;\r\n\t\t\t\tmargin-left: 3.5in;\r\n\t\t\t\ttext-align: justify;\r\n\t\t\t\ttext-justify: inter-ideograph;\r\n\t\t\t\ttext-indent: -.5in;\r\n\t\t\t\tfont-size: 12.0pt;\r\n\t\t\t\tfont-family: \"Times New Roman\",serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  p.TabbedInL7, li.TabbedInL7, div.TabbedInL7 {\r\n\t\t\t\tmso-style-name: TabbedIn_L7;\r\n\t\t\t\tmargin-top: 0in;\r\n\t\t\t\tmargin-right: 0in;\r\n\t\t\t\tmargin-bottom: 12.0pt;\r\n\t\t\t\tmargin-left: 4.0in;\r\n\t\t\t\ttext-align: justify;\r\n\t\t\t\ttext-justify: inter-ideograph;\r\n\t\t\t\ttext-indent: -.5in;\r\n\t\t\t\tfont-size: 12.0pt;\r\n\t\t\t\tfont-family: \"Times New Roman\",serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  p.TabbedInL8, li.TabbedInL8, div.TabbedInL8 {\r\n\t\t\t\tmso-style-name: TabbedIn_L8;\r\n\t\t\t\tmargin-top: 0in;\r\n\t\t\t\tmargin-right: 0in;\r\n\t\t\t\tmargin-bottom: 12.0pt;\r\n\t\t\t\tmargin-left: 4.5in;\r\n\t\t\t\ttext-align: justify;\r\n\t\t\t\ttext-justify: inter-ideograph;\r\n\t\t\t\ttext-indent: -.5in;\r\n\t\t\t\tfont-size: 12.0pt;\r\n\t\t\t\tfont-family: \"Times New Roman\",serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  p.TabbedInL9, li.TabbedInL9, div.TabbedInL9 {\r\n\t\t\t\tmso-style-name: TabbedIn_L9;\r\n\t\t\t\tmargin-top: 0in;\r\n\t\t\t\tmargin-right: 0in;\r\n\t\t\t\tmargin-bottom: 12.0pt;\r\n\t\t\t\tmargin-left: 5.0in;\r\n\t\t\t\ttext-align: justify;\r\n\t\t\t\ttext-justify: inter-ideograph;\r\n\t\t\t\ttext-indent: -.5in;\r\n\t\t\t\tfont-size: 12.0pt;\r\n\t\t\t\tfont-family: \"Times New Roman\",serif;\r\n\t\t\t  }\r\n\r\n\t\t\t  .MsoChpDefault {\r\n\t\t\t\tfont-family: \"Arial\",sans-serif;\r\n\t\t\t  }\r\n\t\t\t  /* Page Definitions */\r\n\t\t\t  @page WordSection1 {\r\n\t\t\t\tsize: 8.5in 11.0in;\r\n\t\t\t\tmargin: 1.0in 1.0in 1.0in 1.0in;\r\n\t\t\t  }\r\n\r\n\t\t\t  div.WordSection1 {\r\n\t\t\t\tpage: WordSection1;\r\n\t\t\t  }\r\n\t\t\t  /* List Definitions */\r\n\t\t\t  ol {\r\n\t\t\t\tmargin-bottom: 0in;\r\n\t\t\t  }\r\n\r\n\t\t\t  ul {\r\n\t\t\t\tmargin-bottom: 0in;\r\n\t\t\t  }\r\n\t\t\t  -->\r\n\t\t    </style>\r\n\r\n\t\t  </head>\r\n\r\n\t\t  <body lang=EN-US link=blue vlink=purple>\r\n\r\n\t\t    <div class=WordSection1>\r\n\r\n\t\t      <p class=KBody align=center style='text-align:center;line-height:normal'>\r\n\t\t        <b>\r\n\t\t          <span style='font-size:12.0pt;font-family:\"Times New Roman\",serif'>\r\n\t\t            PEGASUS TRANSTECH, LLC<br>\r\n\t\t            Command Center – End User License Agreement\r\n\t\t          </span>\r\n\t\t        </b>\r\n\t\t      </p>\r\n\r\n\t\t      <p class=KBody style='line-height:normal'>\r\n\t\t        <span style='font-size:12.0pt;\r\nfont-family:\"Times New Roman\",serif'>\r\n\t\t\t\t  Pegasus Transtech, LLC and its affiliates (referred to herein as\r\n\t\t\t\t  “<b>Pegasus</b>” or “we”) may collect\r\n\t\t\t\t  information about you when you use our mobile applications, websites, and other\r\n\t\t\t\t  online products and services, including future products, services or features we\r\n\t\t\t\t  develop and introduce (collectively, the “<b>Services</b>”)\r\n\t\t\t\t  and through other interactions and communications you have with us. This\r\n\t\t\t\t  privacy policy applies to any person who uses our Services (”<b>Users</b>”). By using our Services, you\r\n\t\t\t\t  consent to the collection, processing and disclosure of data concerning you in\r\n\t\t\t\t  accordance with this privacy policy.\r\n\t\t        </span>\r\n\t\t      </p>\r\n\r\n\t\t\t  <p class=KBody>Last updated: June 2, 2017</p>\r\n\r\n\t\t\t  <p class=KBody><u>Collection of Information</u></p>\r\n\r\n\t\t      <p class=KBody style='line-height:normal'>\r\n\t\t        <span style='font-size:12.0pt;\r\nfont-family:\"Times New Roman\",serif'>\r\n\t\t\t\t  <u>User Provided Information</u>. We collect\r\n\t\t\t\t  information that you provide directly to us, such as when you download and register\r\n\t\t\t\t  a mobile application, when you create or modify your account, request customer\r\n\t\t\t\t  support, or otherwise communicate with us. This information may include (a)\r\n\t\t\t\t  your name, postal address, email address, telephone number, and any other\r\n\t\t\t\t  identifier by which you may be contacted online or offline (collectively, “<b>Personal Information</b>”); (b) user name,\r\n\t\t\t\t  password and other registration information; (c) transaction-related\r\n\t\t\t\t  information, such as when you download or use applications from us or register\r\n\t\t\t\t  for our Services; and (d) information you provide us when you contact us for\r\n\t\t\t\t  help; and (e) other information you choose to provide and enter into our system\r\n\t\t\t\t  when using the Services.<u><o:p></o:p></u>\t\t        </span>\r\n\t\t      </p>\r\n\r\n\t\t      <p class=KBody style='line-height:normal'>\r\n\t\t        <span style='font-size:12.0pt;\r\nfont-family:\"Times New Roman\",serif'>\r\n\t\t\t\t  <u>Automatically Collected Information</u>. In\r\n\t\t\t\t  addition, the Services may collect certain information automatically,\r\n\t\t\t\t  including, but not limited to, technical information about your device, system\r\n\t\t\t\t  and application software the type of mobile device you use, your mobile\r\n\t\t\t\t  device’s unique device ID, the IP address of your computer or mobile device,\r\n\t\t\t\t  your operating system, traffic data, logs and other communication data,\r\n\t\t\t\t  metadata and other information associated with other files stored on your\r\n\t\t\t\t  device (for example, photographs, audio and video clips, and personal contacts)\r\n\t\t\t\t  and information about the way you use the Services. The Services may also use\r\n\t\t\t\t  cookies or other passive tracking mechanisms and tools to collect information\r\n\t\t\t\t  in order to facilitate your use of the Services.\r\n\t\t        </span>\r\n\t\t      </p>\r\n\r\n\t\t      <p class=KBody style='line-height:normal'>\r\n\t\t        <span style='font-size:12.0pt;\r\nfont-family:\"Times New Roman\",serif'>\r\n\t\t\t\t  <u>Location Information</u>. Our mobile\r\n\t\t\t\t  application may collect location data from sources such as GPS, wireless\r\n\t\t\t\t  networks, cell towers, your IP address or other similar technology once you\r\n\t\t\t\t  install the application and consent to the application’s tracking your\r\n\t\t\t\t  location. If you permit our mobile application to access location services\r\n\t\t\t\t  through the permission system used by your mobile operating system, we may also\r\n\t\t\t\t  collect the location of your mobile device when the application is running in\r\n\t\t\t\t  the foreground and the background. You may choose to stop our collection of\r\n\t\t\t\t  location data through the settings that we provide in the application, or by\r\n\t\t\t\t  removing the application from your mobile device.\r\n\t\t        </span>\r\n\t\t      </p>\r\n\r\n\t\t      <p class=KBody style='line-height:normal'>\r\n\t\t        <span style='font-size:12.0pt;\r\nfont-family:\"Times New Roman\",serif'>\r\n\t\t\t\t  <u>\r\n\t\t\t\t    Information Collected from Third Party\r\n\t\t\t\t    Sources\r\n\t\t\t\t  </u>. We may also receive information from other sources and combine\r\n\t\t\t\t  that with information we collect through our Services. For example: (a) if your\r\n\t\t\t\t  employer uses one of our enterprise solutions, we may receive information about\r\n\t\t\t\t  you from your employer; (b) if you engage with a third-party site application\r\n\t\t\t\t  whose API we use (or who uses our API), we me receive information about you or\r\n\t\t\t\t  your connections from such site or application<u><o:p></o:p></u>\t\t        </span>\r\n\t\t      </p>\r\n\r\n\t\t\t  <p class=KBody style='line-height:normal'>\r\n\t\t\t    <u>\r\n\t\t\t      <span style='font-size:12.0pt;\r\nfont-family:\"Times New Roman\",serif'>Use of Information</span>\r\n\t\t\t    </u>\r\n\t\t\t  </p>\r\n\r\n\t\t      <p class=KBody style='line-height:normal'>\r\n\t\t        <span style='font-size:12.0pt;\r\nfont-family:\"Times New Roman\",serif'>\r\n\t\t\t\t  We may use the information that we collect about you to: (i)\r\n\t\t\t\t  provide you with the Services, including the mobile application, the website\r\n\t\t\t\t  and their contents, and any other products or services you request from\r\n\t\t\t\t  Pegasus; (ii) fulfill any other purpose for which you provide your information;\r\n\t\t\t\t  (iii) carry out Pegasus’s obligations and enforce Pegasus’s rights arising\r\n\t\t\t\t  under any agreement between Pegasus and you; (iv) notify you when updates to\r\n\t\t\t\t  the Services are available; (v) send or facilitate communications between you\r\n\t\t\t\t  and other users of the Services, for example between a driver and fleet\r\n\t\t\t\t  operator, at your direction in connection with your use of certain features of\r\n\t\t\t\t  the Services; and (vi) determine how the Services are being used and how they\r\n\t\t\t\t  and other products and services can be improved. Pegasus will disclose your\r\n\t\t\t\t  Personal Information for the sole purpose of providing Services to you. We may\r\n\t\t\t\t  share your Personal Information and Location Information with other users of\r\n\t\t\t\t  our Services to provide Services (a) as requested by you or (b) with your\r\n\t\t\t\t  employer (or similar entity) and any necessary third parties engaged by us or\r\n\t\t\t\t  your employer, if you participate in any of our enterprise solutions. You control\r\n\t\t\t\t  who will receive your Location Information.\r\n\t\t        </span>\r\n\t\t      </p>\r\n\r\n\t\t      <p class=KBody style='line-height:normal'>\r\n\t\t        <span style='font-size:12.0pt;\r\nfont-family:\"Times New Roman\",serif'>\r\n\t\t\t\t  Pegasus may aggregate any information that is not Personal\r\n\t\t\t\t  Information from all users of the Application (“<b >Aggregate Data</b>”). Pegasus may disclose Aggregate Data without\r\n\t\t\t\t  restriction. In addition, Pegasus may disclose your information (i) to\r\n\t\t\t\t  Pegasus’s affiliates, (ii) to contractors, service providers and other third\r\n\t\t\t\t  parties Pegasus uses to support its business, (iii) to a buyer or other\r\n\t\t\t\t  successor in the event of a merger, divestiture, restructuring, reorganization,\r\n\t\t\t\t  dissolution or other sale or transfer of some or all of Pegasus’s assets, (iv)\r\n\t\t\t\t  to fulfill the purpose for which you provide it, (v) for any other purpose\r\n\t\t\t\t  disclosed by Pegasus when you provide the information, (vi) with your consent,\r\n\t\t\t\t  (vii) to comply with any court order, law or legal process, including to\r\n\t\t\t\t  respond to any government or regulatory request, (viii) to carry out Pegasus’s\r\n\t\t\t\t  obligations and enforce Pegasus’s rights arising under this any agreement\r\n\t\t\t\t  between Pegasus and you and (ix) if Pegasus believes disclosure is necessary or\r\n\t\t\t\t  appropriate to protect the rights, property, or safety of Pegasus, our\r\n\t\t\t\t  customers or others.\r\n\t\t        </span>\r\n\t\t      </p>\r\n\r\n\t\t      <p class=KBody style='line-height:normal'>\r\n\t\t        <span style='font-size:12.0pt;\r\nfont-family:\"Times New Roman\",serif'>\r\n\t\t\t\t  Pegasus may share your information with third-party business\r\n\t\t\t\t  partners who assist Pegasus in providing its products and services; <u>provided</u>,\r\n\t\t\t\t  that Pegasus will not provide such third-party business partners with your\r\n\t\t\t\t  Personal Information without your consent.<span>\r\n\t\t\t\t  </span>Additionally, Pegasus may share your information with your employer or\r\n\t\t\t\t  any other Person for which you provide a fleet identification number in your\r\n\t\t\t\t  use of the Services.\r\n\t\t        </span>\r\n\t\t      </p>\r\n\r\n\t\t      <p class=KBody style='line-height:normal'>\r\n\t\t        <u>\r\n\t\t          <span style='font-size:12.0pt;\r\nfont-family:\"Times New Roman\",serif'>Opt-Out Rights</span>\r\n\t\t        </u>\r\n\t\t      </p>\r\n\r\n\t\t      <p class=KBody style='line-height:normal'>\r\n\t\t        <span style='font-size:12.0pt;\r\nfont-family:\"Times New Roman\",serif'>\r\n\t\t\t\t  You can stop all collection of information by the mobile\r\n\t\t\t\t  application easily by uninstalling the mobile application. You may use the\r\n\t\t\t\t  standard uninstall processes as may be available as part of your mobile device\r\n\t\t\t\t  or via the mobile application marketplace or network. You can stop collection\r\n\t\t\t\t  of information by any other of our Services by ceasing to use such Services.\r\n\t\t        </span>\r\n\t\t      </p>\r\n\r\n\t\t\t  <p class=KBody style='line-height:normal'>\r\n\t\t\t    <u>\r\n\t\t\t      <span style='font-size:12.0pt;\r\nfont-family:\"Times New Roman\",serif'>Data Retention Policy, Managing Your Information</span>\r\n\t\t\t    </u>\r\n\t\t\t  </p>\r\n\r\n\t\t      <p class=KBody style='line-height:normal'>\r\n\t\t        <span style='font-size:12.0pt;\r\nfont-family:\"Times New Roman\",serif;text-transform:uppercase'>\r\n\t\t\t\t  We will retain User Provided data for as long as you use the\r\n\t\t\t\t  Application and for a reasonable time thereafter. We will retain Automatically\r\n\t\t\t\t  Collected information for up to 24 months and thereafter may store it in\r\n\t\t\t\t  aggregate. If you’d like us to delete User Provided Data that you have provided\r\n\t\t\t\t  via the Services, please contact us at <strong>support@transflo.com</strong> and we will respond in a\r\n\t\t\t\t  reasonable time. Please note that some or all of the User Provided Data may be\r\n\t\t\t\t  required in order for the Services to function properly.\r\n\t\t        </span>\r\n\t\t      </p>\r\n\r\n\t\t      <p class=KBody style='line-height:normal'>\r\n\t\t        <u>\r\n\t\t          <span style='font-size:12.0pt;\r\nfont-family:\"Times New Roman\",serif'>Security</span>\r\n\t\t        </u>\r\n\t\t      </p>\r\n\r\n\t\t      <p class=KBody style='line-height:normal'>\r\n\t\t        <span style='font-size:12.0pt;\r\nfont-family:\"Times New Roman\",serif'>\r\n\t\t\t\t  We are concerned about safeguarding the confidentiality of your\r\n\t\t\t\t  information. We provide physical, electronic, and procedural safeguards to\r\n\t\t\t\t  protect information we process and maintain. For example, we limit access to\r\n\t\t\t\t  this information to authorized employees and contractors who need to know that\r\n\t\t\t\t  information in order to operate, develop or improve our Services. Please be\r\n\t\t\t\t  aware that, although we endeavor provide reasonable security for information we\r\n\t\t\t\t  process and maintain, no security system can prevent all potential security\r\n\t\t\t\t  breaches.\r\n\t\t        </span>\r\n\t\t      </p>\r\n\r\n\t\t      <p class=KBody style='line-height:normal'>\r\n\t\t        <u>\r\n\t\t          <span style='font-size:12.0pt;\r\nfont-family:\"Times New Roman\",serif'>Changes</span>\r\n\t\t        </u>\r\n\t\t      </p>\r\n\r\n\t\t      <p class=KBody style='line-height:normal'>\r\n\t\t        <span style='font-size:12.0pt;\r\nfont-family:\"Times New Roman\",serif'>\r\n\t\t\t\t  This Privacy Policy may be updated from time to time for any\r\n\t\t\t\t  reason. We will notify you of any changes to our Privacy Policy by posting the\r\n\t\t\t\t  new Privacy Policy here and may also inform you via email or text message. You\r\n\t\t\t\t  are advised to consult this Privacy Policy regularly for any changes, as\r\n\t\t\t\t  continued use is deemed approval of all changes.\r\n\t\t        </span>\r\n\t\t      </p>\r\n\r\n\t\t      <p class=KBody style='line-height:normal'>\r\n\t\t        <u>\r\n\t\t          <span style='font-size:12.0pt;\r\nfont-family:\"Times New Roman\",serif'>Your Consent</span>\r\n\t\t        </u>\r\n\t\t      </p>\r\n\r\n\t\t      <p class=KBody style='line-height:normal'>\r\n\t\t        <span style='font-size:12.0pt;\r\nfont-family:\"Times New Roman\",serif'>\r\n\t\t\t\t  By using the Services, you are consenting to our processing of\r\n\t\t\t\t  your information as set forth in this Privacy Policy now and as amended by us.\r\n\t\t\t\t  &quot;Processing,” means using cookies on a computer/hand held device or using\r\n\t\t\t\t  or touching information in any way, including, but not limited to, collecting,\r\n\t\t\t\t  storing, deleting, using, combining and disclosing information, all of which\r\n\t\t\t\t  activities will take place in the United States. If you reside outside the\r\n\t\t\t\t  United States your information will be transferred, processed and stored there\r\n\t\t\t\t  under United States privacy standards.\r\n\t\t        </span>\r\n\t\t      </p>\r\n\r\n\t\t      <p class=KBody style='line-height:normal'>\r\n\t\t        <u>\r\n\t\t          <span style='font-size:12.0pt;\r\nfont-family:\"Times New Roman\",serif'>Contact us</span>\r\n\t\t        </u>\r\n\t\t      </p>\r\n\r\n\t\t      <p class=KBody style='line-height:normal'>\r\n\t\t        <span style='font-size:12.0pt;\r\nfont-family:\"Times New Roman\",serif'>\r\n\t\t\t\t  If you have any questions regarding privacy while using the\r\n\t\t\t\t  Application, or have questions about our practices, please contact us via email\r\n\t\t\t\t  at <strong>support@transflo.com</strong>.\r\n\t\t        </span>\r\n\t\t      </p>\r\n\r\n\t\t    </div>\r\n\r\n\t\t  </body>\r\n\r\n\t\t</html>\r\n\r\n\t  </div>\r\n    </div>\r\n  </div>\r\n</div>"

/***/ }),
/* 686 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	function __export(m) {
	    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
	}
	__export(__webpack_require__(687));
	__export(__webpack_require__(688));
	

/***/ }),
/* 687 */
/***/ (function(module, exports) {

	"use strict";
	exports.StatusFilterConst = [{
	        id: 1,
	        text: 'Available',
	        className: '-available'
	    }, {
	        id: 2,
	        text: 'InTransit',
	        className: '-transit'
	    }, {
	        id: 3,
	        text: 'Accepted',
	        className: '-accepted'
	    }, {
	        id: 4,
	        text: 'Delivered',
	        className: '-delivered'
	    }, {
	        id: 5,
	        text: 'Declined',
	        className: '-declined'
	    }, {
	        id: 6,
	        text: 'Offered',
	        className: '-offered'
	    }, {
	        id: 7,
	        text: 'Assigned',
	        className: '-assigned'
	    }];
	

/***/ }),
/* 688 */
/***/ (function(module, exports) {

	"use strict";
	exports.UStates = ['AL', 'AK', 'AS', 'AZ', 'AR', 'CA', 'CO', 'CT', 'DE', 'DC', 'FM', 'FL', 'GA', 'GU', 'HI', 'ID', 'IL', 'IN', 'IA', 'KS', 'KY', 'LA', 'ME', 'MH', 'MD', 'MA', 'MI', 'MN', 'MS', 'MO', 'MT', 'NE', 'NV', 'NH', 'NJ', 'NM', 'NY', 'NC', 'ND', 'MP', 'OH', 'OK', 'OR', 'PW', 'PA', 'PR', 'RI', 'SC', 'SD', 'TN', 'TX', 'UT', 'VT', 'VI', 'VA', 'WA', 'WV', 'WI', 'WY'];
	

/***/ }),
/* 689 */
/***/ (function(module, exports) {

	module.exports = "<header class=\"page-header flex items-center\" xmlns=\"http://www.w3.org/1999/html\" xmlns=\"http://www.w3.org/1999/html\">\r\n  <h1 class=\"pr3\">Loads</h1>\r\n  <div [hidden]=\"isCommonCarrier\">\r\n    <a class=\"button -primary\" [routerLink]=\"['NewLoad', {divId: divisionId}]\"> <span class=\"plus\">+</span>Create new load</a>\r\n  </div>\r\n</header>\r\n<header class=\"page-header\">\r\n  <form action=\"\" class=\"filters-form\" role=\"form\" (ngSubmit)=\"submit($event)\" novalidate>\r\n    <div class=\"form-group flex\">\r\n      <div class=\"col-4 pr3\">\r\n        <label class=\"form-label\">Status</label>\r\n        <transflo-dropdown [list]=\"filterStatus\" (listChanged)=\"statusChanged($event)\" [selectedList]=\"statusFilter\" valueField=\"name\" placeholder=\"Select statuses\"></transflo-dropdown>\r\n      </div>\r\n      <div class=\"col-4 pr4 pl3\" [ngClass]=\"{'col-8': !isCarrier}\">\r\n        <label class=\"form-label\" for=\"filter_identifiers\">Parameters</label>\r\n        <input autocomplete=\"off\" class=\"form-control\" type=\"text\" placeholder=\"Load #, BOL #, attributes\" id=\"filter_identifiers\" [(ngModel)]=\"paramsFilter\" />\r\n      </div>\r\n\t  <!--\r\n      <div class=\"col-4 pr3\" [hidden]=\"isCarrier\">\r\n        <label class=\"form-label\">Broker</label>\r\n        <transflo-dropdown [list]=\"filterDivision\" (listChanged)=\"divisionChanged($event)\" [selectedList]=\"divisionFilter\" valueField=\"name\" placeholder=\"Select brokers\"></transflo-dropdown>\r\n      </div>\r\n\t  -->\r\n      <div>\r\n        <label class=\"form-label\">&nbsp;</label>\r\n        <button class=\"button\" type=\"submit\" (click)=\"submit($event)\">Apply</button>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group -x3 filter-container\" [hidden]=\"!filtersOpened\">\r\n      <div class=\"flex\">\r\n        <div class=\"col-4 pr4\">\r\n          <div class=\"form-label\">Origin</div>\r\n          <div class=\"form-group flex\">\r\n            <div class=\"col-4\">\r\n              <select class=\"form-control\" [(ngModel)]=\"stateFilterShipping\" placeholder=\"State\" required>\r\n                <option value=\"\" hidden disabled selected>State</option>\r\n                <option *ngFor=\"let state of states\" [ngValue]=\"state\">{{state}}</option>\r\n              </select>\r\n            </div>\r\n            <div class=\"col-8 pl2\">\r\n              <input autocomplete=\"off\" class=\"form-control\" placeholder=\"City\" [(ngModel)]=\"cityFilterShipping\"/>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group col-10\">\r\n            <div class=\"form-label\">Shipping</div>\r\n            <input autocomplete=\"off\" class=\"form-control -select\" placeholder=\"Select dates\" range-picker [daterange]=\"filterDateShipping\" (daterangechanged)=\"filterChanged($event, 'shipping')\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"col-4 pr4\">\r\n          <div class=\"form-label\">Destination</div>\r\n          <div class=\"form-group flex\">\r\n            <div class=\"col-4\">\r\n              <select class=\"form-control\" [(ngModel)]=\"stateFilterDelivery\" placeholder=\"State\" required>\r\n                <option value=\"\" hidden disabled selected>State</option>\r\n                <option *ngFor=\"let state of states\" [ngValue]=\"state\">{{state}}</option>\r\n              </select>\r\n            </div>\r\n            <div class=\"col-8 pl2\">\r\n              <input autocomplete=\"off\" class=\"form-control\" placeholder=\"City\" [(ngModel)]=\"cityFilterDelivery\"/>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group col-10\">\r\n            <div class=\"form-label\">Delivery</div>\r\n            <input autocomplete=\"off\" class=\"form-control -select\" placeholder=\"Select dates\" range-picker [daterange]=\"filterDateDelivery\" (daterangechanged)=\"filterChanged($event, 'delivery')\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"col-4\">\r\n          <div class=\"form-group -x3\" [hidden]=\"!isCarrier\">\r\n            <label class=\"form-label\">Offered to Driver</label>\r\n            <transflo-dropdown [list]=\"drivers\" (listChanged)=\"driverChanged($event, 'offered')\" [selectedList]=\"offeredDriversFilter\" valueField=\"text\" placeholder=\"Select driver\"></transflo-dropdown>\r\n          </div>\r\n          <div class=\"form-group\"  [hidden]=\"!isCarrier\">\r\n            <label class=\"form-label\">Assigned to Driver</label>\r\n            <transflo-dropdown [list]=\"drivers\" (listChanged)=\"driverChanged($event, 'assigned')\" [selectedList]=\"assignedDriversFilter\" valueField=\"text\" placeholder=\"Select driver\"></transflo-dropdown>\r\n          </div>\r\n          <div class=\"form-group\"  [hidden]=\"!isCarrier\">\r\n            <label class=\"form-label\">Assigned to Carrier</label>\r\n            <transflo-dropdown [list]=\"carriers\" (listChanged)=\"carrierChanged($event, 'assigned')\" [selectedList]=\"assignedCarriersFilter\" valueField=\"text\" placeholder=\"Select carrier\"></transflo-dropdown>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <button class=\"filters-clear\" (click)=\"resetFilters($event)\">Clear Filters</button>\r\n    </div>\r\n    <button type=\"button\" class=\"filters-button\" [ngClass]=\"{'-active': hasFilters()}\" (click)=\"filtersOpened = true\" [hidden]=\"filtersOpened\">More Filters</button>\r\n    <button type=\"button\" class=\"filters-button -opened\" (click)=\"filtersOpened = false\" [hidden]=\"!filtersOpened\">Less Filters</button>\r\n  </form>\r\n</header>\r\n\r\n<div class=\"page-content\">\r\n  <div class=\"loading-text\" [hidden]=\"!loading\">Loading...</div>\r\n  <table class=\"table table-hover\" [hidden]=\"loading || !page.length\">\r\n    <thead>\r\n      <tr>\r\n        <th><a (click)=\"sortingField = 'shipping'; sortingIsAsc =! sortingIsAsc; submit($event);\" [ngClass]=\"{'-asc': sortingIsAsc, '-desc': !sortingIsAsc, 'table-head-sort': sortingField == 'shipping'}\">Shipping</a></th>\r\n        <th><a (click)=\"sortingField = 'delivery'; sortingIsAsc =! sortingIsAsc; submit($event);\" [ngClass]=\"{'-asc': sortingIsAsc, '-desc': !sortingIsAsc, 'table-head-sort': sortingField == 'delivery'}\">Delivery</a></th>\r\n        <th>Origin</th>\r\n        <th class=\"-half\"><span class=\"table-head-short\">Stops</span></th>\r\n        <th class=\"-half\">Destination</th>\r\n        <th>Identifiers</th>\r\n        <th [hidden]=\"isCarrier\">Carrier</th>\r\n        <th [hidden]=\"!isCarrier\">Broker</th>\r\n        <th [hidden]=\"!isCarrier\">Driver</th>\r\n\t    <th [hidden]=\"isCarrier\"></th>\r\n        <th>Status</th>\r\n\t\r\n        <th >Attrs</th>\r\n        <th width=\"1%\" class=\"-half\"></th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <!--Single load-->\r\n      <tr *ngFor=\"let load of page\" [ngClass]=\"{'-new': load.marked}\" (click)=\"gotoDetails(load.id, $event)\">\r\n        <td>\r\n          <transflo-date class=\"height100\" [date]=\"load.firstStop.date\" [time]=\"load.firstStop.time\"></transflo-date>\r\n        </td>\r\n        <td>\r\n          <transflo-date [date]=\"load.lastStop.date\" [time]=\"load.lastStop.time\"></transflo-date>\r\n        </td>\r\n        <td>{{load.firstStop.addressLines.join(' ')}}, {{load.firstStop.city}} {{load.firstStop.state}} {{load.firstStop.postalCode}}</td>\r\n        <td class=\"-half\">\r\n          <span class=\"label-count -red pointer\"  (click)=\"getLoad(load, $event); loadDetailsPopup.show()\" [hidden]=\"load.numberOfStops <= 1\">{{load.numberOfStops}}</span>\r\n        </td>\r\n        <td class=\"-half\">{{load.lastStop.addressLines.join(' ')}}, {{load.lastStop.city}} {{load.lastStop.state}} {{load.lastStop.postalCode}}</td>\r\n        <td>\r\n          <div class=\"form-group\" [hidden]=\"!isCarrier\">\r\n            <span class=\"label-title\">Load#</span>\r\n            <span class=\"nowrap\">{{load.carrierLoadNumber}}</span>\r\n          </div>\r\n          <div class=\"form-group\" [hidden]=\"isCarrier\">\r\n            <span class=\"label-title\">Load#</span>\r\n            <span class=\"nowrap\">{{load.brokerLoadNumber}}</span>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <span class=\"label-title\">BOL</span>\r\n            <span class=\"nowrap\">{{load.bolNumber}}</span>\r\n          </div>\r\n        </td>\r\n\t\t<!--Broker carrier-->\r\n        <td [hidden]=\"isCarrier\">\r\n          <div class=\"form-group\">\r\n            <span *ngIf=\"(!load.brokerTenderingInfo[0])\" class=\"label-title nowrap\">\r\n          \r\n\t\t\t  <button class=\"button -outline -xs\" type=\"button\" *ngIf=\"(!load.carrierDivision || !load.carrierDivision.code)\" [disabled]=\"load.status == 'Delivered'\" (click)=\"gotoTendering(load.id, $event)\"><span class=\"plus\">+</span> Assign</button>\r\n            </span>\r\n            \r\n          </div>\r\n          <div class=\"form-group -x05\">\r\n            <div class=\"label-title\">{{load.carrierDivision && load.carrierDivision.code}}</div>\r\n            <div>\r\n\t\t\t  <div [hidden]=\"!load.brokerTenderingInfo[0]\">\r\n\t\t\t    <span class=\"label-title nowrap\">\r\n\t\t\t      Assigned to&nbsp;\r\n\t\t\t      <button class=\"button -outline -xs -icon\" type=\"button\" title=\"Edit\" (click)=\"gotoTendering(load.id, $event)\">\r\n\t\t\t        <svg class=\"icon -pen\"><use xlink:href=\"#svg_pen\" /></svg>\r\n\t\t\t      </button>\r\n\t\t\t    </span>\r\n\t\t\t\t{{load.brokerTenderingInfo[0] ? load.brokerTenderingInfo[0].name : ''}}\r\n\t\t\t  </div>\r\n\t\t\t</div>\r\n          </div>\r\n        </td>\r\n        <td [hidden]=\"!isCarrier\">\r\n          <div class=\"label-title\">{{load.brokerTenderingInfo[0] ? load.brokerTenderingInfo[0].name : '' }}</div>\r\n\t\t</td>\r\n        <td>\r\n          <transflo-drivers (onToggle)=\"setOpenedPopups($event)\"  [drivers]=\"load.carrierTenderingInfo\" [isCarrier]=\"isCarrier\" [divisionId]=\"divisionId\" [loadId]=\"load.id\" [loadStatus]=\"load.status\"></transflo-drivers>\r\n        </td>\r\n        <td >\r\n          <span class=\"nowrap\" [ngClass]=\"{'label-green': load.status == 'Available', 'label-red': load.status == 'Declined'}\">{{load.status}}</span>\r\n\t\t\r\n        </td>\r\n        <td >\r\n          <transflo-attributes [attrs]=\"load.loadAttributes\" (onToggle)=\"setOpenedPopups($event)\" >{{load.loadAttributes}}</transflo-attributes>\r\n        </td>\r\n\t\t<td></td>\r\n        <td class=\"-half\">\r\n          <div class=\"height100\">\r\n            <div class=\"dropdown\" dropdown (onToggle)=\"setOpenedPopups($event)\" keyboardNav=\"true\" autoClose=\"outsideClick\">\r\n              <button class=\"table-actions\" title=\"Actions\" type=\"button\" dropdownToggle>&bull;</button>\r\n              <ul class=\"dropdown-menu -right dropdown-load\" role=\"menu\" dropdownMenu>\r\n                <li role=\"menuitem\">\r\n                  <a class=\"dropdown-item\" (click)=\"getLink(load, $event);\" dropdownToggle>\r\n                    Share\r\n                  </a>\r\n                </li>\r\n                <li role=\"menuitem\">\r\n\t\t\t\t          <a class=\"dropdown-item\" (click)=\"editLoad(load, $event)\" [hidden]=\"load.status=='Delivered'\">Edit</a></li>\r\n                <li role=\"menuitem\" [hidden]=\"isCommonCarrier\" [ngClass]=\"{'-disabled': isCommonCarrier}\">\r\n\t\t\t\t          <a class=\"dropdown-item\" (click)=\"cloneLoad(load, $event)\">Clone</a></li>\r\n                <li role=\"menuitem\" [hidden]=\"isCarrier && load.brokerDivision\" [ngClass]=\"{'-disabled': load.status == 'InTransit'}\">\r\n                  <a class=\"dropdown-item\" (click)=\"showMoveLoadPopup(load, $event)\" dropdownToggle>\r\n                    Move to division\r\n                  </a>\r\n                </li>\r\n                <!-- Document scans, remove comments below in further releases -->\r\n                <li (mouseenter)=\"load.showDocuments=true\" class=\"dropdown-submenu\" (mouseleave)=\"load.showDocuments=false\" role=\"menuitem\">\r\n                  <a dropdownToggle>View Document</a>\r\n                  <ul type=\"1\" class=\"dropdown-menu  dropdown-load\"  *ngIf=\"load.showDocuments\">\r\n                    <li  *ngFor=\"let ds of load.documentScans\">\r\n                      <a class=\"dropdown-item\" [href]=\"ds.url\">{{ds.label.split('|')[0]}}</a>\r\n                    </li>\r\n                  </ul>\r\n                </li>\r\n                <!--<li role=\"menuitem\" *ngFor=\"let link of load.menu\">\r\n                  <a class=\"dropdown-item\" dropdownToggle href=\"{{link.url}}\" target=\"_blank\">{{link.name}}</a>\r\n                </li>-->\r\n                <li role=\"menuitem\" [hidden]=\"isCommonCarrier\" [ngClass]=\"{'-disabled': isCommonCarrier}\">\r\n\t\t\t\t  <a class=\"dropdown-item label-red\" (click)=\"deleteLoad(load, $event)\">Delete</a></li>\r\n              </ul>\r\n            </div>\r\n\r\n            <div class=\"dropdown-menu -right -xlg2 -shown\" role=\"menu\" [hidden]=\"loadSharePopupId != load.id\" (click)=\"formClicked($event)\">\r\n              <h2>Tracking Link</h2>\r\n              <div class=\"form-group\">\r\n                <input autocomplete=\"off\" class=\"form-control\" [(ngModel)]=\"load.trackingLink\" readonly />\r\n              </div>\r\n              <div class=\"form-group -x2 nowrap flex items-center\">\r\n                <div class=\"bold label-danger pr2\">Expires</div>\r\n                <div class=\"pr2 col-4 flex\">\r\n                  <div class=\"col-5 -merged\">\r\n                    <input autocomplete=\"off\" type=\"number\" class=\"form-control\" [value]=\"3\" [(ngModel)]=\"load.expired\"/>\r\n                  </div>\r\n                  <div class=\"col-7 -merged\">\r\n                    <select class=\"form-control\" [(ngModel)]=\"load.time\">\r\n                      <option>hours</option>\r\n                      <option>days</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n                <div class=\"flex-auto\">after the load arrives at the destination.</div>\r\n              </div>\r\n              <hr />\r\n              <div class=\"right-align\" [hidden]=\"load.emailTracking || load.trackedEmails.length\">\r\n                <button type=\"button\" class=\"button -link\" (click)=\"load.emailTracking = true\">Email Tracking Link</button>\r\n              </div>\r\n              <div class=\"flex items-baseline\" [hidden]=\"!load.emailTracking && !load.trackedEmails.length\">\r\n                <div class=\"pr2 nowrap\">Email tracking to</div>\r\n                <div class=\"pr2 flex-auto\">\r\n                  <div xmlns=\"http://www.w3.org/1999/html\" class=\"form-control multiple\">\r\n                    <!--template bindings={}-->\r\n                    <span class=\"multiple-selected\" *ngFor=\"let email of load.trackedEmails; let idx = index\">\r\n                      <span>{{email}}</span>\r\n                      <span class=\"multiple-selected-delete\" (click)=\"removeEmail(load, idx)\" title=\"Delete\">×</span>\r\n                    </span>\r\n                    <form (submit)=\"addEmail(load, true)\">\r\n                      <input autocomplete=\"off\" (keyup)=\"keyUp(load, $event)\" class=\"multiple-field ng-pristine ng-valid ng-touched\" type=\"text\" placeholder=\"Type email\" [(ngModel)]=\"load.newEmail\" (ngModelChange)=\"addEmail(load)\" (blur)=\"addEmail(load, true)\">\r\n                    </form>\r\n                  </div>\r\n\t\t\t\t  <br />\r\n\t\t\t\t  <div class=\"form-group\">\r\n\t\t\t\t    <label for=\"additional_information\" class=\"pr2 nowrap\">Personalize Message</label>\r\n\t\t\t\t    <div class=\"pr2 flex-auto\">\r\n\t\t\t\t      <textarea class=\"form-control\" [(ngModel)]=\"info\" rows=\"4\" maxlength=\"1000\" placeholder=\"Additional Message\"></textarea>\r\n\t\t\t\t    </div>\r\n\t\t\t\t  </div>\r\n                </div>\r\n                <button class=\"button -outline self-end\" type=\"button\" (click)=\"sendTackingLink(load)\">Send</button>\r\n              </div>\r\n            </div>\r\n            <!-- Document scans, remove comments below in further releases -->\r\n            <!--div class=\"dropdown-menu -right -shown\" role=\"menu\" [hidden]=\"docScansPopupId != load.id\">\r\n              <ul class=\"menu -overflow\">\r\n                <li *ngFor=\"let scan of load.documentScans\" role=\"menuitem\">\r\n                    <a class=\"dropdown-item\" href=\"{{scan.url}}\" target=\"_blank\">{{scan.label}}\r\n                    </a>\r\n                </li>\r\n              </ul>\r\n            </div-->\r\n\r\n            <div class=\"dropdown-menu -right -lg2 -shown\" [hidden]=\"loadMovePopupId != load.id\" (click)=\"formClicked($event)\">\r\n              <h2>Move load to other division</h2>\r\n              <div class=\"form-group flex\">\r\n                <div class=\"col-8 pr2\">\r\n                  <select [hidden]=\"isCarrier\" class=\"form-control\" [(ngModel)]=\"moveDivision\">\r\n                    <option *ngFor=\"let div of brokersForMove\" [ngValue]=\"div\">{{div.text}}</option>\r\n                  </select>\r\n                  <select [hidden]=\"!isCarrier\" class=\"form-control\" [(ngModel)]=\"moveDivision\">\r\n                    <option *ngFor=\"let div of carriersForMove\" [ngValue]=\"div\">{{div.text}}</option>\r\n                  </select>\r\n                </div>\r\n                <div class=\"col-4\">\r\n                  <button class=\"button -outline -block\" type=\"button\" (click)=\"moveToDivision()\">Move Load</button>\r\n                </div>\r\n              </div>\r\n              <hr />\r\n              <!--div class=\"form-group\">\r\n                <strong class=\"label-danger\">Driver</strong> assignation <strong class=\"label-danger\">will be dropped</strong>\r\n                because Sebastian P. Fletcher isn’t related to Div NY.\r\n              </div-->\r\n            </div>\r\n          </div>\r\n        </td>\r\n      </tr>\r\n      <!--Line-->\r\n    </tbody>\r\n  </table>\r\n  <div class=\"pagination\" [hidden]=\"loading || !page.length\">\r\n    <div class=\"pagination-alert\" [hidden]=\"!overLimit\">\r\n      <strong class=\"medium label-danger\">Limit of 200 loads reached.</strong>\r\n      Please, refine the filter settings. There are more loads but we can’t show them.\r\n    </div>\r\n    <a (click)=\"showAll()\" [hidden]=\"showPagination\" [ngClass]=\"{'-active': shownAll}\">Show All</a>\r\n    <a (click)=\"prevPage()\" [hidden]=\"showPagination\" class=\"-prev\" [ngClass]=\"{'-disabled' : pageNum == 0}\" title=\"Previous\"></a>\r\n    <a (click)=\"setPage(idx)\" [hidden]=\"showPagination\" *ngFor=\"let paginator of pages; let idx = index;\" [ngClass]=\"{'-active' : idx == pageNum && !shownAll}\">{{idx + 1}}</a>\r\n    <a (click)=\"nextPage()\" class=\"-next\" [hidden]=\"showPagination\" [ngClass]=\"{'-disabled' : pageNum == totalPages - 1}\" title=\"Next\"></a>\r\n  </div>\r\n  <div class=\"center p4 label-title\" [hidden]=\"loading || page.length\">\r\n    <h2 class=\"mb2\">No loads found for applied filtering conditions</h2>\r\n    <h3>Please refine filters</h3>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n<!-- load details modal -->\r\n<div bsModal #loadDetailsPopup=\"bs-modal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\">\r\n    <form action=\"\" novalidate>\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <button type=\"button\" class=\"modal-close\" aria-label=\"Close\" (click)=\"loadDetailsPopup.hide();\" title=\"Close\">&times;</button>\r\n          <h1 class=\"modal-title\">Load #{{currentLoad.bolNumber}} Trip</h1>\r\n        </div>\r\n        <div class=\"modal-body\" *ngIf=\"!loadLoading\">\r\n          <transflo-skeleton [load]=\"currentLoad\"></transflo-skeleton>\r\n        </div>\r\n        <div class=\"modal-body\" *ngIf=\"loadLoading\">\r\n          <span>Loading...</span>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n\r\n\r\n<!--div class=\"modal-backdrop in fade\" tabindex=\"-1\" role=\"dialog\" [hidden]=\"!loadMovePopupShown\" (click)=\"hideMoveLoadPopup()\">\r\n    <div class=\"form-group flex\" (click)=\"formClicked($event);\">\r\n      <h1>Move load to other division</h1>\r\n      <div>{{moveDivision.text}}</div>\r\n      <select [hidden]=\"isCarrier\" [(ngModel)]=\"moveDivision\">\r\n        <option *ngFor=\"let div of filterDivision\" [ngValue]=\"div\">{{div.text}}</option>\r\n      </select>\r\n      <select [hidden]=\"!isCarrier\" [(ngModel)]=\"moveDivision\">\r\n        <option *ngFor=\"let div of carriers\" [ngValue]=\"div\">{{div.text}}</option>\r\n      </select>\r\n      <button (click)=\"moveToDivision()\">Move load</button>\r\n      <p>Driver changed</p>\r\n\r\n    </div>\r\n</div-->"

/***/ }),
/* 690 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	function __export(m) {
	    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
	}
	__export(__webpack_require__(691));
	

/***/ }),
/* 691 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var core_1 = __webpack_require__(2);
	var router_deprecated_1 = __webpack_require__(281);
	var index_1 = __webpack_require__(665);
	var index_2 = __webpack_require__(670);
	var common_1 = __webpack_require__(182);
	var ng2_bootstrap_1 = __webpack_require__(345);
	var index_3 = __webpack_require__(635);
	var index_4 = __webpack_require__(659);
	var index_5 = __webpack_require__(692);
	var services_1 = __webpack_require__(508);
	var moment = __webpack_require__(529);
	var _ = __webpack_require__(642);
	var NewLoadComponent = (function () {
	    function NewLoadComponent(userService, router, divisionService, loadsService, localStorageService) {
	        this.userService = userService;
	        this.router = router;
	        this.divisionService = divisionService;
	        this.loadsService = loadsService;
	        this.localStorageService = localStorageService;
	        this.scrollEmitter = new core_1.EventEmitter();
	        this.loadAttributes = [];
	        this.shipments = [];
	        this.stops = [];
	        this.lastUrl = {};
	        this.dontCheck = false;
	        this.idCounter = 0;
	        this.emailsList = [];
	        this.readOnly = false;
	        this.serviceStopButtonsDisabled = false;
	        this.searchStopInProgress = false;
	        this.stringValue = '';
	        this.searchStopsStr = '';
	        this.divisionAddresses = [];
	        this.addresses = [];
	        this.filteredStops = [];
	        this.timeValue = '';
	        this.detailsOpened = true;
	        this.currentStopPickUp = {};
	        this.currentStopDropOff = {};
	        this.currentStop = {};
	        this.selectedStop = {};
	        this.currentServiceStop = {};
	        this.prevStop = {};
	        this.attributeButtonDisabled = true;
	        this.emailValid = true;
	        this.errors = [];
	        this.errorMessage = '';
	        this.loadErrors = [];
	        this.loadValidationErrors = {};
	        this.loading = false;
	        this.allAttributes = [];
	        this.loadAttrType = 'string';
	        this.times = [{
	                name: 'Morning'
	            }, {
	                name: 'Evening'
	            }, {
	                name: 'Night'
	            }];
	        this.imperialMeasurments = ['lbs', 'ft', 'ft³'];
	        this.standartEvents = [3, 8];
	        this.weightUnits = ['lbs', 'kg'];
	        this.heightUnits = ['ft', 'cm'];
	        this.volumeUnits = ['ft³', 'cm³'];
	        this.packageUnits = ['box', 'crafted', 'drum', 'barrel', 'palette', 'upackaged', 'skid'];
	        this.feetToCm = 30.48;
	        this.lbsToKg = 0.453592;
	        this.ft3toCm3 = 28316.8;
	        // We dont need to send request after each scroll -- just debounce it.
	        this.onScrollAddressesDebounced = _.debounce(this.onScrollAddresses.bind(this), 200);
	    }
	    ;
	    NewLoadComponent.prototype.isInvalid = function () {
	        var errors = (this.shipments && !this.shipments.length) || !this.emailValid;
	        return errors;
	    };
	    NewLoadComponent.prototype.onScrollAddresses = function (event) {
	        var element = event.target;
	        if ((Math.trunc(element.scrollTop) + element.clientHeight + 10) >= element.scrollHeight) {
	            var lastId = this.addresses[this.addresses.length - 1] && this.addresses[this.addresses.length - 1].id;
	            this.divisionService
	                .getAddresses(this.divisionId, this.searchStopsStr, lastId)
	                .then(this.extractAddresses.bind(this));
	        }
	    };
	    ;
	    NewLoadComponent.prototype.generateTempId = function () {
	        return -++this.idCounter;
	    };
	    ;
	    NewLoadComponent.prototype.scrollBottom = function () {
	        this.scrollEmitter.emit({
	            height: 0
	        });
	    };
	    ;
	    NewLoadComponent.prototype.routerOnActivate = function (next, prev) {
	        if (prev) {
	            this.lastUrl = {
	                name: prev.routeName,
	                params: prev.params
	            };
	        }
	        else {
	            this.lastUrl = {
	                name: 'Loads',
	                params: {
	                    divId: next.params.divId
	                }
	            };
	        }
	    };
	    ;
	    NewLoadComponent.prototype.emailsChanged = function (emailOutput) {
	        if (emailOutput) {
	            this.emailValid = emailOutput.emailValid;
	            this.emailsList = emailOutput.emailsList;
	        }
	    };
	    ;
	    NewLoadComponent.prototype.openPopupWithEntityId = function (id, entityType) {
	        var entity;
	        if (entityType == 'shipment') {
	            entity = _.find(this.shipments, function (ship) { return (ship.id == id || ship._id == id); });
	            entity.errors = _.filter(this.errors, function (error) { return error.objectId == id && error.entityType == 'shipment'; });
	            this.startEditShipment(entity);
	            this.shipmentModal.show();
	        }
	        if (entityType == 'stop') {
	            entity = this.stops.find(function (stop) { return (stop.id == id || stop.stop_id == id || stop._id == id); });
	            entity.errors = _.filter(this.errors, function (error) { return error.objectId == id && error.entityType == 'stop'; });
	            this.selectStop(entity);
	            if (entity.dropoffShipments.length || entity.pickupShipments.length) {
	                this.stopModal.show();
	            }
	            else {
	                this.serviceStopModal.show();
	            }
	        }
	    };
	    ;
	    NewLoadComponent.prototype.loadChanged = function () {
	        if (!window.onbeforeunload) {
	            window.onbeforeunload = function (event) {
	                var dialogText = 'Dialog text here';
	                event.returnValue = dialogText;
	                return dialogText;
	            };
	        }
	    };
	    ;
	    NewLoadComponent.prototype.routerCanDeactivate = function (seg) {
	        if (!this.dontCheck) {
	            this.dontCheck = false;
	            return confirm('You are about to leave this page, all data will be lost. Are you sure?');
	        }
	    };
	    ;
	    NewLoadComponent.prototype.ngOnDestroy = function () {
	        window.onbeforeunload = null;
	    };
	    ;
	    NewLoadComponent.prototype.ngOnInit = function () {
	        this.divisionId = +this.router.root.currentInstruction.urlPath.split('/')[1];
	        this.loadId = +this.router.root.currentInstruction.urlPath.split('/')[3];
	        this.loadChanged();
	        if (this.localStorageService.getItem('loadItem')) {
	            this.deserealizeFromLocalStorage(JSON.parse(this.localStorageService.getItem('loadItem')));
	            this.localStorageService.clearItem('loadItem');
	        }
	        else {
	            if (this.loadId) {
	                this.loading = true;
	                this.getNotifications();
	                this.loadsService.getLoad(this.loadId, this.divisionId)
	                    .then(this.deserealizeLoad.bind(this));
	            }
	        }
	        this.userService.getUser(this.setIsCarrier.bind(this));
	        this.divisionService.getAttributes(this.divisionId)
	            .then(this.extractAttributes.bind(this));
	    };
	    ;
	    NewLoadComponent.prototype.setIsCarrier = function (user) {
	        var _this = this;
	        var division = user.divisions.find(function (div) {
	            return div.id == _this.divisionId;
	        });
	        this.isCarrier = division.type == 'carrier';
	        this.isCommonCarrier = division.isCommonCarrier;
	        this.divisionCode = division.code;
	        if (!this.loadId) {
	            this.emailsList.push(user.email);
	        }
	    };
	    ;
	    NewLoadComponent.prototype.searchStop = function () {
	        var _this = this;
	        if (!this.searchStopInProgress) {
	            this.searchStopInProgress = true;
	            this.addresses = [];
	            if (this.searchStopsStr && this.searchStopsStr != '') {
	                var lastId = this.addresses[this.addresses.length - 1] && this.addresses[this.addresses.length - 1].id;
	                this.filteredStops = this.stops.filter(function (el) {
	                    var addresses = el.addressLines.map(function (adr) {
	                        return adr.val;
	                    });
	                    return (addresses.join(' ').toUpperCase().indexOf(_this.searchStopsStr.toUpperCase()) != -1);
	                });
	                this.divisionService
	                    .getAddresses(this.divisionId, this.searchStopsStr, null)
	                    .then(this.extractAddresses.bind(this));
	            }
	            else {
	                this.filteredStops = this.stops.slice(0);
	                this.divisionService
	                    .getAddresses(this.divisionId, this.searchStopsStr, null)
	                    .then(this.extractAddresses.bind(this));
	            }
	        }
	    };
	    ;
	    NewLoadComponent.prototype.getAddress = function (stop) {
	        var result = [];
	        for (var _i = 0, _a = stop.addressLines; _i < _a.length; _i++) {
	            var adrLine = _a[_i];
	            result.push(adrLine.val);
	        }
	        ;
	        return result.join(', ');
	    };
	    ;
	    NewLoadComponent.prototype.fillStop = function (data, stop) {
	        stop.addressLines = [];
	        for (var i = 0; i < data.addressLines.length; i++) {
	            if (!stop.addressLines[i]) {
	                stop.addressLines.push({
	                    val: ''
	                });
	            }
	            stop.addressLines[i].val = data.addressLines[i].val;
	        }
	        stop.date = data.date;
	        stop.time = data.time;
	        stop.city = data.city;
	        stop.state = data.state;
	        stop.country = data.country;
	        stop.postalCode = data.postalCode;
	        stop.contactName = data.contactName;
	        stop.company = data.company;
	        stop.phoneNumber = data.phoneNumber;
	        this.loadChanged();
	    };
	    ;
	    NewLoadComponent.prototype.fillAddress = function (data, stop) {
	        stop.addressLines = [];
	        for (var i = 0; i < data.addressLines.length; i++) {
	            if (!stop.addressLines[i]) {
	                stop.addressLines.push({
	                    val: ''
	                });
	            }
	            stop.addressLines[i].val = data.addressLines[i];
	        }
	        stop.city = data.city;
	        stop.state = data.state;
	        stop.country = data.country;
	        stop.postalCode = data.postalCode;
	        stop.contactName = data.contactName;
	        stop.company = data.company;
	        stop.phoneNumber = data.phoneNumber;
	    };
	    ;
	    NewLoadComponent.prototype.extractAddresses = function (res) {
	        if (res) {
	            var body = res.json();
	            if (!this.addresses.length) {
	                this.addresses = body.slice(0);
	            }
	            else {
	                this.addresses = this.addresses.concat(body.slice(0)).slice(0);
	            }
	            this.searchStopInProgress = false;
	        }
	    };
	    ;
	    NewLoadComponent.prototype.loadAttributeSelected = function (event) {
	        var rawLoadAttr = this.allAttributes.find(function (attr) { return attr.name == event; });
	        this.loadAttrName = event;
	        if (rawLoadAttr && rawLoadAttr.type != this.loadAttrType) {
	            this.loadValue = '';
	        }
	        if (rawLoadAttr) {
	            this.loadAttrType = rawLoadAttr.type;
	        }
	        else {
	            this.loadAttrType = 'string';
	        }
	        this.attributeButtonDisabled = this.loadAttrType != 'boolean' && !this.loadValue;
	        this.stringValue = event;
	    };
	    ;
	    NewLoadComponent.prototype.attributeValueChanged = function () {
	        this.attributeButtonDisabled = this.loadAttrType != 'boolean' && !this.loadValue;
	    };
	    ;
	    NewLoadComponent.prototype.updateAttribute = function (attributeIndex) {
	        var hasIconAttrs = ['Hazardous', 'High Value', 'Fragile'];
	        this.loadAttributes[attributeIndex] = {
	            name: this.loadAttrName,
	            value: this.loadValue,
	            hasIcon: !!(hasIconAttrs.indexOf(this.loadAttrName) + 1)
	        };
	        this.loadValue = null;
	        this.loadAttrName = null;
	        this.loadAttrType = 'string';
	        this.stringValue = '';
	        this.attributeButtonDisabled = true;
	    };
	    ;
	    NewLoadComponent.prototype.onAttributesToggled = function (event, attribute) {
	        if (event) {
	            var rawLoadAttr = this.allAttributes.find(function (attr) { return attr.name == attribute.name; });
	            if (rawLoadAttr && rawLoadAttr.type != this.loadAttrType) {
	                this.loadValue = '';
	            }
	            if (rawLoadAttr) {
	                this.loadAttrType = rawLoadAttr.type;
	            }
	            else {
	                this.loadAttrType = 'string';
	            }
	            this.stringValue = attribute.name;
	            this.loadAttrName = attribute.name;
	            this.loadValue = this.loadAttrType == 'boolean' ? '' : attribute.value;
	            this.attributeButtonDisabled = this.loadAttrType != 'boolean' && !this.loadValue;
	        }
	    };
	    ;
	    NewLoadComponent.prototype.addAttribute = function () {
	        var hasIconAttrs = ['Hazardous', 'High Value', 'Fragile'];
	        this.loadAttributes.push({
	            name: this.loadAttrName,
	            value: this.loadValue,
	            hasIcon: !!(hasIconAttrs.indexOf(this.loadAttrName) + 1)
	        });
	        this.loadValue = null;
	        this.loadAttrName = null;
	        this.loadAttrType = 'string';
	        this.stringValue = '';
	        this.attributeButtonDisabled = true;
	    };
	    ;
	    NewLoadComponent.prototype.removeAttribute = function (index) {
	        this.loadAttributes.splice(index, 1);
	    };
	    ;
	    NewLoadComponent.prototype.deleteLoad = function () {
	        if (confirm('This load will be deleted permanently. Are you sure?')) {
	            this.loadsService
	                .deleteLoad(this.loadId)
	                .then(this.afterDelete.bind(this));
	        }
	    };
	    ;
	    NewLoadComponent.prototype.afterDelete = function (res) {
	        if (res) {
	            if (this.lastUrl.name == 'Loads') {
	                this.router.navigate([this.lastUrl.name, this.lastUrl.params]);
	            }
	            else {
	                this.router.navigate(['Loads', { divId: this.divisionId }]);
	            }
	        }
	    };
	    NewLoadComponent.prototype.goToTable = function (res) {
	        if (res) {
	            var body = res.json();
	            if (body && body.id && this.lastUrl.name == 'Loads') {
	                this.localStorageService.setItem('selectedItem', body.id);
	            }
	            // it's after error, go to loads, cuz we have no idea, what the last url is.
	            if (this.lastUrl.name == 'Signin') {
	                this.router.navigate(['Loads', { divId: this.divisionId }]);
	            }
	            else {
	                this.router.navigate([this.lastUrl.name, this.lastUrl.params]);
	            }
	        }
	        else {
	            // this is error -- save payload.
	            this.localStorageService.setItem('loadItem', JSON.stringify(this.serializeLoad()));
	        }
	    };
	    ;
	    NewLoadComponent.prototype.goToTableWithoutCheck = function (res) {
	        if (res) {
	            this.router.navigate([this.lastUrl.name, this.lastUrl.params]);
	        }
	    };
	    NewLoadComponent.prototype.deserealizeFromLocalStorage = function (body) {
	        var hasIconAttrs = ['Hazardous', 'High Value', 'Fragile'];
	        this.bolNumber = body.bolNumber;
	        this.rate = body.rate;
	        this.tracking = body.loadTracking;
	        this.carrierLoadNumber = body.carrierLoadNumber;
	        this.brokerLoadNumber = body.brokerLoadNumber;
	        this.freightTerms = body.freightTerms;
	        this.carrierSpecialInstructions = body.carrierSpecialInstructions;
	        this.loadAttributes = body.loadAttributes && body.loadAttributes.map(function (attr) { return ({
	            name: attr.key,
	            value: attr.value,
	            hasIcon: !!(hasIconAttrs.indexOf(attr.key) + 1)
	        }); });
	        this.shipments = body.shipments;
	        this.stops = body.stops;
	        if (this.shipments) {
	            this.shipments = this.shipments.map(function (shipment) {
	                if (shipment.packages) {
	                    shipment.packages = shipment.packages.map(function (pack) {
	                        pack.heightMeasure = pack.sizeUnit;
	                        pack.weightMeasure = pack.weightUnit;
	                        pack.volumeMeasure = pack.sizeUnit == 'ft' ? 'ft³' : 'cm³';
	                        return pack;
	                    });
	                }
	                return shipment;
	            });
	        }
	        ;
	        if (this.stops) {
	            this.stops = this.stops.map(function (stop) {
	                stop.addressLines = stop.addressLines && stop.addressLines.map(function (adr) { return ({
	                    val: adr
	                }); });
	                if (stop.id) {
	                    stop._id = stop.id;
	                }
	                return stop;
	            });
	        }
	        else {
	            this.stops = [];
	        }
	        this.stops.sort(function (a, b) { return a.stopNum - b.stopNum; });
	        this.recalculateSkeleton();
	    };
	    ;
	    NewLoadComponent.prototype.deserealizeLoad = function (res) {
	        if (res) {
	            var body_1 = res.json();
	            var hasIconAttrs_1 = ['Hazardous', 'High Value', 'Fragile'];
	            this.bolNumber = body_1.bolNumber;
	            this.rate = body_1.rate;
	            this.tracking = body_1.loadTracking;
	            this.carrierLoadNumber = body_1.carrierLoadNumber;
	            this.brokerLoadNumber = body_1.brokerLoadNumber;
	            this.freightTerms = body_1.freightTerms;
	            this.carrierSpecialInstructions = body_1.carrierSpecialInstructions;
	            this.loadAttributes = body_1.loadAttributes && body_1.loadAttributes.map(function (attr) { return ({
	                name: attr.key,
	                value: attr.value,
	                hasIcon: !!(hasIconAttrs_1.indexOf(attr.key) + 1)
	            }); });
	            if (this.isCarrier || this.isCommonCarrier) {
	                this.readOnly = this.brokerLoadNumber != "";
	            }
	            this.shipments = body_1.shipments;
	            var _loop_1 = function(i, length_1) {
	                var foundPickUpShipment = this_1.shipments.filter(function (shipment) {
	                    return shipment.pickup == body_1.stops[i].id || shipment.pickup == body_1.stops[i].stop_id || shipment.pickup == body_1.stops[i]._id;
	                });
	                var foundDropOffShipment = this_1.shipments.filter(function (shipment) {
	                    return shipment.dropoff == body_1.stops[i].id || shipment.dropoff == body_1.stops[i].stop_id || shipment.dropoff == body_1.stops[i]._id;
	                });
	                if (!foundPickUpShipment.length && !foundDropOffShipment.length) {
	                    body_1.stops[i].isService = true;
	                }
	            };
	            var this_1 = this;
	            for (var i = 0, length_1 = body_1.stops && body_1.stops.length; i < length_1; i++) {
	                _loop_1(i, length_1);
	            }
	            this.stops = body_1.stops;
	            if (this.shipments) {
	                this.shipments = this.shipments.map(function (shipment) {
	                    if (shipment.packages) {
	                        shipment.packages = shipment.packages.map(function (pack) {
	                            pack.heightMeasure = pack.sizeUnit;
	                            pack.weightMeasure = pack.weightUnit;
	                            pack.volumeMeasure = pack.sizeUnit == 'ft' ? 'ft³' : 'cm³';
	                            return pack;
	                        });
	                    }
	                    return shipment;
	                });
	            }
	            ;
	            if (this.stops) {
	                this.stops = this.stops.map(function (stop) {
	                    stop.addressLines = stop.addressLines && stop.addressLines.map(function (adr) { return ({
	                        val: adr
	                    }); });
	                    if (stop.id) {
	                        stop._id = stop.id;
	                    }
	                    return stop;
	                });
	            }
	            else {
	                this.stops = [];
	            }
	            this.stops.sort(function (a, b) { return a.stopNum - b.stopNum; });
	            this.recalculateSkeleton();
	            this.loading = false;
	        }
	    };
	    ;
	    NewLoadComponent.prototype.serializeLoad = function () {
	        var stops = this.stops && this.stops.map(function (stop) {
	            var resultStop = Object.assign({}, stop);
	            resultStop.addressLines = stop.addressLines && stop.addressLines.map(function (addr) { return addr.val; });
	            stop.id = stop._id;
	            delete resultStop.dropoffShipments;
	            delete resultStop.pickupShipments;
	            delete resultStop.invalid;
	            delete resultStop.truckLoad;
	            delete resultStop.errors;
	            return resultStop;
	        });
	        var shipments = this.shipments && this.shipments.map(function (shipment) {
	            if (shipment.packages) {
	                shipment.packages = shipment.packages.map(function (pack) {
	                    pack.sizeUnit = pack.heightMeasure;
	                    pack.weightUnit = pack.weightMeasure;
	                    delete pack.volumeMeasure;
	                    delete pack.weightMeasure;
	                    delete pack.heightMeasure;
	                    return pack;
	                });
	            }
	            delete shipment.errors;
	            return shipment;
	        });
	        var load = {
	            id: this.loadId,
	            rate: this.rate,
	            carrierLoadNumber: this.carrierLoadNumber,
	            brokerLoadNumber: this.brokerLoadNumber,
	            freightTerms: this.freightTerms,
	            carrierSpecialInstructions: this.carrierSpecialInstructions,
	            loadAttributes: this.loadAttributes && this.loadAttributes.map(function (attr) { return ({
	                key: attr.name,
	                value: attr.value
	            }); }),
	            shipments: shipments,
	            stops: stops,
	            bolNumber: this.bolNumber,
	            loadTracking: this.tracking
	        };
	        if (this.isCarrier || this.isCommonCarrier) {
	            load['carrierId'] = this.divisionId;
	            load['CarrierFleetId'] = this.divisionCode;
	        }
	        else {
	            load['brokerId'] = this.divisionId;
	            load['BrokerFleetId'] = this.divisionCode;
	        }
	        return load;
	    };
	    ;
	    NewLoadComponent.prototype.valid = function () {
	        this.loadValidationErrors = {};
	        if (this.isCarrier || this.isCommonCarrier) {
	            this.loadValidationErrors = {
	                carrierLoadNumber: !this.carrierLoadNumber
	            };
	            return !!this.carrierLoadNumber && !!this.emailValid;
	        }
	        else {
	            this.loadValidationErrors = {
	                brokerLoadNumber: !this.brokerLoadNumber,
	                rate: !this.rate
	            };
	            return !!this.brokerLoadNumber && !!this.rate && !!this.emailValid;
	        }
	    };
	    NewLoadComponent.prototype.getNotifications = function () {
	        this.loadsService.getNotifications(this.loadId).then(this.extractEmails.bind(this));
	    };
	    NewLoadComponent.prototype.extractEmails = function (res) {
	        if (res) {
	            var body = res.json();
	            this.emailsList = body.subscribers.map(function (val) { return val.email; });
	        }
	    };
	    NewLoadComponent.prototype.saveNotifications = function (loadRes) {
	        var _this = this;
	        if (loadRes) {
	            var body = loadRes.json();
	            this.loadId = body.id;
	            var notifications = this.emailsList.map(function (value) { return ({
	                label: value,
	                email: value,
	                events: _this.standartEvents
	            }); });
	            this.loadsService.saveNotifications(this.loadId, notifications).then(function () {
	                _this.goToTable(loadRes);
	            });
	        }
	    };
	    NewLoadComponent.prototype.saveLoad = function () {
	        var load = this.serializeLoad();
	        this.dontCheck = true;
	        if (this.loadId) {
	            if (this.valid()) {
	                if (this)
	                    this.loadsService
	                        .saveLoad(load)
	                        .then(this.saveNotifications.bind(this))
	                        .catch(this.validationErrorHandler.bind(this));
	            }
	        }
	        else {
	            if (this.valid()) {
	                this.loadsService
	                    .createLoad(load)
	                    .then(this.saveNotifications.bind(this))
	                    .catch(this.validationErrorHandler.bind(this));
	            }
	        }
	    };
	    ;
	    NewLoadComponent.prototype.validationErrorHandler = function (error) {
	        if (error) {
	            var body = error.json();
	            this.errorMessage = body.errorMessage;
	            if (body.details) {
	                this.errors = body.details;
	                this.loadErrors = body.details.filter(function (er) { return er.entityType == 'load'; });
	            }
	        }
	    };
	    ;
	    NewLoadComponent.prototype.extractAttributes = function (res) {
	        if (res) {
	            var body = res.json();
	            this.allAttributes = body;
	        }
	    };
	    ;
	    NewLoadComponent.prototype.selectDateShipment = function (date, type) {
	        if (type == 'pickup') {
	            if (date != '') {
	                this.currentStopPickUp.date = moment(date, 'M/D/YYYY').format('M/D/YYYY');
	            }
	            else {
	                this.currentStopPickUp.date = date;
	            }
	        }
	        else {
	            if (date != '') {
	                this.currentStopDropOff.date = moment(date, 'M/D/YYYY').format('M/D/YYYY');
	            }
	            else {
	                this.currentStopDropOff.date = date;
	            }
	        }
	    };
	    ;
	    NewLoadComponent.prototype.timeSelectedStop = function (stop, time) {
	        if (stop) {
	            stop.time = time;
	        }
	    };
	    ;
	    NewLoadComponent.prototype.selectDateStop = function (stop, date) {
	        if (date != '') {
	            stop.date = moment(date, 'M/D/YYYY').format('M/D/YYYY');
	        }
	        else {
	            stop.date = date;
	        }
	    };
	    ;
	    NewLoadComponent.prototype.timeSelectedShipment = function (time, type) {
	        if (type == 'pickup') {
	            this.currentStopPickUp.time = time;
	        }
	        else {
	            this.currentStopDropOff.time = time;
	        }
	    };
	    ;
	    NewLoadComponent.prototype.createPackage = function () {
	        if (!this.currentShipment.packages) {
	            this.currentShipment.packages = [];
	        }
	        this.currentShipment.packages.push({
	            heightMeasure: 'ft',
	            weightMeasure: 'lb',
	            volumeMeasure: 'ft³',
	            type: 'box',
	            quantity: '',
	            height: '',
	            volume: '',
	            weight: '',
	            freightClass: ''
	        });
	    };
	    ;
	    NewLoadComponent.prototype.removePackage = function (index) {
	        this.currentShipment.packages.splice(index, 1);
	    };
	    NewLoadComponent.prototype.createOrder = function () {
	        if (!this.currentShipment.orders) {
	            this.currentShipment.orders = [];
	        }
	        this.currentShipment.orders.push({
	            orderNumber: '',
	            purchaseOrderNumber: ''
	        });
	    };
	    ;
	    NewLoadComponent.prototype.removeOrder = function (index) {
	        this.currentShipment.orders.splice(index, 1);
	    };
	    ;
	    NewLoadComponent.prototype.getAffectedShipments = function (stop) {
	        var affectedShipments = [];
	        for (var _i = 0, _a = this.shipments; _i < _a.length; _i++) {
	            var shipment = _a[_i];
	            if (shipment.pickup == stop._id || shipment.dropoff == stop._id) {
	                affectedShipments.push(shipment);
	            }
	        }
	        return affectedShipments;
	    };
	    ;
	    NewLoadComponent.prototype.cleanStops = function () {
	        var _this = this;
	        var newStops = [];
	        var index = 0;
	        var _loop_2 = function(i, length_2) {
	            var foundPickUpShipment = this_2.shipments.filter(function (shipment) { return shipment.pickup == _this.stops[i]._id; });
	            var foundDropOffShipment = this_2.shipments.filter(function (shipment) { return shipment.dropoff == _this.stops[i]._id; });
	            if (this_2.stops[i].isService || foundPickUpShipment.length || foundDropOffShipment.length) {
	                newStops.push(this_2.stops[i]);
	                newStops[index].stopNum = index;
	                index++;
	            }
	        };
	        var this_2 = this;
	        for (var i = 0, length_2 = this.stops && this.stops.length; i < length_2; i++) {
	            _loop_2(i, length_2);
	        }
	        this.stops = newStops;
	        this.stops.sort(function (a, b) { return a.stopNum - b.stopNum; });
	    };
	    ;
	    NewLoadComponent.prototype.removeShipment = function () {
	        var _this = this;
	        var found = this.shipments.findIndex(function (shipment) { return _this.currentShipment.id ? _this.currentShipment.id == shipment.id : _this.currentShipment._id == shipment._id; });
	        if (found != -1) {
	            this.shipments.splice(found, 1);
	            this.cleanStops();
	            this.recalculateSkeleton();
	        }
	    };
	    ;
	    NewLoadComponent.prototype.startEditShipment = function (shipment) {
	        var _this = this;
	        var stop;
	        this.currentShipment = Object.assign({}, shipment);
	        this.currentShipment.packages = (JSON.parse(JSON.stringify(shipment.packages)));
	        stop = this.stops.find(function (stop) { return _this.currentShipment.pickup == stop._id; });
	        this.currentStopPickUp = Object.assign({}, stop);
	        this.currentStopPickUp.addressLines = new Array(stop.addressLines.length);
	        this.currentStopPickUp._id = this.generateTempId();
	        for (var i = 0; i < stop.addressLines.length; i++) {
	            this.currentStopPickUp.addressLines[i] = Object.assign({}, stop.addressLines[i]);
	        }
	        // clone another stop
	        stop = this.stops.find(function (stop) { return _this.currentShipment.dropoff == stop._id; });
	        this.currentStopDropOff = Object.assign({}, stop);
	        this.currentStopDropOff._id = this.generateTempId();
	        this.currentStopDropOff.addressLines = new Array(stop.addressLines.length);
	        for (var i = 0; i < stop.addressLines.length; i++) {
	            this.currentStopDropOff.addressLines[i] = Object.assign({}, stop.addressLines[i]);
	        }
	        this.currentShipment.pickup = this.currentStopPickUp._id;
	        this.currentShipment.dropoff = this.currentStopDropOff._id;
	    };
	    ;
	    NewLoadComponent.prototype.updateShipment = function () {
	        var _this = this;
	        var shipmentIdx = _.findIndex(this.shipments, function (shpmnt) {
	            return ((shpmnt._id && shpmnt._id == _this.currentShipment._id) || (shpmnt.id && shpmnt.id == _this.currentShipment.id));
	        });
	        this.shipments[shipmentIdx] = this.currentShipment;
	        var stop = this.findStop(this.currentStopDropOff);
	        // this is existing  stop
	        if (stop._id != this.currentStopDropOff._id) {
	            this.currentStopDropOff = this.findStop(this.currentStopDropOff);
	            this.currentShipment.dropoff = this.currentStopDropOff._id;
	        }
	        else {
	            this.errors = _.filter(this.errors, function (err) { return err.entityType == 'load' || (err.objectId != _this.currentStopDropOff.id && err.objectId != _this.currentStopDropOff._id && err.objectId != _this.currentStopDropOff.stop_id); });
	            this.addStop(this.currentStopDropOff, null);
	        }
	        stop = this.findStop(this.currentStopPickUp);
	        // this is existing stop
	        if (stop._id != this.currentStopPickUp._id) {
	            this.currentStopPickUp = this.findStop(this.currentStopPickUp);
	            this.currentShipment.pickup = this.currentStopPickUp._id;
	        }
	        else {
	            this.errors = _.filter(this.errors, function (err) { return err.entityType == 'load' || (err.objectId != _this.currentStopPickUp.id && err.objectId != _this.currentStopPickUp._id && err.objectId != _this.currentStopPickUp.stop_id); });
	            this.addStop(this.currentStopPickUp, null);
	        }
	        this.errors = _.filter(this.errors, function (err) { return err.entityType == 'load' || ((err.objectId != _this.currentShipment.id) && (err.objectId != _this.currentShipment._id)); });
	        this.shipments[shipmentIdx].errors = [];
	        this.currentShipment.errors = [];
	        this.cleanStops();
	        this.recalculateSkeleton();
	    };
	    ;
	    NewLoadComponent.prototype.getValue = function (shipments, type, isImperial) {
	        var total = 0;
	        if (shipments) {
	            for (var _i = 0, shipments_1 = shipments; _i < shipments_1.length; _i++) {
	                var shipment = shipments_1[_i];
	                for (var _a = 0, _b = shipment.packages; _a < _b.length; _a++) {
	                    var pack = _b[_a];
	                    if (type != 'quantity') {
	                        if (pack.sizeUnit == 'cm' || pack.weightUnit == 'kg' || pack.heightMeasure == 'cm') {
	                            if (!isImperial) {
	                                total += pack.quantity * pack[type];
	                            }
	                        }
	                        else {
	                            if (isImperial) {
	                                total += pack.quantity * pack[type];
	                            }
	                        }
	                    }
	                    else {
	                        total += +pack.quantity;
	                    }
	                }
	            }
	        }
	        return total;
	    };
	    ;
	    NewLoadComponent.prototype.recalculateSkeleton = function () {
	        var prevStop;
	        this.validationError = false;
	        var _loop_3 = function(stop) {
	            var foundPickUpShipment = this_3.shipments.filter(function (shipment) { return shipment.pickup == stop._id; });
	            var foundDropOffShipment = this_3.shipments.filter(function (shipment) { return shipment.dropoff == stop._id; });
	            var totalWeightOnStopImperial = this_3.getValue(foundPickUpShipment, 'weight', true) - this_3.getValue(foundDropOffShipment, 'weight', true);
	            var totalVolumeOfStopImperial = this_3.getValue(foundPickUpShipment, 'volume', true) - this_3.getValue(foundDropOffShipment, 'volume', true);
	            var totalWeightOnStopDecimal = this_3.getValue(foundPickUpShipment, 'weight', false) - this_3.getValue(foundDropOffShipment, 'weight', false);
	            var totalVolumeOfStopDecimal = this_3.getValue(foundPickUpShipment, 'volume', false) - this_3.getValue(foundDropOffShipment, 'volume', false);
	            if (prevStop) {
	                stop.truckLoad = {
	                    weightImperial: prevStop.truckLoad.weightImperial + totalWeightOnStopImperial,
	                    volumeImperial: prevStop.truckLoad.volumeImperial + totalVolumeOfStopImperial,
	                    weightDecimal: prevStop.truckLoad.weightDecimal + totalWeightOnStopDecimal,
	                    volumeDecimal: prevStop.truckLoad.volumeDecimal + totalVolumeOfStopDecimal,
	                    showDecimal: prevStop.truckLoad.volumeDecimal > 0 || prevStop.truckLoad.weightDecimal > 0,
	                    showImperial: prevStop.truckLoad.weightImperial > 0 || prevStop.truckLoad.volumeImperial > 0
	                };
	            }
	            else {
	                stop.truckLoad = {
	                    weightImperial: totalWeightOnStopImperial,
	                    volumeImperial: totalVolumeOfStopImperial,
	                    weightDecimal: totalWeightOnStopDecimal,
	                    volumeDecimal: totalVolumeOfStopDecimal,
	                    showDecimal: totalWeightOnStopDecimal > 0 || totalVolumeOfStopDecimal > 0,
	                    showImperial: totalVolumeOfStopImperial > 0 || totalWeightOnStopImperial > 0
	                };
	            }
	            stop.pickupShipments = foundPickUpShipment || [];
	            stop.dropoffShipments = foundDropOffShipment || [];
	            stop.invalid = false;
	            // now validate all stops
	            if (prevStop) {
	                if (+moment(prevStop.date, 'M/D/YYYY') > +moment(stop.date, 'M/D/YYYY')) {
	                    stop.invalid = true;
	                    prevStop.invalid = true;
	                    this_3.validationError = 'Date of next stop can’t be earlier than previous';
	                }
	                else {
	                    stop.invalid = false;
	                }
	            }
	            prevStop = stop;
	        };
	        var this_3 = this;
	        for (var _i = 0, _a = this.stops; _i < _a.length; _i++) {
	            var stop = _a[_i];
	            _loop_3(stop);
	        }
	        var _loop_4 = function(shipment) {
	            if (shipment.dropoff && shipment.pickup) {
	                var dropOffStop = this_4.stops.find(function (stop) { return stop._id == shipment.dropoff; });
	                var pickUpStop = this_4.stops.find(function (stop) { return stop._id == shipment.pickup; });
	                if (pickUpStop && dropOffStop) {
	                    if (!!dropOffStop.date && !!pickUpStop.date) {
	                        if (+moment(dropOffStop.date, 'M/D/YYYY') < +moment(pickUpStop.date, 'M/D/YYYY')) {
	                            dropOffStop.invalid = true;
	                            pickUpStop.invalid = true;
	                            this_4.validationError = 'Date of next stop can’t be earlier than previous';
	                        }
	                    }
	                    if (dropOffStop.stopNum < pickUpStop.stopNum) {
	                        dropOffStop.invalid = true;
	                        pickUpStop.invalid = true;
	                        this_4.validationError = 'Drop off Stop can’t be moved before Pick Up Stop';
	                    }
	                }
	            }
	        };
	        var this_4 = this;
	        for (var _b = 0, _c = this.shipments; _b < _c.length; _b++) {
	            var shipment = _c[_b];
	            _loop_4(shipment);
	        }
	    };
	    ;
	    // TODO: move to Stop model
	    NewLoadComponent.prototype.findStop = function (stopToFind) {
	        var found;
	        found = this.stops.find(function (stop) {
	            //
	            for (var i = 0; i < stop.addressLines.length; i++) {
	                if (stop.addressLines[i] && stopToFind.addressLines[i] && stop.addressLines[i].val != stopToFind.addressLines[i].val) {
	                    return false;
	                }
	                ;
	            }
	            if (stop.date != stopToFind.date ||
	                stop.time != stopToFind.time ||
	                stop.city != stopToFind.city ||
	                stop.state != stopToFind.state ||
	                stop.country != stopToFind.country ||
	                stop.postalCode != stopToFind.postalCode ||
	                stop.contactName != stopToFind.contactName ||
	                stop.company != stopToFind.company ||
	                stop.phoneNumber != stopToFind.phoneNumber) {
	                return false;
	            }
	            return true;
	        });
	        return found ? found : stopToFind;
	    };
	    ;
	    NewLoadComponent.prototype.moveStop = function (stop, direction) {
	        var dx = direction == 'up' ? -1 : 1;
	        var stopIdx = this.stops.findIndex(function (stp) { return ((stop._id && stop._id == stp._id) || (stop.id && stop.id == stp.id)); });
	        this.stops[stopIdx].stopNum += dx;
	        this.stops[stopIdx + dx].stopNum -= dx;
	        this.stops.sort(function (a, b) { return a.stopNum - b.stopNum; });
	        this.recalculateSkeleton();
	    };
	    ;
	    NewLoadComponent.prototype.removeServiceStop = function () {
	        var _this = this;
	        var stopIdx = this.stops.findIndex(function (stp) { return ((_this.currentServiceStop._id && _this.currentServiceStop._id == stp._id) || (_this.currentServiceStop.id && _this.currentServiceStop.id == stp.id) || (_this.currentServiceStop.stop_id && _this.currentServiceStop.stop_id == stp.stop_id)); });
	        if (stopIdx != -1) {
	            this.stops.splice(stopIdx, 1);
	        }
	        this.stops.sort(function (a, b) { return a.stopNum - b.stopNum; });
	        this.recalculateSkeleton();
	    };
	    ;
	    NewLoadComponent.prototype.addStop = function (stop, idx) {
	        if (idx || idx === 0) {
	            var i = 0;
	            // add to idx, and shift stopnum
	            this.stops.splice(idx, 0, stop);
	            for (var i_1 = 0, length_3 = this.stops && this.stops.length; i_1 < length_3; i_1++) {
	                this.stops[i_1].stopNum = i_1;
	            }
	        }
	        else {
	            var index = 0;
	            // find idx and add and shift stopnum
	            for (var i = 0, length_4 = this.stops && this.stops.length; i < length_4; i++) {
	                if (+moment(stop.date, 'M/D/YYYY') > +moment(this.stops[i].date, 'M/D/YYYY') || !this.stops[i].date || !stop.date) {
	                    index = i + 1;
	                }
	                else {
	                    break;
	                }
	            }
	            this.addStop(stop, index);
	        }
	        this.stops.sort(function (a, b) { return a.stopNum - b.stopNum; });
	        this.recalculateSkeleton();
	    };
	    ;
	    NewLoadComponent.prototype.addShipment = function () {
	        var stop = this.findStop(this.currentStopPickUp);
	        this.timeValue = '';
	        if (stop._id != this.currentStopPickUp._id) {
	            this.currentStopPickUp = this.findStop(this.currentStopPickUp);
	            this.currentShipment.pickup = this.currentStopPickUp._id;
	        }
	        else {
	            this.addStop(this.currentStopPickUp, null);
	        }
	        stop = this.findStop(this.currentStopDropOff);
	        if (stop._id != this.currentStopDropOff._id) {
	            this.currentStopDropOff = this.findStop(this.currentStopDropOff);
	            this.currentShipment.dropoff = this.currentStopDropOff._id;
	        }
	        else {
	            this.addStop(this.currentStopDropOff, null);
	        }
	        this.currentShipment._id = this.generateTempId();
	        this.shipments.push(this.currentShipment);
	        this.currentShipment = {};
	        this.currentStopDropOff = {};
	        this.currentStopPickUp = {};
	        this.recalculateSkeleton();
	        this.detailsOpened = false;
	        return false;
	    };
	    ;
	    NewLoadComponent.prototype.mergeStops = function (stop1, stop2) {
	        var stop = Object.assign({}, stop1);
	        stop._id = this.generateTempId();
	        for (var _i = 0, _a = this.shipments; _i < _a.length; _i++) {
	            var shipment = _a[_i];
	            if (shipment.pickup == stop1._id || shipment.pickup == stop2._id) {
	                shipment.pickup = stop._id;
	            }
	            if (shipment.dropoff == stop1._id || shipment.dropoff == stop2._id) {
	                shipment.dropoff = stop._id;
	            }
	        }
	        return stop;
	    };
	    ;
	    NewLoadComponent.prototype.updateStop = function () {
	        // Links. links is everywhere. 
	        var _this = this;
	        var stopIdx = this.stops.findIndex(function (stop) { return (stop._id && stop._id == _this.currentStop._id) || (stop.id && stop.id == _this.currentStop.id); });
	        if (stopIdx != -1) {
	            if (this.currentStop._id == this.findStop(this.currentStop)) {
	                this.stops[stopIdx] = this.currentStop;
	            }
	            else {
	                this.stops[stopIdx] = this.mergeStops(this.currentStop, this.findStop(this.currentStop));
	            }
	        }
	        this.errors = _.filter(this.errors, function (err) { return err.entityType == 'load' || (err.objectId != _this.currentStop.id && err.objectId != _this.currentStop._id && err.objectId != _this.currentStop.stop_id); });
	        this.stops[stopIdx].errors = [];
	        this.currentStop.errors = [];
	        this.recalculateSkeleton();
	        this.cleanStops();
	    };
	    ;
	    NewLoadComponent.prototype.showButtons = function () {
	        this.serviceStopButtonsDisabled = false;
	    };
	    NewLoadComponent.prototype.selectStop = function (stop) {
	        this.currentStop = Object.assign({}, stop);
	        if (stop.addressLines.length) {
	            // address line is linked, because single addressLine is object. So, create new addressLines
	            this.currentStop.addressLines = new Array(stop.addressLines.length);
	        }
	        else {
	            this.currentStop.addressLines = [{
	                    val: ''
	                }, {
	                    val: ''
	                }];
	        }
	        for (var i = 0; i < stop.addressLines.length; i++) {
	            this.currentStop.addressLines[i] = Object.assign({}, stop.addressLines[i]);
	        }
	        this.timeValue = stop.time || '';
	        if (stop.isService) {
	            this.currentServiceStop = this.currentStop;
	        }
	    };
	    ;
	    //// 
	    NewLoadComponent.prototype.createServiceStop = function () {
	        this.serviceStopButtonsDisabled = true;
	        this.currentServiceStop._id = this.generateTempId();
	        this.addStop(this.currentServiceStop, this.prevStop.stopNum + 1);
	        this.currentServiceStop = {};
	    };
	    ;
	    ////
	    NewLoadComponent.prototype.updateServiceStop = function () {
	        var _this = this;
	        // Links. links is everywhere. 
	        this.serviceStopButtonsDisabled = true;
	        var stopIdx = this.stops.findIndex(function (stop) { return (stop._id && stop._id == _this.currentStop._id) || (stop.id && stop.id == _this.currentStop.id); });
	        if (stopIdx != -1) {
	            this.stops[stopIdx] = this.currentServiceStop;
	        }
	        this.errors = _.filter(this.errors, function (err) { return err.entityType == 'load' || (err.objectId != _this.currentServiceStop.id && err.objectId != _this.currentServiceStop._id && err.objectId != _this.currentServiceStop.stop_id); });
	        this.currentServiceStop.errors = [];
	        this.stops[stopIdx].errors = [];
	        this.recalculateSkeleton();
	        this.cleanStops();
	    };
	    NewLoadComponent.prototype.newServiceStop = function (prevStop) {
	        this.prevStop = prevStop;
	        this.currentServiceStop = {
	            isService: true,
	            // Because ng2 cant handle primitive values inside ngModel in ngFor;
	            addressLines: [{
	                    val: ''
	                }, {
	                    val: ''
	                }],
	            time: '12:00 PM',
	            date: null
	        };
	    };
	    ;
	    NewLoadComponent.prototype.setMeasurement = function (pack, measurment) {
	        var imperialMeasure = this.imperialMeasurments.find(function (m) { return m == measurment; }) ? 0 : 1;
	        pack.heightMeasure = this.heightUnits[imperialMeasure];
	        pack.weightMeasure = this.weightUnits[imperialMeasure];
	        pack.volumeMeasure = this.volumeUnits[imperialMeasure];
	    };
	    ;
	    NewLoadComponent.prototype.addAddressLine = function (item) {
	        if (item.addressLines) {
	            if (item.addressLines.length < 4) {
	                item.addressLines.push({ val: '' });
	            }
	        }
	        else {
	            item.addressLines = [];
	        }
	    };
	    ;
	    // TODO: move to Shipment model
	    NewLoadComponent.prototype.createShipment = function () {
	        this.currentStopPickUp = {
	            _id: this.generateTempId(),
	            // Because ng2 cant handle primitive values inside ngModel in ngFor;
	            addressLines: [{
	                    val: ''
	                }, {
	                    val: ''
	                }],
	            truckLoad: {
	                weight: 0,
	                volume: 0
	            },
	            dropoffShipments: [],
	            pickupShipments: [],
	            time: '12:00 PM'
	        };
	        this.currentStopDropOff = {
	            _id: this.generateTempId(),
	            addressLines: [{
	                    val: ''
	                }, {
	                    val: ''
	                }],
	            truckLoad: {
	                weight: 0,
	                volume: 0
	            },
	            dropoffShipments: [],
	            pickupShipments: [],
	            time: '12:00 PM'
	        };
	        this.currentShipment = {
	            packages: [],
	            orders: [],
	            pickup: this.currentStopPickUp._id,
	            dropoff: this.currentStopDropOff._id,
	        };
	        this.timeValue = '';
	    };
	    ;
	    __decorate([
	        core_1.ViewChild('stopModal'), 
	        __metadata('design:type', Object)
	    ], NewLoadComponent.prototype, "stopModal", void 0);
	    __decorate([
	        core_1.ViewChild('serviceStopModal'), 
	        __metadata('design:type', Object)
	    ], NewLoadComponent.prototype, "serviceStopModal", void 0);
	    __decorate([
	        core_1.ViewChild('shipmentModal'), 
	        __metadata('design:type', Object)
	    ], NewLoadComponent.prototype, "shipmentModal", void 0);
	    NewLoadComponent = __decorate([
	        core_1.Component({
	            selector: 'new-load',
	            providers: [services_1.DivisionService, services_1.LoadsService, services_1.LocalStorageService],
	            directives: [index_4.DateComponent, index_3.ScrollDirective, ng2_bootstrap_1.DROPDOWN_DIRECTIVES, index_5.EmailInputComponent, index_2.NumberComponent, ng2_bootstrap_1.TYPEAHEAD_DIRECTIVES, ng2_bootstrap_1.MODAL_DIRECTVES, common_1.NgClass, common_1.CORE_DIRECTIVES, common_1.FORM_DIRECTIVES, index_1.SimpleDropdownComponent, index_3.DatePickerDirective, ng2_bootstrap_1.TOOLTIP_DIRECTIVES, index_3.AutosizeDirective],
	            template: __webpack_require__(695),
	            viewProviders: [ng2_bootstrap_1.BS_VIEW_PROVIDERS]
	        }), 
	        __metadata('design:paramtypes', [services_1.UserService, router_deprecated_1.Router, services_1.DivisionService, services_1.LoadsService, services_1.LocalStorageService])
	    ], NewLoadComponent);
	    return NewLoadComponent;
	}());
	exports.NewLoadComponent = NewLoadComponent;
	

/***/ }),
/* 692 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	function __export(m) {
	    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
	}
	__export(__webpack_require__(693));
	

/***/ }),
/* 693 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var core_1 = __webpack_require__(2);
	var ng2_bootstrap_1 = __webpack_require__(345);
	var index_1 = __webpack_require__(508);
	var EmailInputComponent = (function () {
	    function EmailInputComponent(validationService) {
	        this.validationService = validationService;
	        this.onEmailChanged = new core_1.EventEmitter();
	        this.newEmail = '';
	        this.emailOutput = {
	            emailValid: true,
	            emailsList: []
	        };
	    }
	    EmailInputComponent.prototype.keyDown = function (event) {
	        if (this.newEmail == '' && event.keyCode == 8 && !this.disabled) {
	            this.removeEmail(this.emailOutput.emailsList.length - 1);
	        }
	    };
	    ;
	    EmailInputComponent.prototype.addEmail = function (lastCheck) {
	        this.emailOutput.emailValid = true;
	        if (!this.disabled && this.newEmail) {
	            var lastSymbol = this.newEmail[this.newEmail.length - 1];
	            if (lastSymbol == ' ' || lastSymbol == ';' || lastSymbol == ',' || lastCheck) {
	                var email = this.newEmail;
	                if (lastSymbol == ' ' || lastSymbol == ';' || lastSymbol == ',') {
	                    email = this.newEmail.slice(0, -1);
	                }
	                if (this.validationService.emailValidator(email)) {
	                    this.emailOutput.emailsList.push(email);
	                    this.emailOutput.emailValid = true;
	                    this.newEmail = '';
	                }
	                else {
	                    this.emailOutput.emailValid = false;
	                }
	                this.onEmailChanged.emit(this.emailOutput);
	            }
	        }
	    };
	    ;
	    EmailInputComponent.prototype.removeEmail = function (index) {
	        if (!this.disabled) {
	            this.emailOutput.emailsList.splice(index, 1);
	            this.onEmailChanged.emit(this.emailOutput);
	        }
	    };
	    ;
	    EmailInputComponent.prototype.ngOnChanges = function (changes) {
	        this.emailOutput.emailsList = this.emails;
	    };
	    ;
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Object)
	    ], EmailInputComponent.prototype, "emails", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Object)
	    ], EmailInputComponent.prototype, "disabled", void 0);
	    __decorate([
	        core_1.Output(), 
	        __metadata('design:type', Object)
	    ], EmailInputComponent.prototype, "onEmailChanged", void 0);
	    EmailInputComponent = __decorate([
	        core_1.Component({
	            selector: 'transflo-email-input',
	            template: __webpack_require__(694),
	            directives: [ng2_bootstrap_1.DROPDOWN_DIRECTIVES]
	        }), 
	        __metadata('design:paramtypes', [index_1.ValidationService])
	    ], EmailInputComponent);
	    return EmailInputComponent;
	}());
	exports.EmailInputComponent = EmailInputComponent;
	

/***/ }),
/* 694 */
/***/ (function(module, exports) {

	module.exports = "<div class=\"form-control multiple\">\r\n\t<span class=\"multiple-selected\" *ngFor=\"let email of emailOutput.emailsList; let idx = index\">\r\n\t\t<span>{{email}}</span>\r\n\t\t<span class=\"multiple-selected-delete\" [hidden]=\"disabled\" (click)=\"removeEmail(idx)\" title=\"Delete\">×</span>\r\n\t</span>\r\n\t<form (submit)=\"addEmail(true)\">\r\n\t  <input id=\"tracking_email_field\" autocomplete=\"off\" autofocus=\"\" (keyup)=\"keyDown($event)\" \r\n\t\t\t class=\"multiple-field -w100 ng-pristine ng-valid ng-touched\" type=\"text\" placeholder=\"Type email\" \r\n\t\t\t [(ngModel)]=\"newEmail\" (ngModelChange)=\"addEmail()\" (blur)=\"addEmail(true)\">\r\n\t\t<div [hidden]=\"emailOutput.emailValid\" class=\"label-validation-error\">Email Address is invalid</div>\r\n\t</form>\r\n</div>"

/***/ }),
/* 695 */
/***/ (function(module, exports) {

	module.exports = "<div class=\"loading-page\" [hidden]=\"!loading\"><em></em><em></em><em></em></div>\r\n\r\n<header class=\"page-header\" xmlns=\"http://www.w3.org/1999/html\">\r\n  <div class=\"flex items-center\">\r\n    <div class=\"flex-auto flex items-center\" [hidden]=\"loadId\">\r\n      <h1 class=\"self-baseline\">Creating Load</h1>\r\n    </div>\r\n     <div class=\"flex-auto flex items-center\" [hidden]=\"!loadId\">\r\n      <h1 class=\"self-baseline\">Load #{{isCarrier ? carrierLoadNumber : brokerLoadNumber}}</h1>\r\n    </div>\r\n    <div class=\"dropdown\" dropdown keyboardNav=\"true\" autoClose=\"outsideClick\">\r\n      <button type=\"button\" class=\"button -icon -outline-danger\" [hidden]=\"!loadId || readOnly\" (click)=\"deleteLoad()\" title=\"Delete\"><svg class=\"icon -trash\"><use xlink:href=\"#svg_trash\"/></svg></button>\r\n      <button type=\"button\" [hidden]=\"(shipments && shipments.length == 0) || readOnly\" class=\"button -outline\" (click)=\"createShipment(); shipmentModal.show();\">+ New Shipment</button>\r\n      <div class=\"buttons-separator\"></div>\r\n      <div class=\"dropdown inline-block button-group\" dropdown keyboardNav=\"true\" autoClose=\"outsideClick\" [isOpen]=\"errors.length || validationError\" [hidden]=\"errors.length == 0 && (shipments && !shipments.length || !validationError)\">\r\n        <button type=\"button\" class=\"button -icon -outline-danger -active fs17\" dropdownToggle>!</button>\r\n        <div class=\"dropdown-menu -md -center\" role=\"menu\" dropdownMenu>\r\n          <h3 class=\"label-danger\" [hidden]=\"!validationError\">{{validationError}}</h3>\r\n          <p [hidden]=\"!validationError\">Please change the order or dates of the stops.</p>\r\n          <br [hidden]=\"errors.length == 0 || !validationError\">\r\n          <h3 [hidden]=\"errors.length == 0\" class=\"label-danger\">{{errorMessage}}</h3>\r\n          <table class=\"table -list\" [hidden]=\"errors.length == 0\">\r\n            <tr *ngFor=\"let error of errors\">\r\n              <td>&bull;</td>\r\n              <td>\r\n                <span *ngIf=\"error.entityType == 'load'\">{{error.error}}</span>\r\n                <a *ngIf=\"error.entityType != 'load'\" (click)=\"openPopupWithEntityId(error.objectId, error.entityType)\">{{error.error}}</a>\r\n              </td>\r\n            </tr>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      <button type=\"button\" class=\"button -primary\" (click)=\"saveLoad()\" [disabled]=\"isInvalid()\">Save Load</button>\r\n    </div>\r\n  </div>\r\n  <form action=\"\" class=\"filters-form\" role=\"form\" novalidate>\r\n    <div [hidden]=\"!detailsOpened\">\r\n      <hr />\r\n      <div class=\"flex\">\r\n        <div class=\"col-4 pr3\">\r\n           <div class=\"form-group\" *ngIf=\"isCarrier\">\r\n            <label class=\"form-label\">Carrier Load #</label> <span [hidden]=\"!isCommonCarrier\">*</span>\r\n            <input autocomplete=\"off\" class=\"form-control\" [ngClass]=\"{'error': loadValidationErrors.carrierLoadNumber}\" type=\"text\"  name=\"carrierLoadNumber\" [(ngModel)]=\"carrierLoadNumber\"/>\r\n          </div>\r\n          <div class=\"form-group\" *ngIf=\"!isCarrier\">\r\n            <label class=\"form-label\">Broker Load #</label>       <span [hidden]=\"isCommonCarrier\">  *</span>\r\n            <input autocomplete=\"off\" class=\"form-control\" [disabled]=\"readOnly\" [ngClass]=\"{'error': loadValidationErrors.brokerLoadNumber}\" type=\"text\" name=\"brokerLoadNumber\" [(ngModel)]=\"brokerLoadNumber\"/>\r\n          </div>\r\n\r\n          <div class=\"form-group -x3\">\r\n            <label class=\"form-label\">Freight Terms</label>\r\n            <input autocomplete=\"off\" [disabled]=\"readOnly\" class=\"form-control\" type=\"text\"  [(ngModel)]=\"freightTerms\" />\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"form-label\">BOL</label>\r\n            <input autocomplete=\"off\" [disabled]=\"readOnly\" class=\"form-control\" type=\"text\" [(ngModel)]=\"bolNumber\" />\r\n          </div>\t\r\n\t\t  <div class=\"form-group\">\r\n\t\t    <div class=\"checkbox\">\r\n\t\t\t  <label class=\"form-label\">\r\n\t\t\t    Load Tracking\r\n            <input hidden type=\"checkbox\" [disabled]=\"readOnly\" name=\"tracking\" [(ngModel)]=\"tracking\" /><em class=\"form-switcher\"></em>\r\n\t\t\t  </label>\t\t\t  \r\n\t\t    </div>\r\n\t\t  </div>\r\n      <div class=\"form-group\">\r\n        <div class=\"checkbox\">\r\n          <label class=\"form-label\">\r\n            Notifications\r\n          </label>\r\n          <transflo-email-input [emails]=\"emailsList\" [disabled]=\"readOnly\" (onEmailChanged)=\"emailsChanged($event)\"></transflo-email-input>\r\n        </div>\r\n      </div>\r\n\t\t  </div>\r\n        <div class=\"col-4 pr3 pl3\">\r\n          <div class=\"form-group\" *ngIf=\"isCarrier\">\r\n            <label class=\"form-label\">Broker Load # </label>\r\n            <input autocomplete=\"off\" [readonly]=\"readOnly\" class=\"form-control\" type=\"text\" [(ngModel)]=\"brokerLoadNumber\"/>\r\n          </div>\r\n          <div class=\"form-group\" *ngIf=\"!isCarrier\">\r\n            <label class=\"form-label\">Carrier Load # </label>\r\n            <input autocomplete=\"off\" [readonly]=\"readOnly\"  class=\"form-control\" type=\"text\" [(ngModel)]=\"carrierLoadNumber\"/>\r\n          </div>\r\n          <div class=\"form-group -x3\">\r\n            <label class=\"form-label\">Rate Amount</label> <span [hidden]=\"isCommonCarrier\">*</span>\r\n            <input autocomplete=\"off\" [readonly]=\"readOnly\" class=\"form-control\" [ngClass]=\"{'error': loadValidationErrors.rate}\" name=\"rate\"type=\"text\" [(ngModel)]=\"rate\"/>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label class=\"form-label\">Special Instructions</label>\r\n            <textarea class=\"form-control\" rows=\"4\" [(ngModel)]=\"carrierSpecialInstructions\"></textarea>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-4 pl3\">\r\n          <div class=\"form-label -text form-group\">Attributes</div>\r\n          <div class=\"form-group\" [hidden]=\"loadAttributes.length == 0\">\r\n            <table class=\"table -list\">\r\n              <tbody>\r\n\r\n              <tr *ngFor=\"let attribute of loadAttributes; let idx = index\">\r\n                <td class=\"align-middle center\" [hidden]=\"!attribute.hasIcon\" width=\"10%\">\r\n                  <div *ngIf=\"attribute.name == 'Hazardous'\">\r\n                    <svg class=\"icon -danger -md m0\"><use xlink:href=\"#svg_danger\"/></svg>\r\n                  </div>\r\n                  <div  *ngIf=\"attribute.name == 'High Value'\">\r\n                    <svg class=\"icon -ruby -md m0\"><use xlink:href=\"#svg_ruby\"/></svg>\r\n                  </div>\r\n                  <div  *ngIf=\"attribute.name == 'Fragile'\">\r\n                    <svg class=\"icon -fragile -md m0\"><use xlink:href=\"#svg_fragile\"/></svg>\r\n                  </div>\r\n                </td>\r\n                <td class=\"align-middle center\" width=\"10%\" [hidden]=\"attribute.hasIcon\">\r\n                  &bull;\r\n                </td>\r\n                <td class=\"dropdown-important\" dropdown keyboardNav=\"true\" (onToggle)=\"onAttributesToggled($event, attribute)\" autoClose=\"disabled\">\r\n                  <span dropdownToggle>{{attribute.name}}</span><span dropdownToggle [hidden]=\"attribute.hasIcon\">: {{attribute.value}}</span>\r\n                  <div class=\"dropdown-menu -center -lg2\" dropdownMenu>\r\n                    <div class=\"form-group flex\">\r\n                      <div class=\"col-6\" [ngClass]=\"{'col-12': loadAttrType == 'boolean'}\">\r\n                        <label class=\"form-label\">Field</label>\r\n                        <transflo-simple-dropdown [values]=\"allAttributes\" [stringValue]=\"stringValue\" (attributeChanged)=\"loadAttributeSelected($event)\"></transflo-simple-dropdown>\r\n                      </div>\r\n                      <div class=\"col-6 pl2\" [hidden]=\"loadAttrType == 'boolean'\">\r\n                        <label class=\"form-label\">Value</label>\r\n                        <input autocomplete=\"off\" class=\"form-control\" *ngIf=\"loadAttrType == 'string'\" type=\"text\" [(ngModel)]=\"loadValue\" (ngModelChange)=\"attributeValueChanged()\"/>\r\n                        <input autocomplete=\"off\" class=\"form-control\" *ngIf=\"loadAttrType == 'number'\" type=\"number\" [(ngModel)]=\"loadValue\" (ngModelChange)=\"attributeValueChanged()\"/>\r\n                      </div>\r\n                    </div>\r\n                    <hr />\r\n                    <div class=\"form-group flex\">\r\n                      <div class=\"flex-auto\">\r\n                        <button type=\"button\" class=\"button -icon -outline-danger\" (click)=\"removeAttribute(idx)\" title=\"Delete\"><svg class=\"icon -trash\"><use xlink:href=\"#svg_trash\"/></svg></button>\r\n                      </div>\r\n                      <div>\r\n                        <button type=\"reset\" class=\"button -outline\" dropdownToggle>Cancel</button>\r\n                        <button type=\"button\" class=\"button -wider\" (click)=\"updateAttribute(idx)\" [disabled]=\"attributeButtonDisabled\">Update</button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <button class=\"button -link label-danger bold\" (click)=\"removeAttribute(idx)\" tabindex=\"-1\">&times;</button>\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <hr />\r\n          <div class=\"dropdown -inline\" dropdown keyboardNav=\"true\" autoClose=\"disabled\">\r\n            <button type=\"button\" [hidden]=\"readOnly\" class=\"button -outline\" dropdownToggle><span class=\"plus\">+</span> Attribute</button>\r\n            <div class=\"dropdown-menu -center -lg2\" dropdownMenu>\r\n              <div class=\"form-group flex\">\r\n                <div class=\"col-6\" [ngClass]=\"{'col-12': loadAttrType == 'boolean'}\">\r\n                  <label class=\"form-label\">Field</label>\r\n                  <transflo-simple-dropdown [values]=\"allAttributes\" [stringValue]=\"stringValue\" (attributeChanged)=\"loadAttributeSelected($event)\"></transflo-simple-dropdown>\r\n                </div>\r\n                <div class=\"col-6 pl2\" [hidden]=\"loadAttrType == 'boolean'\">\r\n                  <label class=\"form-label\">Value</label>\r\n                  <input autocomplete=\"off\" class=\"form-control\" *ngIf=\"loadAttrType == 'string'\" type=\"text\" [(ngModel)]=\"loadValue\" (ngModelChange)=\"attributeValueChanged()\"/>\r\n                  <input autocomplete=\"off\" class=\"form-control\" *ngIf=\"loadAttrType == 'number'\" type=\"number\" [(ngModel)]=\"loadValue\" (ngModelChange)=\"attributeValueChanged()\"/>\r\n                </div>\r\n              </div>\r\n              <hr />\r\n              <div class=\"form-group flex\">\r\n                <div class=\"flex-auto\">\r\n                </div>\r\n                <div>\r\n                  <button type=\"reset\" class=\"button -outline\" dropdownToggle>Cancel</button>\r\n                  <button type=\"button\" class=\"button -wider\" (click)=\"addAttribute()\" [disabled]=\"attributeButtonDisabled\">Add</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n     <div class=\"filters-button\" (click)=\"detailsOpened = true\" [hidden]=\"detailsOpened\">\r\n      Show Details\r\n    </div>\r\n    <div class=\"filters-button -opened\" (click)=\"detailsOpened = false\" [hidden]=\"!detailsOpened || (shipments && !shipments.length)\">\r\n      Hide Details\r\n    </div>\r\n  </form>\r\n</header>\r\n\r\n<div class=\"page-content\">\r\n  <div class=\"skeleton\" [hidden]=\"!shipments.length\">\r\n\r\n    <div class=\"skeleton-item\" *ngFor=\"let stop of stops; let idx = index;\">\r\n      <div class=\"skeleton-bubble -left\" *ngIf=\"stop.pickupShipments && stop.pickupShipments.length\" [hidden]=\"stop.isService\">\r\n        <div class=\"skeleton-bubble-header flex items-baseline\">\r\n          <strong class=\"flex-auto\">Pick Up </strong>\r\n          <div *ngIf=\"getValue(stop.pickupShipments, 'volume', true) > 0 || getValue(stop.pickupShipments, 'weight', true) > 0\">\r\n            <small><transflo-number [number]=\"getValue(stop.pickupShipments, 'volume', true)\"></transflo-number>\r\n              ft³\r\n            </small>\r\n            <small><transflo-number [number]=\"getValue(stop.pickupShipments, 'weight', true)\"></transflo-number>\r\n              lbs\r\n            </small>\r\n          </div>\r\n          <div *ngIf=\"getValue(stop.pickupShipments, 'volume', false) > 0 || getValue(stop.pickupShipments, 'weight', false) > 0\">\r\n            <small><transflo-number [number]=\"getValue(stop.pickupShipments, 'volume', false)\"></transflo-number>\r\n              cm³\r\n            </small>\r\n            <small><transflo-number [number]=\"getValue(stop.pickupShipments, 'weight', false)\"></transflo-number>\r\n              kg\r\n            </small>\r\n          </div>\r\n        </div>\r\n        <ul class=\"skeleton-bubble-list\">\r\n          <li *ngFor=\"let shipment of stop.pickupShipments\">\r\n            <span>{{getValue([shipment], 'quantity')}} pcs</span>\r\n            <div *ngIf=\"getValue([shipment], 'volume', true) > 0 || getValue([shipment], 'weight', true) > 0\">\r\n              <span><transflo-number [number]=\"getValue([shipment], 'volume', true)\"></transflo-number>\r\n                &nbsp;ft³\r\n              </span>\r\n              <span><transflo-number [number]=\"getValue([shipment], 'weight', true)\"></transflo-number>\r\n                &nbsp;lbs\r\n              </span>\r\n            </div>\r\n            <div *ngIf=\"getValue([shipment], 'volume', false) > 0 || getValue([shipment], 'weight', false) > 0\">\r\n              <span><transflo-number [number]=\"getValue([shipment], 'volume', false)\"></transflo-number>\r\n                &nbsp;cm³\r\n              </span>\r\n              <span><transflo-number [number]=\"getValue([shipment], 'weight', false)\"></transflo-number>\r\n                &nbsp;kg\r\n              </span>\r\n            </div>\r\n            <strong><a (click)=\"startEditShipment(shipment); shipmentModal.show()\">BOL {{shipment.shipmentBOL}}</a></strong>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div class=\"skeleton-bubble -right\" *ngIf=\"stop.dropoffShipments && stop.dropoffShipments.length\">\r\n        <div class=\"skeleton-bubble-header\">\r\n          <strong>Drop Off</strong>\r\n        </div>\r\n        <ul class=\"skeleton-bubble-list\">\r\n          <li *ngFor=\"let shipment of stop.dropoffShipments\">\r\n            <span>{{getValue([shipment], 'quantity')}} pcs </span>\r\n            <div *ngIf=\"getValue([shipment], 'volume', true) > 0 || getValue([shipment], 'weight', true) > 0\">\r\n              <span><transflo-number [number]=\"getValue([shipment], 'volume', true)\"></transflo-number>\r\n                &nbsp;ft³\r\n              </span>\r\n              <span><transflo-number [number]=\"getValue([shipment], 'weight', true)\"></transflo-number>\r\n                &nbsp;lbs\r\n              </span>\r\n            </div>\r\n            <div *ngIf=\"getValue([shipment], 'volume', false) > 0 || getValue([shipment], 'weight', false) > 0\">\r\n              <span><transflo-number [number]=\"getValue([shipment], 'volume', false)\"></transflo-number>\r\n                &nbsp;cm³\r\n              </span>\r\n              <span><transflo-number [number]=\"getValue([shipment], 'weight', false)\"></transflo-number>\r\n                &nbsp;kg\r\n              </span>\r\n            </div>\r\n            <strong><a (click)=\"startEditShipment(shipment); shipmentModal.show()\">BOL {{shipment.shipmentBOL}}</a></strong>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div class=\"skeleton-item-container\" [ngClass]=\"{'-danger': stop.invalid}\">\r\n        <div class=\"flex flex-wrap content-stretch\" *ngIf=\"stop.isService\">\r\n          <p class=\"col-6 pr2\">\r\n            <strong>{{stop.date}}</strong>\r\n            <span>{{stop.time}}</span>\r\n          </p>\r\n          <div class=\"col-6 right-align pl2\">\r\n          </div>\r\n          <p class=\"col-6 self-end pr2 pt3\">\r\n            <strong>{{stop.addressLines && stop.addressLines[0] && stop.addressLines[0].val}}</strong>\r\n            <span>{{stop.addressLines && stop.addressLines[1] && stop.addressLines[1].val}}</span>\r\n            <span>{{stop.country}}, {{stop.state}}, {{stop.postalCode}}</span>\r\n          </p>\r\n          <div class=\"col-6 right-align self-end pl2 pt3\">\r\n            <strong>{{stop.contactName}}</strong>\r\n          </div>\r\n        </div>\r\n        <div class=\"flex flex-wrap content-stretch\" *ngIf=\"!stop.isService\">\r\n          <p class=\"col-6 pr2\">\r\n            <strong>{{stop.date}}</strong>\r\n            <span>{{stop.time}}</span>\r\n          </p>\r\n          <div class=\"col-6 right-align pl2\">\r\n            <div *ngIf=\"stop.truckLoad.showImperial\">\r\n              <strong class=\"pl2\"><transflo-number [number]=\"stop.truckLoad.volumeImperial\"></transflo-number>\r\n                ft³\r\n              </strong>\r\n              <strong class=\"pl2\"><transflo-number [number]=\"stop.truckLoad.weightImperial\"></transflo-number>\r\n                lbs\r\n              </strong>\r\n            </div>\r\n            <div *ngIf=\"stop.truckLoad.showDecimal\">\r\n              <strong class=\"pl2\"><transflo-number [number]=\"stop.truckLoad.volumeDecimal\"></transflo-number>\r\n                cm³\r\n              </strong>\r\n              <strong class=\"pl2\"><transflo-number [number]=\"stop.truckLoad.weightDecimal\"></transflo-number>\r\n                kg\r\n              </strong>\r\n            </div>\r\n            <div class=\"skeleton-item-hint\">Truck Load</div>\r\n          </div>\r\n          <p class=\"col-6 self-end pr2 pt3\">\r\n            <strong>{{stop.addressLines && stop.addressLines[0] && stop.addressLines[0].val}}</strong>\r\n            <span>{{stop.addressLines && stop.addressLines[1] && stop.addressLines[1].val}}</span><br />\r\n            <span>{{stop.city}}, {{stop.state}}, {{stop.postalCode}}</span>\r\n          </p>\r\n          <div class=\"col-6 right-align self-end pl2 pt3\">\r\n            <strong>{{stop.contactName}}</strong>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"skeleton-item-footer\" dropdown keyboardNav=\"true\" autoClose=\"disabled\">\r\n        <!--<button type=\"button\" class=\"skeleton-item-add\" (click)=\"newServiceStop(stop);serviceStopModal.show()\"><span class=\"plus\">+</span> Add Stop</button>-->\r\n      </div>\r\n      <ul class=\"skeleton-item-controls\" [ngClass]=\"{'-danger': stop.invalid}\">\r\n        <li>\r\n          <button type=\"button\" title=\"Move Up\" [hidden]=\"idx == 0 || readOnly\" (click)=\"moveStop(stop, 'up')\"><svg class=\"icon -up\"><use xlink:href=\"#svg_up\"/></svg></button>\r\n          <button type=\"button\" title=\"Move Down\" [hidden]=\"idx == stops.length - 1|| readOnly\" (click)=\"moveStop(stop, 'down')\"><svg class=\"icon -down\"><use xlink:href=\"#svg_down\"/></svg></button>\r\n        </li>\r\n        <li>\r\n          <button type=\"button\" title=\"Change Stop\" [disabled]=\"isCommonCarrier\" [hidden]=\"stop.isService\" (click)=\"selectStop(stop); stopModal.show()\"><svg class=\"icon -pen-lg\"><use xlink:href=\"#svg_pen_lg\"/></svg></button>\r\n          <button type=\"button\" title=\"Change Stop\" [disabled]=\"isCommonCarrier\" [hidden]=\"!stop.isService\" (click)=\"selectStop(stop); serviceStopModal.show()\"><svg class=\"icon -pen-lg\"><use xlink:href=\"#svg_pen_lg\"/></svg></button>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"center pt4 pb4\" >\r\n    <a class=\"button -primary -lg\" (click)=\"createShipment(); shipmentModal.show()\" [hidden]=\"shipments && shipments.length > 0\"><span class=\"plus\">+</span> Create First Shipment</a>\r\n  </div>\r\n</div>\r\n\r\n\r\n<!-- Change stop modal -->\r\n<div bsModal #stopModal=\"bs-modal\" class=\"modal fade\" (onShown)=\"scrollBottom()\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myStopModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\">\r\n    <form action=\"\" novalidate>\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <button type=\"button\" class=\"modal-close\" aria-label=\"Close\" (click)=\"stopModal.hide();\" title=\"Close\" tabindex=\"-1\">&times;</button>\r\n          <h1 class=\"modal-title inline-block\">Change Stop</h1>\r\n\r\n          <div class=\"dropdown inline-block button-group -large\" dropdown keyboardNav=\"true\" autoClose=\"outsideClick\" [isOpen]=\"currentStop.errors && currentStop.errors.length\" [hidden]=\"(currentStop.errors && currentStop.errors.length == 0) || !currentStop.errors\">\r\n            <button type=\"button\" class=\"button -icon -outline-danger -active fs17\" dropdownToggle>!</button>\r\n            <div class=\"dropdown-menu -md -center\" role=\"menu\" dropdownMenu>\r\n              <h3 [hidden]=\"currentStop.errors && currentStop.errors.length == 0\" class=\"label-danger\">{{errorMessage}}</h3>\r\n              <table class=\"table -list\" [hidden]=\"currentStop.errors && currentStop.errors.length == 0\">\r\n                <tr *ngFor=\"let error of currentStop.errors\">\r\n                  <td>&bull;</td>\r\n                  <td>\r\n                    <span>{{error.error}}</span>\r\n                  </td>\r\n                </tr>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"modal-body\" scroll [scrollEmitter]=\"scrollEmitter\">\r\n          <div class=\"modal-cols flex\">\r\n            <div class=\"modal-cols-separator\"></div>\r\n            <div class=\"pl4 pr8 col-6\">\r\n              <h2 class=\"label-alert\"><span class=\"icon -alert -lg\"></span> You are about to change a stop which is used by the following shipments:</h2>\r\n              <ul class=\"ul-short-list\">\r\n\t\t\t    <li *ngFor=\"let shipment of getAffectedShipments(currentStop)\">\r\n\t\t\t      <strong [hidden]=\"shipment.shipmentBOL\">No BOL Specified</strong>\r\n\t\t\t      <strong [hidden]=\"!shipment.shipmentBOL\">BOL {{shipment.shipmentBOL}}</strong>\r\n\t\t\t    </li>\r\n              </ul>\r\n            </div>\r\n            <div class=\"pl8 pr4 col-6\">\r\n              <div class=\"form-group\">\r\n                <label class=\"form-label\">Date*</label>\r\n                <input autocomplete=\"off\" date-picker [date]=\"currentStop && currentStop.date\" (datechanged)=\"selectDateStop(currentStop, $event)\" class=\"form-control -datepicker\" required/>\r\n\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label class=\"form-label\">Time*</label>\r\n                <input autocomplete=\"off\" class=\"form-control\" [(ngModel)]=\"timeValue\"  (ngModelChange)=\"timeSelectedStop(currentStop, $event)\" type=\"text\" placeholder=\"\" required maxlength=\"100\"/>\r\n\r\n\r\n                <!--transflo-simple-dropdown [values]=\"times\" [stringValue]=\"timeValue\" (attributeChanged)=\"timeSelectedStop(currentStop, $event)\"></transflo-simple-dropdown-->\r\n              </div>\r\n\r\n              <div class=\"form-group\" [ngClass]=\"{'-x5': idx == 0}\" *ngFor=\"let addrLine of currentStop && currentStop.addressLines; let idx = index\">\r\n                <label class=\"form-label\">Address Line {{idx + 1}}</label><span [hidden]=\"idx != 0\">*</span>\r\n                <input [hidden]=\"idx == currentStop.addressLines.length - 1\" [disabled]=\"isCommonCarrier\" autocomplete=\"off\" class=\"form-control\" [(ngModel)]=\"addrLine.val\" [required]=\"idx == 0\" [maxLength]=\"100\"/>\r\n                <div [hidden]=\"idx != currentStop.addressLines.length - 1\">\r\n                  <button [disabled]=\"isCommonCarrier\" [hidden]=\"currentStop.addressLines.length > 2\" class=\"button -outline -addon\" (click)=\"addAddressLine(currentStop)\">+</button>\r\n                  <input [disabled]=\"isCommonCarrier\" autocomplete=\"off\" class=\"form-control\" [(ngModel)]=\"addrLine.val\" >\r\n                </div>\r\n              </div>\r\n              \r\n              <div class=\"form-group flex\">\r\n                <div class=\"col-7 pr1\">\r\n                  <label class=\"form-label\">City*</label>\r\n\t\t\t\t  <input autocomplete=\"off\" [disabled]=\"isCommonCarrier\" class=\"form-control\" [ngClass]=\"{'error': loadValidationErrors.city}\" [(ngModel)]=\"currentStop && currentStop.city\" required maxlength=\"100\"/>\r\n                  <!--<input autocomplete=\"off\" [(ngModel)]=\"currentStop && currentStop.city\" type=\"text\" required />-->\r\n                </div>\r\n                <div class=\"col-5 pl1\">\r\n                  <label class=\"form-label\">State*</label>\r\n                  <input autocomplete=\"off\" [disabled]=\"isCommonCarrier\" class=\"form-control\" [(ngModel)]=\"currentStop && currentStop.state\" required maxlength=\"2\"/>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group flex\">\r\n                <div class=\"col-7 pr1\">\r\n                  <label class=\"form-label\">Country</label>\r\n                  <input autocomplete=\"off\" [disabled]=\"isCommonCarrier\" class=\"form-control\" [(ngModel)]=\"currentStop && currentStop.country\"  maxlength=\"100\"/>\r\n                </div>\r\n                <div class=\"col-5 pl1\">\r\n                  <label class=\"form-label\">ZIP*</label>\r\n                  <input autocomplete=\"off\" [disabled]=\"isCommonCarrier\" class=\"form-control\" [(ngModel)]=\"currentStop && currentStop.postalCode\" required maxlength=\"10\"/>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group -x5\">\r\n                <label class=\"form-label\">Name*</label>\r\n                <input autocomplete=\"off\" [disabled]=\"isCommonCarrier\" class=\"form-control\" [(ngModel)]=\"currentStop && currentStop.contactName\" required maxlength=\"100\"/>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label class=\"form-label\">Company*</label>\r\n                <input autocomplete=\"off\" [disabled]=\"isCommonCarrier\" class=\"form-control\" [(ngModel)]=\"currentStop && currentStop.company\" required maxlength=\"100\"/>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label class=\"form-label\">Phone*</label>\r\n                <input autocomplete=\"off\" [disabled]=\"isCommonCarrier\" class=\"form-control\" type=\"tel\" [(ngModel)]=\"currentStop && currentStop.phoneNumber\" required maxlength=\"50\"/>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button class=\"button -outline\" type=\"button\" (click)=\"stopModal.hide();\">Cancel</button>\r\n          <button class=\"button -primary\" type=\"button\" (click)=\"updateStop(); stopModal.hide()\">Update stop for all shipments</button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n<!-- Service stop modal -->\r\n<div bsModal #serviceStopModal=\"bs-modal\" (onShown)=\"scrollBottom(); showButtons();\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myStopModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\">\r\n    <form action=\"\" novalidate>\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <button type=\"button\" class=\"modal-close\" aria-label=\"Close\" (click)=\"serviceStopModal.hide();\" title=\"Close\" tabindex=\"-1\">&times;</button>\r\n          <h1 class=\"modal-title inline-block\">{{currentServiceStop && (currentServiceStop._id || currentServiceStop.id) ? 'Change Stop' : 'Create Stop'}}</h1>\r\n          <div class=\"dropdown inline-block button-group -large\" dropdown keyboardNav=\"true\" autoClose=\"outsideClick\" [isOpen]=\"currentServiceStop.errors && currentServiceStop.errors.length\" [hidden]=\"(currentServiceStop.errors && currentServiceStop.errors.length == 0) || !currentServiceStop.errors\">\r\n            <button type=\"button\" class=\"button -icon -outline-danger -active fs17\" [disabled]=\"isCommonCarrier\" dropdownToggle>!</button>\r\n            <div class=\"dropdown-menu -md -center\" role=\"menu\" dropdownMenu>\r\n              <h3 [hidden]=\"currentServiceStop.errors && currentServiceStop.errors.length == 0\" class=\"label-danger\">{{errorMessage}}</h3>\r\n              <table class=\"table -list\" [hidden]=\"currentServiceStop.errors && currentServiceStop.errors.length == 0\">\r\n\r\n                <tr *ngFor=\"let error of currentServiceStop.errors\">\r\n                  <td>&bull;</td>\r\n                  <td>\r\n                    <span>{{error.error}}</span>\r\n                  </td>\r\n                </tr>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"modal-body\" scroll [scrollEmitter]=\"scrollEmitter\">\r\n          <div class=\"modal-cols flex justify-center\">\r\n            <div class=\"pl4 pr4 col-6\">\r\n              <div class=\"form-group\">\r\n                <label class=\"form-label\">Date*</label>\r\n                <input autocomplete=\"off\" date-picker [date]=\"currentServiceStop && currentServiceStop.date\" (datechanged)=\"selectDateStop(currentServiceStop, $event)\" class=\"form-control -datepicker\" />\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label class=\"form-label\">Time*</label>\r\n                <input autocomplete=\"off\" class=\"form-control\" [(ngModel)]=\"currentServiceStop.time\"  (ngModelChange)=\"timeSelectedStop(currentServiceStop, $event)\" type=\"text\" placeholder=\"\" required [maxLength]=\"100\"/>\r\n              </div>\r\n              <div class=\"form-group\" [ngClass]=\"{'-x5': idx == 0}\" *ngFor=\"let addrLine of currentServiceStop && currentServiceStop.addressLines; let idx = index\" >\r\n                <label class=\"form-label\">Address Line {{idx + 1}}</label><span [hidden]=\"idx != 0\">*</span>\r\n                <input [hidden]=\"idx == currentServiceStop.addressLines.length - 1\" autocomplete=\"off\" class=\"form-control\" [(ngModel)]=\"addrLine.val\" [required]=\"idx == 0\" maxlength=\"100\"/>\r\n                <div [hidden]=\"idx != currentServiceStop.addressLines.length - 1\">\r\n                  <button [hidden]=\"currentServiceStop.addressLines.length > 2\" [disabled]=\"isCommonCarrier\" class=\"button -outline -addon\" (click)=\"addAddressLine(currentServiceStop)\">+</button>\r\n                  <input [disabled]=\"isCommonCarrier\" autocomplete=\"off\" class=\"form-control\" [(ngModel)]=\"addrLine.val\" >\r\n                </div>\r\n              </div>\r\n              \r\n              <div class=\"form-group flex\">\r\n                <div class=\"col-7 pr1\">\r\n                  <label class=\"form-label\">City*</label>\r\n                  <input autocomplete=\"off\" [disabled]=\"isCommonCarrier\"  class=\"form-control\" [(ngModel)]=\"currentServiceStop && currentServiceStop.city\" required maxlength=\"100\"/>\r\n                </div>\r\n                <div class=\"col-5 pl1\">\r\n                  <label class=\"form-label\">State*</label>\r\n                  <input autocomplete=\"off\" [disabled]=\"isCommonCarrier\" class=\"form-control\" [(ngModel)]=\"currentServiceStop && currentServiceStop.state\" required maxlength=\"2\"/>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group flex\">\r\n                <div class=\"col-7 pr1\">\r\n                  <label class=\"form-label\">Country</label>\r\n                  <input autocomplete=\"off\" [disabled]=\"isCommonCarrier\" class=\"form-control\" [(ngModel)]=\"currentServiceStop && currentServiceStop.country\"  maxlength=\"100\"/>\r\n                </div>\r\n                <div class=\"col-5 pl1\">\r\n                  <label class=\"form-label\">ZIP*</label>\r\n                  <input autocomplete=\"off\" [disabled]=\"isCommonCarrier\" class=\"form-control\" [(ngModel)]=\"currentServiceStop && currentServiceStop.postalCode\" required maxlength=\"10\"/>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group -x5\">\r\n                <label class=\"form-label\">Name*</label>\r\n                <input autocomplete=\"off\" [disabled]=\"isCommonCarrier\" class=\"form-control\" [(ngModel)]=\"currentServiceStop && currentServiceStop.contactName\" required maxlength=\"100\"/>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label class=\"form-label\">Company*</label>\r\n                <input autocomplete=\"off\" [disabled]=\"isCommonCarrier\" class=\"form-control\" [(ngModel)]=\"currentServiceStop && currentServiceStop.company\" required maxlength=\"100\"/>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label class=\"form-label\">Phone*</label>\r\n                <input autocomplete=\"off\" [disabled]=\"isCommonCarrier\" class=\"form-control\" type=\"tel\" [(ngModel)]=\"currentServiceStop && currentServiceStop.phoneNumber\" required maxlength=\"50\"/>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"button -icon -outline-danger left\" [hidden]=\"currentServiceStop && !(currentServiceStop._id || currentServiceStop.id)\" title=\"Delete\" (click)=\"removeServiceStop(); serviceStopModal.hide();\" tabindex=\"-1\"><svg class=\"icon -trash\"><use xlink:href=\"#svg_trash\"/></svg></button>\r\n          <button class=\"button -outline\" type=\"button\" (click)=\"serviceStopModal.hide();\">Cancel</button>\r\n          <button class=\"button -primary\" type=\"button\" [disabled]=\"serviceStopButtonsDisabled\" [hidden]=\"currentServiceStop && (currentServiceStop._id || currentServiceStop.id)\" (click)=\"serviceStopModal.hide(); createServiceStop()\">Create stop</button>\r\n          <button class=\"button -primary\" type=\"button\" [disabled]=\"serviceStopButtonsDisabled\" [hidden]=\"currentServiceStop && !(currentServiceStop._id || currentServiceStop.id)\" (click)=\"updateServiceStop(); serviceStopModal.hide()\">Update stop</button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n\r\n\r\n<!-- Shipment modal -->\r\n<div bsModal #shipmentModal=\"bs-modal\" (onShown)=\"scrollBottom()\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myShipmentModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\">\r\n    <form #form=\"ngForm\" (submit)=\"addShipment(); shipmentModal.hide();\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <button type=\"button\" class=\"modal-close\" aria-label=\"Close\" (click)=\"shipmentModal.hide()\" title=\"Close\" tabindex=\"-1\">&times;</button>\r\n          <h1 class=\"modal-title inline-block\">Shipment</h1>\r\n          <div class=\"dropdown inline-block button-group -large\" dropdown keyboardNav=\"true\" autoClose=\"outsideClick\" [isOpen]=\"currentShipment && currentShipment.errors && currentShipment.errors.length\" [hidden]=\"(currentShipment && currentShipment.errors && currentShipment.errors.length == 0) || !currentShipment || !currentShipment.errors\">\r\n            <button type=\"button\" class=\"button -icon -outline-danger -active fs17\" dropdownToggle>!</button>\r\n            <div class=\"dropdown-menu -md -center\" role=\"menu\" dropdownMenu>\r\n              <h3 [hidden]=\"currentShipment && currentShipment.errors && currentShipment.errors.length == 0\" class=\"label-danger\">{{errorMessage}}</h3>\r\n              <table class=\"table -list\" [hidden]=\"currentShipment && currentShipment.errors && currentShipment.errors.length == 0\">\r\n                <tr *ngFor=\"let error of currentShipment && currentShipment.errors\">\r\n                  <td>&bull;</td>\r\n                  <td>\r\n                    <span>{{error.error}}</span>\r\n                  </td>\r\n                </tr>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"modal-body\" scroll [scrollEmitter]=\"scrollEmitter\">\r\n          <div class=\"flex form-group\">\r\n            <div class=\"col-4 pr2\">\r\n              <label class=\"form-label\">BOL</label>\r\n              <input autocomplete=\"off\" [disabled]=\"isCommonCarrier\" class=\"form-control\" [(ngModel)]=\"currentShipment && currentShipment.shipmentBOL\"/>\r\n            </div>\r\n            <div class=\"col-8 pl2\">\r\n              <label class=\"form-label\">Special Instructions</label>\r\n              <textarea rows=\"1\" [disabled]=\"isCommonCarrier\" autocomplete=\"off\" class=\"form-control\" [(ngModel)]=\"currentShipment && currentShipment.shipmentCarrierSpecInstructions\" autosize></textarea>\r\n            </div>\r\n          </div>\r\n          <hr class=\"form-group -x5\" />\r\n          <div class=\"modal-cols flex form-group -x5\">\r\n            <div class=\"modal-cols-diff\"></div>\r\n            <div class=\"modal-cols-separator\"></div>\r\n            <div class=\"pl4 pr8 col-6\">\r\n              <h2 class=\"center\">Pick Up</h2>\r\n              <div class=\"form-group -x3\">\r\n                <label class=\"form-label\">Date*</label>\r\n                <input autocomplete=\"off\" [disabled]=\"isCommonCarrier\" date-picker [date]=\"currentStopPickUp && currentStopPickUp.date\" (datechanged)=\"selectDateShipment($event, 'pickup')\" class=\"form-control -datepicker\" required/>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label class=\"form-label\">Time*</label>\r\n                <input autocomplete=\"off\" [disabled]=\"isCommonCarrier\" class=\"form-control\" [(ngModel)]=\"currentStopPickUp.time\"  (ngModelChange)=\"timeSelectedShipment($event, 'pickup')\"  [ngClass]=\"{'-error': loadValidationErrors.time}\" name=\"time\" natype=\"text\" placeholder=\"\" required maxlength=\"100\"/>\r\n\r\n                <!--transflo-simple-dropdown [values]=\"times\" [stringValue]=\"currentStopPickUp.time\" (attributeChanged)=\"timeSelectedShipment($event, 'pickup')\"></transflo-simple-dropdown-->\r\n              </div>\r\n              <div class=\"form-group -x5 center\" dropdown keyboardNav=\"true\" autoClose=\"outsideClick\"(onToggle)=\"searchStopsStr = ''; searchStop();\">\r\n                <button class=\"button-fields\" dropdownToggle>\r\n                  <span class=\"icon -fields\"></span>\r\n                  Fill fields with existing address\r\n                </button>\r\n                <div class=\"dropdown-menu -xlg -center\" role=\"menu\" dropdownMenu>\r\n                  <div class=\"dropdown-filter-field\">\r\n                    <input autocomplete=\"off\" class=\"form-control\" [(ngModel)]=\"searchStopsStr\"  (ngModelChange)=\"searchStop()\" type=\"text\" placeholder=\"Filter\" />\r\n                  </div>\r\n                  <div class=\"dropdown-filter-content\" (scroll)=\"onScrollAddressesDebounced($event)\">\r\n                    <div class=\"form-group -x2\" [hidden]=\"(filteredStops && filteredStops.length == 0) || !filteredStops\">\r\n                      <h5 class=\"dropdown-filter-title\">This Load Stops</h5>\r\n                      <ul class=\"dropdown-filter-list\">\r\n                         <li *ngFor=\"let stop of filteredStops\">\r\n                          <a (click)=\"fillStop(stop, currentStopPickUp)\" dropdownToggle>\r\n                            <strong>    \r\n                              <transflo-date [date]=\"stop.date\" [dontShowTime]=\"true\"></transflo-date>\r\n                              <small>{{stop.time}}</small>\r\n                            </strong>\r\n                            <span>{{getAddress(stop)}}, {{stop.state}}, {{stop.country}}, {{stop.city}}</span>\r\n                            <span class=\"label-gray\">{{stop.contactName}}, {{stop.company}}, {{stop.phone}}</span>\r\n                          </a>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                    <div class=\"form-group -x2\" [hidden]=\"(addresses && addresses.length == 0) || !addresses\">\r\n                      <h5 class=\"dropdown-filter-title\">Existing addressess</h5>\r\n                      <ul class=\"dropdown-filter-list\">\r\n                        <li *ngFor=\"let address of addresses\">\r\n                          <a (click)=\"fillAddress(address, currentStopPickUp)\" dropdownToggle>\r\n                            <svg class=\"icon -star\"><use xlink:href=\"#svg_star\"/></svg>\r\n                            <strong>    \r\n\r\n                            </strong>\r\n                            <span>{{address.addressLines.join(', ')}}, {{address.state}}, {{address.country}}, {{address.city}}</span>\r\n                            <span class=\"label-gray\">{{address.contactName}}, {{address.company}}, {{address.phone}}</span>\r\n                          </a>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group\" *ngFor=\"let addrLine of currentStopPickUp && currentStopPickUp.addressLines; let idx = index\" [ngClass]=\"{'-x5': idx == 0}\">\r\n                <label class=\"form-label\">Address Line {{idx + 1}}</label><span [hidden]=\"idx != 0\">*</span>\r\n\t\t\t\t<input [hidden]=\"idx == currentStopPickUp.addressLines.length - 1\" [disabled]=\"isCommonCarrier\" autocomplete=\"off\" class=\"form-control\" [(ngModel)]=\"addrLine.val\" [required]=\"idx == 0\" [maxLength]=100/>\r\n\t\t\t    <div [hidden]=\"idx != currentStopPickUp.addressLines.length - 1\">\r\n\t\t\t\t  <button [hidden]=\"currentStopPickUp.addressLines.length > 2\" [disabled]=\"isCommonCarrier\" class=\"button -outline -addon\" (click)=\"addAddressLine(currentStopPickUp)\">+</button>\r\n\t\t\t      <input autocomplete=\"off\" [disabled]=\"isCommonCarrier\" class=\"form-control\" [(ngModel)]=\"addrLine.val\">\r\n\t\t\t    </div>\r\n\t\t\t  </div>\r\n              <div class=\"form-group flex\">\r\n                <div class=\"col-7 pr1\">\r\n                  <label class=\"form-label\">City*</label>\r\n                  <input autocomplete=\"off\" [disabled]=\"isCommonCarrier\" class=\"form-control\" [(ngModel)]=\"currentStopPickUp && currentStopPickUp.city\" required maxlength=\"100\"/>\r\n                </div>\r\n                <div class=\"col-5 pl1\">\r\n                  <label class=\"form-label\">State*</label>\r\n                  <input autocomplete=\"off\" [disabled]=\"isCommonCarrier\" class=\"form-control\" [(ngModel)]=\"currentStopPickUp && currentStopPickUp.state\" required maxlength=\"2\"/>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group flex\">\r\n                <div class=\"col-7 pr1\">\r\n                  <label class=\"form-label\">Country</label>\r\n                  <input autocomplete=\"off\" [disabled]=\"isCommonCarrier\" class=\"form-control\" [(ngModel)]=\"currentStopPickUp && currentStopPickUp.country\" maxlength=\"100\"/>\r\n                </div>\r\n                <div class=\"col-5 pl1\">\r\n                  <label class=\"form-label\">ZIP*</label>\r\n                  <input autocomplete=\"off\" [disabled]=\"isCommonCarrier\" class=\"form-control\" [(ngModel)]=\"currentStopPickUp && currentStopPickUp.postalCode\"required maxlength=\"10\"/>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group -x5\">\r\n                <label class=\"form-label\">Name*</label>\r\n                <input autocomplete=\"off\" [disabled]=\"isCommonCarrier\" class=\"form-control\" [(ngModel)]=\"currentStopPickUp && currentStopPickUp.contactName\" required maxlength=\"100\"/>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label class=\"form-label\">Company*</label>\r\n                <input autocomplete=\"off\" [disabled]=\"isCommonCarrier\" class=\"form-control\" [(ngModel)]=\"currentStopPickUp && currentStopPickUp.company\" required maxlength=\"100\"/>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label class=\"form-label\">Phone*</label>\r\n                <input autocomplete=\"off\" [disabled]=\"isCommonCarrier\" class=\"form-control\" type=\"tel\" [(ngModel)]=\"currentStopPickUp && currentStopPickUp.phoneNumber\"  required maxlength=\"50\"/>\r\n              </div>\r\n            </div>\r\n            <div class=\"pl8 pr4 col-6\">\r\n              <h2 class=\"center\">Drop Off</h2>\r\n              <div class=\"form-group -x3\">\r\n                <label class=\"form-label\" >Date*</label>\r\n                <input autocomplete=\"off\" [disabled]=\"isCommonCarrier\" date-picker [date]=\"currentStopDropOff && currentStopDropOff.date\" (datechanged)=\"selectDateShipment($event, 'dropoff')\" class=\"form-control -datepicker\" required/>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label class=\"form-label\">Time*</label>\r\n                <input autocomplete=\"off\" [disabled]=\"isCommonCarrier\" class=\"form-control\" [(ngModel)]=\"currentStopDropOff.time\"  (ngModelChange)=\"timeSelectedShipment($event, 'dropoff')\" type=\"text\" placeholder=\"\" required maxlength=\"100\"/>\r\n                <!--transflo-simple-dropdown [values]=\"times\" [stringValue]=\"currentStopDropOff.time\" (attributeChanged)=\"timeSelectedShipment($event, 'dropoff')\"></transflo-simple-dropdown-->\r\n              </div>\r\n              <div class=\"form-group -x5 center\" dropdown keyboardNav=\"true\" autoClose=\"outsideClick\" (onToggle)=\"searchStopsStr = ''; searchStop();\">\r\n                <button class=\"button-fields\" dropdownToggle>\r\n                  <span class=\"icon -fields\"></span>\r\n                  Fill fields with existing address\r\n                </button>\r\n                <div class=\"dropdown-menu -xlg -center\" role=\"menu\" dropdownMenu>\r\n                  <div class=\"dropdown-filter-field\">\r\n                    <input autocomplete=\"off\" [disabled]=\"isCommonCarrier\" class=\"form-control\" [(ngModel)]=\"searchStopsStr\"  (ngModelChange)=\"searchStop()\" type=\"text\" placeholder=\"Filter\" />\r\n                  </div>\r\n                  <div class=\"dropdown-filter-content\"  (scroll)=\"onScrollAddressesDebounced($event)\">\r\n                    <div class=\"form-group -x2\" [hidden]=\"(filteredStops && filteredStops.length == 0) || !filteredStops\">\r\n                      <h5 class=\"dropdown-filter-title\">This Load Stops</h5>\r\n                      <ul class=\"dropdown-filter-list\">\r\n                         <li *ngFor=\"let stop of filteredStops\">\r\n                          <a (click)=\"fillStop(stop, currentStopDropOff)\" dropdownToggle>\r\n                            <strong>    \r\n                              <transflo-date [date]=\"stop.date\" [dontShowTime]=\"true\"></transflo-date>\r\n                              <small>{{stop.time}}</small>\r\n                            </strong>\r\n                            <span>{{getAddress(stop)}}, {{stop.state}}, {{stop.country}}, {{stop.city}}</span>\r\n                            <span class=\"label-gray\">{{stop.contactName}}, {{stop.company}}, {{stop.phone}}</span>\r\n                          </a>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                    <div class=\"form-group -x2\" [hidden]=\"(addresses && addresses.length == 0) || !addresses\">\r\n                      <h5 class=\"dropdown-filter-title\">Existing addressess</h5>\r\n                      <ul class=\"dropdown-filter-list\">\r\n                        <li *ngFor=\"let address of addresses\">\r\n                          <a (click)=\"fillAddress(address, currentStopDropOff)\" dropdownToggle>\r\n                            <svg class=\"icon -star\"><use xlink:href=\"#svg_star\"/></svg>\r\n                            <strong>    \r\n\r\n                            </strong>\r\n                            <span>{{address.addressLines.join(', ')}}, {{address.state}}, {{address.country}}, {{address.city}}</span>\r\n                            <span class=\"label-gray\">{{address.contactName}}, {{address.company}}, {{address.phone}}</span>\r\n                          </a>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group\" *ngFor=\"let addrLine of currentStopDropOff && currentStopDropOff.addressLines; let idx = index\" [ngClass]=\"{'-x5': idx == 0}\">\r\n                <label class=\"form-label\">Address Line {{idx + 1}}</label><span [hidden]=\"idx != 0\">*</span>\r\n                <input [hidden]=\"idx == currentStopDropOff.addressLines.length - 1\" [disabled]=\"isCommonCarrier\" autocomplete=\"off\" class=\"form-control\" [(ngModel)]=\"addrLine.val\" [maxLength]=100  [required]=\"idx == 0\" />\r\n                <div [hidden]=\"idx != currentStopDropOff.addressLines.length - 1\">\r\n                  <button [hidden]=\"currentStopDropOff.addressLines.length > 2\" [disabled]=\"isCommonCarrier\" class=\"button -outline -addon\" (click)=\"addAddressLine(currentStopDropOff)\">+</button>\r\n                  <input autocomplete=\"off\" [disabled]=\"isCommonCarrier\" class=\"form-control\" [(ngModel)]=\"addrLine.val\">\r\n                </div>         \r\n              </div>\r\n              <div class=\"form-group flex\">\r\n                <div class=\"col-7 pr1\">\r\n                  <label class=\"form-label\">City*</label>\r\n\t\t\t\t  <input autocomplete=\"off\" [disabled]=\"isCommonCarrier\" class=\"form-control\" [(ngModel)]=\"currentStopDropOff && currentStopDropOff.city\" maxlength=\"100\" required />\r\n                  </div>\r\n                <div class=\"col-5 pl1\">\r\n                  <label class=\"form-label\">State*</label>\r\n                  <input autocomplete=\"off\" [disabled]=\"isCommonCarrier\" class=\"form-control\" type=\"text\" name=\"state\" [(ngModel)]=\"currentStopDropOff && currentStopDropOff.state\" maxlength=\"2\" required />\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group flex\">\r\n                <div class=\"col-7 pr1\">\r\n                  <label class=\"form-label\">Country</label>\r\n                  <input autocomplete=\"off\" [disabled]=\"isCommonCarrier\" class=\"form-control\" [(ngModel)]=\"currentStopDropOff && currentStopDropOff.country\" maxlength=\"100\" />\r\n                </div>\r\n                <div class=\"col-5 pl1\">\r\n                  <label class=\"form-label\">ZIP*</label>\r\n                  <input autocomplete=\"off\" [disabled]=\"isCommonCarrier\" class=\"form-control\" [(ngModel)]=\"currentStopDropOff && currentStopDropOff.postalCode\" maxlength=\"10\" required/>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group -x5\">\r\n                <label class=\"form-label\">Name*</label>\r\n                <input autocomplete=\"off\" [disabled]=\"isCommonCarrier\" class=\"form-control\" [(ngModel)]=\"currentStopDropOff && currentStopDropOff.contactName\" maxlength=\"100\" required/>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label class=\"form-label\">Company*</label>\r\n                <input autocomplete=\"off\" [disabled]=\"isCommonCarrier\" class=\"form-control\" [(ngModel)]=\"currentStopDropOff && currentStopDropOff.company\" maxlength=\"100\" required/>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label class=\"form-label\">Phone*</label>\r\n                <input autocomplete=\"off\" [disabled]=\"isCommonCarrier\" class=\"form-control\" type=\"tel\" [(ngModel)]=\"currentStopDropOff && currentStopDropOff.phoneNumber\" maxlength=\"50\" required/>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group -x7\">\r\n            <h2>\r\n              Packages\r\n              &nbsp;\r\n              <button [disabled]=\"isCommonCarrier\" class=\"button -outline\" type=\"button\" title=\"Add Line\" (click)=\"createPackage()\"><span class=\"plus\">+</span> Add package</button>\r\n            </h2>\r\n            <table class=\"table -simple\">\r\n              <thead>\r\n                <tr>\r\n                  <th width=\"7%\">Qty</th>\r\n                  <th width=\"17%\">Type</th>\r\n                  <th width=\"17%\">Height</th>\r\n                  <th width=\"17%\">Weight</th>\r\n                  <th width=\"17%\">Volume</th>\r\n                  <th width=\"25%\" class=\"nowrap\">Freight Class</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr *ngFor=\"let package of currentShipment && currentShipment.packages; let idx = index\">\r\n                  <td>\r\n                    <input  autocomplete=\"off\" class=\"form-control\" type=\"number\"  [(ngModel)]=\"package.quantity\" min=\"1\" maxlength=\"7\" />\r\n                  </td>\r\n                  <td>\r\n                    <select class=\"form-control\" [(ngModel)]=\"package.type\">\r\n                      <option *ngFor=\"let unit of packageUnits\">{{unit}}</option>\r\n                    </select>\r\n                  </td>\r\n                  <td>\r\n                    <div class=\"flex\">\r\n                      <div class=\"col-6 -merged\">\r\n                        <input autocomplete=\"off\"  type=\"text\" pattern=\"[0-9999999]\" class=\"form-control\" style=\"width: 62px;\" [(ngModel)]=\"package.height\" maxlength=\"7\"/>\r\n                      </div>\r\n                      <div class=\"col-6 -merged\">\r\n                        <select class=\"form-control\" style=\"width: 62px;\" [(ngModel)]=\"package.heightMeasure\" (ngModelChange)=\"setMeasurement(package, package.heightMeasure)\">\r\n                          <option *ngFor=\"let unit of heightUnits\" [selected]=\"package.heightMeasure == unit\">{{unit}}</option>\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                  <td>\r\n                    <div class=\"flex\">\r\n                      <div class=\"col-6 -merged\">\r\n                        <input autocomplete=\"off\"  class=\"form-control\" style=\"width: 62px;\" [(ngModel)]=\"package.weight\" type=\"text\" pattern=\"[0-9999999]\"  maxlength=\"7\" />\r\n                      </div>\r\n                      <div class=\"col-6 -merged\">\r\n                         <select class=\"form-control\" style=\"width: 62px;\" [(ngModel)]=\"package.weightMeasure\" (ngModelChange)=\"setMeasurement(package, package.weightMeasure)\">\r\n                          <option *ngFor=\"let unit of weightUnits\" [selected]=\"package.weightMeasure == unit\">{{unit}}</option>\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                  <td>\r\n                    <div class=\"flex\">\r\n                      <div class=\"col-6 -merged\">\r\n                        <input autocomplete=\"off\"  class=\"form-control\" style=\"width: 62px;\" [(ngModel)]=\"package.volume\" type=\"text\" pattern=\"[0-9999999]\"  maxlength=\"7\"/>\r\n                      </div>\r\n                      <div class=\"col-6 -merged\">\r\n                        <select class=\"form-control\" style=\"width: 62px;\" [(ngModel)]=\"package.volumeMeasure\" (ngModelChange)=\"setMeasurement(package, package.volumeMeasure)\">\r\n                          <option *ngFor=\"let unit of volumeUnits\" [selected]=\"package.volumeMeasure == unit\">{{unit}}</option>\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                  <td>\r\n                    <button class=\"table-remove\" type=\"button\" title=\"Remove\" (click)=\"removePackage(idx)\" tabindex=\"-1\">&times;</button>\r\n                    <input autocomplete=\"off\" class=\"form-control\" [(ngModel)]=\"package.freightClass\"/>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <div class=\"form-group -x7\">\r\n            <h2>\r\n              Orders\r\n              &nbsp;\r\n              <button class=\"button -outline\" type=\"button\" [disabled]=\"isCommonCarrier\" (click)=\"createOrder()\" title=\"Add Line\"><span class=\"plus\">+</span> Add Order</button>\r\n            </h2>\r\n            <table class=\"table -simple\">\r\n              <thead>\r\n                <tr>\r\n                  <th width=\"50%\">Order #</th>\r\n                  <th width=\"50%\">Purchase Order #</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr *ngFor=\"let order of currentShipment && currentShipment.orders; let idx = index\">\r\n                  <td>\r\n                    <input autocomplete=\"off\" class=\"form-control\" [(ngModel)]=\"order.orderNumber\" />\r\n                  </td>\r\n                  <td>\r\n                    <button class=\"table-remove\" type=\"button\"  title=\"Remove\" (click)=\"removeOrder(idx)\" tabindex=\"-1\">&times;</button>\r\n                    <input autocomplete=\"off\" class=\"form-control\" [(ngModel)]=\"order.purchaseOrderNumber\"  />\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        <div class=\"modal-footer\" [hidden]=\"currentShipment && (currentShipment._id || currentShipment.id)\">\r\n          <button class=\"button -outline\" type=\"button\" (click)=\"shipmentModal.hide();\" tabindex=\"-1\">Cancel</button>\r\n          <button class=\"button -primary\" type=\"submit\">Add Shipment</button>\r\n        </div>\r\n        <div class=\"modal-footer\" [hidden]=\"currentShipment && !(currentShipment._id || currentShipment.id)\">\r\n          <button type=\"button\" class=\"button -icon -outline-danger left\" title=\"Delete\" [disabled]=\"isCommonCarrier\" (click)=\"removeShipment(); shipmentModal.hide();\" tabindex=\"-1\"><svg class=\"icon -trash\"><use xlink:href=\"#svg_trash\"/></svg></button>\r\n          <button class=\"button -outline\" type=\"button\" (click)=\"shipmentModal.hide();\" tabindex=\"-1\">Cancel</button>\r\n          <button class=\"button -primary\" type=\"button\" [disabled]=\"isCommonCarrier\" (click)=\"updateShipment(); shipmentModal.hide()\">Update Shipment</button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n"

/***/ }),
/* 696 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	function __export(m) {
	    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
	}
	__export(__webpack_require__(697));
	

/***/ }),
/* 697 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var core_1 = __webpack_require__(2);
	var index_1 = __webpack_require__(508);
	var router_deprecated_1 = __webpack_require__(281);
	var index_2 = __webpack_require__(632);
	__webpack_require__(698);
	var SigninComponent = (function () {
	    function SigninComponent(userService, router) {
	        this.userService = userService;
	        this.router = router;
	        this.error = false;
	        this.restoreShown = false;
	        this.email = '';
	        this.loading = false;
	    }
	    ;
	    SigninComponent.prototype.handleError = function (error) {
	        if (error.status && error.status == 302) {
	            var data = error.json();
	            this.email = data.email;
	            this.restoreShown = true;
	        }
	        else {
	            this.error = true;
	        }
	        this.toggleLoading();
	    };
	    ;
	    SigninComponent.prototype.toggleLoading = function () {
	        this.loading = !this.loading;
	    };
	    ;
	    SigninComponent.prototype.showEULA = function () {
	        this.eulaMsg.showModal();
	    };
	    SigninComponent.prototype.signin = function (login, pass) {
	        var _this = this;
	        this.restoreShown = false;
	        this.error = false;
	        this.toggleLoading();
	        this.userService
	            .signIn(login, pass)
	            .then((function (result) {
	            _this.error = false;
	            _this.restoreShown = false;
	            _this.userService.responseParser.apply(_this.userService, [result]);
	            _this.toggleLoading();
	        }).bind(this))
	            .catch(this.handleError.bind(this));
	    };
	    ;
	    __decorate([
	        core_1.ViewChild(index_2.EULAComponent), 
	        __metadata('design:type', index_2.EULAComponent)
	    ], SigninComponent.prototype, "eulaMsg", void 0);
	    SigninComponent = __decorate([
	        core_1.Component({
	            selector: 'signin',
	            template: __webpack_require__(700),
	            directives: [router_deprecated_1.ROUTER_DIRECTIVES, index_2.EULAComponent]
	        }), 
	        __metadata('design:paramtypes', [index_1.UserService, router_deprecated_1.Router])
	    ], SigninComponent);
	    return SigninComponent;
	}());
	exports.SigninComponent = SigninComponent;
	

/***/ }),
/* 698 */,
/* 699 */,
/* 700 */
/***/ (function(module, exports) {

	module.exports = "<div class=\"loading-page\" [hidden]=\"!loading\" style=\"top: 0; left: 0; height: 100vh;\"><em></em><em></em><em></em></div>\r\n\r\n<div class=\"signin\">\r\n  <div class=\"signin-header\">\r\n    <svg class=\"icon -logo-lg\"><use xlink:href=\"#svg_logo_lg\"/></svg>\r\n  </div>\r\n  <div class=\"signin-body\">\r\n    <div class=\"signin-content\">\r\n      <h2 class=\"signin-h2 center\" [hidden]=\"restoreShown\">Sign in</h2>\r\n      <form novalidate (submit)=\"signin(login, password)\" [hidden]=\"restoreShown\">\r\n        <div class=\"form-group signin-error\" [hidden]=\"!error\">User with specified login and password is not found</div>\r\n        <div class=\"form-group -x2\">\r\n          <input class=\"signin-form-control\" [ngClass]=\"{'error': error}\" type=\"email\" placeholder=\"Username\" autofocus [(ngModel)]=\"login\" />\r\n        </div>\r\n        <div class=\"form-group -x2\">\r\n\t\t  <input class=\"signin-form-control form-control-password\" [ngClass]=\"{'error': error}\" placeholder=\"Password\" [(ngModel)]=\"password\" \r\n\t\t\t\ttype=\"password\" onmousedown=\"this.type='text'\" onmouseup=\"this.type='password'\" onmousemove=\"this.type='password'\"/>\r\n\t\t</div>\r\n        <div class=\"form-group -x2 flex\">\r\n          <div class=\"col-6 pr2\">\r\n            <a [routerLink]=\"['Register']\" class=\"signin-button -outline -block\" tabindex=\"-1\">Register</a>\r\n          </div>\r\n          <div class=\"col-6 pl2\">\r\n            <button class=\"signin-button -block\" type=\"submit\">Sign in</button>\r\n          </div>\r\n        </div>\r\n\t    <div class=\"form-group -x3 \">\r\n\t\t  By using Transflo Command Center, you are agreeing to the terms and conditions. Click <a (click)=\"showEULA()\">here</a> to read more.\r\n\t    </div>\r\n      </form>\r\n      <form novalidate [hidden]=\"!restoreShown\">\r\n        <div class=\"form-group\">\r\n          <a class=\"signin-back\" (click)=\"restoreShown = false\">Back to login</a>\r\n        </div>\r\n        <div class=\"form-group -x3 fs24\">\r\n          To create password please follow the link which have been sent to <a>{{email}}</a>\r\n        </div>\r\n        <div class=\"signin-hr\"></div>\r\n        <div class=\"fs16\">Check email and follow the link.</div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n  <div class=\"signin-footer\">\r\n    &copy; Transflo, 2017\r\n  </div>\r\n</div>\r\n<transflo-eula></transflo-eula>"

/***/ }),
/* 701 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	function __export(m) {
	    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
	}
	__export(__webpack_require__(702));
	

/***/ }),
/* 702 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var core_1 = __webpack_require__(2);
	var index_1 = __webpack_require__(508);
	var router_deprecated_1 = __webpack_require__(281);
	var index_2 = __webpack_require__(508);
	var index_3 = __webpack_require__(632);
	var RegisterComponent = (function () {
	    function RegisterComponent(userService, router, validationService) {
	        this.userService = userService;
	        this.router = router;
	        this.validationService = validationService;
	        this.usDotBrokerZipError = false;
	        this.userExistError = false;
	        this.emailValid = true;
	        this.passwordNotMatch = false;
	        this.checkEULA = false;
	    }
	    ;
	    RegisterComponent.prototype.handleError = function (error) {
	        if (error.status) {
	            var data = error.json();
	            var serverUsDotBrokerZipErrorMessage = void 0;
	            var serverUserExistErrorMessage = void 0;
	            if (data.modelState) {
	                if (data.modelState.serverError) {
	                    this.serverErrorMessage = data.modelState.serverError[0];
	                }
	                if (data.modelState.usDotBrokerZipError) {
	                    serverUsDotBrokerZipErrorMessage = data.modelState.usDotBrokerZipError[0];
	                }
	                if (data.modelState.userExistError) {
	                    serverUserExistErrorMessage = data.modelState.userExistError[0];
	                }
	                if (serverUsDotBrokerZipErrorMessage != null) {
	                    this.usDotBrokerZipError = true;
	                    this.serverErrorMessage = serverUsDotBrokerZipErrorMessage;
	                }
	                if (serverUserExistErrorMessage != null) {
	                    this.userExistError = true;
	                    this.serverErrorMessage = serverUserExistErrorMessage;
	                }
	            }
	            else {
	                this.serverErrorMessage = "Oops! Something went wrong!";
	            }
	        }
	    };
	    ;
	    RegisterComponent.prototype.register = function () {
	        var _this = this;
	        this.userService
	            .register(this.usdot, this.brokerID, this.zip, this.userEmail, this.userName, this.password, this.firstName, this.lastName)
	            .then((function (res) {
	            _this.usDotBrokerZipError = false;
	            _this.userExistError = false;
	            _this.userService.responseParser.apply(_this.userService, [res]);
	        }).bind(this))
	            .catch(this.handleError.bind(this));
	    };
	    ;
	    RegisterComponent.prototype.emailValidator = function (email) {
	        this.emailValid = true;
	        if (this.userEmail) {
	            this.emailValid = this.validationService.emailValidator(this.userEmail);
	        }
	    };
	    RegisterComponent.prototype.passwordValidator = function () {
	        this.passwordNotMatch = false;
	        if (this.password && this.verifypassword)
	            this.passwordNotMatch = this.password != this.verifypassword;
	    };
	    RegisterComponent.prototype.onSubmit = function () {
	        if (this.inputValid())
	            this.register();
	    };
	    RegisterComponent.prototype.inputValid = function () {
	        var valid = this.checkEULA && this.emailValid && this.userEmail != null && !this.passwordNotMatch && this.password != null && this.verifypassword != null;
	        return valid;
	    };
	    RegisterComponent.prototype.showEULA = function () {
	        this.eulaMsg.showModal();
	    };
	    __decorate([
	        core_1.ViewChild(index_3.EULAComponent), 
	        __metadata('design:type', index_3.EULAComponent)
	    ], RegisterComponent.prototype, "eulaMsg", void 0);
	    RegisterComponent = __decorate([
	        core_1.Component({
	            selector: 'register',
	            template: __webpack_require__(703),
	            directives: [router_deprecated_1.ROUTER_DIRECTIVES, index_3.EULAComponent]
	        }), 
	        __metadata('design:paramtypes', [index_1.UserService, router_deprecated_1.Router, index_2.ValidationService])
	    ], RegisterComponent);
	    return RegisterComponent;
	}());
	exports.RegisterComponent = RegisterComponent;
	;
	

/***/ }),
/* 703 */
/***/ (function(module, exports) {

	module.exports = "<div class=\"loading-page\" [hidden]=\"!loading\"><em></em><em></em><em></em></div>\r\n\r\n<div class=\"flex header-fake\">\r\n  <span class=\"header-item header-logo\">\r\n    <svg class=\"icon -logo\"><use xlink:href=\"#svg_logo\" /></svg>\r\n  </span>\r\n</div>\r\n\r\n<div class=\"page-header -margined\" >\r\n  <div class=\"flex items-center\">\r\n    <div class=\"flex-auto flex items-center\">\r\n      <h1 class=\"self-baseline\">Register</h1>\r\n    </div>\r\n  </div>\r\n\t  <form class=\"filters-form\" #registerForm=\"ngForm\"  (ngSubmit)=\"onSubmit()\">\r\n\t    <div>\r\n\t      <hr />\r\n\t      <div class=\"form-group register-error\" [hidden]=\"!usDotBrokerZipError && !userExistError && !serverErrorMessage\">{{serverErrorMessage}}</div>\r\n\t      <div class=\"flex\">\r\n\r\n\t        <div class=\"col-4 pr3\">\r\n\t          <div class=\"form-group\">\r\n\t            <label class=\"form-label\">Carrier US DOT #</label>\r\n\t            <input type=\"text\" id=\"usdot\" class=\"form-control\" tabindex=\"1\"\r\n\t\t\t\t\t   required maxlength=\"20\"\r\n\t\t\t\t\t   [ngClass]=\"{'error': usDotBrokerZipError}\" \r\n\t\t\t\t\t   name=\"usdot\" [(ngModel)]=\"usdot\">\r\n\t          </div>\r\n\t\t\t  <div class=\"form-group\">\r\n\t\t\t    <label class=\"form-label\">First Name</label>\r\n\t\t\t    <input type=\"text\" id=\"firstName\" class=\"form-control\" tabindex=\"4\"\r\n\t\t\t\t\t   required maxlength=\"50\"\r\n\t\t\t\t\t   name=\"firstName\" [(ngModel)]=\"firstName\">\r\n\t\t\t  </div>\r\n\t\t\t  <div class=\"form-group\">\r\n\t\t\t    <label class=\"form-label\">Create User Name</label>\r\n\t\t\t    <input autocomplete=\"off\" class=\"form-control\" type=\"text\" [(ngModel)]=\"userName\" [ngClass]=\"{'error': userExistError}\" required  maxlength=\"50\"/>\r\n\t\t\t  </div>\r\n\t        </div>\r\n\t        <div class=\"col-4 pr3 pl3\">\r\n\t          <div class=\"form-group\">\r\n\t            <label class=\"form-label\">Broker ID</label>\r\n\t            <input autocomplete=\"off\" tabindex=\"2\" class=\"form-control\" type=\"text\" [(ngModel)]=\"brokerID\" [ngClass]=\"{'error': usDotBrokerZipError}\" required maxlength=\"10\"/>\r\n\t          </div>\r\n\t\t\t  <div class=\"form-group\">\r\n\t\t\t    <label class=\"form-label\">Last Name</label>\r\n\t\t\t    <input type=\"text\" id=\"lastName\" class=\"form-control\" tabindex=\"5\"\r\n\t\t\t\t\t   required maxlength=\"50\"\r\n\t\t\t\t\t   name=\"lastName\" [(ngModel)]=\"lastName\">\r\n\t\t\t  </div>\r\n\t\t\t  <div class=\"form-group\">\r\n\t\t\t    <label class=\"form-label\">Create Password</label>\r\n\t\t\t    <input class=\"form-control form-control-password\" autocomplete=\"off\" [(ngModel)]=\"password\" \r\n\t\t\t\t\t   (blur)=\"passwordValidator()\" required maxlength=\"50\"\r\n\t\t\t\t\t   type=\"password\" />\r\n\t\t\t\t\t    \r\n\t\t\t  </div>\r\n\t        </div>\r\n\t        <div class=\"col-4 pr3 pl3\">\r\n\t          <div class=\"form-group\">\r\n\t            <label class=\"form-label\">Carrier Zip Code</label>\r\n\t            <input autocomplete=\"off\" tabindex=\"3\" class=\"form-control\" [(ngModel)]=\"zip\" [ngClass]=\"{'error': usDotBrokerZipError}\" \r\n\t\t\t\t\t    type=\"text\" pattern=\"[0-9]{5}\" title=\"Five digit zip code\" maxlength=\"5\" />\r\n\t          </div>\r\n\t\t\t  <div class=\"form-group\">\r\n\t\t\t    <label class=\"form-label\">Email Address</label>\r\n\t\t\t    <input autocomplete=\"off\" tabindex=\"6\" class=\"form-control\" [ngClass]=\"{'error': !emailValid}\" type=\"email\" \r\n\t\t\t\t\t   [(ngModel)]=\"userEmail\" (blur)=\"emailValidator()\" required maxlength=\"100\">\r\n\t\t\t    <div [hidden]=\"emailValid\" class=\"label-validation-error\">Email Address is invalid</div>\r\n\t\t\t  </div>\r\n\t\t\t  <div class=\"form-group\">\r\n\t\t\t    <label class=\"form-label\">Verify password</label>\r\n\t\t\t    <input class=\"form-control form-control-password\" autocomplete=\"off\" [(ngModel)]=\"verifypassword\" \r\n\t\t\t\t\t   (blur)=\"passwordValidator()\" required maxlength=\"50\"\r\n\t\t\t\t\t   type=\"password\" />\r\n\t\t\t\t<div [hidden]=\"!passwordNotMatch\" class=\"label-validation-error\">Password does not match</div>\r\n\t\t\t  </div>\r\n\t        </div>\r\n\t      </div>\r\n\t\t<div>\r\n\t\t  <div class=\"form-group register-eula\">\r\n\t\t\t<input [(ngModel)]=\"checkEULA\" type=\"checkbox\" data-toggle=\"toggle\">\r\n\t    I have read and agree to the Transflo Command Center terms and conditions. Click <a (click)=\"showEULA()\">here</a> to read more.\r\n\t\t  </div>\r\n\t</div>\r\n\t\t  <div class=\"flex\">\r\n\t\t    <div class=\"col-4 pr3\">\r\n\t\t    </div>\r\n\t\t    <div class=\"col-4 pr3 pl3\">\r\n\t\t    </div>\r\n\t\t    <div class=\"col-4 pr3 pl3\">\r\n\t\t      <div class=\"form-group\">\r\n\t\t        <label class=\"form-label\"></label>\r\n\t\t        <button class=\"signin-button -block\" type=\"submit\" [disabled]=\"!inputValid()\">Register</button>\r\n\t\t      </div>\r\n\t\t    </div>\r\n\t\t  </div>\r\n\t\t  \r\n\t    </div>\r\n\t  \r\n\t  </form>\r\n</div>\r\n<transflo-eula></transflo-eula>"

/***/ }),
/* 704 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	function __export(m) {
	    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
	}
	__export(__webpack_require__(705));
	

/***/ }),
/* 705 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var core_1 = __webpack_require__(2);
	var user_service_1 = __webpack_require__(509);
	var router_deprecated_1 = __webpack_require__(281);
	var RestoreComponent = (function () {
	    function RestoreComponent(userService) {
	        this.userService = userService;
	        this.sent = false;
	        this.error = '';
	    }
	    RestoreComponent.prototype.restore = function () {
	        var _this = this;
	        this.userService.restore(this.email).then(function () {
	            _this.sent = true;
	        })
	            .catch(this.errorHandler.bind(this));
	    };
	    ;
	    RestoreComponent.prototype.errorHandler = function (err) {
	        this.error = err.text();
	    };
	    ;
	    ;
	    RestoreComponent = __decorate([
	        core_1.Component({
	            selector: 'restore',
	            template: __webpack_require__(706),
	            directives: [router_deprecated_1.ROUTER_DIRECTIVES]
	        }), 
	        __metadata('design:paramtypes', [user_service_1.UserService])
	    ], RestoreComponent);
	    return RestoreComponent;
	}());
	exports.RestoreComponent = RestoreComponent;
	

/***/ }),
/* 706 */
/***/ (function(module, exports) {

	module.exports = "<div class=\"signin\">\r\n  <div class=\"signin-header\">\r\n    <svg class=\"icon -logo-lg\"><use xlink:href=\"#svg_logo_lg\"/></svg>\r\n  </div>\r\n  <div class=\"signin-body\">\r\n    <div class=\"signin-content\">\r\n      <form novalidate [hidden]=\"sent\">\r\n\r\n        <div class=\"form-group\">\r\n          <a [routerLink]=\"['Signin']\" class=\"signin-back\">Back to login</a>\r\n        </div>\r\n\r\n        <div class=\"form-group -x2 signin-error\" *ngIf=\"error\">{{error}}</div>\r\n\r\n        <div class=\"form-group -x2 flex\">\r\n          <div class=\"flex-auto pr1\">\r\n            <input class=\"signin-form-control\" type=\"email\" placeholder=\"Email\" [ngClass]=\"{'error': error}\" [(ngModel)]=\"email\" autofocus />\r\n          </div>\r\n          <div class=\"pl2\">\r\n            <button class=\"signin-button\" (click)=\"restore()\">Restore Password</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <form novalidate [hidden]=\"!sent\">\r\n        <div class=\"form-group\">\r\n          <a [routerLink]=\"['Signin']\" class=\"signin-back\">Back to login</a>\r\n        </div>\r\n        <div class=\"form-group -x3 fs24\">\r\n          Link for password restore was sent\r\n          to <a>{{email}}</a>\r\n        </div>\r\n        <div class=\"signin-hr\"></div>\r\n        <div class=\"fs16\">Check email and follow the link.</div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n  <div class=\"signin-footer\">\r\n    &copy; Transflo, 2017\r\n  </div>\r\n</div>"

/***/ }),
/* 707 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	function __export(m) {
	    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
	}
	__export(__webpack_require__(708));
	

/***/ }),
/* 708 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var core_1 = __webpack_require__(2);
	var router_deprecated_1 = __webpack_require__(281);
	var services_1 = __webpack_require__(508);
	var DivisionsComponent = (function () {
	    function DivisionsComponent(userService, router) {
	        this.userService = userService;
	        this.router = router;
	    }
	    ;
	    DivisionsComponent.prototype.ngOnInit = function () {
	        var _this = this;
	        this.userService.getUser(function (user) {
	            _this.router.navigate(['Home', { divId: user.divisions[0].id }]);
	        });
	    };
	    ;
	    DivisionsComponent = __decorate([
	        core_1.Component({
	            selector: 'divisions',
	            template: ''
	        }), 
	        __metadata('design:paramtypes', [services_1.UserService, router_deprecated_1.Router])
	    ], DivisionsComponent);
	    return DivisionsComponent;
	}());
	exports.DivisionsComponent = DivisionsComponent;
	

/***/ }),
/* 709 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	function __export(m) {
	    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
	}
	__export(__webpack_require__(710));
	

/***/ }),
/* 710 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var core_1 = __webpack_require__(2);
	var common_1 = __webpack_require__(182);
	var ng2_bootstrap_1 = __webpack_require__(345);
	var services_1 = __webpack_require__(508);
	var router_deprecated_1 = __webpack_require__(281);
	var directives_1 = __webpack_require__(635);
	var TenderingComponent = (function () {
	    function TenderingComponent(router, routeParams, loadsService, userService, divisionService) {
	        this.router = router;
	        this.routeParams = routeParams;
	        this.loadsService = loadsService;
	        this.userService = userService;
	        this.divisionService = divisionService;
	        this.carriers = [];
	        this.load = {};
	        this.shipments = [];
	        this.stops = [];
	        this.drivers = [];
	        this.cleanDrivers = [];
	        this.searchString = '';
	        this.onlyFavorites = false;
	        this.acceptedDrivers = [];
	        this.acceptedCarriers = [];
	        this.cleanCarriers = [];
	        this.cantAssign = false;
	    }
	    ;
	    TenderingComponent.prototype.ngOnInit = function () {
	        this.divisionId = +this.routeParams.params['divId'];
	        this.loadId = +this.routeParams.params['loadId'];
	        this.loading = true;
	        this.userService.getUser(this.setCarrier.bind(this));
	    };
	    ;
	    TenderingComponent.prototype.gotoLast = function () {
	        this.router.navigate([this.lastUrl.name, this.lastUrl.params]);
	    };
	    ;
	    TenderingComponent.prototype.favoriteChecked = function () {
	        this.filter();
	    };
	    ;
	    TenderingComponent.prototype.searchFunc = function (driver) {
	        var driverName = driver.name.toUpperCase();
	        if (this.onlyFavorites) {
	            return driver.isFavorite && driverName.indexOf(this.searchString.toUpperCase()) != -1;
	        }
	        ;
	        return driverName.indexOf(this.searchString.toUpperCase()) != -1;
	    };
	    ;
	    TenderingComponent.prototype.filter = function () {
	        if (this.isCarrier) {
	            this.mergeDrivers();
	        }
	        else {
	            this.mergeCarriers();
	        }
	        ;
	    };
	    ;
	    TenderingComponent.prototype.routerOnActivate = function (next, prev) {
	        if (prev) {
	            this.lastUrl = {
	                name: prev.routeName,
	                params: prev.params
	            };
	        }
	        else {
	            this.lastUrl = {
	                name: 'Loads',
	                params: {
	                    divId: next.params.divId
	                }
	            };
	        }
	        ;
	    };
	    ;
	    TenderingComponent.prototype.deserealizeLoad = function (res) {
	        if (res) {
	            var body = res.json();
	            this.load = body;
	            this.shipments = this.load.shipments;
	            this.stops = this.load.stops;
	            this.stops.sort(function (a, b) { return a.stopNum - b.stopNum; });
	            if (this.isCarrier) {
	                this.divisionService.getDrivers(+this.divisionId, null)
	                    .then(this.setDrivers.bind(this));
	            }
	            else {
	                this.divisionService.getCarriers(+this.divisionId)
	                    .then(this.setCarriers.bind(this));
	            }
	            ;
	        }
	    };
	    ;
	    TenderingComponent.prototype.parseDriver = function (res) {
	        var statuses = res.json();
	        this.load.carrierTenderingInfo = statuses;
	        this.mergeDrivers();
	    };
	    ;
	    TenderingComponent.prototype.parseCarrier = function (res) {
	        var statuses = res.json();
	        this.load.brokerTenderingInfo = statuses;
	        this.mergeCarriers();
	    };
	    TenderingComponent.prototype.changeStatus = function (unit, status) {
	        if (this.isCarrier) {
	            unit.assignmentStatus = status;
	            this.saveDrivers();
	        }
	        else {
	            if (this.acceptedCarriers.length < 1 || !status) {
	                unit.assignmentStatus = status;
	                this.saveCarriers();
	            }
	        }
	    };
	    ;
	    TenderingComponent.prototype.removeOffers = function () {
	        for (var _i = 0, _a = this.drivers; _i < _a.length; _i++) {
	            var driver = _a[_i];
	            if (driver.assignmentStatus == 'Offered') {
	                driver.assignmentStatus = null;
	            }
	        }
	        ;
	    };
	    TenderingComponent.prototype.saveDrivers = function () {
	        var driversWithStatuses;
	        if (this.drivers.filter(function (dr) { return dr.assignmentStatus == 'Assigned'; }) > 0) {
	            this.removeOffers();
	        }
	        driversWithStatuses = this.drivers.filter(function (dr) { return !!dr.assignmentStatus; });
	        this.loadsService
	            .updateTenderingCarrier(driversWithStatuses, this.loadId)
	            .then(this.parseDriver.bind(this));
	    };
	    ;
	    TenderingComponent.prototype.saveCarriers = function () {
	        var carriersWithStatuses = this.carriers.filter(function (cr) { return !!cr.assignmentStatus; });
	        this.loadsService
	            .updateTenderingBroker(carriersWithStatuses, this.loadId)
	            .then(this.parseCarrier.bind(this));
	    };
	    TenderingComponent.prototype.mergeCarriers = function () {
	        var _this = this;
	        this.acceptedCarriers = [];
	        this.cleanCarriers = [];
	        for (var _i = 0, _a = this.carriers; _i < _a.length; _i++) {
	            var carrier = _a[_i];
	            carrier.assignmentStatus = null;
	        }
	        ;
	        if (this.load.brokerTenderingInfo) {
	            var _loop_1 = function(carrier) {
	                var foundIdx = this_1.carriers.findIndex(function (cr) { return cr.id == carrier.id; });
	                if (foundIdx != -1) {
	                    this_1.carriers[foundIdx].assignmentStatus = carrier.assignmentStatus;
	                }
	            };
	            var this_1 = this;
	            for (var _b = 0, _c = this.load.brokerTenderingInfo; _b < _c.length; _b++) {
	                var carrier = _c[_b];
	                _loop_1(carrier);
	            }
	        }
	        this.acceptedCarriers = this.carriers.filter(function (cr) { return cr.assignmentStatus == 'Assigned'; });
	        this.cleanCarriers = this.carriers.filter(function (cr) {
	            return (!cr.assignmentStatus || cr.assignmentStatus == 'Offered') && _this.searchFunc(cr);
	        });
	    };
	    ;
	    TenderingComponent.prototype.mergeDrivers = function () {
	        var _this = this;
	        this.acceptedDrivers = [];
	        this.cleanDrivers = [];
	        for (var _i = 0, _a = this.drivers; _i < _a.length; _i++) {
	            var driver = _a[_i];
	            driver.assignmentStatus = null;
	        }
	        ;
	        if (!!this.load.carrierTenderingInfo) {
	            var _loop_2 = function(driver) {
	                var foundIdx = this_2.drivers.findIndex(function (dr) { return dr.id == driver.id; });
	                if (foundIdx != -1) {
	                    this_2.drivers[foundIdx].assignmentStatus = driver.assignmentStatus;
	                }
	            };
	            var this_2 = this;
	            for (var _b = 0, _c = this.load.carrierTenderingInfo; _b < _c.length; _b++) {
	                var driver = _c[_b];
	                _loop_2(driver);
	            }
	        }
	        this.acceptedDrivers = this.drivers.filter(function (dr) { return dr.assignmentStatus == 'Assigned' || dr.assignmentStatus == 'Accepted'; });
	        this.cantAssign = this.acceptedDrivers.length > 0;
	        if (this.cantAssign) {
	            this.removeOffers();
	        }
	        this.cleanDrivers = this.drivers.filter(function (dr) {
	            return (!dr.assignmentStatus || dr.assignmentStatus == 'Offered' || dr.assignmentStatus == 'Rejected') && _this.searchFunc(dr);
	        });
	    };
	    ;
	    TenderingComponent.prototype.setDrivers = function (res) {
	        var body = res.json();
	        this.drivers = body;
	        this.cleanDrivers = body;
	        this.mergeDrivers();
	        this.loading = false;
	    };
	    ;
	    TenderingComponent.prototype.setCarriers = function (res) {
	        var body = res.json();
	        this.carriers = body;
	        this.cleanCarriers = body;
	        this.mergeCarriers();
	        this.loading = false;
	    };
	    TenderingComponent.prototype.setCarrier = function (user) {
	        var _this = this;
	        this.isCarrier = user.divisions.find(function (div) {
	            return div.id == +_this.divisionId;
	        }).type == 'carrier';
	        //this.carriers = user.divisions.filter((div)=>div.type == 'carrier');
	        this.loadsService.getLoad(this.loadId, this.divisionId)
	            .then(this.deserealizeLoad.bind(this));
	    };
	    ;
	    TenderingComponent = __decorate([
	        core_1.Component({
	            selector: 'tendering',
	            directives: [ng2_bootstrap_1.DROPDOWN_DIRECTIVES, ng2_bootstrap_1.MODAL_DIRECTVES, common_1.NgClass, common_1.CORE_DIRECTIVES, common_1.FORM_DIRECTIVES, directives_1.MessagesDirective],
	            viewProviders: [ng2_bootstrap_1.BS_VIEW_PROVIDERS],
	            providers: [services_1.LoadsService, services_1.DivisionService],
	            template: __webpack_require__(711)
	        }), 
	        __metadata('design:paramtypes', [router_deprecated_1.Router, router_deprecated_1.RouteParams, services_1.LoadsService, services_1.UserService, services_1.DivisionService])
	    ], TenderingComponent);
	    return TenderingComponent;
	}());
	exports.TenderingComponent = TenderingComponent;
	

/***/ }),
/* 711 */
/***/ (function(module, exports) {

	module.exports = "<div class=\"loading-page\" [hidden]=\"!loading\"><em></em><em></em><em></em></div>\r\n\r\n<div class=\"page-header\">\r\n  <div class=\"page-header-back\">\r\n    <a (click)=\"gotoLast()\" class=\"button -outline -arrow-left\" href=\"javascript:;\">{{lastUrl.name}}</a>\r\n  </div>\r\n  <h1>Tendering Load #{{isCarrier ? load.carrierLoadNumber : load.brokerLoadNumber}}</h1>\r\n</div>\r\n\r\n\r\n<div class=\"page-info\">\r\n  <div class=\"page-info-left\">\r\n    <div class=\"form-group -x2\">\r\n      <div class=\"form-label -text\">BOL</div>\r\n      <div class=\"fs15 medium\">{{load.bolNumber}}</div>\r\n    </div>\r\n    <div class=\"form-group -x2\" *ngIf=\"isCarrier\">\r\n      <div class=\"form-label -text\">Broker</div>\r\n      <div>{{(load.brokerDivision && load.brokerDivision.code) || '-'}}</div>\r\n      <div>{{(load.brokerDivision && load.brokerDivision.name) || ''}}</div>\r\n    </div>\r\n  </div>\r\n  <div class=\"page-info-right\">\r\n    <div class=\"page-info-content\">\r\n      <div class=\"col-4 pr4\">\r\n        <div class=\"form-label -text\">Origin</div>\r\n        <div class=\"label-lg form-group\">\r\n          {{stops[0] && stops[0].addressLines && stops[0].addressLines.join(', ')}}<br /> {{stops[0] && stops[0].city}}, {{stops[0] && stops[0].state}}, {{stops[0] && stops[0].postalCode}}\r\n        </div>\r\n        <div class=\"label-md form-group\">{{stops[0] && stops[0].date}} &mdash; {{stops[0] && stops[0].time}}</div>\r\n      </div>\r\n      <div class=\"col-4 center align-middle pl3 pr2\">\r\n        <div class=\"wayline\">\r\n          <div class=\"wayline-content\" [hidden]=\"stops.length < 3\"><span class=\"label-count\">{{stops.length - 2}}</span> Intermediate stop</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-4 pl6 right-align\">\r\n        <div class=\"form-label -text\">Destination</div>\r\n        <div class=\"label-lg form-group\">{{stops[stops.length - 1] && stops[stops.length - 1].addressLines && stops[stops.length - 1].addressLines.join(', ')}}<br /> {{stops[stops.length - 1] && stops[stops.length - 1].city}}, {{stops[stops.length - 1] && stops[stops.length - 1].state}}, {{stops[stops.length - 1] && stops[stops.length - 1].postalCode}}</div>\r\n        <div class=\"label-md form-group\">{{stops[stops.length - 1] && stops[stops.length - 1].date}} &mdash; {{stops[stops.length - 1] && stops[stops.length - 1].time}}</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"page-content\">\r\n\r\n  <div class=\"flex relative\" *ngIf=\"isCarrier\">\r\n    <div class=\"modal-cols-separator\"></div>\r\n    <div class=\"col-6 pr4\">\r\n      <div class=\"flex items-baseline\">\r\n        <h2 class=\"pr2\">Drivers</h2>\r\n        <div class=\"flex flex-auto\">\r\n          <input autocomplete=\"off\" class=\"form-control flex-auto -addon\" type=\"search\" placeholder=\"Find Driver\" [(ngModel)]=\"searchString\" (ngModelChange)=\"filter()\"/>\r\n          <label class=\"form-addon flex items-center\" title=\"Show only favorites\"><input type=\"checkbox\" [(ngModel)]=\"onlyFavorites\" (ngModelChange)=\"favoriteChecked()\" hidden /><svg class=\"icon -favorite -filter\"><use xlink:href=\"#svg_star\"/></svg></label>\r\n        </div>\r\n      </div>\r\n      <div class=\"card\" *ngFor=\"let driver of cleanDrivers\">\r\n        <div class=\"card-bubble\">\r\n          <a href=\"javascript:;\" class=\"card-icon\" messages [divisionId]=\"divisionId\" [driverId]=\"driver.id\" [ngClass]=\"{'-active': driver.isNewMessage}\">\r\n            <svg class=\"icon -quote -md\"><use xlink:href=\"#svg_quote\"/></svg>\r\n          </a>\r\n        </div>\r\n        <div class=\"card-title\">\r\n          <a href=\"javascript:;\" class=\"label-lg regular\" messages [divisionId]=\"divisionId\" [driverId]=\"driver.id\">{{driver.name}}</a>\r\n          <span class=\"card-icon\" [ngClass]=\"{'-active': driver.isFavorite}\">\r\n            <svg class=\"icon -favorite\"><use xlink:href=\"#svg_star\"/></svg>\r\n          </span>\r\n          <div class=\"label-gray\">#{{driver.id}}</div>\r\n          <div class=\"label-gray\">{{driver.email}}</div>\r\n        </div>\r\n        <div class=\"card-buttons\">\r\n          <button type=\"button\" class=\"button -outline-primary  card-button\" [disabled]=\"cantAssign || load.status == 'Delivered'\" (click)=\"changeStatus(driver, 'Assigned')\">Assign</button>\r\n          <button type=\"button\" class=\"button -outline card-button\" [disabled]=\"cantAssign || load.status == 'Delivered'\" (click)=\"changeStatus(driver, 'Offered')\" *ngIf=\"!driver.assignmentStatus\">Offer</button>\r\n          <span class=\"card-label\" *ngIf=\"driver.assignmentStatus && driver.assignmentStatus == 'Offered'\">\r\n            <button class=\"card-cancel\" (click)=\"changeStatus(driver, null)\">&times;</button>\r\n            <strong>Offered</strong>\r\n          </span>\r\n          <span class=\"card-label -disabled\" *ngIf=\"driver.assignmentStatus && driver.assignmentStatus == 'Rejected'\">\r\n            <strong>Rejected</strong>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-6 pl4\">\r\n      <h2>Assigned to</h2>\r\n      <div class=\"card\" *ngFor=\"let driver of acceptedDrivers\">\r\n        <div class=\"card-bubble\">\r\n          <a href=\"javascript:;\" class=\"card-icon\" messages [divisionId]=\"divisionId\" [driverId]=\"driver.id\" [ngClass]=\"{'-active': driver.isNewMessage}\">\r\n            <svg class=\"icon -quote -md\"><use xlink:href=\"#svg_quote\"/></svg>\r\n          </a>\r\n        </div>\r\n        <div class=\"card-title\">\r\n          <a href=\"javascript:;\" class=\"label-lg regular\" messages [divisionId]=\"divisionId\" [driverId]=\"driver.id\">{{driver.name}}</a>\r\n          <span class=\"card-icon\" [ngClass]=\"{'-active': driver.isFavorite}\">\r\n            <svg class=\"icon -favorite\"><use xlink:href=\"#svg_star\"/></svg>\r\n          </span>\r\n          <div class=\"label-gray\">#{{driver.id}}</div>\r\n          <div class=\"label-gray\">{{driver.email}}</div>\r\n        </div>\r\n        <div class=\"card-buttons -accepted\">\r\n          <span class=\"card-label -primary\">\r\n            <button class=\"card-cancel\" [disabled]=\"load.status == 'Delivered'\"  (click)=\"changeStatus(driver, null)\">&times;</button>\r\n            <strong>Accepted</strong>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"flex relative\" *ngIf=\"!isCarrier\">\r\n    <div class=\"modal-cols-separator\"></div>\r\n    <div class=\"col-6 pr4\">\r\n      <div class=\"flex items-baseline\">\r\n        <h2 class=\"pr2\">Carriers</h2>\r\n        <div class=\"flex flex-auto\">\r\n          <input autocomplete=\"off\" class=\"form-control flex-auto -addon\" type=\"search\" placeholder=\"Find Carrier\" [(ngModel)]=\"searchString\" (ngModelChange)=\"filter()\"/>\r\n          <label class=\"form-addon flex items-center\" title=\"Show only favorites\"><input type=\"checkbox\" [(ngModel)]=\"onlyFavorites\" (ngModelChange)=\"favoriteChecked()\" hidden /><svg class=\"icon -favorite -filter\"><use xlink:href=\"#svg_star\"/></svg></label>\r\n        </div>\r\n      </div>\r\n      <div class=\"card\" *ngFor=\"let carrier of cleanCarriers\">\r\n        <div class=\"card-title pl3\">\r\n          <span class=\"label-lg regular\">{{carrier.name}}</span>\r\n          <span class=\"card-icon\" [ngClass]=\"{'-active': carrier.isFavorite}\">\r\n            <svg class=\"icon -favorite\"><use xlink:href=\"#svg_star\"/></svg>\r\n          </span>\r\n          <div class=\"label-gray\">{{carrier.code}}</div>\r\n        </div>\r\n        <div class=\"card-buttons -accepted\">\r\n          <button type=\"button\" class=\"button -outline-primary card-button\" [ngClass]=\"{'disabled': acceptedCarriers.length >= 1}\" (click)=\"changeStatus(carrier, 'Assigned')\">Assign</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-6 pl4\">\r\n      <h2>Assigned to</h2>\r\n      <div class=\"card\" *ngFor=\"let carrier of acceptedCarriers\">\r\n        <div class=\"card-title pl3\">\r\n          <div class=\"label-lg regular\">{{carrier.name}}</div>\r\n          <div class=\"label-gray\">{{carrier.code}}</div>\r\n        </div>\r\n        <div class=\"card-buttons -accepted\">\r\n          <span class=\"card-label -primary\">\r\n            <button class=\"card-cancel\"  (click)=\"changeStatus(carrier, null)\">&times;</button>\r\n            <strong>Accepted</strong>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</div>"

/***/ }),
/* 712 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	function __export(m) {
	    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
	}
	__export(__webpack_require__(713));
	

/***/ }),
/* 713 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var core_1 = __webpack_require__(2);
	var Error404Component = (function () {
	    function Error404Component() {
	    }
	    Error404Component = __decorate([
	        core_1.Component({
	            selector: 'error404',
	            template: __webpack_require__(714),
	        }), 
	        __metadata('design:paramtypes', [])
	    ], Error404Component);
	    return Error404Component;
	}());
	exports.Error404Component = Error404Component;
	

/***/ }),
/* 714 */
/***/ (function(module, exports) {

	module.exports = "<div class=\"error-page\">\r\n  <h2 class=\"fs24 regular\">Requested page not found</h2>\r\n</div>"

/***/ }),
/* 715 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	function __export(m) {
	    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
	}
	__export(__webpack_require__(716));
	

/***/ }),
/* 716 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var core_1 = __webpack_require__(2);
	var common_1 = __webpack_require__(182);
	var ng2_select_1 = __webpack_require__(338);
	var router_deprecated_1 = __webpack_require__(281);
	var ng2_bootstrap_1 = __webpack_require__(345);
	var index_1 = __webpack_require__(668);
	var index_2 = __webpack_require__(656);
	var index_3 = __webpack_require__(662);
	var index_4 = __webpack_require__(508);
	var map_directive_1 = __webpack_require__(639);
	var services_1 = __webpack_require__(508);
	var SharedLoadComponent = (function () {
	    function SharedLoadComponent(router, http) {
	        this.router = router;
	        this.http = http;
	        this.shipments = [];
	        this.stops = [];
	        this.stopsHash = {};
	        this.errorShown = false;
	        this.shareId = '';
	        this.load = {
	            showMap: false
	        };
	        this.mapSidebarOpened = false;
	        this.load = {};
	    }
	    ;
	    SharedLoadComponent.prototype.ngOnInit = function () {
	        this.shareId = this.router.root.currentInstruction.urlPath.split('/')[1];
	        this.loading = true;
	        this.http.get('share/' + this.shareId)
	            .toPromise()
	            .catch(this.error.bind(this))
	            .then(this.deserealizeLoad.bind(this));
	    };
	    ;
	    SharedLoadComponent.prototype.error = function (err) {
	        this.errorShown = true;
	        this.loading = false;
	        this.errorText = JSON.parse(err._body).message;
	    };
	    ;
	    SharedLoadComponent.prototype.deserealizeLoad = function (res) {
	        if (res) {
	            var body = res.json();
	            this.load = body;
	            this.shipments = this.load.shipments;
	            this.stops = this.load.stops;
	            for (var i = 0, length_1 = this.stops.length; i < length_1; i++) {
	                this.stopsHash[this.stops[i].id] = this.stops[i];
	            }
	            this.loading = false;
	            this.stops.sort(function (a, b) { return a.stopNum - b.stopNum; });
	        }
	    };
	    ;
	    SharedLoadComponent = __decorate([
	        core_1.Component({
	            selector: 'restore',
	            template: __webpack_require__(717),
	            directives: [ng2_bootstrap_1.TAB_DIRECTIVES, ng2_bootstrap_1.DROPDOWN_DIRECTIVES, index_2.DriversComponent, map_directive_1.MapDirective, index_3.AttributesComponent, ng2_bootstrap_1.MODAL_DIRECTVES, ng2_bootstrap_1.TYPEAHEAD_DIRECTIVES, ng2_select_1.SELECT_DIRECTIVES, common_1.NgClass, common_1.CORE_DIRECTIVES, common_1.FORM_DIRECTIVES, index_1.SkeletonComponent],
	            viewProviders: [ng2_bootstrap_1.BS_VIEW_PROVIDERS],
	            providers: [services_1.LoadsService]
	        }), 
	        __metadata('design:paramtypes', [router_deprecated_1.Router, index_4.HttpService])
	    ], SharedLoadComponent);
	    return SharedLoadComponent;
	}());
	exports.SharedLoadComponent = SharedLoadComponent;
	

/***/ }),
/* 717 */
/***/ (function(module, exports) {

	module.exports = "<div class=\"loading-page\" [hidden]=\"!loading\"><em></em><em></em><em></em></div>\r\n\r\n<header class=\"flex header-fake\">\r\n  <span class=\"header-item header-logo\">\r\n    <svg class=\"icon -logo\"><use xlink:href=\"#svg_logo\"/></svg>\r\n  </span>\r\n \r\n</header>\r\n\t\r\n<div class=\"container -main\">\r\n\r\n  <header class=\"page-header -margined\">\r\n    <div class=\"flex items-center\">\r\n      <div class=\"flex-auto flex items-baseline\">\r\n        <h1>Load #{{load.carrierLoadNumber}} </h1>\r\n        <div class=\"label-green label-lg pl2\">{{load.status}}</div>\r\n      </div>\r\n    </div>\r\n  </header>\r\n\r\n  <div class=\"error-page\" *ngIf=\"errorShown\">\r\n   <h2 class=\"fs24 regular\">{{errorText}}</h2>\r\n  </div>\r\n  <div class=\"page-content\" *ngIf=\"!errorShown\">\r\n    \r\n    <div class=\"form-group\">\r\n      <div class=\"flex form-group\">\r\n        <div class=\"col-3 pr4\">\r\n          <div class=\"form-group -x2\">\r\n            <div class=\"form-label -text\">BOL</div>\r\n            <div class=\"fs15 medium\">{{load.bolNumber}}</div>\r\n          </div>\r\n          <!--<div class=\"form-group -x2\">\r\n            <div class=\"form-label -text\">Division</div>\r\n            <div>{{load.carrierDivision ? load.carrierDivision.name : load.brokerDivision && load.brokerDivision.name}}</div>\r\n          </div>-->\r\n        </div>\r\n        <div class=\"col-3 pl3 pr4\">\r\n          <div class=\"form-label -text\">Origin</div>\r\n          <div class=\"label-lg form-group\">{{stops[0] && stops[0].addressLines && stops[0].addressLines.join(', ')}}<br /> {{stops[0] && stops[0].city}}, {{stops[0] && stops[0].state}}, {{stops[0] && stops[0].postalCode}}</div>\r\n          <div class=\"label-md form-group\">{{stops[0] && stops[0].date}} &mdash; {{stops[0] && stops[0].time}}</div>\r\n        </div>\r\n        <div class=\"col-3 center self-center pl3 pr2\">\r\n          <div class=\"wayline\">\r\n            <div class=\"wayline-content\" [hidden]=\"stops.length < 3\"><span class=\"label-count\">{{stops.length - 2}}</span> Intermediate stop</div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-3 pl6 right-align\">\r\n          <div class=\"form-label -text\">Destination</div>\r\n          <div class=\"label-lg form-group\">{{stops[stops.length - 1] && stops[stops.length - 1].addressLines && stops[stops.length - 1].addressLines.join(', ')}}<br /> {{stops[stops.length - 1] && stops[stops.length - 1].city}}, {{stops[stops.length - 1] && stops[stops.length - 1].state}}, {{stops[stops.length - 1] && stops[stops.length - 1].postalCode}}</div>\r\n          <div class=\"label-md form-group\">{{stops[stops.length - 1] && stops[stops.length - 1].date}} &mdash; {{stops[stops.length - 1] && stops[stops.length - 1].time}}</div>\r\n        </div>\r\n      </div>\r\n      <!--<div class=\"flex items-end form-group -x2\">\r\n        <div class=\"col-3 pr4\">\r\n          <transflo-drivers [drivers]=\"load.carrierTenderingInfo\" [isCarrier]=\"isCarrier\"></transflo-drivers>\r\n        </div>\r\n        <div class=\"pr4 pl3\">\r\n          <div class=\"form-label -text\">Freight Terms</div>\r\n          <div class=\"fs15 medium\">{{load.freightTerms}}</div>\r\n        </div>\r\n        <div class=\"pr4 pl3\">\r\n          <div class=\"form-label -text\">Ext Load Data</div>\r\n          <transflo-attributes class=\"flex items-center form-group -x05\" [attrs]=\"load.loadAttributes\"></transflo-attributes>\r\n        </div>\r\n        <div class=\"pr4 pl3\">\r\n          <div class=\"form-label -text\">Special Instructions</div>\r\n          <div dropdown keyboardNav=\"true\">\r\n            <button type=\"button\" class=\"button -link -sm -dotted\" dropdownToggle>Read Instructions</button>\r\n            <div class=\"dropdown-menu -lg -text -center\" role=\"menu\" dropdownMenu>\r\n              <h3>Special Instructions</h3>\r\n              {{load.carrierSpecialInstructions}}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>-->\r\n    </div>\r\n\r\n    <div class=\"map\" *ngIf=\"load.showMap\">\r\n      <div class=\"map-wrapper\">\r\n        <div class=\"map-container\" map [breadcrumbs]=\"breadcrumbs\" [truck]=\"load.truckLocation\" [stops]=\"stops\" [nextStop]=\"load.nextStop\" [show]=\"load.showMap\" style=\"height: 430px;\"></div>\r\n        <div class=\"map-sidebar\" [ngClass]=\"{'-hidden': mapSidebarOpened == false}\">\r\n          <button type=\"button\" class=\"map-sidebar-toggle\" (click)=\"mapSidebarOpened = !mapSidebarOpened\" [ngClass]=\"{'-hidden': mapSidebarOpened == false}\"></button>\r\n          <!--div class=\"map-sidebar-header flex justify-center items-center\">\r\n\t\t  <div class=\"col-4\">\r\n\t\t\t<strong class=\"fs15 medium\">Mar 20</strong>\r\n\t\t\t<div>00:00 AM</div>\r\n\t\t  </div>\r\n\t\t  <div class=\"col-4 center flex items-center justify-center\">\r\n\t\t\t<div class=\"map-sidebar-line -left\"></div>\r\n\t\t\t<svg class=\"icon -datepicker\"><use xlink:href=\"#svg_datepicker\"/></svg>\r\n\t\t\t<div class=\"map-sidebar-line -right\"></div>\r\n\t\t  </div>\r\n\t\t  <div class=\"col-4 right-align\">\r\n\t\t\t<strong class=\"fs15 medium\">Mar 22</strong>\r\n\t\t\t<div>1:59 PM</div>\r\n\t\t  </div>\r\n\t\t</div-->\r\n          <div class=\"map-sidebar-list\">\r\n            <div class=\"form-group -x2\" *ngFor=\"let message of messages\">\r\n              <div class=\"medium\">{{message.title}}</div>\r\n              <div class=\"form-label -text fs12\"><transflo-date [date]=\"message.timestamp\" dontShowTime=\"true\"></transflo-date> &bull; {{getTime(message.timestamp)}}</div>\r\n              <div>{{message.message}}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"page-content\">\r\n      <div class=\"form-group -x3\">\r\n        <tabset [justified]=\"true\">\r\n          <tab class=\"tab-pane\" heading=\"Trip\">\r\n            <transflo-skeleton [load]=\"load\"></transflo-skeleton>\r\n          </tab>\r\n          <tab heading=\"Shipments\">\r\n\r\n            <div class=\"form-group -x6\" *ngFor=\"let shipment of shipments; let idx = index\">\r\n              <div class=\"form-group flex\">\r\n                <div class=\"col-4 label-lg pr4\">\r\n                  Shipment {{idx + 1}}\r\n                  <small class=\"badge -green\">{{shipment.status}}</small>\r\n                </div>\r\n                <div class=\"col-8 label-lg pl3\">\r\n                  BOL {{shipment.shipmentBOL}}\r\n                </div>\r\n              </div>\r\n              <hr class=\"form-group -x15\" />\r\n              <div class=\"form-group flex -x2\">\r\n                <div class=\"col-4 pr4\">\r\n                  <div class=\"form-group\" [hidden]=\"!shipment.shipmentCarrierSpecInstructions\">\r\n                    <div class=\"form-label -text\">Special Instructions</div>\r\n                    <div>\r\n                      {{shipment.shipmentCarrierSpecInstructions}}\r\n                      <!--button class=\"button -link -sm -dotted\" type=\"button\">Read more</button-->\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"form-group -x3\" [hidden]=\"!shipment.orders || (shipment.orders && !shipment.orders.length)\">\r\n                    <div class=\"form-label -text\">Order / Purchase order</div>\r\n                    <div *ngFor=\"let order of shipment.orders\">{{order.orderNUmber}} / {{order.purchaseOrderNumber}}</div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-8 pl3\">\r\n                  <div class=\"form-group flex\">\r\n                    <div class=\"col-4 pr4\">\r\n                      <div class=\"form-label -text\">Origin</div>\r\n                      <div class=\"form-group label-md medium\">\r\n                        {{stopsHash[shipment.pickup] && stopsHash[shipment.pickup].addressLines && stopsHash[shipment.pickup].addressLines.join(', ')}}<br /> {{stopsHash[shipment.pickup] && stopsHash[shipment.pickup].city}}, {{stopsHash[shipment.pickup] && stopsHash[shipment.pickup].state}}, {{stopsHash[shipment.pickup] && stopsHash[shipment.pickup].postalCode}}\r\n                      </div>\r\n                      <div class=\"form-group\">{{stopsHash[shipment.pickup] && stopsHash[shipment.pickup].date}} &mdash; {{stopsHash[shipment.pickup] && stopsHash[shipment.pickup].time}}</div>\r\n                    </div>\r\n                    <div class=\"col-4 self-center pl2 pr2\">\r\n                      <div class=\"wayline -sm\"></div>\r\n                    </div>\r\n                    <div class=\"col-4 right-align pl4\">\r\n                      <div class=\"form-label -text\">Destination</div>\r\n                      <div class=\"form-group label-md medium\">{{stopsHash[shipment.dropoff] && stopsHash[shipment.dropoff].addressLines && stopsHash[shipment.dropoff].addressLines.join(', ')}}<br /> {{stopsHash[shipment.dropoff] && stopsHash[shipment.dropoff].city}}, {{stopsHash[shipment.dropoff] && stopsHash[shipment.dropoff].state}}, {{stopsHash[shipment.dropoff] && stopsHash[shipment.dropoff].postalCode}}</div>\r\n                      <div class=\"form-group\">{{stopsHash[shipment.dropoff] && stopsHash[shipment.dropoff].date}} &mdash; {{stopsHash[shipment.dropoff] && stopsHash[shipment.dropoff].time}}</div>\r\n                    </div>\r\n                  </div>\r\n                  <table class=\"table -compact -lined form-group -x3\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Type</th>\r\n                        <th>Qty</th>\r\n                        <th class=\"right-align\">Weight</th>\r\n                        <th class=\"right-align\">Volume</th>\r\n                        <th class=\"right-align\">Height</th>\r\n                        <th class=\"right-align\">Freight Class</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr *ngFor=\"let package of shipment.packages\">\r\n                        <td>{{package.type}}</td>\r\n                        <td>{{package.quantity || 0}}</td>\r\n                        <td class=\"right-align\">{{package.weight || 0}} lb</td>\r\n                        <td class=\"right-align\">{{package.volume || 0}} ft³</td>\r\n                        <td class=\"right-align\">{{package.height || 0}} in</td>\r\n                        <td class=\"right-align\">{{package.freightClass}}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          </tab>\r\n        </tabset>\r\n      </div>\r\n\r\n    </div>\r\n\r\n\r\n  <!--<tabset class=\"xs-show\">-->\r\n    <!--<tab class=\"tab-pane\" heading=\"Info\">-->\r\n      <!--<template tabHeading>-->\r\n        <!--<strong><img src=\"images/mobile/icon-info.png\" alt=\"Info\" width=\"23\" height=\"23\" /></strong>-->\r\n        <!--<em><img src=\"images/mobile/icon-info_a.png\" alt=\"Info\" width=\"23\" height=\"23\" /></em>-->\r\n      <!--</template>-->\r\n\r\n      <!--<div class=\"page-content\">-->\r\n        <!--<div class=\"form-group\">-->\r\n          <!--<h2 class=\"fs24 mb0\">Load #8234593</h2>-->\r\n          <!--<div class=\"label-md bold\">BOL 9078 123-543-876 0001</div>-->\r\n        <!--</div>-->\r\n        <!--<div class=\"form-group\">-->\r\n          <!--<svg class=\"icon -danger\"><use xlink:href=\"#svg_danger\"/></svg>-->\r\n          <!--<svg class=\"icon -ruby\"><use xlink:href=\"#svg_ruby\"/></svg>-->\r\n          <!--<svg class=\"icon -fragile\"><use xlink:href=\"#svg_fragile\"/></svg>-->\r\n        <!--</div>-->\r\n        <!--<div class=\"form-group -x2 flex\">-->\r\n          <!--<div class=\"col-4 form-label -text fs12 uppercase\">Status</div>-->\r\n          <!--<div class=\"col-8 pl3\">-->\r\n            <!--<div class=\"label-green medium\">In Transit</div>-->\r\n          <!--</div>-->\r\n        <!--</div>-->\r\n        <!--<div class=\"form-group -x2 flex\">-->\r\n          <!--<div class=\"col-4 form-label -text fs12 uppercase\">Division</div>-->\r\n          <!--<div class=\"col-8 pl3\">Div NY</div>-->\r\n        <!--</div>-->\r\n        <!--<div class=\"form-group -x2 flex\">-->\r\n          <!--<div class=\"col-4 form-label -text fs12 uppercase\">Assigned to</div>-->\r\n          <!--<div class=\"col-8 pl3\">-->\r\n            <!--<div>Sebastian P. Fletcher</div>-->\r\n            <!--<div>Jorge A. Seachin</div>-->\r\n          <!--</div>-->\r\n        <!--</div>-->\r\n        <!--<div class=\"form-group -x2 flex\">-->\r\n          <!--<div class=\"col-4 form-label -text fs12 uppercase\">Origin</div>-->\r\n          <!--<div class=\"col-8 pl3\">-->\r\n            <!--1800 NE Alberta St, Portland, OR 97211-->\r\n            <!--<div class=\"label-gray\">Mar 20, 2016 &mdash; All Day</div>-->\r\n          <!--</div>-->\r\n        <!--</div>-->\r\n        <!--<div class=\"form-group -x2 flex\">-->\r\n          <!--<div class=\"col-4 form-label -text fs12 uppercase\"></div>-->\r\n          <!--<div class=\"col-8 pl3\">-->\r\n            <!--1445 14th St, Baker City, OR97211-->\r\n            <!--<div class=\"label-gray\">Mar 20, 2016 &mdash; All Day</div>-->\r\n          <!--</div>-->\r\n        <!--</div>-->\r\n        <!--<div class=\"form-group -x2 flex\">-->\r\n          <!--<div class=\"col-4 form-label -text fs12 uppercase\">Destination</div>-->\r\n          <!--<div class=\"col-8 pl3\">-->\r\n            <!--8642 S Vaquero Dr, Sandy, UT 84094-->\r\n            <!--<div class=\"label-gray\">Mar 20, 2016 &mdash; All Day</div>-->\r\n          <!--</div>-->\r\n        <!--</div>-->\r\n        <!--<div class=\"form-group -x2 flex\">-->\r\n          <!--<div class=\"col-4 form-label -text fs12 uppercase\">Freight Terms</div>-->\r\n          <!--<div class=\"col-8 pl3\">50</div>-->\r\n        <!--</div>-->\r\n        <!--<div class=\"form-group -x2 flex\">-->\r\n          <!--<div class=\"col-4 form-label -text fs12 uppercase\">Parameters</div>-->\r\n          <!--<div class=\"col-8 pl3\">127 ft³ &nbsp;&bull;&nbsp; 421 lbs &nbsp;&bull;&nbsp; 6 pcs</div>-->\r\n        <!--</div>-->\r\n        <!--<div class=\"form-group -x2 flex\">-->\r\n          <!--<div class=\"col-4 form-label -text fs12 uppercase\">Ext Load Data</div>-->\r\n          <!--<div class=\"col-8 pl3\">-->\r\n            <!--<button type=\"button\" class=\"button -link -sm -dotted\" (click)=\"extLoadDataModal.show()\">Read Ext Load Data</button>-->\r\n          <!--</div>-->\r\n        <!--</div>-->\r\n        <!--<div class=\"form-group -x2 flex\">-->\r\n          <!--<div class=\"col-4 form-label -text fs12 uppercase\">Special Instructions</div>-->\r\n          <!--<div class=\"col-8 pl3\">-->\r\n            <!--<button type=\"button\" class=\"button -link -sm -dotted\" (click)=\"specialInstructionsModal.show()\">Read Instructions</button>-->\r\n          <!--</div>-->\r\n        <!--</div>-->\r\n      <!--</div>-->\r\n\r\n    <!--</tab>-->\r\n    <!--<tab class=\"tab-pane\" heading=\"Map\">-->\r\n      <!--<template tabHeading>-->\r\n        <!--<strong><img src=\"images/mobile/icon-map.png\" alt=\"Map\" width=\"26\" height=\"22\" /></strong>-->\r\n        <!--<em><img src=\"images/mobile/icon-map_a.png\" alt=\"Map\" width=\"26\" height=\"22\" /></em>-->\r\n      <!--</template>-->\r\n\r\n      <!--&lt;!&ndash;div class=\"relative\">-->\r\n        <!--<iframe class=\"map-mobile\" frameBorder=\"0\" src=\"http://umap.openstreetmap.co/en/map/trip_703?scaleControl=false&miniMap=false&scrollWheelZoom=false&zoomControl=true&allowEdit=false&moreControl=false&datalayersControl=false&onLoadPanel=undefined\"></iframe>-->\r\n        <!--<button type=\"button\" class=\"map-mobile-toggle\" (click)=\"mapListModal.show()\">-->\r\n          <!--<img src=\"images/mobile/icon-list.png\" alt=\"List\" width=\"17\" height=\"13\" />-->\r\n        <!--</button>-->\r\n      <!--</div&ndash;&gt;-->\r\n\r\n    <!--</tab>-->\r\n    <!--<tab class=\"tab-pane\" heading=\"Shipments\">-->\r\n      <!--<template tabHeading>-->\r\n        <!--<strong><img src=\"images/mobile/icon-shipments.png\" alt=\"Shipments\" width=\"39\" height=\"22\" /></strong>-->\r\n        <!--<em><img src=\"images/mobile/icon-shipments_a.png\" alt=\"Shipments\" width=\"39\" height=\"22\" /></em>-->\r\n      <!--</template>-->\r\n\r\n      <!--<div class=\"page-content\">-->\r\n        <!--<div class=\"form-group -x4\">-->\r\n          <!--<div class=\"form-group\">-->\r\n            <!--<div class=\"label-gray label-md\">Shipment 1 <small class=\"badge -green\">Picked</small></div>-->\r\n            <!--<h3>BOL 2342 342-465-335 0043</h3>-->\r\n          <!--</div>-->\r\n          <!--<div class=\"form-group -x2 flex\">-->\r\n            <!--<div class=\"col-4 form-label -text fs12 uppercase\">Origin</div>-->\r\n            <!--<div class=\"col-8 pl3\">-->\r\n              <!--1800 NE Alberta St, Portland, OR 97211-->\r\n              <!--<div class=\"label-gray\">Mar 20, 2016 &mdash; All Day</div>-->\r\n            <!--</div>-->\r\n          <!--</div>-->\r\n          <!--<div class=\"form-group -x2 flex\">-->\r\n            <!--<div class=\"col-4 form-label -text fs12 uppercase\">Destination</div>-->\r\n            <!--<div class=\"col-8 pl3\">-->\r\n              <!--8642 S Vaquero Dr, Sandy, UT 84094-->\r\n              <!--<div class=\"label-gray\">Mar 20, 2016 &mdash; All Day</div>-->\r\n            <!--</div>-->\r\n          <!--</div>-->\r\n          <!--<div class=\"form-group -x2 flex\">-->\r\n            <!--<div class=\"col-4 form-label -text fs12 uppercase\">Order</div>-->\r\n            <!--<div class=\"col-8 pl3\">-->\r\n              <!--183ew23-212-->\r\n            <!--</div>-->\r\n          <!--</div>-->\r\n          <!--<div class=\"form-group -x2 flex\">-->\r\n            <!--<div class=\"col-4 form-label -text fs12 uppercase\">Purchase order</div>-->\r\n            <!--<div class=\"col-8 pl3\">-->\r\n              <!--0003888573999-5435-->\r\n            <!--</div>-->\r\n          <!--</div>-->\r\n          <!--<div class=\"form-group -x2 flex\">-->\r\n            <!--<div class=\"col-4 form-label -text fs12 uppercase\">Special Instructions</div>-->\r\n            <!--<div class=\"col-8 pl3\">-->\r\n              <!--Accept/I can PU another load afterwards & T-CALL it at the Romeoville drop yard. I will have...-->\r\n            <!--</div>-->\r\n          <!--</div>-->\r\n          <!--<table class=\"table -compact -lined form-group -x2\">-->\r\n            <!--<thead>-->\r\n            <!--<tr>-->\r\n              <!--<th>Type</th>-->\r\n              <!--<th>Qty</th>-->\r\n              <!--<th class=\"right-align\">Weight</th>-->\r\n              <!--<th class=\"right-align\">Volume</th>-->\r\n            <!--</tr>-->\r\n            <!--</thead>-->\r\n            <!--<tbody>-->\r\n            <!--<tr>-->\r\n              <!--<td>Palette</td>-->\r\n              <!--<td>2</td>-->\r\n              <!--<td class=\"right-align\">481 lb</td>-->\r\n              <!--<td class=\"right-align\">127 ft³</td>-->\r\n            <!--</tr>-->\r\n            <!--<tr>-->\r\n              <!--<td>Box</td>-->\r\n              <!--<td>2</td>-->\r\n              <!--<td class=\"right-align\">160 lb</td>-->\r\n              <!--<td class=\"right-align\">115 ft³</td>-->\r\n            <!--</tr>-->\r\n            <!--</tbody>-->\r\n          <!--</table>-->\r\n        <!--</div>-->\r\n        <!--<div class=\"form-group -x4\">-->\r\n          <!--<div class=\"form-group\">-->\r\n            <!--<div class=\"label-gray label-md\">Shipment 2 <small class=\"badge -green\">Picked</small></div>-->\r\n            <!--<h3>S/ID 6778 120-0043-53</h3>-->\r\n          <!--</div>-->\r\n          <!--<div class=\"form-group -x2 flex\">-->\r\n            <!--<div class=\"col-4 form-label -text fs12 uppercase\">Origin</div>-->\r\n            <!--<div class=\"col-8 pl3\">-->\r\n              <!--1800 NE Alberta St, Portland, OR 97211-->\r\n              <!--<div class=\"label-gray\">Mar 20, 2016 &mdash; All Day</div>-->\r\n            <!--</div>-->\r\n          <!--</div>-->\r\n          <!--<div class=\"form-group -x2 flex\">-->\r\n            <!--<div class=\"col-4 form-label -text fs12 uppercase\">Destination</div>-->\r\n            <!--<div class=\"col-8 pl3\">-->\r\n              <!--8642 S Vaquero Dr, Sandy, UT 84094-->\r\n              <!--<div class=\"label-gray\">Mar 20, 2016 &mdash; All Day</div>-->\r\n            <!--</div>-->\r\n          <!--</div>-->\r\n          <!--<div class=\"form-group -x2 flex\">-->\r\n            <!--<div class=\"col-4 form-label -text fs12 uppercase\">Order</div>-->\r\n            <!--<div class=\"col-8 pl3\">-->\r\n              <!--183ew23-212-->\r\n            <!--</div>-->\r\n          <!--</div>-->\r\n          <!--<div class=\"form-group -x2 flex\">-->\r\n            <!--<div class=\"col-4 form-label -text fs12 uppercase\">Purchase order</div>-->\r\n            <!--<div class=\"col-8 pl3\">-->\r\n              <!--0003888573999-5435-->\r\n            <!--</div>-->\r\n          <!--</div>-->\r\n          <!--<div class=\"form-group -x2 flex\">-->\r\n            <!--<div class=\"col-4 form-label -text fs12 uppercase\">Special Instructions</div>-->\r\n            <!--<div class=\"col-8 pl3\">-->\r\n              <!--Accept/I can PU another load afterwards & T-CALL it at the Romeoville drop yard. I will have...-->\r\n            <!--</div>-->\r\n          <!--</div>-->\r\n          <!--<table class=\"table -compact -lined form-group -x2\">-->\r\n            <!--<thead>-->\r\n            <!--<tr>-->\r\n              <!--<th>Type</th>-->\r\n              <!--<th>Qty</th>-->\r\n              <!--<th class=\"right-align\">Weight</th>-->\r\n              <!--<th class=\"right-align\">Volume</th>-->\r\n            <!--</tr>-->\r\n            <!--</thead>-->\r\n            <!--<tbody>-->\r\n            <!--<tr>-->\r\n              <!--<td>Palette</td>-->\r\n              <!--<td>2</td>-->\r\n              <!--<td class=\"right-align\">481 lb</td>-->\r\n              <!--<td class=\"right-align\">127 ft³</td>-->\r\n            <!--</tr>-->\r\n            <!--<tr>-->\r\n              <!--<td>Box</td>-->\r\n              <!--<td>2</td>-->\r\n              <!--<td class=\"right-align\">160 lb</td>-->\r\n              <!--<td class=\"right-align\">115 ft³</td>-->\r\n            <!--</tr>-->\r\n            <!--</tbody>-->\r\n          <!--</table>-->\r\n        <!--</div>-->\r\n      <!--</div>-->\r\n\r\n    <!--</tab>-->\r\n  <!--</tabset>-->\r\n\r\n</div>\r\n\r\n<footer class=\"footer\">\r\n  &copy; Transflo, 2017\r\n</footer>\r\n<div class=\"footer-placeholder\"></div>\r\n\r\n\r\n\r\n<!--&lt;!&ndash; Mobile Special Instructions &ndash;&gt;-->\r\n<!--<div bsModal #extLoadDataModal=\"bs-modal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">-->\r\n  <!--<div class=\"modal-dialog\">-->\r\n    <!--<div class=\"modal-content\">-->\r\n      <!--<div class=\"modal-header\">-->\r\n        <!--<button type=\"button\" class=\"modal-close\" aria-label=\"Close\" (click)=\"extLoadDataModal.hide()\" title=\"Close\">&times;</button>-->\r\n      <!--</div>-->\r\n      <!--<div class=\"modal-body\">-->\r\n        <!--<h3>Ext Load Data</h3>-->\r\n        <!--<table class=\"table -list\">-->\r\n          <!--<tbody>-->\r\n          <!--<tr>-->\r\n            <!--<td class=\"align-middle center\">-->\r\n              <!--<svg class=\"icon -danger m0\"><use xlink:href=\"#svg_danger\"/></svg>-->\r\n            <!--</td>-->\r\n            <!--<td>Hazardous</td>-->\r\n          <!--</tr>-->\r\n          <!--<tr>-->\r\n            <!--<td class=\"align-middle center\">-->\r\n              <!--<svg class=\"icon -ruby m0\"><use xlink:href=\"#svg_ruby\"/></svg>-->\r\n            <!--</td>-->\r\n            <!--<td>High Value</td>-->\r\n          <!--</tr>-->\r\n          <!--<tr>-->\r\n            <!--<td class=\"align-middle center\">-->\r\n              <!--&bull;-->\r\n            <!--</td>-->\r\n            <!--<td>Number of stop: 5</td>-->\r\n          <!--</tr>-->\r\n          <!--<tr>-->\r\n            <!--<td class=\"align-middle center\">-->\r\n              <!--<svg class=\"icon -fragile m0\"><use xlink:href=\"#svg_fragile\"/></svg>-->\r\n            <!--</td>-->\r\n            <!--<td>Fragile</td>-->\r\n          <!--</tr>-->\r\n          <!--<tr>-->\r\n            <!--<td class=\"align-middle center\">-->\r\n              <!--&bull;-->\r\n            <!--</td>-->\r\n            <!--<td>Phone number: (555) 555-1234</td>-->\r\n          <!--</tr>-->\r\n          <!--</tbody>-->\r\n        <!--</table>-->\r\n      <!--</div>-->\r\n    <!--</div>-->\r\n  <!--</div>-->\r\n<!--</div>-->\r\n\r\n<!--&lt;!&ndash; Mobile Ext Load Data &ndash;&gt;-->\r\n<!--<div bsModal #specialInstructionsModal=\"bs-modal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">-->\r\n  <!--<div class=\"modal-dialog\">-->\r\n    <!--<div class=\"modal-content\">-->\r\n      <!--<div class=\"modal-header\">-->\r\n        <!--<button type=\"button\" class=\"modal-close\" aria-label=\"Close\" (click)=\"specialInstructionsModal.hide()\" title=\"Close\">&times;</button>-->\r\n      <!--</div>-->\r\n      <!--<div class=\"modal-body\">-->\r\n        <!--<h3>Special Instructions</h3>-->\r\n        <!--Accept/I can PU another load afterwards & T-CALL it at the Romeoville drop yard. I will have to drop the TRLR there anyways. either that or help out with local runs for a couple days. meaning the rest of the 8th & 9th.-->\r\n      <!--</div>-->\r\n    <!--</div>-->\r\n  <!--</div>-->\r\n<!--</div>-->\r\n\r\n<!--&lt;!&ndash; Mobile Map List &ndash;&gt;-->\r\n<!--<div bsModal #mapListModal=\"bs-modal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">-->\r\n  <!--<div class=\"modal-dialog\">-->\r\n    <!--<div class=\"modal-content\">-->\r\n      <!--<div class=\"modal-header\">-->\r\n        <!--<button type=\"button\" class=\"modal-close\" aria-label=\"Close\" (click)=\"mapListModal.hide()\" title=\"Close\">&times;</button>-->\r\n      <!--</div>-->\r\n      <!--<div class=\"modal-body\">-->\r\n        <!--<div class=\"form-group -x2\">-->\r\n          <!--<div class=\"form-label -text\">Mar 22 &bull; 17:31</div>-->\r\n          <!--<div>One way</div>-->\r\n        <!--</div>-->\r\n        <!--<div class=\"form-group -x2\">-->\r\n          <!--<div class=\"form-label -text\">Mar 22 &bull; 17:31</div>-->\r\n          <!--<div>Shipped to Alabama</div>-->\r\n        <!--</div>-->\r\n        <!--<div class=\"form-group -x2\">-->\r\n          <!--<div class=\"form-label -text\">Mar 22 &bull; 17:31</div>-->\r\n          <!--<div>On the way shipped to Alabama</div>-->\r\n        <!--</div>-->\r\n        <!--<div class=\"form-group -x2\">-->\r\n          <!--<div class=\"form-label -text\">Mar 22 &bull; 17:31</div>-->\r\n          <!--<div>One way</div>-->\r\n        <!--</div>-->\r\n        <!--<div class=\"form-group -x2\">-->\r\n          <!--<div class=\"form-label -text\">Mar 22 &bull; 17:31</div>-->\r\n          <!--<div>Shipped to Alabama</div>-->\r\n        <!--</div>-->\r\n        <!--<div class=\"form-group -x2\">-->\r\n          <!--<div class=\"form-label -text\">Mar 22 &bull; 17:31</div>-->\r\n          <!--<div>One way</div>-->\r\n        <!--</div>-->\r\n        <!--<div class=\"form-group -x2\">-->\r\n          <!--<div class=\"form-label -text\">Mar 22 &bull; 17:31</div>-->\r\n          <!--<div>Shipped to Alabama</div>-->\r\n        <!--</div>-->\r\n      <!--</div>-->\r\n    <!--</div>-->\r\n  <!--</div>-->\r\n<!--</div>-->\r\n\r\n"

/***/ }),
/* 718 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	function __export(m) {
	    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
	}
	__export(__webpack_require__(719));
	

/***/ }),
/* 719 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var core_1 = __webpack_require__(2);
	var index_1 = __webpack_require__(508);
	var ErrorComponent = (function () {
	    function ErrorComponent(localStorageService) {
	        this.localStorageService = localStorageService;
	        this.text = 'Client error occured';
	    }
	    ;
	    ErrorComponent.prototype.ngOnInit = function () {
	        var text = this.localStorageService.getItem('errorText');
	        try {
	            text = JSON.parse(text).errorMessage;
	        }
	        catch (e) {
	        }
	        finally {
	            this.text && (this.text = text);
	        }
	        this.localStorageService.clearItem('errorText');
	    };
	    ;
	    ErrorComponent = __decorate([
	        core_1.Component({
	            selector: 'error',
	            template: __webpack_require__(720),
	        }), 
	        __metadata('design:paramtypes', [index_1.LocalStorageService])
	    ], ErrorComponent);
	    return ErrorComponent;
	}());
	exports.ErrorComponent = ErrorComponent;
	

/***/ }),
/* 720 */
/***/ (function(module, exports) {

	module.exports = "<div class=\"error-page\">\r\n  <h2 class=\"fs24 regular\">{{text}}</h2>\r\n</div>"

/***/ }),
/* 721 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	function __export(m) {
	    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
	}
	__export(__webpack_require__(722));
	

/***/ }),
/* 722 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {"use strict";
	var core_1 = __webpack_require__(2);
	var router_deprecated_1 = __webpack_require__(281);
	var services_1 = __webpack_require__(508);
	var config_1 = __webpack_require__(511);
	var platform_browser_1 = __webpack_require__(177);
	var VelocityComponent = (function () {
	    function VelocityComponent(userService, sanitizer) {
	        this.userService = userService;
	        this.sanitizer = sanitizer;
	        this.div = {};
	        this.initialHref = config_1.Config.appLink;
	        this.mobileInitialLink = config_1.Config.mobileAppLink;
	        this.downloadLink = '';
	        this.href = '';
	        this.buttonHidden = false;
	        if (this.OS().Android()) {
	            this.downloadLink = config_1.Config.downloadLink.Android;
	            this.href = this.sanitizer.bypassSecurityTrustUrl(this.mobileInitialLink);
	            return;
	        }
	        if (this.OS().iOS()) {
	            this.downloadLink = config_1.Config.downloadLink.iOS;
	            this.href = this.sanitizer.bypassSecurityTrustUrl(this.mobileInitialLink);
	            return;
	        }
	        if (this.OS().Windows()) {
	            this.downloadLink = config_1.Config.downloadLink.Windows;
	            this.href = this.sanitizer.bypassSecurityTrustUrl(this.initialHref);
	            return;
	        }
	        if (this.OS().MacOS()) {
	            this.href = this.sanitizer.bypassSecurityTrustUrl('javascript:void(0)');
	            this.buttonHidden = true;
	            return;
	        }
	    }
	    VelocityComponent.prototype.OS = function () {
	        return {
	            Android: function () { return navigator.userAgent.match(/Android/i); },
	            iOS: function () { return navigator.userAgent.match(/iPhone|iPad|iPod/i); },
	            Windows: function () { return navigator.userAgent.match(/Windows/i); },
	            MacOS: function () { return navigator.userAgent.match(/Mac OS/i); }
	        };
	    };
	    ;
	    VelocityComponent.prototype.ngOnInit = function () {
	        $('.wrapper').addClass('-velocity');
	        this.userService.getUser(this.setUser.bind(this));
	    };
	    ;
	    VelocityComponent.prototype.setUser = function (user) {
	        this.user = user;
	        if (this.user.divisions)
	            this.div = this.user.divisions[0];
	    };
	    ;
	    VelocityComponent.prototype.ngOnDestroy = function () {
	        $('.wrapper').removeClass('-velocity');
	    };
	    VelocityComponent = __decorate([
	        core_1.Component({
	            selector: 'transflo-velocity',
	            directives: [router_deprecated_1.ROUTER_DIRECTIVES],
	            template: __webpack_require__(723)
	        }), 
	        __metadata('design:paramtypes', [services_1.UserService, platform_browser_1.DomSanitizationService])
	    ], VelocityComponent);
	    return VelocityComponent;
	}());
	exports.VelocityComponent = VelocityComponent;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(337)))

/***/ }),
/* 723 */
/***/ (function(module, exports) {

	module.exports = "<div class=\"signin\">\r\n  <div class=\"signin-body\">\r\n    <div class=\"signin-content -list\">\r\n      <div class=\"form-group\">\r\n        <div class=\"signin-list-icon\">\r\n          <img src=\"./images/velocity1.png\" width=\"176\" height=\"176\" alt=\"\" class=\"signin-list-icon-img\" />\r\n        </div>\r\n        <h1 class=\"signin-h1\">Command Center</h1>\r\n        <a [routerLink]=\"['Home', {divId: div.id}]\" class=\"signin-button -outline\">\r\n        \tEnter Command Center\r\n        </a>\r\n      </div>\r\n      <div class=\"form-group -x9\">\r\n        <div class=\"signin-list-icon\">\r\n          <div class=\"form-group\">\r\n            <img src=\"./images/velocity2.png\" width=\"176\" height=\"176\" alt=\"\" class=\"signin-list-icon-img\" />\r\n          </div>\r\n          <div class=\"form-group -x2\" *ngIf=\"!buttonHidden\">\r\n            <a [href]=\"downloadLink\" target=\"_blank\" class=\"signin-download\">\r\n              <img src=\"./images/download.png\" width=\"21\" height=\"19\" alt=\"\" />\r\n              <span>Download app</span>\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <h1 class=\"signin-h1\">Transflo Velocity</h1>\r\n        <a [href]=\"href\" class=\"signin-button\" [ngClass]=\"{'disabled': buttonHidden}\">Scan Document</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"signin-footer\">\r\n    &copy; Transflo, 2017\r\n  </div>\r\n</div>"

/***/ }),
/* 724 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	function __export(m) {
	    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
	}
	__export(__webpack_require__(725));
	

/***/ }),
/* 725 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {"use strict";
	var core_1 = __webpack_require__(2);
	var common_1 = __webpack_require__(182);
	var ng2_select_1 = __webpack_require__(338);
	var router_deprecated_1 = __webpack_require__(281);
	var ng2_bootstrap_1 = __webpack_require__(345);
	var index_1 = __webpack_require__(668);
	var index_2 = __webpack_require__(656);
	var index_3 = __webpack_require__(674);
	var index_4 = __webpack_require__(659);
	var map_directive_1 = __webpack_require__(639);
	var index_5 = __webpack_require__(662);
	var services_1 = __webpack_require__(508);
	var index_6 = __webpack_require__(508);
	var moment = __webpack_require__(529);
	var LoadDetailsComponent = (function () {
	    function LoadDetailsComponent(router, loadsService, userService, validationService) {
	        this.router = router;
	        this.loadsService = loadsService;
	        this.userService = userService;
	        this.validationService = validationService;
	        this.load = {
	            showMap: false
	        };
	        this.stops = [];
	        this.shipments = [];
	        this.stopsHash = {};
	        this.trackedEmails = [];
	        this.newEmail = '';
	        this.expired = 0;
	        this.time = 'hours';
	        this.events = [];
	        this.subscribers = [];
	        this.eventGroups = [];
	        this.newSubscriber = {
	            label: null,
	            email: null,
	            emailValid: false,
	            hideEmailinValid: true,
	            events: []
	        };
	        this.currentSubscriber = {
	            label: null,
	            email: null,
	            emailValid: false,
	            hideEmailinValid: true,
	            events: []
	        };
	        this.notificationsDropdown = false;
	        this.mapSidebarOpened = false;
	        this.id = Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);
	    }
	    ;
	    LoadDetailsComponent.prototype.ngOnDestroy = function () {
	        $('body').unbind('click.' + this.id);
	    };
	    ;
	    LoadDetailsComponent.prototype.openNotifications = function (event) {
	        this.notificationsDropdown = true;
	        this.getNotifications();
	        event.stopPropagation();
	        event.preventDefault();
	    };
	    ;
	    LoadDetailsComponent.prototype.closeNotifications = function (event) {
	        if (this.notificationsDropdown && event !== false) {
	            this.notificationsDropdown = false;
	            this.saveNotifications();
	        }
	        if (event && event !== true && event !== false) {
	            event.stopPropagation();
	            event.preventDefault();
	        }
	    };
	    LoadDetailsComponent.prototype.goTendering = function () {
	        this.router.navigate(['TenderingLoad', { divId: this.divisionId, loadId: this.loadId }]);
	    };
	    ;
	    LoadDetailsComponent.prototype.editLoad = function () {
	        this.router.navigate(['EditLoad', { divId: this.divisionId, loadId: this.loadId }]);
	    };
	    ;
	    LoadDetailsComponent.prototype.getTime = function (timestamp) {
	        return moment(timestamp).format('HH:mm:A');
	    };
	    ;
	    LoadDetailsComponent.prototype.saveNotifications = function () {
	        var _this = this;
	        var notifications = this.subscribers.filter(function (sub) { return !(_this.userService.getUserEmail() == sub.email && sub.events.length == 0); });
	        this.loadsService.saveNotifications(this.loadId, notifications).then(function (res) { return console.log(res); });
	    };
	    ;
	    LoadDetailsComponent.prototype.removeSubscriber = function (index) {
	        this.subscribers.splice(index, 1);
	    };
	    ;
	    LoadDetailsComponent.prototype.getSubscriberEvent = function (subscriber, event) {
	        return !!subscriber.events.find(function (subEvent) { return subEvent == event.id; });
	    };
	    ;
	    LoadDetailsComponent.prototype.setSubscriberEvent = function (subscriber, event, value) {
	        if (value && !this.getSubscriberEvent(subscriber, event)) {
	            subscriber.events.push(event.id);
	        }
	        else {
	            var idx = subscriber.events.findIndex(function (subEvent) { return subEvent == event.id; });
	            if (idx != -1) {
	                subscriber.events.splice(idx, 1);
	            }
	        }
	    };
	    ;
	    LoadDetailsComponent.prototype.inputinValid = function (subscriber) {
	        var result = true;
	        result = !subscriber.emailValid || !subscriber.email || !subscriber.label;
	        return result;
	    };
	    LoadDetailsComponent.prototype.updateSubscriber = function (index) {
	        if (this.currentSubscriber.label && this.currentSubscriber.email) {
	            var tempsubscriber = (JSON.parse(JSON.stringify(this.currentSubscriber)));
	            this.subscribers[index] = tempsubscriber;
	        }
	    };
	    ;
	    LoadDetailsComponent.prototype.addSubscriber = function () {
	        if (this.newSubscriber.label && this.newSubscriber.email) {
	            this.subscribers.push(Object.assign({}, this.newSubscriber));
	            this.newSubscriber.label = '';
	            this.newSubscriber.email = '';
	            this.newSubscriber.emailValid = false;
	            this.newSubscriber.hideEmailinValid = true;
	            this.newSubscriber.events = [];
	        }
	    };
	    ;
	    LoadDetailsComponent.prototype.editSubscriber = function (subscriber) {
	        var tempsubscriber = (JSON.parse(JSON.stringify(subscriber)));
	        this.currentSubscriber.email = tempsubscriber.email;
	        this.currentSubscriber.emailValid = true;
	        this.currentSubscriber.hideEmailinValid = true;
	        this.currentSubscriber.label = tempsubscriber.label;
	        this.currentSubscriber.events = tempsubscriber.events;
	    };
	    ;
	    LoadDetailsComponent.prototype.emailValidator = function (subscriber, newEmail) {
	        subscriber.emailValid = false;
	        subscriber.hideEmailinValid = true;
	        if (newEmail && this.validationService.emailValidator(newEmail)) {
	            subscriber.emailValid = true;
	        }
	    };
	    LoadDetailsComponent.prototype.blurEmail = function (subscriber) {
	        if (subscriber.email && !subscriber.emailValid) {
	            subscriber.hideEmailinValid = false;
	        }
	    };
	    LoadDetailsComponent.prototype.extractNotifications = function (res) {
	        if (res) {
	            var body = res.json();
	            var eventGroups = [];
	            this.subscribers = body.subscribers;
	            if (this.subscribers && !this.subscribers.length) {
	                this.subscribers.push({
	                    label: 'Me',
	                    email: this.userService.getUserEmail(),
	                    events: []
	                });
	            }
	            this.events = body.events;
	            this.eventGroups = this.events.map(function (event) { return event.group; });
	            var _loop_1 = function(eventGroup) {
	                if (!eventGroups.find(function (ev) { return eventGroup == (ev && ev.eventName); })) {
	                    eventGroups.push({
	                        eventName: eventGroup,
	                        events: this_1.events.filter(function (e) { return e.group == eventGroup; })
	                    });
	                }
	            };
	            var this_1 = this;
	            for (var _i = 0, _a = this.eventGroups; _i < _a.length; _i++) {
	                var eventGroup = _a[_i];
	                _loop_1(eventGroup);
	            }
	            ;
	            this.eventGroups = eventGroups;
	        }
	    };
	    ;
	    LoadDetailsComponent.prototype.getNotifications = function () {
	        this.loadsService.getNotifications(this.loadId).then(this.extractNotifications.bind(this));
	    };
	    ;
	    LoadDetailsComponent.prototype.deserealizeBreadcrumbs = function (res) {
	        if (res && res.text()) {
	            this.breadcrumbs = res.json();
	        }
	    };
	    ;
	    LoadDetailsComponent.prototype.deserealizeMessages = function (res) {
	        if (res && res.text()) {
	            this.messages = res.json();
	        }
	    };
	    ;
	    LoadDetailsComponent.prototype.ngOnInit = function () {
	        var _this = this;
	        this.loading = true;
	        this.divisionId = +this.router.root.currentInstruction.urlPath.split('/')[1];
	        this.loadId = +this.router.root.currentInstruction.urlPath.split('/')[3];
	        this.userService.getUser(this.setCarrier.bind(this));
	        this.loadsService.getLoad(this.loadId, this.divisionId)
	            .then(this.deserealizeLoad.bind(this));
	        this.loadsService.getMessages(this.loadId)
	            .then(this.deserealizeMessages.bind(this));
	        $('body').on('click.' + this.id, function (event) {
	            // if it's inside the notification dropdown -- dont hide it
	            if (!$(event.target).closest('.-notification-dropdown').length && $.contains($('body')[0], event.target)) {
	                _this.closeNotifications(event);
	            }
	        });
	    };
	    ;
	    LoadDetailsComponent.prototype.setCarrier = function (user) {
	        var _this = this;
	        var division = user.divisions.find(function (div) {
	            return div.id == _this.divisionId;
	        });
	        this.isCarrier = division.type == 'carrier';
	        this.isCommonCarrier = division.isCommonCarrier;
	    };
	    ;
	    LoadDetailsComponent.prototype.deserealizeLoad = function (jsonResult) {
	        if (jsonResult) {
	            this.load = jsonResult.json();
	            this.shipments = this.load.shipments;
	            this.stops = this.load.stops;
	            for (var i = 0, length_1 = this.stops.length; i < length_1; i++) {
	                this.stopsHash[this.stops[i].id] = this.stops[i];
	            }
	            this.stops.sort(function (a, b) { return a.stopNum - b.stopNum; });
	            this.loading = false;
	            if (this.load.loadTracking) {
	                this.loadsService.getBreadcrumbs(this.loadId)
	                    .then(this.deserealizeBreadcrumbs.bind(this));
	            }
	        }
	    };
	    ;
	    LoadDetailsComponent = __decorate([
	        core_1.Component({
	            selector: 'load-details',
	            directives: [ng2_bootstrap_1.TAB_DIRECTIVES, index_3.ShareComponent, index_4.DateComponent, map_directive_1.MapDirective, ng2_bootstrap_1.DROPDOWN_DIRECTIVES, index_2.DriversComponent, index_5.AttributesComponent, ng2_bootstrap_1.MODAL_DIRECTVES, ng2_bootstrap_1.TYPEAHEAD_DIRECTIVES, ng2_select_1.SELECT_DIRECTIVES, common_1.NgClass, common_1.CORE_DIRECTIVES, common_1.FORM_DIRECTIVES, index_1.SkeletonComponent],
	            viewProviders: [ng2_bootstrap_1.BS_VIEW_PROVIDERS],
	            providers: [services_1.LoadsService],
	            template: __webpack_require__(726)
	        }), 
	        __metadata('design:paramtypes', [router_deprecated_1.Router, services_1.LoadsService, services_1.UserService, index_6.ValidationService])
	    ], LoadDetailsComponent);
	    return LoadDetailsComponent;
	}());
	exports.LoadDetailsComponent = LoadDetailsComponent;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(337)))

/***/ }),
/* 726 */
/***/ (function(module, exports) {

	module.exports = "<div class=\"loading-page\" [hidden]=\"!loading\"><em></em><em></em><em></em></div>\r\n<header class=\"page-header\">\r\n  <div class=\"flex items-center\">\r\n    <div class=\"flex-auto flex items-baseline\">\r\n      <h1>Load #{{isCarrier ? load.carrierLoadNumber : load.brokerLoadNumber}}</h1>\r\n      <div [ngClass]=\"{'label-red': load.status === 'Declined', 'label-green': load.status !== 'Declined'}\" class=\"label-lg pl2\">{{load.status}}</div>\r\n    </div>\r\n    <div>\r\n      <transflo-share [loadId]=\"loadId\" class=\"button-group\" (onToggle)=\"closeNotifications($event)\"></transflo-share>\r\n      <!-- Document scans, remove comments below in further releases -->\r\n      <!--div class=\"button -link -sm\" dropdown keyboardNav=\"true\" autoClose=\"outsideClick\"  (onToggle)=\"closeNotifications($event)\">\r\n        <button title=\"scans\" class=\"button -link -sm\" type=\"button\" dropdownToggle>Document scans</button>\r\n        <div class=\"dropdown-menu -right\" dropdownMenu  role=\"menu\">\r\n          <ul class=\"menu -overflow\">\r\n            <li *ngFor=\"let scan of load.documentScans\" role=\"menuitem\"><a class=\"dropdown-item\" target=\"_blank\" href=\"{{scan.url}}\">{{scan.label}}</a></li>\r\n          </ul>\r\n        </div>\r\n      </div-->\r\n      <div class=\"dropdown -inline -notification-dropdown\"  [ngClass]=\"{'open': notificationsDropdown}\">\r\n        <button type=\"button\" [hidden]=\"isCommonCarrier\" class=\"button -link -sm\" (click)=\"openNotifications($event)\">Notifications</button>\r\n        <div class=\"dropdown-menu -xlg2 -right\" style=\"min-width: 500px; width: auto !important\" role=\"menu\">\r\n          <button class=\"dropdown-close\" type=\"button\" (click)=\"closeNotifications($event)\">&times;</button>\r\n          <h2>Notifications</h2>\r\n          <div class=\"table-container -xlg2\">\r\n            <table class=\"table -compact -matrix\" >\r\n              <tbody *ngFor=\"let eventGroup of eventGroups; let idx = index\">\r\n              <tr>\r\n                <th class=\"nowrap\">\r\n                  <h3 class=\"m0 label-text\">{{eventGroup.eventName}}</h3>\r\n                </th>\r\n                <th class=\"center nowrap\"  [hidden]=\"idx != 0\" *ngFor=\"let subscriber of subscribers; let subIdx = index\">\r\n                  <div class=\"label-text\" dropdown keyboardNav=\"true\" autoClose=\"outsideClick\">\r\n                    <span (click)=\"editSubscriber(subscriber);\" dropdownToggle>{{subscriber.label}}</span>\r\n                    <div class=\"dropdown-menu -lg -text -right\"  role=\"menu\" dropdownMenu>\r\n                      <div class=\"flex items-end\">\r\n                        <div class=\"flex-auto\">\r\n                          <div class=\"form-group\">\r\n                            <label class=\"form-label\">Name</label>\r\n                            <input autocomplete=\"off\" class=\"form-control\" [(ngModel)]=\"currentSubscriber.label\" type=\"text\" />\r\n                          </div>\r\n                          <div class=\"form-group\">\r\n                            <label class=\"form-label\">Email</label>\r\n                            <input autocomplete=\"off\" class=\"form-control\"  (ngModelChange)=\"emailValidator(currentSubscriber, $event)\" (blur)=\"blurEmail(currentSubscriber)\" \r\n\t\t\t\t\t\t\t\t   [(ngModel)]=\"currentSubscriber.email\" type=\"email\" />\r\n\t\t\t\t\t\t    <div [hidden]=\"currentSubscriber.hideEmailinValid\" class=\"label-validation-error\">Email Address is invalid</div>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"pl2\">\r\n                          <button class=\"button -outline\" type=\"button\" [disabled]=\"inputinValid(currentSubscriber)\"  (click)=\"updateSubscriber(subIdx);\">Update</button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                  </div>\r\n                  <button class=\"button -link label-danger bold\" (click)=\"removeSubscriber(subIdx)\">&times;</button>\r\n                </th>\r\n                <th class=\"center\" *ngIf=\"idx == 0\">\r\n                  <div class=\"dropdown -inline\" dropdown keyboardNav=\"true\" autoClose=\"outsideClick\">\r\n                    <button class=\"button -link -sm medium\" dropdownToggle><span class=\"plus\">+</span> Add Email</button>\r\n                    <div class=\"dropdown-menu -lg -text -right\" role=\"menu\" dropdownMenu>\r\n                      <div class=\"flex items-end\">\r\n                        <div class=\"flex-auto\">\r\n                          <div class=\"form-group\">\r\n                            <label class=\"form-label\">Name</label>\r\n                            <input autocomplete=\"off\" class=\"form-control\" [(ngModel)]=\"newSubscriber.label\" type=\"text\" />\r\n                          </div>\r\n                          <div class=\"form-group\">\r\n                            <label class=\"form-label\">Email</label>\r\n                            <input autocomplete=\"off\" class=\"form-control\" (ngModelChange)=\"emailValidator(newSubscriber, $event)\" (blur)=\"blurEmail(newSubscriber)\" \r\n\t\t\t\t\t\t\t\t   [(ngModel)]=\"newSubscriber.email\" type=\"email\" />\r\n\t\t\t\t\t\t    <div [hidden]=\"newSubscriber.hideEmailinValid\" class=\"label-validation-error\">Email Address is invalid</div>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"pl2\">\r\n                          <button class=\"button -outline\" type=\"button\" [disabled]=\"inputinValid(newSubscriber)\" (click)=\"addSubscriber()\">Save</button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </th>\r\n              </tr>\r\n              <tr *ngFor=\"let event of eventGroup.events\">\r\n                <td class=\"align-middle\">{{event.name}}</td>\r\n                <td class=\"center\" *ngFor=\"let subscriber of subscribers\">\r\n                  <label>\r\n                    <input type=\"checkbox\" hidden [ngModel]=\"getSubscriberEvent(subscriber, event)\" (ngModelChange)=\"setSubscriberEvent(subscriber, event, $event)\"/>\r\n                    <em class=\"form-switcher\"></em>\r\n                  </label>\r\n                </td>\r\n                <td class=\"center\">\r\n                  <div class=\"form-switcher-placeholder\"></div>\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- Document scans, remove comments below in further releases -->\r\n\r\n      <!--div class=\"button -link -sm\" dropdown keyboardNav=\"true\" autoClose=\"outsideClick\"  (onToggle)=\"closeNotifications($event)\">\r\n        <button title=\"links\" class=\"button -link -sm\" type=\"button\" dropdownToggle>Links</button>\r\n        <div class=\"dropdown-menu -right\" dropdownMenu  role=\"menu\">\r\n          <ul class=\"menu\">\r\n            <li *ngFor=\"let link of load.menu\" role=\"menuitem\">\r\n              <a class=\"dropdown-item\" target=\"_blank\" href=\"{{link.url}}\">\r\n              {{link.name}}\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <span class=\"buttons-separator\"></span-->\r\n\r\n      <!-- Remove this span after implementation of links and document scans -->\r\n      <span class=\"separator\"></span>\r\n      <button type=\"button\" class=\"button -primary\" (click)=\"editLoad()\">Edit Load</button>\r\n    </div>\r\n  </div>\r\n</header>\r\n\r\n<div class=\"page-content\">\r\n  <div class=\"form-group\">\r\n    <div class=\"flex form-group\">\r\n      <div class=\"col-3 pr4\">\r\n        <div class=\"form-group -x2\">\r\n          <div class=\"form-label -text\">BOL</div>\r\n          <div class=\"fs15 medium\">{{load.bolNumber}}</div>\r\n        </div>\r\n        <div class=\"form-group -x2\">\r\n          <div [hidden]=\"isCarrier\">\r\n            <div class=\"form-label -text\">\r\n              Carrier\r\n              <button class=\"button -outline -xs -icon\" type=\"button\" title=\"Edit\" [hidden]=\"!load.carrierFleetId\" (click)=\"goTendering()\">\r\n                <svg class=\"icon -pen\"><use xlink:href=\"#svg_pen\"/></svg>\r\n              </button>\r\n            </div>\r\n            \r\n            <div class=\"form-group\" [hidden]=\"load.carrierFleetId\">\r\n              <button class=\"button -outline -xs\" type=\"button\" (click)=\"goTendering()\">+ Assign</button>\r\n\t\t\t  <transflo-drivers [drivers]=\"load.carrierTenderingInfo\" [isCarrier]=\"isCarrier\" [loadId]=\"load.id\" [divisionId]=\"divisionId\" [loadStatus]=\"load.status\"></transflo-drivers>\r\n            </div>\r\n            <div class=\"form-group -x05\">\r\n              <div>{{load.brokerTenderingInfo && load.brokerTenderingInfo.length > 0 ? load.brokerTenderingInfo[0].name : '' }}</div>\r\n            </div>\r\n          </div>\r\n          <div [hidden]=\"!isCarrier\">\r\n              <div class=\"form-label -text\">Broker</div>\r\n              <div>{{load.brokerTenderingInfo && load.brokerTenderingInfo.length > 0 ? load.brokerTenderingInfo[0].name : '-'}}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-3 pl3 pr4\">\r\n        <div class=\"form-label -text\">Origin</div> \r\n        <div class=\"label-lg form-group\">{{stops[0] && stops[0].addressLines && stops[0].addressLines.join(', ')}}<br /> {{stops[0] && stops[0].city}}, {{stops[0] && stops[0].state}}, {{stops[0] && stops[0].postalCode}}</div>\r\n        <div class=\"label-md form-group\">{{stops[0] && stops[0].date}} &mdash; {{stops[0] && stops[0].time}}</div>\r\n      </div>\r\n      <div class=\"col-3 center self-center pl3 pr2\">\r\n        <div class=\"wayline\">\r\n          <div class=\"wayline-content\" [hidden]=\"stops.length < 3\"><span class=\"label-count\">{{stops.length - 2}}</span> Intermediate stop</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-3 pl6 right-align\">\r\n        <div class=\"form-label -text\">Destination</div>\r\n        <div class=\"label-lg form-group\">{{stops[stops.length - 1] && stops[stops.length - 1].addressLines && stops[stops.length - 1].addressLines.join(', ')}}<br /> {{stops[stops.length - 1] && stops[stops.length - 1].city}}, {{stops[stops.length - 1] && stops[stops.length - 1].state}}, {{stops[stops.length - 1] && stops[stops.length - 1].postalCode}}</div>\r\n        <div class=\"label-md form-group\">{{stops[stops.length - 1] && stops[stops.length - 1].date}} &mdash; {{stops[stops.length - 1] && stops[stops.length - 1].time}}</div>\r\n      </div>\r\n    </div>\r\n    <div class=\"flex items-end form-group -x2\">\r\n\t  <div class=\"col-3 pr4\">\r\n\t  <div *ngIf=\"isCarrier\">\r\n\t    <div class=\"form-label -text\">Drivers</div>\r\n\t    <div [hidden]=\"load.carrierTenderingInfo && load.carrierTenderingInfo.length\"></div>\r\n\t    <transflo-drivers [drivers]=\"load.carrierTenderingInfo\" [isCarrier]=\"isCarrier\" [loadId]=\"load.id\" [divisionId]=\"divisionId\" [loadStatus]=\"load.status\"></transflo-drivers>\r\n\t  </div>\r\n\t\t  <!--<div class=\"form-group -x05\">\r\n\t\t    <div class=\"label-title\">{{load.carrierDivision && load.carrierDivision.code}}</div>\r\n\t\t    <div>{{load.carrierDivision && load.carrierDivision.name}}</div>\r\n\t\t  </div>\r\n\t\t \r\n\t\t  <div [hidden]=\"!isCarrier\">\r\n\t\t    <div class=\"label-title\">{{load.brokerDivision && load.brokerDivision.code}}</div>\r\n\t\t    <div>{{load.brokerDivision && load.brokerDivision.name}}</div>\r\n\t\t  </div>-->\r\n\t \r\n\t\r\n\t  </div>\r\n        <!--<div class=\"form-label -text\">Drivers</div>\r\n        <div [hidden]=\"load.carrierTenderingInfo && load.carrierTenderingInfo.length\"> - </div>\r\n        <transflo-drivers [drivers]=\"load.carrierTenderingInfo\" [isCarrier]=\"isCarrier\" [loadId]=\"load.id\" [divisionId]=\"divisionId\" [loadStatus]=\"load.status\"></transflo-drivers>-->\r\n    \r\n      <div class=\"pr4 pl3\">\r\n        <div class=\"form-label -text\">Freight Terms</div>\r\n        <div class=\"fs15 medium\">{{load.freightTerms}}</div>\r\n      </div>\r\n      <div class=\"pr4 pl3\">\r\n        <div class=\"form-label -text form-group\">Attributes</div>\r\n        <transflo-attributes class=\"flex items-center form-group -x05\" [attrs]=\"load.loadAttributes\"></transflo-attributes>\r\n      </div>\r\n      <div class=\"pr4 pl3\">\r\n        <div class=\"form-label -text\">Special Instructions</div>\r\n        <div dropdown keyboardNav=\"true\">\r\n          <button type=\"button\" class=\"button -link -sm -dotted\" dropdownToggle>Read Instructions</button>\r\n          <div class=\"dropdown-menu -lg -text -center\" role=\"menu\" dropdownMenu>\r\n            <h3>Special Instructions</h3>\r\n            {{load.carrierSpecialInstructions}}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\t  <div class=\"flex-auto right-align pl3\">\r\n\t    <div class=\"form-label -text\">Load Tracking</div>\r\n\t    <div class=\"fs15 medium\">{{load.loadTracking ? 'On' : 'Off'}}</div>\r\n\t  </div>\r\n      <div class=\"flex-auto right-align pl3\">\r\n        <div class=\"form-label -text\">Rate</div>\r\n        <div class=\"fs15 medium\">${{load.rate || 0}}</div>\r\n      </div>\r\n\t  </div>\r\n    </div>\r\n  \r\n</div>\r\n\r\n<div class=\"map\" *ngIf=\"load.showMap\">\r\n  <div class=\"map-wrapper\">\r\n    <div class=\"map-container\" map [breadcrumbs]=\"breadcrumbs\" [truck]=\"load.truckLocation\" [stops]=\"stops\" [nextStop]=\"load.nextStop\" [show]=\"load.showMap\" style=\"height: 430px;\"></div>\r\n    <div class=\"map-sidebar\" [ngClass]=\"{'-hidden': mapSidebarOpened == false}\">\r\n      <button type=\"button\" class=\"map-sidebar-toggle\" (click)=\"mapSidebarOpened = !mapSidebarOpened\" [ngClass]=\"{'-hidden': mapSidebarOpened == false}\"></button>      \r\n      <div class=\"map-sidebar-list\">\r\n        <div class=\"form-group -x2\" *ngFor=\"let message of messages\">\r\n          <div class=\"medium\">{{message.title}}</div>\r\n          <div class=\"form-label -text fs12\"><transflo-date [date]=\"message.timestamp\" dontShowTime=\"true\"></transflo-date> &bull; {{getTime(message.timestamp)}}</div>\r\n          <div>{{message.message}}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"page-content\">\r\n  <div class=\"form-group -x3\">\r\n    <tabset [justified]=\"true\">\r\n      <tab class=\"tab-pane\" heading=\"Trip\">\r\n      \t<transflo-skeleton [load]=\"load\"></transflo-skeleton>\r\n      </tab>\r\n      <tab heading=\"Shipments\">\r\n\r\n        <div class=\"form-group -x6\" *ngFor=\"let shipment of shipments; let idx = index\">\r\n          <div class=\"form-group flex\">\r\n            <div class=\"col-4 label-lg pr4\">\r\n              Shipment {{idx + 1}}\r\n            </div>\r\n            <div class=\"col-8 label-lg pl3\">\r\n              BOL {{shipment.shipmentBOL}}\r\n            </div>\r\n          </div>\r\n          <hr class=\"form-group -x15\" />\r\n          <div class=\"form-group flex -x2\">\r\n            <div class=\"col-4 pr4\">\r\n              <div class=\"form-group\" [hidden]=\"!shipment.shipmentCarrierSpecInstructions\">\r\n                <div class=\"form-label -text\">Special Instructions</div>\r\n                <div>\r\n                  {{shipment.shipmentCarrierSpecInstructions}}\r\n                  <!--button class=\"button -link -sm -dotted\" type=\"button\">Read more</button-->\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group -x3\" [hidden]=\"!shipment.orders || (shipment.orders && !shipment.orders.length)\">\r\n                <div class=\"form-label -text\">Order / Purchase order</div>\r\n                <div *ngFor=\"let order of shipment.orders\">{{order.orderNUmber}} / {{order.purchaseOrderNumber}}</div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-8 pl3\">\r\n              <div class=\"form-group flex\">\r\n                <div class=\"col-4 pr4\">\r\n                  <div class=\"form-label -text\">Origin</div>\r\n                  <div class=\"form-group label-md medium\">\r\n                    {{stopsHash[shipment.pickup] && stopsHash[shipment.pickup].addressLines && stopsHash[shipment.pickup].addressLines.join(', ')}}, {{stopsHash[shipment.pickup] && stopsHash[shipment.pickup].city}}, {{stopsHash[shipment.pickup] && stopsHash[shipment.pickup].state}}, {{stopsHash[shipment.pickup] && stopsHash[shipment.pickup].postalCode}}\r\n                  </div>\r\n                  <div class=\"form-group\">{{stopsHash[shipment.pickup] && stopsHash[shipment.pickup].date}} &mdash; {{stopsHash[shipment.pickup] && stopsHash[shipment.pickup].time}}</div>\r\n                </div>\r\n                <div class=\"col-4 self-center pl2 pr2\">\r\n                  <div class=\"wayline -sm\"></div>\r\n                </div>\r\n                <div class=\"col-4 right-align pl4\">\r\n                  <div class=\"form-label -text\">Destination</div>\r\n                  <div class=\"form-group label-md medium\">{{stopsHash[shipment.dropoff] && stopsHash[shipment.dropoff].addressLines && stopsHash[shipment.dropoff].addressLines.join(', ')}}, {{stopsHash[shipment.dropoff] && stopsHash[shipment.dropoff].city}}, {{stopsHash[shipment.dropoff] && stopsHash[shipment.dropoff].state}}, {{stopsHash[shipment.dropoff] && stopsHash[shipment.dropoff].postalCode}}</div>\r\n                  <div class=\"form-group\">{{stopsHash[shipment.dropoff] && stopsHash[shipment.dropoff].date}} &mdash; {{stopsHash[shipment.dropoff] && stopsHash[shipment.dropoff].time}}</div>\r\n                </div>\r\n              </div>\r\n              <table class=\"table -compact -lined form-group -x3\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Type</th>\r\n                    <th>Qty</th>\r\n                    <th class=\"right-align\">Weight</th>\r\n                    <th class=\"right-align\">Volume</th>\r\n                    <th class=\"right-align\">Height</th>\r\n                    <th class=\"right-align\">Freight Class</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr *ngFor=\"let package of shipment.packages\">\r\n                    <td>{{package.type}}</td>\r\n                    <td>{{package.quantity || 0}}</td>\r\n                    <td class=\"right-align\">{{package.weight || 0}} {{package.weightUnit}}</td>\r\n                    <td class=\"right-align\">{{package.volume || 0}} {{package.sizeUnit}}³</td>\r\n                    <td class=\"right-align\">{{package.height || 0}} {{package.sizeUnit}}</td>\r\n                    <td class=\"right-align\">{{package.freightClass}}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </tab>\r\n    </tabset>\r\n  </div>\r\n</div>"

/***/ }),
/* 727 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	function __export(m) {
	    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
	}
	__export(__webpack_require__(728));
	

/***/ }),
/* 728 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {"use strict";
	var core_1 = __webpack_require__(2);
	var index_1 = __webpack_require__(508);
	var router_deprecated_1 = __webpack_require__(281);
	var rangepicker_directive_1 = __webpack_require__(636);
	var drivers_component_1 = __webpack_require__(657);
	var attributes_component_1 = __webpack_require__(663);
	var dropdown_component_1 = __webpack_require__(654);
	var index_2 = __webpack_require__(635);
	var index_3 = __webpack_require__(508);
	var moment = __webpack_require__(529);
	var index_4 = __webpack_require__(686);
	var DashboardComponent = (function () {
	    function DashboardComponent(userService, router, dashboardService, routeParams, loadsService, divisionService, localStorageService) {
	        this.userService = userService;
	        this.router = router;
	        this.dashboardService = dashboardService;
	        this.routeParams = routeParams;
	        this.loadsService = loadsService;
	        this.divisionService = divisionService;
	        this.localStorageService = localStorageService;
	        this.filterStatus = [];
	        this.markers = [];
	        this.rawLocations = [];
	        this.statusFilters = index_4.StatusFilterConst;
	        this.mode = 'map';
	        this.statistics = [];
	        this.filters = {};
	        this.locations = [];
	        this.load = {};
	        this.driver = {};
	        this.filterDateShipping = {
	            startDate: moment().toDate(),
	            endDate: moment().add(1, 'w').toDate()
	        };
	        this.filterDateDelivery = {
	            startDate: moment().toDate(),
	            endDate: moment().add(1, 'w').toDate()
	        };
	        this.locationFilter = 'shipping';
	        this.driverFilter = 'intransit';
	        this.shippingLocations = true;
	        this.deliveryLocations = true;
	        this.availableDrivers = true;
	        this.intransitDrivers = true;
	        this.arrowMarker = [];
	    }
	    ;
	    DashboardComponent.prototype.getClass = function (stat) {
	        var className;
	        if (stat.type == 'loads') {
	            className = 'label-link';
	            switch (stat.label) {
	                case 'In transit loads':
	                    className += ' -with-marker -marker-transit';
	                    break;
	                case 'Assigned loads':
	                    className += ' -with-marker -marker-assigned';
	                    break;
	                case 'Offered loads':
	                    className += ' -with-marker -marker-offered';
	                    break;
	                case 'Declined loads':
	                    className += ' -with-marker -marker-declined';
	                    break;
	                case 'Available loads':
	                    className += ' -with-marker -marker-available';
	                    break;
	            }
	            ;
	            return className;
	        }
	    };
	    ;
	    DashboardComponent.prototype.setFavorite = function (entity) {
	        this.divisionService.setAsFavorite(this.divisionId, entity.id, entity.isFavorite);
	    };
	    ;
	    DashboardComponent.prototype.filterChanged = function (value, type) {
	        if (type == 'shipping') {
	            this.filterDateShipping = value;
	        }
	        else {
	            this.filterDateDelivery = value;
	        }
	    };
	    ;
	    DashboardComponent.prototype.statusChanged = function (value) {
	        this.filterStatus = value;
	    };
	    ;
	    DashboardComponent.prototype.apply = function () {
	        this.filterLocations();
	    };
	    ;
	    DashboardComponent.prototype.setCarrier = function (user) {
	        var _this = this;
	        var found;
	        if (user.divisions) {
	            found = user.divisions.find(function (div) {
	                return div.id == +_this.divisionId;
	            });
	            if (found) {
	                this.isCarrier = found.type == 'carrier';
	            }
	            else {
	                this.router.navigate(['ErrorDivision', { divId: this.divisionId }]);
	            }
	        }
	    };
	    ;
	    DashboardComponent.prototype.parseStats = function (res) {
	        if (res) {
	            this.statistics = res.text() && res.json();
	        }
	    };
	    ;
	    DashboardComponent.prototype.filterFunc = function (location) {
	        //let result = false;
	        if (this.driverFilter == 'intransit' && location.type == 'intransitDriver') {
	            return true;
	        }
	        if (this.driverFilter == 'available' && location.type == 'availableDriver') {
	            return true;
	        }
	        if (this.locationFilter == 'delivery' && location.type == 'deliveryLoc') {
	            return true;
	        }
	        if (this.locationFilter == 'shipping' && location.type == 'shippingLoc') {
	            return true;
	        }
	        return false;
	    };
	    ;
	    DashboardComponent.prototype.applyCheckboxes = function (event, type) {
	        this[event.currentTarget.name] = event.currentTarget.value;
	        this.locations = this.rawLocations.filter(this.filterFunc.bind(this));
	        this.drawPoints(false);
	    };
	    ;
	    DashboardComponent.prototype.parseLocations = function (res) {
	        if (res) {
	            var locations = res.text() && res.json();
	            this.rawLocations = locations.loadPoints.concat(locations.driverPoints);
	            this.locations = this.rawLocations.filter(this.filterFunc.bind(this));
	            this.driversNumber = this.locations.filter(function (loc) { return loc.type == 'availableDriver' || loc.type == 'intransitDriver'; }).length;
	            this.loadsNumber = this.locations.filter(function (loc) { return loc.type == 'deliveryLoc' || loc.type == 'shippingLoc'; }).length;
	            this.drawPoints(true);
	            this.loading = false;
	        }
	    };
	    ;
	    DashboardComponent.prototype.parseDriver = function (res) {
	        if (res) {
	            this.driver = res.text() && res.json();
	        }
	    };
	    ;
	    DashboardComponent.prototype.parseLoad = function (res) {
	        if (res) {
	            this.load = res.text() && res.json();
	        }
	    };
	    ;
	    DashboardComponent.prototype.goToStat = function (stat) {
	        if (stat.type == 'loads') {
	            var filterObj = {
	                divId: this.divisionId
	            };
	            if (stat.filters && stat.filters.length) {
	                var _loop_1 = function(filter) {
	                    if (filter.param == 'status') {
	                        if (filter.value.indexOf(',') >= 0) {
	                            statuses = [];
	                            for (var _i = 0, _a = this_1.statusFilters; _i < _a.length; _i++) {
	                                var statFilter = _a[_i];
	                                if (filter.value.indexOf(statFilter.text) >= 0) {
	                                    statuses.push(statFilter.id);
	                                }
	                            }
	                            filterObj['st'] = '[' + statuses.toString() + ']';
	                        }
	                        else {
	                            filterObj['st'] = JSON.stringify(this_1.statusFilters.filter(function (f) { return f.text == filter.value; }).map(function (f) { return f.id; }));
	                        }
	                    }
	                    if (filter.param == 'driverAssignee') {
	                        filterObj['adr'] = JSON.stringify([filter.value]);
	                    }
	                    if (filter.param == 'driverOffered') {
	                        filterObj['odr'] = JSON.stringify([filter.value]);
	                    }
	                };
	                var this_1 = this;
	                var statuses;
	                for (var _b = 0, _c = stat.filters; _b < _c.length; _b++) {
	                    var filter = _c[_b];
	                    _loop_1(filter);
	                }
	            }
	            ;
	            this.router.navigate(['Loads', filterObj]);
	        }
	        ;
	    };
	    ;
	    DashboardComponent.prototype.drawArrow = function (point) {
	        var _this = this;
	        this.arrowMarker = [];
	        $('.leaflet-marker-icon').addClass('-none');
	        this.arrowMarker.push(L.polyline([
	            [point.latitude, point.longitude],
	            [point.associatedLoad.latitude, point.associatedLoad.longitude]
	        ], {
	            color: '#fcf7f7',
	            weight: 11,
	            opacity: 1,
	            lineJoin: 'round'
	        }).addTo(this.map));
	        this.arrowMarker.push(L.polyline([
	            [point.latitude, point.longitude],
	            [point.associatedLoad.latitude, point.associatedLoad.longitude]
	        ], {
	            color: '#63C4E8',
	            weight: 5,
	            opacity: 1,
	            lineJoin: 'round'
	        }).addTo(this.map));
	        this.arrowMarker.push(L.marker([point.latitude, point.longitude], {
	            icon: L.divIcon({
	                iconSize: L.point(42, 54),
	                className: 'icon-dashboard icon-driver-transit -active',
	                iconAnchor: L.point(23, 55)
	            })
	        })
	            .addTo(this.map)
	            .on('click', function (event) { return _this.setMode(point, event); }));
	        this.activePoint.associatedLoad.isVirtual = true;
	        this.arrowMarker.push(L.marker([point.associatedLoad.latitude, point.associatedLoad.longitude], {
	            icon: L.divIcon({
	                iconSize: L.point(42, 54),
	                className: 'icon-dashboard icon-location-delivery -active',
	                iconAnchor: L.point(23, 55)
	            })
	        })
	            .addTo(this.map)
	            .on('click', function (event) { return _this.setMode(point.associatedLoad, event); }));
	    };
	    ;
	    DashboardComponent.prototype.setMode = function (point, event) {
	        if (!point.isVirtual) {
	            $('.leaflet-marker-icon').removeClass('-active');
	            $('.leaflet-marker-icon').removeClass('-none');
	            for (var _i = 0, _a = this.arrowMarker; _i < _a.length; _i++) {
	                var marker = _a[_i];
	                this.map.removeLayer(marker);
	            }
	            this.arrowMarker = [];
	        }
	        if (point.type != 'map') {
	            var marker = $(event.originalEvent.target).addClass('-active');
	        }
	        ;
	        this.activePoint = point;
	        switch (point.type) {
	            case 'intransitDriver':
	                if (!this.isCarrier) {
	                    this.mode = 'map';
	                }
	                else {
	                    this.mode = 'driver';
	                    this.drawArrow(point);
	                }
	                break;
	            case 'availableDriver':
	                if (!this.isCarrier) {
	                    this.mode = 'map';
	                }
	                else {
	                    this.mode = 'driver';
	                }
	                break;
	            case 'shippingLoc':
	            case 'deliveryLoc':
	                this.mode = 'load';
	                break;
	            default:
	                this.mode = 'map';
	                break;
	        }
	        ;
	        if (this.mode != 'driver' || this.isCarrier) {
	            this.getDataForTab();
	        }
	    };
	    ;
	    DashboardComponent.prototype.getDataForTab = function () {
	        switch (this.mode) {
	            case 'driver':
	                this.driver = {};
	                this.divisionService
	                    .getDriver(this.divisionId, this.activePoint.id)
	                    .then(this.parseDriver.bind(this));
	                break;
	            case 'load':
	                this.load = {};
	                this.loadsService
	                    .getLoadSummary(this.activePoint.id, this.divisionId)
	                    .then(this.parseLoad.bind(this));
	                break;
	            case 'map':
	                break;
	            default:
	                break;
	        }
	    };
	    ;
	    DashboardComponent.prototype.getDate = function (date) {
	        return moment(date).format('MMM DD, YYYY');
	    };
	    ;
	    DashboardComponent.prototype.drawPoints = function (fitBounds) {
	        var _this = this;
	        if (this.markers && this.markers.length) {
	            for (var _i = 0, _a = this.markers; _i < _a.length; _i++) {
	                var marker = _a[_i];
	                if (typeof this.map != 'undefined') {
	                    this.map.removeLayer(marker);
	                }
	            }
	            ;
	            this.markers = [];
	        }
	        $('.leaflet-marker-icon').removeClass('-active');
	        $('.leaflet-marker-icon').removeClass('-none');
	        for (var _b = 0, _c = this.arrowMarker; _b < _c.length; _b++) {
	            var marker = _c[_b];
	            this.map.removeLayer(marker);
	        }
	        this.arrowMarker = [];
	        var _loop_2 = function(point) {
	            var className = 'icon-dashboard';
	            switch (point.type) {
	                case 'intransitDriver':
	                    className += ' icon-driver-transit';
	                    break;
	                case 'availableDriver':
	                    className += ' icon-driver-available';
	                    break;
	                case 'shippingLoc':
	                    className += ' icon-location-shipping';
	                    break;
	                case 'deliveryLoc':
	                    className += ' icon-location-delivery';
	                    break;
	            }
	            ;
	            var marker = L.marker([point.latitude, point.longitude], {
	                icon: L.divIcon({
	                    iconSize: L.point(42, 54),
	                    className: className,
	                    iconAnchor: L.point(23, 55)
	                })
	            })
	                .addTo(this_2.map)
	                .on('click', function (event) { return _this.setMode(point, event); });
	            if (!this_2.isCarrier && (point.type == 'intransitDriver' || point.type == 'availableDriver')) {
	                marker.bindPopup('' +
	                    '<div class="flex pt1 pb1">' +
	                    '<div>' +
	                    '<div class="medium">' + point.carrier.name + '</div>' +
	                    '<div>' + point.carrier.code + '</div>' +
	                    '</div>' +
	                    '</div>');
	            }
	            ;
	            if (typeof marker != 'undefined') {
	                this_2.markers.push(marker);
	            }
	        };
	        var this_2 = this;
	        for (var _d = 0, _e = this.locations; _d < _e.length; _d++) {
	            var point = _e[_d];
	            _loop_2(point);
	        }
	        ;
	        if (fitBounds && this.locations.length) {
	            this.map.fitBounds(this.locations.map(function (point) { return [point.latitude, point.longitude]; }));
	        }
	    };
	    ;
	    DashboardComponent.prototype.filterLocations = function () {
	        this.filters.divisionId = this.divisionId;
	        if (this.filterDateShipping && this.filterDateShipping.startDate && this.filterDateShipping.endDate) {
	            this.filters.shippingDatesRange = moment(this.filterDateShipping.startDate).format('MM/DD/YYYY') + '-' + moment(this.filterDateShipping.endDate).format('MM/DD/YYYY');
	            this.setFilterDates();
	        }
	        else {
	            delete this.filters.shippingDatesRange;
	        }
	        if (this.filterDateDelivery && this.filterDateDelivery.startDate && this.filterDateDelivery.endDate) {
	            this.filters.deliveryDatesRange = moment(this.filterDateDelivery.startDate).format('MM/DD/YYYY') + '-' + moment(this.filterDateDelivery.endDate).format('MM/DD/YYYY');
	            this.setFilterDates();
	        }
	        else {
	            delete this.filters.deliveryDatesRange;
	        }
	        if (this.filterStatus) {
	            this.filters.status = this.filterStatus.map(function (f) { return f.text; }).join(',');
	        }
	        this.dashboardService
	            .getLocations(this.filters)
	            .then(this.parseLocations.bind(this));
	    };
	    ;
	    DashboardComponent.prototype.ngAfterViewChecked = function () {
	    };
	    ;
	    DashboardComponent.prototype.drawMap = function () {
	        var _this = this;
	        if (typeof this.map == 'undefined') {
	            // set max boudns for map
	            var southWest = L.latLng(-89.98155760646617, -180);
	            var northEast = L.latLng(89.99346179538875, 180);
	            var bounds = L.latLngBounds(southWest, northEast);
	            var mapLayer = MQ.mapLayer({
	                continuousWorld: false,
	                noWrap: true
	            });
	            this.map = L.map('map', {
	                layers: mapLayer,
	                center: [39.828175, -98.5795],
	                zoom: 4,
	                minZoom: 3,
	                maxBoundsViscosity: 1.0
	            });
	            this.map.setMaxBounds(bounds);
	            this.map.on('click', function (event) { return _this.setMode({ type: 'map' }, event); });
	        }
	        else {
	            this.map.invalidateSize();
	        }
	    };
	    ;
	    DashboardComponent.prototype.setFilterDates = function () {
	        this.localStorageService.setItem('dashboardDates', JSON.stringify({
	            filterDateShipping: {
	                startDate: moment(this.filterDateShipping.startDate).format('MM DD YYYY'),
	                endDate: moment(this.filterDateShipping.endDate).format('MM DD YYYY')
	            },
	            filterDateDelivery: {
	                startDate: moment(this.filterDateDelivery.startDate).format('MM DD YYYY'),
	                endDate: moment(this.filterDateDelivery.endDate).format('MM DD YYYY')
	            }
	        }));
	    };
	    DashboardComponent.prototype.ngOnInit = function () {
	        var filteredDates = JSON.parse(this.localStorageService.getItem('dashboardDates'));
	        if (filteredDates) {
	            this.filterDateShipping = {
	                startDate: moment(filteredDates.filterDateShipping.startDate, 'MM DD YYYY').toDate(),
	                endDate: moment(filteredDates.filterDateShipping.endDate, 'MM DD YYYY').toDate()
	            };
	            this.filterDateDelivery = {
	                startDate: moment(filteredDates.filterDateDelivery.startDate, 'MM DD YYYY').toDate(),
	                endDate: moment(filteredDates.filterDateDelivery.endDate, 'MM DD YYYY').toDate()
	            };
	        }
	        else {
	            this.setFilterDates();
	        }
	        this.divisionId = +this.routeParams.params['divId'];
	        this.userService.getUser(this.setCarrier.bind(this));
	        this.loading = true;
	        this.localStorageService.getItem('dashboardDates');
	        this.drawMap();
	        if (!isNaN(this.divisionId)) {
	            this.dashboardService
	                .getStatistics(this.divisionId)
	                .then(this.parseStats.bind(this));
	            this.filterLocations();
	        }
	    };
	    ;
	    DashboardComponent = __decorate([
	        core_1.Component({
	            selector: 'dashboard',
	            template: __webpack_require__(729),
	            directives: [router_deprecated_1.ROUTER_DIRECTIVES, index_2.MessagesDirective, rangepicker_directive_1.RangePickerDirective, drivers_component_1.DriversComponent, attributes_component_1.AttributesComponent, dropdown_component_1.DropdownComponent],
	            providers: [index_3.DashboardService, index_3.DivisionService, index_3.LoadsService]
	        }), 
	        __metadata('design:paramtypes', [index_1.UserService, router_deprecated_1.Router, index_3.DashboardService, router_deprecated_1.RouteParams, index_3.LoadsService, index_3.DivisionService, index_3.LocalStorageService])
	    ], DashboardComponent);
	    return DashboardComponent;
	}());
	exports.DashboardComponent = DashboardComponent;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(337)))

/***/ }),
/* 729 */
/***/ (function(module, exports) {

	module.exports = "<div class=\"loading-page\" [hidden]=\"!loading\"><em></em><em></em><em></em></div>\r\n\r\n<div class=\"home-container-placeholder\"></div>\r\n<div class=\"home-container\">\r\n\r\n  <div class=\"home-leftbar\">\r\n\r\n      <div class=\"home-leftbar-body\">\r\n        <div class=\"form-group\">\r\n          <label class=\"form-label\">Load Status</label>\r\n          <transflo-dropdown [list]=\"statusFilters\" [selectedList]=\"filterStatus\" (listChanged)=\"statusChanged($event)\" placeholder=\"Select statuses\"></transflo-dropdown>\r\n        </div>\r\n        <div class=\"form-group -x2\">\r\n          <label class=\"form-label\">Shipping Date</label>\r\n          <input autocomplete=\"off\" class=\"form-control -select\" placeholder=\"Select dates\" range-picker [daterange]=\"filterDateShipping\" (daterangechanged)=\"filterChanged($event, 'shipping')\" />\r\n        </div>\r\n         <div class=\"form-group -x2\">\r\n          <label class=\"form-label\">Delivery Date</label>\r\n          <input autocomplete=\"off\" class=\"form-control -select\" placeholder=\"Select dates\" range-picker [daterange]=\"filterDateDelivery\" (daterangechanged)=\"filterChanged($event, 'delivery')\" />\r\n        </div>\r\n        <div class=\"form-group -x3 -icon\">\r\n          <img src=\"./images/i_shipping.png\" alt=\"\" width=\"17\" height=\"21\" *ngIf=\"locationFilter == 'shipping'\">\r\n          <img src=\"./images/i_delivery.png\" alt=\"\" width=\"17\" height=\"21\" *ngIf=\"locationFilter == 'delivery'\">\r\n        </div>\r\n        <div class=\"form-group -bordered -x2\">\r\n          <!--label class=\"form-checkbox\">\r\n            <input type=\"checkbox\" [(ngModel)]=\"shippingLocations\" (ngModelChange)=\"applyCheckboxes()\"/>\r\n            <svg class=\"icon -checkbox form-checkbox-icon -green\"><use xlink:href=\"#svg_checkbox\"/></svg>\r\n            <span class=\"form-checkbox-text\">Show Shipping Locations</span>\r\n          </label-->\r\n          <label class=\"form-radio\">\r\n            <input type=\"radio\" name=\"locationFilter\" value=\"shipping\" (click)=\"applyCheckboxes($event)\" checked/>\r\n            <span class=\"form-radio-text -green\">Show Pickup Locations</span>\r\n          </label>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <!--label class=\"form-checkbox\">\r\n            <input type=\"checkbox\"  [(ngModel)]=\"deliveryLocations\" (ngModelChange)=\"applyCheckboxes()\"/>\r\n            <svg class=\"icon -checkbox form-checkbox-icon -blue\"><use xlink:href=\"#svg_checkbox\"/></svg>\r\n            <span class=\"form-checkbox-text\">Show Delivery Locations</span>\r\n          </label-->\r\n          <label class=\"form-radio\">\r\n            <input type=\"radio\" name=\"locationFilter\" value=\"delivery\" (click)=\"applyCheckboxes($event)\" />\r\n            <span class=\"form-radio-text -blue\">Show Delivery Locations</span>\r\n          </label>\r\n        </div>\r\n\t\t\r\n        <div class=\"form-group -x3 -icon\" [hidden]=\"!isCarrier\">\r\n          <img src=\"./images/i_available.png\" alt=\"\" width=\"19\" height=\"15\" *ngIf=\"driverFilter == 'available'\">\r\n          <img src=\"./images/i_in_transit.png\" alt=\"\" width=\"19\" height=\"15\" *ngIf=\"driverFilter == 'intransit'\">\r\n        </div>\r\n\r\n        <div class=\"form-group -bordered -x2\" [hidden]=\"!isCarrier\">\r\n          <label class=\"form-radio\">\r\n            <input type=\"radio\" name=\"driverFilter\" value=\"available\" (click)=\"applyCheckboxes($event)\" />\r\n            <span class=\"form-radio-text -yellow\">Show Available Loads</span>\r\n          </label>\r\n        </div>\r\n        <div class=\"form-group\" [hidden]=\"!isCarrier\">\r\n          <label class=\"form-radio\">\r\n            <input type=\"radio\" name=\"driverFilter\" value=\"intransit\" (click)=\"applyCheckboxes($event)\" checked/>\r\n            <span class=\"form-radio-text -light_blue\">Show In Transit Loads</span>\r\n          </label>\r\n        </div>\r\n        <div class=\"form-group -bordered -x2\">\r\n          <button type=\"button\" class=\"button -primary -block\" style=\"margin-top: 10px\" (click)=\"apply()\">Apply</button>\r\n        </div>\r\n        <div class=\"home-leftbar-footer\">\r\n          <strong>{{loadsNumber}} Loads</strong><span> and </span><strong>{{driversNumber}} drivers</strong>\r\n          <br />\r\n          satisfy filtering conditions\r\n        </div>\r\n      </div>\r\n\r\n  </div>\r\n\r\n  <div class=\"home-center\" id=\"map\">  \r\n  </div>\r\n  \r\n  <div class=\"home-rightbar\" [ngClass]=\"{'-no-scroll': mode == 'load' && load.id}\">\r\n    <div class=\"home-rightbar-content\">\r\n      <!--1-->\r\n      <ul class=\"home-stats\" *ngIf=\"mode == 'map'\">\r\n        <li [ngClass]=\"getClass(stat)\" *ngFor=\"let stat of statistics\" (click)=\"goToStat(stat)\"><span>{{stat.value}}</span> {{stat.label}}</li>\r\n      </ul>\r\n      <!--2-->\r\n      <div class=\"home-load\" *ngIf=\"mode == 'load' && load.id\">\r\n       <a [routerLink]=\"['Load Details', {divId: divisionId, loadId: load.id}]\" class=\"form-group -x3\">\r\n          <div class=\"form-label -text\">Load #</div>\r\n          <span class=\"medium\">{{isCarrier ? load.carrierLoadNumber : load.brokerLoadNumber}}</span>\r\n        </a>\r\n        <div class=\"form-group -x3\">\r\n          <div class=\"form-label -text\">BOL #</div>\r\n          <span class=\"medium\">{{load.bolNumber}}</span>\r\n        </div>\r\n        <div class=\"form-group wayline-vertical-start\">\r\n          <div class=\"form-label -text\">Origin</div>\r\n          <div class=\"fs15 medium mb1\">{{load.firstStop && load.firstStop.addressLines && load.firstStop.addressLines.join(' ')}}<br />{{load.firstStop && load.firstStop.city}}, {{load.firstStop && load.firstStop.state}} {{load.firstStop && load.firstStop.postalCode}} {{load.firstStop && load.firstStop.country}}</div>\r\n          {{getDate(load.firstStop && load.firstStop.date)}} &mdash; {{load.firstStop && load.firstStop.time}}\r\n        </div>\r\n        <div class=\"form-group -x2 medium\" [ngClass]=\"{'-non_visible': !load.numberOfStops || load.numberOfStops <= 2}\"><span class=\"label-count wayline-vertical-center\">{{load.numberOfStops - 2}}</span> Intermediate stop</div>\r\n        <div class=\"form-group -x2 wayline-vertical-end\">\r\n          <div class=\"form-label -text\">Destination</div>\r\n          <div class=\"fs15 medium mb1\">{{load.lastStop && load.lastStop.addressLines && load.lastStop.addressLines.join(' ')}}<br />{{load.firstStop && load.firstStop.city}}, {{load.lastStop && load.lastStop.state}} {{load.lastStop && load.lastStop.postalCode}} {{load.lastStop && load.lastStop.country}}</div>\r\n          {{getDate(load.lastStop && load.lastStop.date)}} &mdash; {{load.lastStop && load.lastStop.time}}\r\n        </div>\r\n        <div class=\"form-group -x3\">\r\n          <transflo-drivers  [drivers]=\"load.carrierTenderingInfo\" [isCarrier]=\"isCarrier\" [loadId]=\"load.id\" [divisionId]=\"divisionId\"></transflo-drivers>\r\n        </div>\r\n        <div class=\"form-group -x3\">\r\n          <div class=\"form-label -text\">{{isCarrier ? 'Broker' : 'Carrier'}}</div>\r\n          {{isCarrier ? load.brokerDivision && load.brokerDivision.name || '-' : load.carrierDivision && load.carrierDivision.name || '-'}}\r\n        </div>\r\n        <div class=\"form-group -x3\">\r\n          <div class=\"form-label -text\">Attributes</div>\r\n          <transflo-attributes class=\"flex items-center form-group -x05\" [attrs]=\"load.loadAttributes\"></transflo-attributes>\r\n        </div>\r\n      </div>\r\n      <!--3-->\r\n      <div class=\"home-info\" *ngIf=\"mode == 'driver' && driver.id && isCarrier\">\r\n        <div class=\"form-group fs23 medium\">\r\n          <div *ngFor=\"let name of driver.name && driver.name.split(' ')\">{{name}}</div>\r\n        </div>\r\n        <div class=\"form-group -x3\">#{{driver.driverId}}</div>\r\n        <div class=\"form-group -x3\">\r\n          <div class=\"form-label -text\">Last known location</div>\r\n          <div *ngFor=\"let adr of driver.lastKnownLocation && driver.lastKnownLocation.addressLines\">{{adr}}</div>\r\n          <div>{{driver.lastKnownLocation && driver.lastKnownLocation.city}}, {{driver.lastKnownLocation && driver.lastKnownLocation.state}} {{driver.lastKnownLocation && driver.lastKnownLocation.postalCode}}</div>\r\n        </div>\r\n         <ul class=\"home-stats -inline\">\r\n          <li *ngFor=\"let stat of driver.statistics\" class=\"label-link\" (click)=\"goToStat(stat)\"><span>{{stat.value}}</span> {{stat.label}}</li>\r\n        </ul>\r\n        <div class=\"form-group -x3 flex\">\r\n          <div class=\"pr2\">\r\n            <label title=\"Mark as favorite\"><input [(ngModel)]=\"driver.isFavorite\" (ngModelChange)=\"setFavorite(driver)\" type=\"checkbox\" hidden /><em class=\"form-favorite\"><svg class=\"icon -favorite m0\"><use xlink:href=\"#svg_star\"/></svg></em></label>\r\n          </div>\r\n          <div class=\"pr2\">\r\n            <a href=\"mailto:{{driver.email}}\" class=\"button -outline -icon\"><svg class=\"icon -mail\"><use xlink:href=\"#svg_mail\"/></svg></a>\r\n          </div>\r\n          <div>\r\n            <a class=\"button -outline\" messages [divisionId]=\"divisionId\" [driverId]=\"driver.id\">Message <span [hidden]=\"!driver.isNewMessage\" class=\"label-count -msg\">new</span></a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</div>"

/***/ }),
/* 730 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	function __export(m) {
	    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
	}
	__export(__webpack_require__(731));
	

/***/ }),
/* 731 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var core_1 = __webpack_require__(2);
	var services_1 = __webpack_require__(508);
	var index_1 = __webpack_require__(732);
	var index_2 = __webpack_require__(674);
	var division_model_1 = __webpack_require__(517);
	var user_model_1 = __webpack_require__(516);
	var localstorage_service_1 = __webpack_require__(521);
	var http_service_1 = __webpack_require__(510);
	var ProfileComponent = (function () {
	    function ProfileComponent(userService, localStorageService, httpService) {
	        this.userService = userService;
	        this.localStorageService = localStorageService;
	        this.httpService = httpService;
	        this.loading = false;
	        this.user = new user_model_1.User({});
	        this.hideCarriersUpload = true;
	        this.remittanceUpdateUrl = 'divisions/remittance';
	        this.brokers = new Array();
	    }
	    ;
	    ProfileComponent.prototype.ngOnInit = function () {
	        this.loading = true;
	        this.userService.getUser(this.setUser.bind(this));
	        this.selectedDivision = JSON.parse(this.localStorageService.getItem('selectedDivision')) || new division_model_1.Division(null);
	    };
	    ;
	    ProfileComponent.prototype.setUser = function (user) {
	        this.loading = false;
	        this.user = user;
	        this.brokers = this.user.divisions.filter(function (div) { return div.type == 'broker'; });
	        this.hideCarriersUpload = !this.user.divisions.some(function (x) { return x.type == 'broker'; });
	    };
	    ;
	    ProfileComponent.prototype.closeNotifications = function (event) {
	        if (event && event !== true && event !== false) {
	            event.stopPropagation();
	            event.preventDefault();
	        }
	    };
	    ;
	    ProfileComponent.prototype.updateCarrierBrokerSettings = function (event, carrierBrokerSetting) {
	        this.userService.updateCarrierBrokerSettings(carrierBrokerSetting);
	    };
	    ;
	    ProfileComponent.prototype.saveRemittance = function (event) {
	        this.httpService.post(this.remittanceUpdateUrl, JSON.stringify(this.selectedDivision.remittance))
	            .toPromise()
	            .then(this.handleRemittanceReturn.bind(this));
	    };
	    ;
	    ProfileComponent.prototype.handleRemittanceReturn = function (jsonResults) {
	        if (jsonResults.status === 200) {
	            alert('data saved');
	            this.localStorageService.setItem('selectedDivision', JSON.stringify(this.selectedDivision));
	        }
	        else {
	            alert('data not saved');
	        }
	        ;
	    };
	    ProfileComponent = __decorate([
	        core_1.Component({
	            selector: 'transflo-profile',
	            directives: [index_1.uploadCarriersComponent, index_2.ShareComponent],
	            template: __webpack_require__(735)
	        }), 
	        __metadata('design:paramtypes', [services_1.UserService, localstorage_service_1.LocalStorageService, http_service_1.HttpService])
	    ], ProfileComponent);
	    return ProfileComponent;
	}());
	exports.ProfileComponent = ProfileComponent;
	

/***/ }),
/* 732 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	function __export(m) {
	    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
	}
	__export(__webpack_require__(733));
	

/***/ }),
/* 733 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var core_1 = __webpack_require__(2);
	var services_1 = __webpack_require__(508);
	var ng2_bootstrap_1 = __webpack_require__(345);
	var uploadCarriersComponent = (function () {
	    function uploadCarriersComponent(UserService) {
	        this.UserService = UserService;
	        this.brokers = [];
	        this.onToggle = new core_1.EventEmitter();
	        this.carriersUpoadSampleUrl = this.UserService.getCarriersUpoadSampleUrl();
	        this.uploadSucceeded = false;
	        this.hideUploadStatus = true;
	    }
	    uploadCarriersComponent.prototype.fileChange = function (event) {
	        var fileList = event.target.files;
	        if (fileList.length > 0) {
	            this.fileToUpload = fileList[0];
	        }
	    };
	    uploadCarriersComponent.prototype.uploadFile = function () {
	        var _this = this;
	        this.UserService.carriersUpoad(this.brokerCode, this.fileToUpload).then(function (result) {
	            console.log(result);
	            _this.hideUploadStatus = false;
	            _this.uploadStatusMessage = 'Upload succeeded.';
	            _this.uploadSucceeded = true;
	        }).catch(function (result) {
	            console.log(result);
	            _this.hideUploadStatus = false;
	            _this.uploadSucceeded = false;
	            _this.uploadStatusMessage = 'Upload failed.';
	        });
	    };
	    uploadCarriersComponent.prototype.ngOnChanges = function (changes) {
	        this.setbrokerCode();
	    };
	    ;
	    uploadCarriersComponent.prototype.setbrokerCode = function () {
	        if (this.brokers.length === 1) {
	            this.brokerCode = this.brokers[0].code;
	        }
	    };
	    uploadCarriersComponent.prototype.uploadCarriersInit = function () {
	        this.hideUploadStatus = true;
	        this.brokerCode = '';
	        this.ufilesInput.nativeElement.value = "";
	        this.setbrokerCode();
	    };
	    uploadCarriersComponent.prototype.cleanFile = function () {
	        this.hideUploadStatus = true;
	    };
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Array)
	    ], uploadCarriersComponent.prototype, "brokers", void 0);
	    __decorate([
	        core_1.ViewChild('uploadFilesInput'), 
	        __metadata('design:type', Object)
	    ], uploadCarriersComponent.prototype, "ufilesInput", void 0);
	    __decorate([
	        core_1.Output(), 
	        __metadata('design:type', Object)
	    ], uploadCarriersComponent.prototype, "onToggle", void 0);
	    uploadCarriersComponent = __decorate([
	        core_1.Component({
	            selector: 'transflo-upload-Carriers',
	            template: __webpack_require__(734),
	            providers: [services_1.UserService],
	            directives: [ng2_bootstrap_1.DROPDOWN_DIRECTIVES]
	        }), 
	        __metadata('design:paramtypes', [services_1.UserService])
	    ], uploadCarriersComponent);
	    return uploadCarriersComponent;
	}());
	exports.uploadCarriersComponent = uploadCarriersComponent;
	

/***/ }),
/* 734 */
/***/ (function(module, exports) {

	module.exports = "  <div dropdown keyboardNav=\"true\" autoClose=\"outsideClick\">\r\n    <button type=\"button\" class=\"button -link -sm\" dropdownToggle (click)=\"uploadCarriersInit()\">Upload Carriers List</button>\r\n    <div class=\"dropdown-menu -xlg2 -center\" role=\"menu\" dropdownMenu>\r\n\t  <div class=\"flex-auto\">\r\n\t\t<div class=\"form-group\">\r\n\t\t\t<a  [href]=\"carriersUpoadSampleUrl\">Download Carriers List Sample - TXT</a>\r\n\t\t</div>\r\n\t\t<br />\r\n\t\t<div >\r\n\t\t <label class=\"form-label\">Division</label>\r\n\t\t  <select class=\"form-control\" [(ngModel)]=\"brokerCode\">\r\n\t\t\t<option *ngFor=\"let broker of brokers\" value={{broker.code}}>\r\n\t\t\t  {{broker.name}}&bull;{{broker.code}}\r\n\t\t\t</option>\r\n\t\t  </select>\r\n\t\t</div>\r\n\t\t<br/>\r\n\t\t<div class=\"form-group\">\r\n\t\t  <input #uploadFilesInput  type=\"file\" [disabled]=\"!brokerCode\" (click)=\"cleanFile()\" (change)=\"fileChange($event)\" placeholder=\"Upload file\" accept=\".txt\">\r\n\t\t</div>\r\n\t\t<div class=\"form-group \" [class.upload-error]=\"!uploadSucceeded\" [class.upload-succeeded]=\"uploadSucceeded\" [hidden]=\"hideUploadStatus\">{{uploadStatusMessage}}</div>\r\n\t\t<button type=\"button\" class=\"button -primary\" style=\"float:right !important\" (click)=\"uploadFile()\" [disabled]=\"!brokerCode || !fileToUpload\">Upload</button>\r\n\t  </div>\r\n\t</div>\r\n  </div>"

/***/ }),
/* 735 */
/***/ (function(module, exports) {

	module.exports = "<div class=\"loading-page\" [hidden]=\"!loading\"><em></em><em></em><em></em></div>\r\n\r\n<header class=\"page-header\">\r\n  <div class=\"flex items-center\">\r\n    <div class=\"flex-auto flex items-baseline\">\r\n      <h1>My Profile</h1>\r\n    </div>\r\n    <div class=\"center pt4 pb4\">\r\n      <transflo-upload-Carriers  [brokers]=\"brokers\" [hidden]=\"hideCarriersUpload\" class=\"button-group\" (onToggle)=\"closeNotifications($event)\"></transflo-upload-Carriers>\r\n    </div>\r\n  </div>\r\n</header>\r\n\r\n<div class=\"page-content\">\r\n\r\n  <div class=\"flex form-group\">\r\n    <div class=\"col-4\">\r\n      <img src=\"./images/profile.png\" alt=\"\" width=\"177\" height=\"135\" class=\"profile-img\" />\r\n    </div>\r\n    <div class=\"col-8\">\r\n      <div class=\"form-group\">\r\n        <div class=\"form-label -text\">First Name</div>\r\n        <div class=\"profile-name\">{{user.firstname}}</div>\r\n      </div>\r\n      <div class=\"form-group -x2\">\r\n        <div class=\"form-label -text\">Last Name</div>\r\n        <div class=\"profile-name\">{{user.lastname}}</div>\r\n      </div>\r\n      <div class=\"form-group -x5\">\r\n        <div class=\"form-label -text\">Email</div>\r\n        <div class=\"fs30 medium\">{{user.email}}</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"hr form-group -x6\"></div>\r\n  \r\n  <div class=\"flex form-group -x6\">\r\n    <div class=\"col-4\">\r\n      <h3 class=\"fs22\">Associated Divisions</h3>\r\n    </div>\r\n    <div class=\"col-8 flex flex-wrap\">\r\n      <div class=\"col-6 pr4 pb4\" *ngFor=\"let division of user.divisions\">\r\n        <div class=\"form-label -text\">{{division.code}} &nbsp;&bull;&nbsp; {{division.type}}</div>\r\n        <h5>{{division.name}}</h5>\r\n      </div>\r\n    </div>\r\n  </div> \r\n  <div class=\"hr form-group -x6\" *ngIf=\"user.brokerSettings.length > 0\"></div>  \r\n  <div class=\"flex form-group -x6\" *ngIf=\"user.brokerSettings.length > 0\">\r\n    <div class=\"col-4\">\r\n      <h3 class=\"fs22\">Associated Brokers</h3>\r\n    </div>\r\n    <div>\r\n      <div class=\"profile-broker-list\">\r\n        <div class=\"profile-broker-list-table\">\r\n          <div class=\"profile-broker-list-table-row\">\r\n            <div class=\"profile-broker-list-table-cell form-label -text\">\r\n              Broker Name/ID\r\n            </div>\r\n            <div class=\"profile-broker-list-table-cell form-label -text\">\r\n              Driver Can Submit Documents Directly to Broker\r\n            </div>\r\n            <div class=\"profile-broker-list-table-cell form-label -text\">\r\n              Automatically Create Invoice\r\n            </div>\r\n          </div>\r\n          <div class=\"profile-broker-list-table-row\" *ngFor=\"let broker of user.brokerSettings\">\r\n            <div class=\"profile-broker-list-table-cell\">\r\n              <h5>{{broker.name}} &nbsp;-&nbsp; {{broker.fleetId}}</h5>\r\n            </div>\r\n            <div class=\"profile-broker-list-table-cell center-text\">            \r\n              <label>\r\n                <input type=\"checkbox\" hidden [disabled]=\"!broker.allowScanningToggle\" [(ngModel)]=\"broker.scanningEnabled\" (ngModelChange)=\"updateCarrierBrokerSettings($event, broker)\"/>\r\n                <em class=\"form-switcher\"></em>\r\n              </label>\r\n            </div>\r\n            <div class=\"profile-broker-list-table-cell center-text\">            \r\n              <label>\r\n                <input type=\"checkbox\" hidden [disabled]=\"!broker.allowScanningToggle\" [(ngModel)]=\"broker.autoInvoicingEnabled\" (ngModelChange)=\"updateCarrierBrokerSettings($event, broker)\"/>\r\n                <em class=\"form-switcher\"></em>\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"hr form-group -x6\"></div> \r\n  <div class=\"flex form-group -x6\">\r\n    <div class=\"col-4\">\r\n      <h3 class=\"fs22\">Carrier Invoice</h3>\r\n    </div>\r\n    <form #remittanceForm=\"ngForm\"> \r\n      <div class=\"carrier-invoice\">\r\n        <div class=\"carrier-invoice-row\">\r\n          <div class=\"carrier-invoice-label-cell\">\r\n            <div class=\"carrier-invoice\">\r\n              <div class=\"carrier-invoice-row\">\r\n                <div class=\"carrier-invoice-label-cell form-label -text\">\r\n                  Carrier Name\r\n                </div>\r\n                <div class=\"carrier-invoice-input-cell\">\r\n                  <input name=\"carrierName\" type=\"text\" class=\"carrier-invoice-input\" required [(ngModel)]=\"selectedDivision.remittance.carrierName\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"carrier-invoice-row\">\r\n          <div class=\"carrier-invoice-label-cell\">\r\n            <div class=\"carrier-invoice\">\r\n              <div class=\"carrier-invoice-row\">\r\n                <div class=\"carrier-invoice-label-cell form-label -text\">\r\n                  Contact Name\r\n                </div>\r\n                <div class=\"carrier-invoice-input-cell\">\r\n                  <input type=\"text\" class=\"carrier-invoice-input\" [(ngModel)]=\"selectedDivision.remittance.contactName\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"carrier-invoice-row\">\r\n          <div class=\"carrier-invoice-label-cell\">\r\n            <div class=\"carrier-invoice\">\r\n              <div class=\"carrier-invoice-row\">\r\n                <div class=\"carrier-invoice-label-cell form-label -text\">\r\n                  Contact Phone Number\r\n                </div>\r\n                <div class=\"carrier-invoice-input-cell\">\r\n                  <input type=\"text\" class=\"carrier-invoice-input\" [(ngModel)]=\"selectedDivision.remittance.contactPhone\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"carrier-invoice-row\">\r\n          <div class=\"carrier-invoice-label-cell\">\r\n            <div class=\"carrier-invoice\">\r\n              <div class=\"carrier-invoice-row\">\r\n                <div class=\"carrier-invoice-label-cell form-label -text\">\r\n                  Remit To Name\r\n                </div>\r\n                <div class=\"carrier-invoice-input-cell\">\r\n                  <input type=\"text\" class=\"carrier-invoice-input\" [(ngModel)]=\"selectedDivision.remittance.name\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"carrier-invoice-row\">\r\n          <div class=\"carrier-invoice-label-cell\">\r\n            <div class=\"carrier-invoice\">\r\n              <div class=\"carrier-invoice-row\">\r\n                <div class=\"carrier-invoice-label-cell form-label -text\">\r\n                  Remit To Address 1\r\n                </div>\r\n                <div class=\"carrier-invoice-input-cell\">\r\n                  <input type=\"text\" class=\"carrier-invoice-input\" [(ngModel)]=\"selectedDivision.remittance.address1\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"carrier-invoice-row\">\r\n          <div class=\"carrier-invoice-label-cell\">\r\n            <div class=\"carrier-invoice\">\r\n              <div class=\"carrier-invoice-row\">\r\n                <div class=\"carrier-invoice-label-cell form-label -text\">\r\n                  Remit To Address 2\r\n                </div>\r\n                <div class=\"carrier-invoice-input-cell\">\r\n                  <input type=\"text\" class=\"carrier-invoice-input\" [(ngModel)]=\"selectedDivision.remittance.address2\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"carrier-invoice-row\">\r\n          <div class=\"carrier-invoice-label-cell\">\r\n            <div class=\"carrier-invoice\">\r\n              <div class=\"carrier-invoice-row\">\r\n                <div class=\"carrier-invoice-label-cell form-label -text\">\r\n                  Remit To City\r\n                </div>\r\n                <div class=\"carrier-invoice-input-cell\">\r\n                  <input type=\"text\" class=\"carrier-invoice-input\" [(ngModel)]=\"selectedDivision.remittance.city\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"carrier-invoice-row\">\r\n          <div class=\"carrier-invoice-label-cell\">\r\n            <div class=\"carrier-invoice\">\r\n              <div class=\"carrier-invoice-row\">\r\n                <div class=\"carrier-invoice-label-cell form-label -text\">\r\n                  Remit To State\r\n                </div>\r\n                <div class=\"carrier-invoice-input-cell\">\r\n                  <input type=\"text\" class=\"carrier-invoice-input\" [(ngModel)]=\"selectedDivision.remittance.state\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"carrier-invoice-row\">\r\n          <div class=\"carrier-invoice-label-cell\">\r\n            <div class=\"carrier-invoice\">\r\n              <div class=\"carrier-invoice-row\">\r\n                <div class=\"carrier-invoice-label-cell form-label -text\">\r\n                  Remit To Zip Code\r\n                </div>\r\n                <div class=\"carrier-invoice-input-cell\">\r\n                  <input type=\"text\" class=\"carrier-invoice-input\" [(ngModel)]=\"selectedDivision.remittance.zipCode\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"carrier-invoice-row\">\r\n          <div class=\"carrier-invoice-label-cell\">\r\n            <div class=\"carrier-invoice\">\r\n              <div class=\"carrier-invoice-row\">\r\n                <div class=\"carrier-invoice-label-cell form-label -text\">\r\n                  Notice of Assignment Language\r\n                </div>\r\n                <div class=\"carrier-invoice-input-cell\">\r\n                  <input type=\"text\" class=\"carrier-invoice-input\" [(ngModel)]=\"selectedDivision.remittance.noticeOfAssignmentLanguage\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>    \r\n        <div class=\"carrier-invoice-row\">\r\n          <div class=\"carrier-invoice-label-cell\">\r\n            <div class=\"carrier-invoice\">\r\n              <div class=\"carrier-invoice-row\">\r\n                <div class=\"carrier-invoice-label-cell form-label -text\">\r\n                    remittanceForm.form.valid = {{remittanceForm.form.valid}}\r\n                  <button class=\"button -primary -block\" style=\"margin-top: 10px; width: 200px;\" [disabled]=\"!remittanceForm.form.valid\" type=\"button\" (click)=\"saveRemittance()\">Apply Carrier Invoice</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>   \r\n</div>"

/***/ }),
/* 736 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	function __export(m) {
	    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
	}
	__export(__webpack_require__(737));
	

/***/ }),
/* 737 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var core_1 = __webpack_require__(2);
	var router_deprecated_1 = __webpack_require__(281);
	var services_1 = __webpack_require__(508);
	var ResetComponent = (function () {
	    function ResetComponent(routeParams, userService) {
	        this.routeParams = routeParams;
	        this.userService = userService;
	        this.error = '';
	    }
	    ResetComponent.prototype.ngOnInit = function () {
	        this.passToken = this.routeParams.params['passtoken'];
	    };
	    ;
	    ResetComponent.prototype.errorHandler = function (res) {
	        this.error = res.text();
	    };
	    ;
	    ResetComponent.prototype.reset = function () {
	        this.error = '';
	        if (this.password1 == this.password2 && this.password1) {
	            this.userService
	                .resetPassword(this.password1, this.passToken)
	                .catch(this.errorHandler.bind(this));
	        }
	        else {
	            if (this.password1) {
	                this.error = 'Passwords do not match';
	            }
	            else {
	                this.error = 'Password can`t be empty';
	            }
	        }
	    };
	    ;
	    ResetComponent = __decorate([
	        core_1.Component({
	            selector: 'reset',
	            template: __webpack_require__(738),
	        }), 
	        __metadata('design:paramtypes', [router_deprecated_1.RouteParams, services_1.UserService])
	    ], ResetComponent);
	    return ResetComponent;
	}());
	exports.ResetComponent = ResetComponent;
	

/***/ }),
/* 738 */
/***/ (function(module, exports) {

	module.exports = "<div class=\"signin\">\r\n  <div class=\"signin-header\">\r\n    <svg class=\"icon -logo-lg\"><use xlink:href=\"#svg_logo_lg\"/></svg>\r\n  </div>\r\n  <div class=\"signin-body\">\r\n    <div class=\"signin-content\">\r\n      <h2 class=\"signin-h2 center\">Create password</h2>\r\n      <form novalidate (submit)=\"reset()\">\r\n        <div class=\"form-group signin-error\" *ngIf=\"error\">{{error}}</div>\r\n        <div class=\"form-group -x2\">\r\n          <input class=\"signin-form-control\" [ngClass]=\"{'error': error}\" type=\"password\" placeholder=\"Enter new password\" autofocus [(ngModel)]=\"password1\" />\r\n        </div>\r\n        <div class=\"form-group -x2\">\r\n          <input class=\"signin-form-control\" [ngClass]=\"{'error': error}\" type=\"password\" placeholder=\"Confirm new password\" [(ngModel)]=\"password2\" />\r\n        </div>\r\n        <div class=\"form-group -x2 flex\">\r\n          <div class=\"col-6 pl2 -margined\">\r\n            <button class=\"signin-button -block\" type=\"submit\">Create</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n  <div class=\"signin-footer\">\r\n    &copy; Transflo, 2017\r\n  </div>\r\n</div>"

/***/ }),
/* 739 */
/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

/***/ }),
/* 740 */,
/* 741 */,
/* 742 */,
/* 743 */,
/* 744 */,
/* 745 */,
/* 746 */,
/* 747 */,
/* 748 */,
/* 749 */,
/* 750 */,
/* 751 */,
/* 752 */,
/* 753 */,
/* 754 */,
/* 755 */,
/* 756 */,
/* 757 */
/***/ (function(module, exports, __webpack_require__) {

	;
	var sprite = __webpack_require__(758);;
	var image = "<symbol viewBox=\"0 0 83 24\" id=\"svg_logo\" > <path d=\"M28.3,24.673l1.947-10.326H27l0.392-2.114h9.86l-0.393,2.114H33.608L31.661,24.673H28.3ZM38.2,12.232h5A3.179,3.179,0,0,1,46.715,15.4a4.069,4.069,0,0,1-2.644,3.75l1.911,5.3-3.59.409-1.3-4.888H40.124l-0.892,4.71H35.855Zm2.286,5.616H41.5a2,2,0,0,0,1.858-2.026,1.462,1.462,0,0,0-1.321-1.476H41.16ZM55.7,12.232l1.947,12.44H54.3L53.983,21.7H50.66l-1.625,2.968H46.2l6.93-12.44H55.7Zm-1.893,7.5c-0.126-1.227-.25-2.47-0.286-4.124H53.483c-0.661,1.654-1.25,2.9-1.858,4.124H53.8Zm15.307,4.94H66.629a75.187,75.187,0,0,1-3.643-7.606H62.95l-1.393,7.606H58.663L61,12.232h2.679a68.669,68.669,0,0,1,3.448,7.322h0.035l1.394-7.322h2.893Zm9.84-10.166a3.341,3.341,0,0,0-1.5-.374,1.322,1.322,0,0,0-1.357,1.192c0,0.586.375,1.262,1.357,2.523a5.567,5.567,0,0,1,1.394,3.2c0,2.416-2,3.839-4.537,3.839a5.694,5.694,0,0,1-3.679-1.208l1.179-1.671a3.744,3.744,0,0,0,2,.675,1.637,1.637,0,0,0,1.643-1.6c0-.818-0.643-1.564-1.5-2.737C73.057,17.1,72.7,16.462,72.7,15.5c0-2.1,1.965-3.484,4.393-3.484a4.861,4.861,0,0,1,2.965.889Zm9.433-.16H84.937l-0.662,3.519h3.36L87.26,19.981H83.882l-0.893,4.692H79.631l2.34-12.44h6.808Zm1.822-2.114h3.358L91.619,22.557h4.144L95.37,24.673h-7.5Zm6.11,7.287c0-3.519,2.339-7.5,6.645-7.5,3.269,0,4.751,3.057,4.751,5.58,0,4.105-3.072,7.287-6.395,7.287C97.818,24.886,96.317,22.15,96.317,19.519Zm7.931-2.382c0-.782-0.269-2.524-1.715-2.524-1.037,0-2.751,1.1-2.751,4.976,0,0.747.2,2.7,1.858,2.7C103.051,22.291,104.248,20.123,104.248,17.137Zm3.191-3.8a1.4,1.4,0,0,1,.046-0.364,1.34,1.34,0,0,1,.129-0.322,1.281,1.281,0,0,1,.2-0.27,1.257,1.257,0,0,1,.26-0.207,1.276,1.276,0,0,1,.306-0.132,1.261,1.261,0,0,1,.68,0,1.276,1.276,0,0,1,.306.132,1.306,1.306,0,0,1,.259.207,1.281,1.281,0,0,1,.2.27,1.427,1.427,0,0,1,.129.322,1.461,1.461,0,0,1,0,.727,1.445,1.445,0,0,1-.129.323,1.276,1.276,0,0,1-.2.271,1.36,1.36,0,0,1-.259.208,1.242,1.242,0,0,1-1.292,0,1.307,1.307,0,0,1-.26-0.208,1.276,1.276,0,0,1-.2-0.271,1.356,1.356,0,0,1-.129-0.323A1.4,1.4,0,0,1,107.439,13.342Zm0.207,0a1.162,1.162,0,0,0,.315.807,1.069,1.069,0,0,0,.341.24,1.044,1.044,0,0,0,.835,0,1.069,1.069,0,0,0,.341-0.24,1.1,1.1,0,0,0,.23-0.359,1.176,1.176,0,0,0,.084-0.447,1.164,1.164,0,0,0-.084-0.444,1.093,1.093,0,0,0-.23-0.357,1.064,1.064,0,0,0-.341-0.238,1.054,1.054,0,0,0-.835,0,1.064,1.064,0,0,0-.341.238A1.153,1.153,0,0,0,107.646,13.342Zm0.809,0.135v0.607H108.2V12.559h0.5a0.92,0.92,0,0,1,.24.029,0.537,0.537,0,0,1,.184.085,0.376,0.376,0,0,1,.116.144,0.475,0.475,0,0,1,.041.2,0.334,0.334,0,0,1-.059.2,0.452,0.452,0,0,1-.172.141,0.35,0.35,0,0,1,.1.063,0.3,0.3,0,0,1,.069.085,0.359,0.359,0,0,1,.038.1,0.574,0.574,0,0,1,.012.119v0.1a1.269,1.269,0,0,0,.006.127,0.338,0.338,0,0,0,.024.1v0.029H109.04a0.309,0.309,0,0,1-.015-0.059c0-.024-0.006-0.049-0.008-0.074s0-.049,0-0.072V13.73a0.266,0.266,0,0,0-.06-0.191,0.279,0.279,0,0,0-.2-0.062h-0.294Zm0-.23h0.281a0.473,0.473,0,0,0,.111-0.016,0.327,0.327,0,0,0,.092-0.041A0.213,0.213,0,0,0,109,13.122a0.191,0.191,0,0,0,.023-0.094,0.309,0.309,0,0,0-.017-0.112,0.162,0.162,0,0,0-.055-0.075,0.246,0.246,0,0,0-.1-0.041,0.8,0.8,0,0,0-.154-0.013h-0.244v0.46ZM33.232,33.39a2.917,2.917,0,0,1-.91,1.93,2.953,2.953,0,0,1-2.035.68,2.72,2.72,0,0,1-2.206-1,4.07,4.07,0,0,1-.83-2.68V31.56a4.547,4.547,0,0,1,.387-1.933,2.92,2.92,0,0,1,1.1-1.281,3.018,3.018,0,0,1,1.643-.447,2.783,2.783,0,0,1,1.985.7,2.955,2.955,0,0,1,.87,1.941H32.2a2.281,2.281,0,0,0-.579-1.369,1.735,1.735,0,0,0-1.246-.424,1.823,1.823,0,0,0-1.539.737,3.42,3.42,0,0,0-.558,2.1v0.764a3.517,3.517,0,0,0,.528,2.043,1.7,1.7,0,0,0,1.478.759,1.952,1.952,0,0,0,1.31-.393A2.192,2.192,0,0,0,32.2,33.39h1.03Zm0.654-.482a3.5,3.5,0,0,1,.333-1.548,2.449,2.449,0,0,1,2.286-1.435,2.418,2.418,0,0,1,1.907.828,3.218,3.218,0,0,1,.728,2.2v0.07a3.535,3.535,0,0,1-.323,1.535,2.476,2.476,0,0,1-.923,1.059A2.527,2.527,0,0,1,36.516,36a2.412,2.412,0,0,1-1.9-.828,3.2,3.2,0,0,1-.728-2.193v-0.07Zm0.992,0.119a2.532,2.532,0,0,0,.445,1.565,1.5,1.5,0,0,0,2.387-.008,2.771,2.771,0,0,0,.443-1.676,2.528,2.528,0,0,0-.451-1.562,1.426,1.426,0,0,0-1.2-.6,1.41,1.41,0,0,0-1.179.59A2.751,2.751,0,0,0,34.878,33.027Zm6.1-2.994,0.027,0.65a2.118,2.118,0,0,1,1.713-.758,1.646,1.646,0,0,1,1.648.942,2.138,2.138,0,0,1,1.841-.942,1.775,1.775,0,0,1,1.931,2.041v3.926H47.152V32.026a1.359,1.359,0,0,0-.283-0.939,1.234,1.234,0,0,0-.95-0.311,1.3,1.3,0,0,0-.912.333,1.359,1.359,0,0,0-.422.9v3.888H43.593V32.053a1.11,1.11,0,0,0-1.232-1.278,1.319,1.319,0,0,0-1.328.839v4.278H40.046V30.033h0.934Zm9.249,0,0.027,0.65a2.118,2.118,0,0,1,1.713-.758,1.647,1.647,0,0,1,1.648.942,2.138,2.138,0,0,1,1.841-.942,1.775,1.775,0,0,1,1.931,2.041v3.926H56.4V32.026a1.359,1.359,0,0,0-.283-0.939,1.234,1.234,0,0,0-.95-0.311,1.3,1.3,0,0,0-.912.333,1.359,1.359,0,0,0-.421.9v3.888H52.842V32.053a1.11,1.11,0,0,0-1.232-1.278,1.319,1.319,0,0,0-1.328.839v4.278H49.294V30.033h0.934Zm11.884,5.859a2.128,2.128,0,0,1-.139-0.617A2.187,2.187,0,0,1,60.33,36a2.018,2.018,0,0,1-1.4-.49,1.6,1.6,0,0,1-.547-1.243,1.665,1.665,0,0,1,.686-1.421A3.2,3.2,0,0,1,61,32.34h0.96v-0.46a1.135,1.135,0,0,0-.309-0.837,1.232,1.232,0,0,0-.912-0.311A1.424,1.424,0,0,0,59.85,31a0.8,0.8,0,0,0-.358.655H58.5a1.4,1.4,0,0,1,.307-0.847,2.1,2.1,0,0,1,.832-0.647,2.767,2.767,0,0,1,1.155-.238,2.26,2.26,0,0,1,1.563.506,1.84,1.84,0,0,1,.587,1.394v2.7a3.341,3.341,0,0,0,.2,1.283v0.087H62.112Zm-1.638-.763a1.715,1.715,0,0,0,.88-0.244,1.466,1.466,0,0,0,.6-0.634v-1.2H61.184q-1.814,0-1.814,1.077a0.918,0.918,0,0,0,.309.736A1.178,1.178,0,0,0,60.474,35.128Zm4.623-5.1,0.032,0.736a2.092,2.092,0,0,1,1.729-.845q1.83,0,1.846,2.1v3.871H67.717V32.015a1.362,1.362,0,0,0-.285-0.937,1.134,1.134,0,0,0-.872-0.3,1.41,1.41,0,0,0-.843.26,1.76,1.76,0,0,0-.566.682v4.175H64.163V30.033H65.1Zm4.527,2.88a3.468,3.468,0,0,1,.629-2.168,2.122,2.122,0,0,1,3.254-.116V27.575H74.5v8.317H73.588l-0.048-.628A2,2,0,0,1,71.892,36a1.962,1.962,0,0,1-1.635-.834,3.506,3.506,0,0,1-.632-2.177V32.914Zm0.987,0.114a2.627,2.627,0,0,0,.406,1.559,1.3,1.3,0,0,0,1.12.563,1.438,1.438,0,0,0,1.371-.855V31.6a1.448,1.448,0,0,0-1.36-.828,1.311,1.311,0,0,0-1.131.569A2.894,2.894,0,0,0,70.611,33.027ZM83.944,33.39a2.918,2.918,0,0,1-.91,1.93A2.953,2.953,0,0,1,81,36a2.72,2.72,0,0,1-2.206-1,4.07,4.07,0,0,1-.83-2.68V31.56a4.547,4.547,0,0,1,.387-1.933,2.919,2.919,0,0,1,1.1-1.281A3.018,3.018,0,0,1,81.09,27.9a2.783,2.783,0,0,1,1.985.7,2.955,2.955,0,0,1,.87,1.941h-1.03a2.281,2.281,0,0,0-.579-1.369,1.736,1.736,0,0,0-1.246-.424,1.822,1.822,0,0,0-1.539.737,3.42,3.42,0,0,0-.558,2.1v0.764a3.516,3.516,0,0,0,.528,2.043A1.7,1.7,0,0,0,81,35.15a1.952,1.952,0,0,0,1.31-.393,2.192,2.192,0,0,0,.605-1.367h1.03ZM87.255,36a2.5,2.5,0,0,1-1.91-.782,2.93,2.93,0,0,1-.736-2.093V32.941a3.561,3.561,0,0,1,.328-1.557,2.586,2.586,0,0,1,.918-1.072,2.283,2.283,0,0,1,1.278-.387,2.148,2.148,0,0,1,1.75.753,3.293,3.293,0,0,1,.624,2.155v0.417H85.6a2.1,2.1,0,0,0,.5,1.4,1.557,1.557,0,0,0,1.214.533,1.7,1.7,0,0,0,.886-0.217,2.237,2.237,0,0,0,.635-0.574l0.6,0.477A2.414,2.414,0,0,1,87.255,36Zm-0.123-5.252a1.307,1.307,0,0,0-1,.441,2.161,2.161,0,0,0-.5,1.237h2.892V32.35a1.926,1.926,0,0,0-.406-1.183A1.232,1.232,0,0,0,87.132,30.748Zm4.122-.715,0.032,0.736a2.092,2.092,0,0,1,1.728-.845q1.83,0,1.846,2.1v3.871H93.873V32.015a1.362,1.362,0,0,0-.285-0.937,1.134,1.134,0,0,0-.872-0.3,1.41,1.41,0,0,0-.843.26,1.76,1.76,0,0,0-.566.682v4.175H90.32V30.033h0.934Zm6.106-1.419v1.419h1.078v0.774H97.36v3.638a0.821,0.821,0,0,0,.144.529,0.6,0.6,0,0,0,.491.176,2.359,2.359,0,0,0,.469-0.065v0.807a2.837,2.837,0,0,1-.758.108,1.22,1.22,0,0,1-1-.406,1.762,1.762,0,0,1-.336-1.153V30.807H95.322V30.033h1.051V28.614H97.36Zm4.3,7.385a2.5,2.5,0,0,1-1.909-.782,2.93,2.93,0,0,1-.736-2.093V32.941a3.562,3.562,0,0,1,.328-1.557,2.586,2.586,0,0,1,.918-1.072,2.283,2.283,0,0,1,1.278-.387,2.15,2.15,0,0,1,1.75.753,3.293,3.293,0,0,1,.624,2.155v0.417H100a2.1,2.1,0,0,0,.5,1.4,1.557,1.557,0,0,0,1.214.533,1.7,1.7,0,0,0,.885-0.217,2.231,2.231,0,0,0,.635-0.574l0.6,0.477A2.414,2.414,0,0,1,101.657,36Zm-0.122-5.252a1.306,1.306,0,0,0-1,.441,2.157,2.157,0,0,0-.5,1.237h2.892V32.35a1.928,1.928,0,0,0-.406-1.183A1.231,1.231,0,0,0,101.535,30.748Zm5.978,0.184a2.919,2.919,0,0,0-.486-0.038,1.3,1.3,0,0,0-1.317.839v4.158h-0.987V30.033h0.96L105.7,30.71a1.532,1.532,0,0,1,1.376-.785,1,1,0,0,1,.438.076v0.931Z\" transform=\"translate(-27 -12)\"/> </symbol>";
	module.exports = sprite.add(image, "svg_logo");

/***/ }),
/* 758 */
/***/ (function(module, exports, __webpack_require__) {

	var Sprite = __webpack_require__(759);
	var globalSprite = new Sprite();

	if (document.body) {
	  globalSprite.elem = globalSprite.render(document.body);
	} else {
	  document.addEventListener('DOMContentLoaded', function () {
	    globalSprite.elem = globalSprite.render(document.body);
	  }, false);
	}

	module.exports = globalSprite;


/***/ }),
/* 759 */
/***/ (function(module, exports, __webpack_require__) {

	var Sniffr = __webpack_require__(760);

	/**
	 * List of SVG attributes to fix url target in them
	 * @type {string[]}
	 */
	var fixAttributes = [
	  'clipPath',
	  'colorProfile',
	  'src',
	  'cursor',
	  'fill',
	  'filter',
	  'marker',
	  'markerStart',
	  'markerMid',
	  'markerEnd',
	  'mask',
	  'stroke'
	];

	/**
	 * Query to find'em
	 * @type {string}
	 */
	var fixAttributesQuery = '[' + fixAttributes.join('],[') + ']';
	/**
	 * @type {RegExp}
	 */
	var URI_FUNC_REGEX = /^url\((.*)\)$/;

	/**
	 * Convert array-like to array
	 * @param {Object} arrayLike
	 * @returns {Array.<*>}
	 */
	function arrayFrom(arrayLike) {
	  return Array.prototype.slice.call(arrayLike, 0);
	}

	/**
	 * Handles forbidden symbols which cannot be directly used inside attributes with url(...) content.
	 * Adds leading slash for the brackets
	 * @param {string} url
	 * @return {string} encoded url
	 */
	function encodeUrlForEmbedding(url) {
	  return url.replace(/\(|\)/g, "\\$&");
	}

	/**
	 * Replaces prefix in `url()` functions
	 * @param {Element} svg
	 * @param {string} currentUrlPrefix
	 * @param {string} newUrlPrefix
	 */
	function baseUrlWorkAround(svg, currentUrlPrefix, newUrlPrefix) {
	  var nodes = svg.querySelectorAll(fixAttributesQuery);

	  if (!nodes) {
	    return;
	  }

	  arrayFrom(nodes).forEach(function (node) {
	    if (!node.attributes) {
	      return;
	    }

	    arrayFrom(node.attributes).forEach(function (attribute) {
	      var attributeName = attribute.localName.toLowerCase();

	      if (fixAttributes.indexOf(attributeName) !== -1) {
	        var match = URI_FUNC_REGEX.exec(node.getAttribute(attributeName));

	        // Do not touch urls with unexpected prefix
	        if (match && match[1].indexOf(currentUrlPrefix) === 0) {
	          var referenceUrl = encodeUrlForEmbedding(newUrlPrefix + match[1].split(currentUrlPrefix)[1]);
	          node.setAttribute(attributeName, 'url(' + referenceUrl + ')');
	        }
	      }
	    });
	  });
	}

	/**
	 * Because of Firefox bug #353575 gradients and patterns don't work if they are within a symbol.
	 * To workaround this we move the gradient definition outside the symbol element
	 * @see https://bugzilla.mozilla.org/show_bug.cgi?id=353575
	 * @param {Element} svg
	 */
	var FirefoxSymbolBugWorkaround = function (svg) {
	  var defs = svg.querySelector('defs');

	  var moveToDefsElems = svg.querySelectorAll('symbol linearGradient, symbol radialGradient, symbol pattern');
	  for (var i = 0, len = moveToDefsElems.length; i < len; i++) {
	    defs.appendChild(moveToDefsElems[i]);
	  }
	};

	/**
	 * @type {string}
	 */
	var DEFAULT_URI_PREFIX = '#';

	/**
	 * @type {string}
	 */
	var xLinkHref = 'xlink:href';
	/**
	 * @type {string}
	 */
	var xLinkNS = 'http://www.w3.org/1999/xlink';
	/**
	 * @type {string}
	 */
	var svgOpening = '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="' + xLinkNS + '"';
	/**
	 * @type {string}
	 */
	var svgClosing = '</svg>';
	/**
	 * @type {string}
	 */
	var contentPlaceHolder = '{content}';

	/**
	 * Representation of SVG sprite
	 * @constructor
	 */
	function Sprite() {
	  var baseElement = document.getElementsByTagName('base')[0];
	  var currentUrl = window.location.href.split('#')[0];
	  var baseUrl = baseElement && baseElement.href;
	  this.urlPrefix = baseUrl && baseUrl !== currentUrl ? currentUrl + DEFAULT_URI_PREFIX : DEFAULT_URI_PREFIX;

	  var sniffr = new Sniffr();
	  sniffr.sniff();
	  this.browser = sniffr.browser;
	  this.content = [];

	  if (this.browser.name !== 'ie' && baseUrl) {
	    window.addEventListener('spriteLoaderLocationUpdated', function (e) {
	      var currentPrefix = this.urlPrefix;
	      var newUrlPrefix = e.detail.newUrl.split(DEFAULT_URI_PREFIX)[0] + DEFAULT_URI_PREFIX;
	      baseUrlWorkAround(this.svg, currentPrefix, newUrlPrefix);
	      this.urlPrefix = newUrlPrefix;

	      if (this.browser.name === 'firefox' || this.browser.name === 'edge' || this.browser.name === 'chrome' && this.browser.version[0] >= 49) {
	        var nodes = arrayFrom(document.querySelectorAll('use[*|href]'));
	        nodes.forEach(function (node) {
	          var href = node.getAttribute(xLinkHref);
	          if (href && href.indexOf(currentPrefix) === 0) {
	            node.setAttributeNS(xLinkNS, xLinkHref, newUrlPrefix + href.split(DEFAULT_URI_PREFIX)[1]);
	          }
	        });
	      }
	    }.bind(this));
	  }
	}

	Sprite.styles = ['position:absolute', 'width:0', 'height:0', 'visibility:hidden'];

	Sprite.spriteTemplate = svgOpening + ' style="'+ Sprite.styles.join(';') +'"><defs>' + contentPlaceHolder + '</defs>' + svgClosing;
	Sprite.symbolTemplate = svgOpening + '>' + contentPlaceHolder + svgClosing;

	/**
	 * @type {Array<String>}
	 */
	Sprite.prototype.content = null;

	/**
	 * @param {String} content
	 * @param {String} id
	 */
	Sprite.prototype.add = function (content, id) {
	  if (this.svg) {
	    this.appendSymbol(content);
	  }

	  this.content.push(content);

	  return DEFAULT_URI_PREFIX + id;
	};

	/**
	 *
	 * @param content
	 * @param template
	 * @returns {Element}
	 */
	Sprite.prototype.wrapSVG = function (content, template) {
	  var svgString = template.replace(contentPlaceHolder, content);

	  var svg = new DOMParser().parseFromString(svgString, 'image/svg+xml').documentElement;

	  if (this.browser.name !== 'ie' && this.urlPrefix) {
	    baseUrlWorkAround(svg, DEFAULT_URI_PREFIX, this.urlPrefix);
	  }

	  return svg;
	};

	Sprite.prototype.appendSymbol = function (content) {
	  var symbol = this.wrapSVG(content, Sprite.symbolTemplate).childNodes[0];

	  this.svg.querySelector('defs').appendChild(symbol);
	  if (this.browser.name === 'firefox') {
	    FirefoxSymbolBugWorkaround(this.svg);
	  }
	};

	/**
	 * @returns {String}
	 */
	Sprite.prototype.toString = function () {
	  var wrapper = document.createElement('div');
	  wrapper.appendChild(this.render());
	  return wrapper.innerHTML;
	};

	/**
	 * @param {HTMLElement} [target]
	 * @param {Boolean} [prepend=true]
	 * @returns {HTMLElement} Rendered sprite node
	 */
	Sprite.prototype.render = function (target, prepend) {
	  target = target || null;
	  prepend = typeof prepend === 'boolean' ? prepend : true;

	  var svg = this.wrapSVG(this.content.join(''), Sprite.spriteTemplate);

	  if (this.browser.name === 'firefox') {
	    FirefoxSymbolBugWorkaround(svg);
	  }

	  if (target) {
	    if (prepend && target.childNodes[0]) {
	      target.insertBefore(svg, target.childNodes[0]);
	    } else {
	      target.appendChild(svg);
	    }
	  }

	  this.svg = svg;

	  return svg;
	};

	module.exports = Sprite;


/***/ }),
/* 760 */
/***/ (function(module, exports) {

	(function(host) {

	  var properties = {
	    browser: [
	      [/msie ([\.\_\d]+)/, "ie"],
	      [/trident\/.*?rv:([\.\_\d]+)/, "ie"],
	      [/firefox\/([\.\_\d]+)/, "firefox"],
	      [/chrome\/([\.\_\d]+)/, "chrome"],
	      [/version\/([\.\_\d]+).*?safari/, "safari"],
	      [/mobile safari ([\.\_\d]+)/, "safari"],
	      [/android.*?version\/([\.\_\d]+).*?safari/, "com.android.browser"],
	      [/crios\/([\.\_\d]+).*?safari/, "chrome"],
	      [/opera/, "opera"],
	      [/opera\/([\.\_\d]+)/, "opera"],
	      [/opera ([\.\_\d]+)/, "opera"],
	      [/opera mini.*?version\/([\.\_\d]+)/, "opera.mini"],
	      [/opios\/([a-z\.\_\d]+)/, "opera"],
	      [/blackberry/, "blackberry"],
	      [/blackberry.*?version\/([\.\_\d]+)/, "blackberry"],
	      [/bb\d+.*?version\/([\.\_\d]+)/, "blackberry"],
	      [/rim.*?version\/([\.\_\d]+)/, "blackberry"],
	      [/iceweasel\/([\.\_\d]+)/, "iceweasel"],
	      [/edge\/([\.\d]+)/, "edge"]
	    ],
	    os: [
	      [/linux ()([a-z\.\_\d]+)/, "linux"],
	      [/mac os x/, "macos"],
	      [/mac os x.*?([\.\_\d]+)/, "macos"],
	      [/os ([\.\_\d]+) like mac os/, "ios"],
	      [/openbsd ()([a-z\.\_\d]+)/, "openbsd"],
	      [/android/, "android"],
	      [/android ([a-z\.\_\d]+);/, "android"],
	      [/mozilla\/[a-z\.\_\d]+ \((?:mobile)|(?:tablet)/, "firefoxos"],
	      [/windows\s*(?:nt)?\s*([\.\_\d]+)/, "windows"],
	      [/windows phone.*?([\.\_\d]+)/, "windows.phone"],
	      [/windows mobile/, "windows.mobile"],
	      [/blackberry/, "blackberryos"],
	      [/bb\d+/, "blackberryos"],
	      [/rim.*?os\s*([\.\_\d]+)/, "blackberryos"]
	    ],
	    device: [
	      [/ipad/, "ipad"],
	      [/iphone/, "iphone"],
	      [/lumia/, "lumia"],
	      [/htc/, "htc"],
	      [/nexus/, "nexus"],
	      [/galaxy nexus/, "galaxy.nexus"],
	      [/nokia/, "nokia"],
	      [/ gt\-/, "galaxy"],
	      [/ sm\-/, "galaxy"],
	      [/xbox/, "xbox"],
	      [/(?:bb\d+)|(?:blackberry)|(?: rim )/, "blackberry"]
	    ]
	  };

	  var UNKNOWN = "Unknown";

	  var propertyNames = Object.keys(properties);

	  function Sniffr() {
	    var self = this;

	    propertyNames.forEach(function(propertyName) {
	      self[propertyName] = {
	        name: UNKNOWN,
	        version: [],
	        versionString: UNKNOWN
	      };
	    });
	  }

	  function determineProperty(self, propertyName, userAgent) {
	    properties[propertyName].forEach(function(propertyMatcher) {
	      var propertyRegex = propertyMatcher[0];
	      var propertyValue = propertyMatcher[1];

	      var match = userAgent.match(propertyRegex);

	      if (match) {
	        self[propertyName].name = propertyValue;

	        if (match[2]) {
	          self[propertyName].versionString = match[2];
	          self[propertyName].version = [];
	        } else if (match[1]) {
	          self[propertyName].versionString = match[1].replace(/_/g, ".");
	          self[propertyName].version = parseVersion(match[1]);
	        } else {
	          self[propertyName].versionString = UNKNOWN;
	          self[propertyName].version = [];
	        }
	      }
	    });
	  }

	  function parseVersion(versionString) {
	    return versionString.split(/[\._]/).map(function(versionPart) {
	      return parseInt(versionPart);
	    });
	  }

	  Sniffr.prototype.sniff = function(userAgentString) {
	    var self = this;
	    var userAgent = (userAgentString || navigator.userAgent || "").toLowerCase();

	    propertyNames.forEach(function(propertyName) {
	      determineProperty(self, propertyName, userAgent);
	    });
	  };


	  if (typeof module !== 'undefined' && module.exports) {
	    module.exports = Sniffr;
	  } else {
	    host.Sniffr = new Sniffr();
	    host.Sniffr.sniff(navigator.userAgent);
	  }
	})(this);


/***/ }),
/* 761 */
/***/ (function(module, exports, __webpack_require__) {

	;
	var sprite = __webpack_require__(758);;
	var image = "<symbol viewBox=\"0 0 183 53\" id=\"svg_logo_lg\" > <path d=\"M712.874,117.986l4.293-22.8H710l0.865-4.669h21.74l-0.867,4.669h-7.169l-4.292,22.8h-7.4Zm21.809-27.473h11.026c5.829,0,7.76,4.082,7.76,6.987,0,4.788-3.269,7.023-5.83,8.281l4.213,11.7-7.914.9-2.876-10.793h-2.127l-1.968,10.4h-7.443Zm5.041,12.4h2.244a4.415,4.415,0,0,0,4.1-4.474,3.227,3.227,0,0,0-2.913-3.258h-1.932Zm33.549-12.4,4.292,27.473H770.2l-0.708-6.555h-7.327l-3.583,6.555h-6.26L767.6,90.513h5.671ZM769.1,107.076c-0.277-2.711-.55-5.456-0.631-9.107H768.39c-1.458,3.651-2.757,6.4-4.1,9.107H769.1Zm33.749,10.91h-5.474c-2.755-5.3-6.812-13.109-8.032-16.8h-0.079l-3.071,16.8h-6.381l5.159-27.473h5.907c2.638,5.1,6.143,11.93,7.6,16.169h0.077l3.073-16.169h6.379Zm21.7-22.449a7.362,7.362,0,0,0-3.309-.826,2.916,2.916,0,0,0-2.993,2.631c0,1.294.827,2.787,2.993,5.572,2.008,2.552,3.072,5.062,3.072,7.066,0,5.336-4.41,8.477-10,8.477-3.071,0-6.616-1.1-8.113-2.668l2.6-3.691a8.245,8.245,0,0,0,4.411,1.492,3.613,3.613,0,0,0,3.623-3.532c0-1.806-1.417-3.453-3.308-6.045-1.969-2.746-2.755-4.159-2.755-6.278,0-4.633,4.331-7.693,9.686-7.693a10.708,10.708,0,0,1,6.536,1.963Zm20.8-.355h-7.6l-1.46,7.772h7.409l-0.827,4.67h-7.449l-1.968,10.362h-7.4l5.16-27.473h15.01Zm4.017-4.669h7.4l-4.291,22.8h9.136l-0.867,4.672H844.2Zm13.471,16.092c0-7.771,5.158-16.563,14.65-16.563,7.208,0,10.475,6.751,10.475,12.323,0,9.066-6.773,16.092-14.1,16.092C866.14,118.457,862.832,112.414,862.832,106.605Zm17.485-5.261c0-1.728-.593-5.573-3.78-5.573-2.286,0-6.067,2.433-6.067,10.99,0,1.649.435,5.966,4.1,5.966C877.678,112.726,880.317,107.938,880.317,101.344Zm7.035-8.381a3.108,3.108,0,0,1,.1-0.8,3.06,3.06,0,0,1,.285-0.712,2.856,2.856,0,0,1,.441-0.6,2.781,2.781,0,0,1,1.248-.748,2.777,2.777,0,0,1,1.5,0,2.761,2.761,0,0,1,.673.292,2.847,2.847,0,0,1,1.013,1.053,3.1,3.1,0,0,1,.285.712,3.153,3.153,0,0,1-.285,2.32,2.8,2.8,0,0,1-.442.6,2.914,2.914,0,0,1-.571.46,2.667,2.667,0,0,1-.673.3,2.737,2.737,0,0,1-2.175-.3,2.926,2.926,0,0,1-.573-0.46,2.831,2.831,0,0,1-.441-0.6A3.122,3.122,0,0,1,887.352,92.963Zm0.458,0a2.572,2.572,0,0,0,.187.988,2.533,2.533,0,0,0,.508.793,2.331,2.331,0,0,0,.752.529,2.3,2.3,0,0,0,1.841,0,2.375,2.375,0,0,0,.752-0.529,2.479,2.479,0,0,0,.507-0.793,2.713,2.713,0,0,0,0-1.969,2.462,2.462,0,0,0-.507-0.789,2.365,2.365,0,0,0-.752-0.525,2.32,2.32,0,0,0-1.841,0,2.321,2.321,0,0,0-.752.525,2.516,2.516,0,0,0-.508.789A2.547,2.547,0,0,0,887.81,92.963Zm1.783,0.3V94.6h-0.561V91.234h1.1a2.061,2.061,0,0,1,.532.063,1.181,1.181,0,0,1,.4.188,0.82,0.82,0,0,1,.256.317,1.042,1.042,0,0,1,.09.446,0.738,0.738,0,0,1-.129.434,1.012,1.012,0,0,1-.38.311,0.787,0.787,0,0,1,.228.139,0.708,0.708,0,0,1,.152.188,0.827,0.827,0,0,1,.083.23,1.316,1.316,0,0,1,.026.264v0.218a2.746,2.746,0,0,0,.014.282,0.734,0.734,0,0,0,.054.222V94.6h-0.577a0.588,0.588,0,0,1-.032-0.131q-0.012-.079-0.018-0.163c0-.056-0.006-0.108-0.006-0.159V93.82a0.589,0.589,0,0,0-.133-0.422,0.616,0.616,0,0,0-.452-0.137h-0.649Zm0-.508h0.621a1.031,1.031,0,0,0,.243-0.036,0.682,0.682,0,0,0,.2-0.091,0.45,0.45,0,0,0,.139-0.149,0.4,0.4,0,0,0,.052-0.208,0.717,0.717,0,0,0-.038-0.248,0.364,0.364,0,0,0-.121-0.165,0.544,0.544,0,0,0-.221-0.091,1.761,1.761,0,0,0-.341-0.028h-0.537v1.015ZM723.741,137.236A6,6,0,0,1,717.248,143a5.994,5.994,0,0,1-4.864-2.212,9,9,0,0,1-1.829-5.919V133.2a10.056,10.056,0,0,1,.853-4.269,6.446,6.446,0,0,1,2.417-2.828,6.64,6.64,0,0,1,3.623-.986,6.128,6.128,0,0,1,4.375,1.548,6.533,6.533,0,0,1,1.918,4.287H721.47a5.04,5.04,0,0,0-1.276-3.023,3.824,3.824,0,0,0-2.746-.935,4.014,4.014,0,0,0-3.394,1.628,7.557,7.557,0,0,0-1.229,4.631v1.687a7.78,7.78,0,0,0,1.164,4.512,3.745,3.745,0,0,0,3.259,1.675,4.3,4.3,0,0,0,2.887-.867,4.835,4.835,0,0,0,1.335-3.019h2.271Zm1.441-1.064a7.74,7.74,0,0,1,.736-3.42,5.4,5.4,0,0,1,5.04-3.168,5.326,5.326,0,0,1,4.205,1.829,7.116,7.116,0,0,1,1.606,4.867v0.155a7.82,7.82,0,0,1-.712,3.39,5.473,5.473,0,0,1-2.035,2.338,5.567,5.567,0,0,1-3.041.837,5.312,5.312,0,0,1-4.193-1.83,7.072,7.072,0,0,1-1.606-4.842v-0.156Zm2.188,0.263a5.6,5.6,0,0,0,.982,3.456,3.3,3.3,0,0,0,5.264-.018,6.128,6.128,0,0,0,.976-3.7,5.589,5.589,0,0,0-.994-3.45,3.142,3.142,0,0,0-2.64-1.321,3.11,3.11,0,0,0-2.6,1.3A6.087,6.087,0,0,0,727.37,136.435Zm13.452-6.612,0.058,1.435a4.668,4.668,0,0,1,3.776-1.674,3.63,3.63,0,0,1,3.635,2.08,4.71,4.71,0,0,1,4.058-2.08q4.188,0,4.258,4.507v8.669h-2.176v-8.537a3.008,3.008,0,0,0-.623-2.075,2.721,2.721,0,0,0-2.094-.687,2.861,2.861,0,0,0-2.012.735,3,3,0,0,0-.929,1.979v8.585h-2.188v-8.477q0-2.821-2.717-2.822a2.909,2.909,0,0,0-2.929,1.853v9.446h-2.176V129.823h2.059Zm20.391,0,0.059,1.435a4.667,4.667,0,0,1,3.776-1.674,3.628,3.628,0,0,1,3.634,2.08,4.71,4.71,0,0,1,4.058-2.08q4.188,0,4.259,4.507v8.669h-2.177v-8.537a3,3,0,0,0-.623-2.075,2.721,2.721,0,0,0-2.094-.687,2.858,2.858,0,0,0-2.011.735,3,3,0,0,0-.929,1.979v8.585h-2.188v-8.477q0-2.821-2.717-2.822a2.908,2.908,0,0,0-2.929,1.853v9.446h-2.177V129.823h2.059Zm26.2,12.937a4.74,4.74,0,0,1-.306-1.363,4.815,4.815,0,0,1-3.623,1.6,4.444,4.444,0,0,1-3.087-1.083,3.525,3.525,0,0,1-1.206-2.744,3.679,3.679,0,0,1,1.512-3.139,7.038,7.038,0,0,1,4.252-1.118h2.117V133.9a2.509,2.509,0,0,0-.682-1.847,2.713,2.713,0,0,0-2.012-.688,3.139,3.139,0,0,0-1.952.6,1.768,1.768,0,0,0-.788,1.447h-2.188a3.082,3.082,0,0,1,.676-1.871,4.631,4.631,0,0,1,1.835-1.429,6.081,6.081,0,0,1,2.547-.526,4.974,4.974,0,0,1,3.446,1.118,4.062,4.062,0,0,1,1.294,3.079v5.954a7.386,7.386,0,0,0,.447,2.834v0.191h-2.282Zm-3.611-1.686a3.776,3.776,0,0,0,1.941-.538,3.232,3.232,0,0,0,1.329-1.4v-2.655h-1.706q-4,0-4,2.379a2.033,2.033,0,0,0,.682,1.627A2.6,2.6,0,0,0,783.8,141.074ZM794,129.823l0.071,1.626a4.608,4.608,0,0,1,3.811-1.865q4.033,0,4.07,4.627v8.549h-2.176V134.2a3.007,3.007,0,0,0-.63-2.068,2.493,2.493,0,0,0-1.923-.67,3.1,3.1,0,0,0-1.858.574,3.875,3.875,0,0,0-1.247,1.506v9.219h-2.176V129.823H794Zm9.982,6.361a7.664,7.664,0,0,1,1.388-4.789,4.674,4.674,0,0,1,7.175-.257v-6.744h2.176V142.76h-2l-0.106-1.387A4.4,4.4,0,0,1,808.978,143a4.322,4.322,0,0,1-3.6-1.842,7.749,7.749,0,0,1-1.394-4.807v-0.167Zm2.176,0.251a5.81,5.81,0,0,0,.894,3.444,2.873,2.873,0,0,0,2.47,1.243,3.169,3.169,0,0,0,3.023-1.889V133.29a3.194,3.194,0,0,0-3-1.829,2.886,2.886,0,0,0-2.493,1.255A6.4,6.4,0,0,0,806.155,136.435Zm29.4,0.8A6,6,0,0,1,829.058,143a6,6,0,0,1-4.864-2.212,9,9,0,0,1-1.829-5.919V133.2a10.056,10.056,0,0,1,.853-4.269,6.446,6.446,0,0,1,2.417-2.828,6.645,6.645,0,0,1,3.623-.986,6.13,6.13,0,0,1,4.376,1.548,6.537,6.537,0,0,1,1.917,4.287h-2.27A5.041,5.041,0,0,0,832,127.924a3.823,3.823,0,0,0-2.746-.935,4.016,4.016,0,0,0-3.394,1.628,7.564,7.564,0,0,0-1.229,4.631v1.687a7.772,7.772,0,0,0,1.165,4.512,3.743,3.743,0,0,0,3.258,1.675,4.3,4.3,0,0,0,2.888-.867,4.846,4.846,0,0,0,1.335-3.019h2.27Zm7.3,5.764a5.516,5.516,0,0,1-4.211-1.728,6.476,6.476,0,0,1-1.623-4.622v-0.406a7.88,7.88,0,0,1,.723-3.438,5.708,5.708,0,0,1,2.024-2.367,5.024,5.024,0,0,1,2.817-.855,4.731,4.731,0,0,1,3.858,1.662,7.275,7.275,0,0,1,1.376,4.759v0.92h-8.622a4.64,4.64,0,0,0,1.1,3.091,3.429,3.429,0,0,0,2.676,1.178,3.742,3.742,0,0,0,1.953-.478,4.927,4.927,0,0,0,1.4-1.268l1.33,1.053A5.322,5.322,0,0,1,842.85,143Zm-0.27-11.6a2.878,2.878,0,0,0-2.211.975,4.773,4.773,0,0,0-1.106,2.732h6.375V134.94a4.258,4.258,0,0,0-.894-2.612A2.71,2.71,0,0,0,842.58,131.4Zm9.087-1.578,0.071,1.626a4.608,4.608,0,0,1,3.811-1.865q4.035,0,4.07,4.627v8.549h-2.176V134.2a3.007,3.007,0,0,0-.63-2.068,2.493,2.493,0,0,0-1.923-.67,3.1,3.1,0,0,0-1.858.574,3.875,3.875,0,0,0-1.247,1.506v9.219h-2.176V129.823h2.058Zm13.463-3.133v3.133h2.377v1.71H865.13v8.033a1.813,1.813,0,0,0,.318,1.167,1.322,1.322,0,0,0,1.082.389,5.226,5.226,0,0,0,1.035-.143v1.783a6.263,6.263,0,0,1-1.67.238,2.69,2.69,0,0,1-2.2-.9,3.9,3.9,0,0,1-.741-2.547v-8.023h-2.317v-1.71h2.317V126.69h2.176ZM874.606,143a5.515,5.515,0,0,1-4.211-1.728,6.476,6.476,0,0,1-1.623-4.622v-0.406a7.88,7.88,0,0,1,.723-3.438,5.713,5.713,0,0,1,2.023-2.367,5.03,5.03,0,0,1,2.818-.855,4.732,4.732,0,0,1,3.858,1.662,7.281,7.281,0,0,1,1.376,4.759v0.92h-8.622a4.64,4.64,0,0,0,1.1,3.091,3.428,3.428,0,0,0,2.676,1.178,3.738,3.738,0,0,0,1.952-.478,4.931,4.931,0,0,0,1.4-1.268l1.329,1.053A5.319,5.319,0,0,1,874.606,143Zm-0.27-11.6a2.881,2.881,0,0,0-2.212.975,4.78,4.78,0,0,0-1.106,2.732h6.376V134.94a4.258,4.258,0,0,0-.894-2.612A2.713,2.713,0,0,0,874.336,131.4Zm13.18,0.407a6.389,6.389,0,0,0-1.07-.084,2.865,2.865,0,0,0-2.9,1.853v9.183h-2.176V129.823h2.117l0.035,1.494a3.377,3.377,0,0,1,3.035-1.733,2.183,2.183,0,0,1,.964.167v2.057Z\" transform=\"translate(-710 -90)\"/> </symbol>";
	module.exports = sprite.add(image, "svg_logo_lg");

/***/ }),
/* 762 */
/***/ (function(module, exports, __webpack_require__) {

	;
	var sprite = __webpack_require__(758);;
	var image = "<symbol viewBox=\"0 0 9 9\" id=\"svg_pen\" > <path id=\"svg_pen_Polygon_3_copy\" data-name=\"Polygon 3 copy\" class=\"cls-1\" d=\"M-213.448-.5l5.57,10.019h-11.14Z\"/> <path id=\"svg_pen_Shape_3_copy_2\" data-name=\"Shape 3 copy 2\" class=\"cls-2\" d=\"M-213.535,3.421V6.643\"/> <path id=\"svg_pen_Shape_3_copy_2-2\" data-name=\"Shape 3 copy 2\" class=\"cls-2\" d=\"M-213.535,8.421V9.268\"/> <path id=\"svg_pen_Shape_3_copy_5\" data-name=\"Shape 3 copy 5\" class=\"cls-3\" d=\"M-187.484,9.836l-6.49-7.333,2.949-3h7.081l2.918,3Zm0,0,3.088-7.324-9.568,0\"/> <path id=\"svg_pen_Shape_4_copy_2\" data-name=\"Shape 4 copy 2\" class=\"cls-1\" d=\"M-161.5,6.565L-167.495-.5H-155.5Zm0,0V9.514m2.992,0h-5.97\"/> <path id=\"svg_pen_Shape_3_copy_5-2\" data-name=\"Shape 3 copy 5\" class=\"cls-2\" d=\"M-158.829-.5L-161.4,2.481\"/> <path id=\"svg_pen_Shape_1_copy_16\" data-name=\"Shape 1 copy 16\" class=\"cls-4\" d=\"M-138.707,1.707l1.414-1.414,6,6-1.414,1.414Zm7.414,0L-132.707.293l-6,6,1.414,1.414Z\"/> <path id=\"svg_pen_Shape_1_copy_19\" data-name=\"Shape 1 copy 19\" class=\"cls-4\" d=\"M-112.059,2.308l-3.489,3.7h0l-3.488-3.7L-117.8,1l2.255,2.391L-113.293,1Z\"/> <path id=\"svg_pen_Shape_1_copy_20\" data-name=\"Shape 1 copy 20\" class=\"cls-4\" d=\"M-95.059,4.692l-3.488-3.7h0l-3.488,3.7L-100.8,6l2.255-2.391L-96.293,6Z\"/> <path id=\"svg_pen_Shape_1_copy_17\" data-name=\"Shape 1 copy 17\" class=\"cls-5\" d=\"M-73.714,7.979h-2.572c-0.633,0-.734-0.426-1.286-0.646L-81,10.063V3.583h0V3.167l0.037,0.055A4.647,4.647,0,0,1-76.286-1h2.572A4.65,4.65,0,0,1-69,3.583h0A4.5,4.5,0,0,1-73.714,7.979Z\"/> <path id=\"svg_pen_Shape_1_copy_21\" data-name=\"Shape 1 copy 21\" class=\"cls-6\" d=\"M-48.714,7.979h-2.572c-0.633,0-.734-0.426-1.286-0.646L-56,10.063V3.583h0V3.167l0.038,0.055A4.647,4.647,0,0,1-51.286-1h2.572A4.65,4.65,0,0,1-44,3.583h0A4.5,4.5,0,0,1-48.714,7.979Z\"/> <circle id=\"svg_pen_Ellipse_2_copy_5\" data-name=\"Ellipse 2 copy 5\" class=\"cls-7\" cx=\"-22\" cy=\"5\" r=\"9\"/> <path id=\"svg_pen_Polygon_3\" data-name=\"Polygon 3\" class=\"cls-8\" d=\"M-19.172.757l1.414,1.414-1.414,1.414-1.414-1.414Zm-6.325,7.8,0.214-1.7,3.994-3.968,1.394,1.394-3.99,3.972Z\"/> <path id=\"svg_pen_Pen\" class=\"cls-8\" d=\"M6.828,0.757L8.243,2.172,6.828,3.586,5.414,2.172ZM0.5,8.554l0.214-1.7L4.712,2.885,6.106,4.28,2.115,8.251Z\"/> </symbol>";
	module.exports = sprite.add(image, "svg_pen");

/***/ }),
/* 763 */
/***/ (function(module, exports, __webpack_require__) {

	;
	var sprite = __webpack_require__(758);;
	var image = "<symbol viewBox=\"245 0 14 14\" id=\"svg_pen_lg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"> <path d=\"M256.432,0.013 L258.987,2.547 L256.432,5.082 L253.877,2.547 L256.432,0.013 Z M245.006,13.985 L245.393,10.938 L252.608,3.827 L255.127,6.327 L247.918,13.442 L245.006,13.985 Z\" id=\"svg_pen_lg_Pen_copy\" stroke=\"none\" fill-rule=\"evenodd\"/> </symbol>";
	module.exports = sprite.add(image, "svg_pen_lg");

/***/ }),
/* 764 */
/***/ (function(module, exports, __webpack_require__) {

	;
	var sprite = __webpack_require__(758);;
	var image = "<symbol viewBox=\"0 0 12 11\" id=\"svg_quote\" > <path id=\"svg_quote_Polygon_3_copy\" data-name=\"Polygon 3 copy\" class=\"cls-1\" d=\"M-132.448.5l5.57,10.019h-11.14Z\"/> <path id=\"svg_quote_Shape_3_copy_2\" data-name=\"Shape 3 copy 2\" class=\"cls-2\" d=\"M-132.535,4.421V7.643\"/> <path id=\"svg_quote_Shape_3_copy_2-2\" data-name=\"Shape 3 copy 2\" class=\"cls-2\" d=\"M-132.535,9.421v0.847\"/> <path id=\"svg_quote_Shape_3_copy_5\" data-name=\"Shape 3 copy 5\" class=\"cls-3\" d=\"M-106.484,10.836l-6.49-7.333,2.949-3h7.081l2.918,3Zm-0.005,0,3.088-7.325-9.568,0\"/> <path id=\"svg_quote_Shape_4_copy_2\" data-name=\"Shape 4 copy 2\" class=\"cls-1\" d=\"M-80.5,7.565L-86.495.5H-74.5Zm0,0v2.953m2.992,0h-5.97\"/> <path id=\"svg_quote_Shape_3_copy_5-2\" data-name=\"Shape 3 copy 5\" class=\"cls-2\" d=\"M-77.829.5l-2.577,2.978\"/> <path id=\"svg_quote_Shape_1_copy_16\" data-name=\"Shape 1 copy 16\" class=\"cls-4\" d=\"M-57.707,2.707l1.414-1.414,6,6-1.414,1.414Zm7.414,0-1.414-1.414-6,6,1.414,1.414Z\"/> <path id=\"svg_quote_Shape_1_copy_19\" data-name=\"Shape 1 copy 19\" class=\"cls-4\" d=\"M-31.059,3.308l-3.488,3.7h0l-3.488-3.7L-36.8,2l2.255,2.391L-32.293,2Z\"/> <path id=\"svg_quote_Shape_1_copy_20\" data-name=\"Shape 1 copy 20\" class=\"cls-4\" d=\"M-14.059,5.692l-3.488-3.7h0l-3.488,3.7L-19.8,7l2.255-2.391L-15.293,7Z\"/> <path id=\"svg_quote_Shape_1_copy_17\" data-name=\"Shape 1 copy 17\" class=\"cls-5\" d=\"M7.286,8.979H4.714c-0.633,0-.734-0.426-1.286-0.646L0,11.063V4.583H0V4.167L0.038,4.221A4.647,4.647,0,0,1,4.714,0H7.286A4.65,4.65,0,0,1,12,4.583h0A4.5,4.5,0,0,1,7.286,8.979Z\"/> <path id=\"svg_quote_Shape_1_copy_21\" data-name=\"Shape 1 copy 21\" class=\"cls-6\" d=\"M32.286,8.979H29.714c-0.633,0-.734-0.426-1.286-0.646L25,11.063V4.583h0V4.167l0.038,0.055A4.647,4.647,0,0,1,29.714,0h2.572A4.65,4.65,0,0,1,37,4.583h0A4.5,4.5,0,0,1,32.286,8.979Z\"/> <circle id=\"svg_quote_Ellipse_2_copy_5\" data-name=\"Ellipse 2 copy 5\" class=\"cls-7\" cx=\"59\" cy=\"6\" r=\"9\"/> <path id=\"svg_quote_Polygon_3\" data-name=\"Polygon 3\" class=\"cls-8\" d=\"M61.828,1.757l1.414,1.414L61.828,4.586,60.414,3.172ZM55.5,9.554l0.214-1.7,3.994-3.968L61.106,5.28l-3.99,3.972Z\"/> </symbol>";
	module.exports = sprite.add(image, "svg_quote");

/***/ }),
/* 765 */
/***/ (function(module, exports, __webpack_require__) {

	;
	var sprite = __webpack_require__(758);;
	var image = "<symbol viewBox=\"0 0 14 12\" id=\"svg_danger\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"> <!-- Generator: Sketch 3.8.3 (29802) - http://www.bohemiancoding.com/sketch --> <title>Group 1</title> <desc>Created with Sketch.</desc> <defs/> <g id=\"svg_danger_Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"> <g id=\"svg_danger_Group-1\" transform=\"translate(1.000000, 0.000000)\" stroke=\"currentColor\"> <polygon id=\"svg_danger_Polygon_3_copy\" stroke-linecap=\"round\" stroke-linejoin=\"round\" points=\"6.021 0.5 11.591 10.519 0.451 10.519\"/> <path d=\"M5.934,4.421 L5.934,7.643\" id=\"svg_danger_Shape_3_copy_2\"/> <path d=\"M5.934,9.421 L5.934,10.268\" id=\"svg_danger_Shape_3_copy_2-2\"/> </g> </g> </symbol>";
	module.exports = sprite.add(image, "svg_danger");

/***/ }),
/* 766 */
/***/ (function(module, exports, __webpack_require__) {

	;
	var sprite = __webpack_require__(758);;
	var image = "<symbol viewBox=\"0 0 13.813 11.156\" id=\"svg_ruby\" > <path id=\"svg_ruby_Shape_3_copy_5\" data-name=\"Shape 3 copy 5\" class=\"cls-1\" stroke=\"currentColor\" d=\"M65.516,42.836L59.026,35.5l2.949-3h7.082l2.918,3Zm0,0M68.6,35.509l-9.568,0\" transform=\"translate(-58.531 -32)\"/> </symbol>";
	module.exports = sprite.add(image, "svg_ruby");

/***/ }),
/* 767 */
/***/ (function(module, exports, __webpack_require__) {

	;
	var sprite = __webpack_require__(758);;
	var image = "<symbol viewBox=\"0 0 13 11\" id=\"svg_fragile\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"> <g id=\"svg_fragile_Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> <g id=\"svg_fragile_Group-4\" stroke=\"currentColor\"> <path d=\"M6.5,7.565 L0.505,0.5 L12.5,0.5 L6.5,7.565 Z M6.5,7.565 L6.5,10.518 L6.5,7.565 Z M9.492,10.518 L3.522,10.518 L9.492,10.518 Z\" id=\"svg_fragile_Shape_4_copy_2\"/> <path d=\"M9.171,0.5 L6.594,3.478\" id=\"svg_fragile_Shape_3_copy_5\"/> </g> </g> </symbol>";
	module.exports = sprite.add(image, "svg_fragile");

/***/ }),
/* 768 */
/***/ (function(module, exports, __webpack_require__) {

	;
	var sprite = __webpack_require__(758);;
	var image = "<symbol viewBox=\"0 0 17 16.094\" id=\"svg_checkbox\" > <path fill=\"currentColor\" d=\"M1102.99,256.061l-11.61,14.522-5.37-5.7,1.58-1.551,3.69,4.024,10.13-12.845Z\" transform=\"translate(-1086 -254.5)\"/> </symbol>";
	module.exports = sprite.add(image, "svg_checkbox");

/***/ }),
/* 769 */
/***/ (function(module, exports, __webpack_require__) {

	;
	var sprite = __webpack_require__(758);;
	var image = "<symbol viewBox=\"0 0 16.313 13.906\" id=\"svg_up\" > <path d=\"M953,579h-2v11h2V579Zm-9.126,5.243,1.415,1.414,6.742-6.743,6.743,6.743,1.414-1.414-8.157-8.142Z\" transform=\"translate(-943.875 -576.094)\"/> </symbol>";
	module.exports = sprite.add(image, "svg_up");

/***/ }),
/* 770 */
/***/ (function(module, exports, __webpack_require__) {

	;
	var sprite = __webpack_require__(758);;
	var image = "<symbol viewBox=\"0 0 16.313 13.906\" id=\"svg_down\" > <path d=\"M978,587h-2V576h2v11Zm-9.126-5.243,1.415-1.414,6.742,6.743,6.743-6.743,1.414,1.414-8.157,8.143Z\" transform=\"translate(-968.875 -576)\"/> </symbol>";
	module.exports = sprite.add(image, "svg_down");

/***/ }),
/* 771 */
/***/ (function(module, exports, __webpack_require__) {

	;
	var sprite = __webpack_require__(758);;
	var image = "<symbol viewBox=\"280 5 12 14\" id=\"svg_trash\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"> <path d=\"M291,8 L290,19 L282,19 L281,8 L280,8 L280,7 L284,7 L284,5 L288,5 L288,7 L292,7 L292,8 L291,8 L291,8 Z M287,6 L285,6 L285,7 L287,7 L287,6 L287,6 Z M282,8 L283,18 L289,18 L290,8 L282,8 L282,8 Z M287,9 L288,9 L288,17 L287,17 L287,9 L287,9 Z M284,9 L285,9 L285,17 L284,17 L284,9 L284,9 Z\" id=\"svg_trash_trash\" stroke=\"none\" fill-rule=\"evenodd\"/> </symbol>";
	module.exports = sprite.add(image, "svg_trash");

/***/ }),
/* 772 */
/***/ (function(module, exports, __webpack_require__) {

	;
	var sprite = __webpack_require__(758);;
	var image = "<symbol viewBox=\"15 15 109 103\" id=\"svg_star\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"> <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" transform=\"translate(15.000000, 15.000000)\"> <path fill=\"currentColor\" d=\"M3.237,45.574 L26.333,65.152 L19.15,94.59 C17.739,100.081 23.798,104.588 28.725,101.491 L54.5,85.572 L80.274,101.488 C85.064,104.443 91.118,100.08 89.85,94.586 L82.666,65.151 L105.765,45.572 C110.128,41.911 107.876,34.728 102.103,34.305 L71.821,32.05 L60.414,4.025 C58.302,-1.186 50.837,-1.186 48.582,4.025 L37.175,32.051 L6.894,34.306 C1.124,34.872 -1.131,41.913 3.237,45.574 L3.237,45.574 Z\"/> </g> </symbol>";
	module.exports = sprite.add(image, "svg_star");

/***/ }),
/* 773 */
/***/ (function(module, exports, __webpack_require__) {

	;
	var sprite = __webpack_require__(758);;
	var image = "<symbol viewBox=\"0 0 56 40\" id=\"svg_mail\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g><path d=\"M31.462,21.584C30.271,22.497,28.688,23,27.003,23s-3.27-0.502-4.462-1.416L0,4.312V37c0,1.656,1.343,3,3,3   h50c1.657,0,3-1.344,3-3V3c0-0.07-0.016-0.135-0.021-0.203L31.462,21.584z\" fill=\"currentColor\"/><path d=\"M28.21,19.091l24.899-19.08C53.072,0.01,53.037,0,53,0H3C2.432,0,1.907,0.167,1.454,0.441l24.339,18.65   C26.439,19.585,27.563,19.587,28.21,19.091z\" fill=\"currentColor\"/></g></symbol>";
	module.exports = sprite.add(image, "svg_mail");

/***/ }),
/* 774 */
/***/ (function(module, exports, __webpack_require__) {

	;
	var sprite = __webpack_require__(758);;
	var image = "<symbol viewBox=\"0 0 70 70\" id=\"svg_datepicker\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g><path d=\"M51,19h-4v-4h-4v4H27v-4h-4v4h-4c-2.209,0-4,1.791-4,4v28c0,2.209,1.791,4,4,4h32c2.209,0,4-1.791,4-4V23   C55,20.791,53.209,19,51,19z M51,51H19V31h32V51z M51,27H19v-4h32V27z\"/><rect height=\"4\" width=\"4\" x=\"35\" y=\"35\"/><rect height=\"4\" width=\"4\" x=\"43\" y=\"35\"/><rect height=\"4\" width=\"4\" x=\"35\" y=\"43\"/><rect height=\"4\" width=\"4\" x=\"27\" y=\"43\"/></g></symbol>";
	module.exports = sprite.add(image, "svg_datepicker");

/***/ }),
/* 775 */
/***/ (function(module, exports, __webpack_require__) {

	;
	var sprite = __webpack_require__(758);;
	var image = "<symbol viewBox=\"0 0 37 40\" id=\"svg_chatgroup\" > <defs> <style> .cls-11, .cls-31 { fill: #30a46f; } .cls-11 { fill-opacity: 0; } .cls-11, .cls-21, .cls-41 { stroke: #30a46f; stroke-linejoin: round; stroke-width: 1px; } .cls-21, .cls-41 { fill: #fff; } .cls-31, .cls-41 { fill-rule: evenodd; } </style> </defs> <circle class=\"cls-11\" cx=\"18.5\" cy=\"18.5\" r=\"18\"/> <circle class=\"cls-21\" cx=\"19\" cy=\"33\" r=\"6.5\"/> <path class=\"cls-31\" d=\"M586,97V96h5v1h-5Zm2-3h1v5h-1V94Z\" transform=\"translate(-569.5 -63.5)\"/> <path class=\"cls-41\" d=\"M594,75a2.14,2.14,0,1,1-2.059,2.139A2.1,2.1,0,0,1,594,75Zm1.538,4.889a12.366,12.366,0,0,1,2.454,4.163,4.135,4.135,0,0,1-.581,1.94h-6.823a4.142,4.142,0,0,1-.58-1.944,12.3,12.3,0,0,1,2.453-4.158h3.077Z\" transform=\"translate(-569.5 -63.5)\"/> <path class=\"cls-41\" d=\"M588,75a2.14,2.14,0,1,1-2.059,2.139A2.1,2.1,0,0,1,588,75Zm1.538,4.889a12.366,12.366,0,0,1,2.454,4.163,4.135,4.135,0,0,1-.581,1.94h-6.823a4.142,4.142,0,0,1-.58-1.944,12.3,12.3,0,0,1,2.453-4.158h3.077Z\" transform=\"translate(-569.5 -63.5)\"/> <path class=\"cls-41\" d=\"M582,75a2.14,2.14,0,1,1-2.059,2.139A2.1,2.1,0,0,1,582,75Zm1.538,4.889a12.366,12.366,0,0,1,2.454,4.163,4.135,4.135,0,0,1-.581,1.94h-6.823a4.142,4.142,0,0,1-.58-1.944,12.3,12.3,0,0,1,2.453-4.158h3.077Z\" transform=\"translate(-569.5 -63.5)\"/> </symbol>";
	module.exports = sprite.add(image, "svg_chatgroup");

/***/ }),
/* 776 */
/***/ (function(module, exports, __webpack_require__) {

	;
	var sprite = __webpack_require__(758);;
	var image = "<symbol viewBox=\"0 0 37 39.5\" id=\"svg_chatgroup_hover\" > <defs> <style> .cls-12, .cls-32 { fill: #30a46f; } .cls-12 { fill-opacity: 0; } .cls-12, .cls-22 { stroke: #30a46f; stroke-linejoin: round; stroke-width: 1px; } .cls-22, .cls-42 { fill: #fff; fill-rule: evenodd; } </style> </defs> <circle class=\"cls-12\" cx=\"18.5\" cy=\"18.5\" r=\"18\"/> <path class=\"cls-22\" d=\"M594,75a2.14,2.14,0,1,1-2.059,2.139A2.1,2.1,0,0,1,594,75Zm1.538,4.889a12.366,12.366,0,0,1,2.454,4.163,4.135,4.135,0,0,1-.581,1.94h-6.823a4.142,4.142,0,0,1-.58-1.944,12.3,12.3,0,0,1,2.453-4.158h3.077Z\" transform=\"translate(-569.5 -63.5)\"/> <path class=\"cls-22\" d=\"M588,75a2.14,2.14,0,1,1-2.059,2.139A2.1,2.1,0,0,1,588,75Zm1.538,4.889a12.366,12.366,0,0,1,2.454,4.163,4.135,4.135,0,0,1-.581,1.94h-6.823a4.142,4.142,0,0,1-.58-1.944,12.3,12.3,0,0,1,2.453-4.158h3.077Z\" transform=\"translate(-569.5 -63.5)\"/> <path class=\"cls-22\" d=\"M582,75a2.14,2.14,0,1,1-2.059,2.139A2.1,2.1,0,0,1,582,75Zm1.538,4.889a12.366,12.366,0,0,1,2.454,4.163,4.135,4.135,0,0,1-.581,1.94h-6.823a4.142,4.142,0,0,1-.58-1.944,12.3,12.3,0,0,1,2.453-4.158h3.077Z\" transform=\"translate(-569.5 -63.5)\"/> <circle class=\"cls-32\" cx=\"19\" cy=\"33\" r=\"6.5\"/> <path class=\"cls-42\" d=\"M586,97V96h5v1h-5Zm2-3h1v5h-1V94Z\" transform=\"translate(-569.5 -63.5)\"/> </symbol>";
	module.exports = sprite.add(image, "svg_chatgroup_hover");

/***/ }),
/* 777 */
/***/ (function(module, exports, __webpack_require__) {

	;
	var sprite = __webpack_require__(758);;
	var image = "<symbol viewBox=\"0 0 37 39.5\" id=\"svg_chatgroup_active\" > <defs> <style> .cls-13, .cls-23, .cls-43 { fill: #30a46f; } .cls-13 { fill-opacity: 0; stroke: #30a46f; } .cls-13, .cls-43 { stroke-linejoin: round; stroke-width: 1px; } .cls-33 { fill: #fff; } .cls-33, .cls-43 { fill-rule: evenodd; } .cls-43 { stroke: #fff; } </style> </defs> <circle class=\"cls-13\" cx=\"18.5\" cy=\"18.5\" r=\"18\"/> <circle class=\"cls-23\" cx=\"19\" cy=\"33\" r=\"6.5\"/> <path class=\"cls-33\" d=\"M586,97V96h5v1h-5Zm2-3h1v5h-1V94Z\" transform=\"translate(-569.5 -63.5)\"/> <path class=\"cls-43\" d=\"M594,75a2.14,2.14,0,1,1-2.059,2.139A2.1,2.1,0,0,1,594,75Zm1.538,4.889a12.366,12.366,0,0,1,2.454,4.163,4.135,4.135,0,0,1-.581,1.94h-6.823a4.142,4.142,0,0,1-.58-1.944,12.3,12.3,0,0,1,2.453-4.158h3.077Z\" transform=\"translate(-569.5 -63.5)\"/> <path class=\"cls-43\" d=\"M588,75a2.14,2.14,0,1,1-2.059,2.139A2.1,2.1,0,0,1,588,75Zm1.538,4.889a12.366,12.366,0,0,1,2.454,4.163,4.135,4.135,0,0,1-.581,1.94h-6.823a4.142,4.142,0,0,1-.58-1.944,12.3,12.3,0,0,1,2.453-4.158h3.077Z\" transform=\"translate(-569.5 -63.5)\"/> <path class=\"cls-43\" d=\"M582,75a2.14,2.14,0,1,1-2.059,2.139A2.1,2.1,0,0,1,582,75Zm1.538,4.889a12.366,12.366,0,0,1,2.454,4.163,4.135,4.135,0,0,1-.581,1.94h-6.823a4.142,4.142,0,0,1-.58-1.944,12.3,12.3,0,0,1,2.453-4.158h3.077Z\" transform=\"translate(-569.5 -63.5)\"/> </symbol>";
	module.exports = sprite.add(image, "svg_chatgroup_active");

/***/ }),
/* 778 */
/***/ (function(module, exports) {

	module.exports = "<transflo-header></transflo-header>\r\n\r\n<main class=\"container -main\">\r\n  <router-outlet></router-outlet>\r\n</main>\r\n\r\n<transflo-errors></transflo-errors>\r\n<transflo-popovers></transflo-popovers>\r\n<transflo-footer></transflo-footer>\r\n"

/***/ })
]);
//# sourceMappingURL=app.916ada4c7c08d70f7a7f.js.map